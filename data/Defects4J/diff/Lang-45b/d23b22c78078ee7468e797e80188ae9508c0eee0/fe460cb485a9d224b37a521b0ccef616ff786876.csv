is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,1,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,7,* reserved.
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,11,* are met:
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,19,*    distribution.
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,22,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,30,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,31,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,35,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,58,* A range of characters. Able to understand the idea of a contiguous
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,59,"* sublist of an alphabet, a negated concept, and a set of characters."
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,60,* Used by CharSet to handle sets of characters.
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,62,"* @author <a href=""bayard@generationjava.com"">Henri Yandell</a>"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,63,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,64,"* @version $Id: CharRange.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,66,class CharRange {
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,69,* Used internally to represent null in a char.
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,71,private static char UNSET;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,73,private char start;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,74,private char close;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,75,private boolean negated;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,78,* Construct a CharRange over a single character.
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,80,* @param start char over which this range is placed
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,82,public CharRange(char start) {
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,83,this.start = start;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,87,* Construct a CharRange over a set of characters.
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,89,* @param start  char start character in this range. inclusive
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,90,* @param close  char close character in this range. inclusive
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,92,"public CharRange(char start, char close) {"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,93,this.start = start;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,94,this.close = close;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,98,* Construct a CharRange over a set of characters.
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,100,* @param start  String start first character is in this range (inclusive).
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,101,* @param close  String first character is close character in this
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,102,* range (inclusive).
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,104,"public CharRange(String start, String close) {"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,105,this.start = start.charAt(0);
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,106,this.close = close.charAt(0);
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,110,* Get the start character for this character range
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,112,* @return start char (inclusive)
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,114,public char getStart() {
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,115,return this.start;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,119,* Get the end character for this character range
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,121,* @return end char (inclusive)
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,123,public char getEnd() {
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,124,return this.close;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,128,* Set the start character for this character range
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,130,* @param ch  start char (inclusive)
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,132,public void setStart(char ch) {
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,133,this.start = ch;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,137,* Set the end character for this character range
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,139,* @param ch  start char (inclusive)
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,141,public void setEnd(char ch) {
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,142,this.close = ch;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,146,* Is this CharRange over many characters
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,148,* @return boolean true is many characters
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,150,public boolean isRange() {
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,151,return this.close != UNSET;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,155,* Is the passed in character inside this range
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,157,* @return boolean true is in range
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,159,public boolean inRange(char ch) {
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,160,if(isRange()) {
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,161,return ((ch >= start) && (ch <= close) );
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,162,} else {
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,163,return start == ch;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,168,* Checks if this CharRange is negated.
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,170,* @return boolean true is negated
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,172,public boolean isNegated() {
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,173,return negated;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,177,* Sets this character range to be negated or not.
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,178,* This implies that this CharRange is over all characters except
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,179,* the ones in this range.
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,181,* @param negated  true to negate the range
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,183,public void setNegated(boolean negated) {
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,184,this.negated = negated;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,188,* Output a string representation of the character range
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,190,* @return string representation
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,192,public String toString() {
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,193,"String str = """";"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,194,if(isNegated()) {
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,195,"str += ""^"";"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,197,str += start;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,198,if(isRange()) {
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,199,"str += ""-"";"
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,200,str += close;
True,src/java/org/apache/commons/lang/CharRange.java,src/java/org/apache/commons/lang/CharRange.java,202,return str;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,1,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,7,* reserved.
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,11,* are met:
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,19,*    distribution.
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,22,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,30,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,31,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,35,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,57,import java.util.Iterator;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,58,import java.util.List;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,59,import java.util.LinkedList;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,61,* A set of characters. You can iterate over the characters in the
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,62,* set.
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,64,"* @author <a href=""bayard@generationjava.com"">Henri Yandell</a>"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,65,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,66,"* @version $Id: CharSet.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,68,public class CharSet {
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,70,private LinkedList set = new LinkedList();
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,73,* Restricted consructor. Use the factory method evaluateSet().
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,75,protected CharSet(String[] set) {
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,76,int sz = set.length;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,77,for (int i = 0; i < sz; i++) {
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,78,add(set[i]);
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,83,* Does the set contain the character specified
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,85,* @param ch  the character to check for
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,86,* @return true if it does contain it
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,88,public boolean contains(char ch) {
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,89,Iterator iterator = set.iterator();
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,90,boolean bool = false;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,91,while (iterator.hasNext()) {
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,92,CharRange range = (CharRange) iterator.next();
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,93,if (range.isNegated()) {
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,94,if (!range.inRange(ch)) {
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,95,bool = true;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,97,} else {
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,98,if (range.inRange(ch)) {
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,99,bool = true;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,103,return bool;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,107,* Add a set definition string to the set
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,109,* @param str  set definition string
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,111,protected void add(String str) {
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,112,int sz = str.length();
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,113,CharRange range = null;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,115,"if(""-"".equals(str)) {"
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,116,range = new CharRange('_');
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,117,set.add(range);
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,118,return;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,121,boolean end = false;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,122,boolean negated = false;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,123,for(int i=0; i<sz; i++) {
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,124,char ch = str.charAt(i);
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,125,if(ch == '-') {
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,126,end = true;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,127,continue;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,129,if(end) {
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,130,range.setEnd(ch);
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,131,continue;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,133,if(ch == '^') {
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,134,negated = true;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,135,continue;
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,137,range = new CharRange(ch);
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,138,range.setNegated(negated);
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,139,set.add(range);
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,144,* Returns a string representation of the set
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,146,* @return string representation
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,148,public String toString() {
True,src/java/org/apache/commons/lang/CharSet.java,src/java/org/apache/commons/lang/CharSet.java,149,return set.toString();
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,1,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,7,* reserved.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,11,* are met:
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,19,*    distribution.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,22,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,30,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,31,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,35,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,57,import java.util.Iterator;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,58,import java.util.List;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,59,import java.util.LinkedList;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,62,* Numerous routines to manipulate a character set.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,64,"* @author <a href=""bayard@generationjava.com"">Henri Yandell</a>"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,65,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,66,"* @version $Id: CharSetUtils.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,68,public class CharSetUtils {
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,71,* Creates a CharSetUtils object which allows a certain amount of
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,72,* set logic to be performed upon the following syntax:
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,74,"* ""aeio"" which implies 'a','e',.."
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,75,"* ""^e"" implies not e. However it only negates, it's not"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,76,* a set in itself due to the size of that set in unicode.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,77,"* ""ej-m"" implies e,j->m. e,j,k,l,m."
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,79,public static CharSet evaluateSet(String[] set) {
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,80,return new CharSet(set);
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,84,* Squeezes any repititions of a character that is mentioned in the
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,85,* supplied set. An example is:
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,86,"*    squeeze(""hello"", ""el"")  => ""helo"""
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,87,* See evaluateSet for set-syntax.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,89,* @param str  the string to work from
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,90,* @param set  the character set to use for manipulation
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,92,"public static String squeeze(String str, String set) {"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,93,String[] strs = new String[1];
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,94,strs[0] = set;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,95,"return squeeze(str, strs);"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,99,* Squeezes any repititions of a character that is mentioned in the
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,100,* supplied set. An example is:
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,101,"*    squeeze(""hello"", {""el""})  => ""helo"""
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,102,* See evaluateSet for set-syntax.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,104,* @param str  the string to work from
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,105,* @param set  the character set to use for manipulation
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,107,"public static String squeeze(String str, String[] set) {"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,108,CharSet chars = evaluateSet(set);
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,109,StringBuffer buffer = new StringBuffer(str.length());
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,110,char[] chrs = str.toCharArray();
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,111,int sz = chrs.length;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,112,char lastChar = ' ';
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,113,char ch = ' ';
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,114,for (int i = 0; i < sz; i++) {
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,115,ch = chrs[i];
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,116,if (chars.contains(ch)) {
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,117,if ((ch == lastChar) && (i != 0)) {
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,118,continue;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,121,buffer.append(ch);
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,122,lastChar = ch;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,124,return buffer.toString();
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,128,"* Takes an argument in set-syntax, see evaluateSet,"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,129,* and returns the number of characters present in the specified string.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,130,"* An example would be:   count(""hello"", {""c-f"",""o""}) returns 2."
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,132,* @param str  String target to count characters in
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,133,* @param set  String set of characters to count
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,135,"public static int count(String str, String set) {"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,136,String[] strs = new String[1];
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,137,strs[0] = set;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,138,"return count(str, strs);"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,142,"* Takes an argument in set-syntax, see evaluateSet,"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,143,* and returns the number of characters present in the specified string.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,144,"* An example would be:   count(""hello"", {""c-f"",""o""}) returns 2."
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,146,* @param str  String target to count characters in
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,147,* @param set  String[] set of characters to count
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,149,"public static int count(String str, String[] set) {"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,150,CharSet chars = evaluateSet(set);
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,151,int count = 0;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,152,char[] chrs = str.toCharArray();
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,153,int sz = chrs.length;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,154,for(int i=0; i<sz; i++) {
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,155,if(chars.contains(chrs[i])) {
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,156,count++;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,159,return count;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,163,"* Takes an argument in set-syntax, see evaluateSet,"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,164,* and deletes any of characters present in the specified string.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,165,"* An example would be:   delete(""hello"", {""c-f"",""o""}) returns ""hll"""
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,167,* @param str  String target to delete characters from
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,168,* @param set  String set of characters to delete
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,170,"public static String delete(String str, String set) {"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,171,String[] strs = new String[1];
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,172,strs[0] = set;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,173,"return delete(str, strs);"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,177,"* Takes an argument in set-syntax, see evaluateSet,"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,178,* and deletes any of characters present in the specified string.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,179,"* An example would be:   delete(""hello"", {""c-f"",""o""}) returns ""hll"""
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,181,* @param str  String target to delete characters from
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,182,* @param set  String[] set of characters to delete
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,184,"public static String delete(String str, String[] set) {"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,185,CharSet chars = evaluateSet(set);
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,186,StringBuffer buffer = new StringBuffer(str.length());
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,187,char[] chrs = str.toCharArray();
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,188,int sz = chrs.length;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,189,for(int i=0; i<sz; i++) {
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,190,if(!chars.contains(chrs[i])) {
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,191,buffer.append(chrs[i]);
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,194,return buffer.toString();
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,198,* NEEDS TO TAKE A CHAR-SET.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,199,* Translate characters in a String.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,200,"* An example is:  translate(""hello"", ""ho"", ""jy"") => jelly"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,201,* If the length of characters to search for is greater than the
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,202,"* length of characters to replace, then the last character is"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,203,* used.
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,205,* @param target String to replace characters  in
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,206,* @param repl String to find that will be replaced
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,207,* @param with String to put into the target String
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,209,"public static String translate(String target, String repl, String with) {"
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,210,StringBuffer buffer = new StringBuffer(target.length());
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,211,char[] chrs = target.toCharArray();
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,212,char[] withChrs = with.toCharArray();
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,213,int sz = chrs.length;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,214,int withMax = with.length() - 1;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,215,for(int i=0; i<sz; i++) {
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,216,int idx = repl.indexOf(chrs[i]);
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,217,if(idx != -1) {
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,218,if(idx > withMax) {
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,219,idx = withMax;
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,221,buffer.append(withChrs[idx]);
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,222,} else {
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,223,buffer.append(chrs[i]);
True,src/java/org/apache/commons/lang/CharSetUtils.java,src/java/org/apache/commons/lang/CharSetUtils.java,226,return buffer.toString();
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,1,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,7,* reserved.
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,11,* are met:
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,19,*    distribution.
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,22,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,30,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,31,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,35,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,58,* Represents a range of {@link Number} objects.
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,60,"* @author <a href=""mailto:chrise@esha.com"">Christopher Elkins</a>"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,61,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,62,* @version $Revision: 1.1 $ $Date: 2002/07/19 03:35:54 $
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,64,public final class NumberRange {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,67,/* The minimum number in this range. */
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,68,private final Number min;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,70,/* The maximum number in this range. */
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,71,private final Number max;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,75,* Constructs a new instance using the specified number as both the
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,76,* minimum and maximum in theis range.
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,78,* @param num the number to use for this range
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,79,* @throws NullPointerException if the number is <code>null</code>
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,81,public NumberRange(Number num) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,82,if (num == null) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,83,"throw new NullPointerException(""num cannot be null"");"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,86,this.min = num;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,87,this.max = num;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,91,* Constructs a new instance with the specified minimum and maximum
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,92,* numbers.
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,94,* @param min the minimum number in this range
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,95,* @param max the maximum number in this range
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,96,* @throws NullPointerException if either the minimum or maximum number is
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,97,*         <code>null</code>
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,99,"public NumberRange(Number min, Number max) {"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,100,if (min == null) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,101,"throw new NullPointerException(""min cannot be null"");"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,102,} else if (max == null) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,103,"throw new NullPointerException(""max cannot be null"");"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,106,if (max.doubleValue() < min.doubleValue()) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,107,this.min = this.max = min;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,108,} else {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,109,this.min = min;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,110,this.max = max;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,115,* Returns the minimum number in this range.
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,117,* @return the minimum number in this range
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,119,public Number getMinimum() {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,120,return min;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,124,* Returns the maximum number in this range.
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,126,* @return the maximum number in this range
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,128,public Number getMaximum() {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,129,return min;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,133,* Tests whether the specified number occurs within this range.
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,135,* @param number the number to test
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,136,* @return <code>true</code> if the specified number occurs within this
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,137,"*         range; otherwise, <code>false</code>"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,139,public boolean includesNumber(Number number) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,140,if (number == null) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,141,return false;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,142,} else {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,143,return !(min.doubleValue() > number.doubleValue()) &&
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,144,!(max.doubleValue() < number.doubleValue());
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,149,* Tests whether the specified range occurs entirely within this range.
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,151,* @param range the range to test
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,152,* @return <code>true</code> if the specified range occurs entirely within
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,153,"*         this range; otherwise, <code>false</code>"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,155,public boolean includesRange(NumberRange range) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,156,if (range == null) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,157,return false;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,158,} else {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,159,return includesNumber(range.min) && includesNumber(range.max);
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,164,* Tests whether the specified range overlaps with this range.
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,166,* @param range the range to test
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,167,* @return <code>true</code> if the specified range overlaps with this
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,168,"*         range; otherwise, <code>false</code>"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,170,public boolean overlaps(NumberRange range) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,171,if (range == null) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,172,return false;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,173,} else {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,174,return range.includesNumber(min) || range.includesNumber(max) ||
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,175,includesRange(range);
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,180,"* Indicates whether some other object is ""equal"" to this one."
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,182,* @param obj the reference object with which to compare
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,183,* @return <code>true</code> if this object is the same as the obj
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,184,*         argument; <code>false</code> otherwise
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,186,public boolean equals(Object obj) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,187,if (obj == this) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,188,return true;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,189,} else if (!(obj instanceof NumberRange)) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,190,return false;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,191,} else {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,192,NumberRange range = (NumberRange)obj;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,193,return min.equals(range.min) && max.equals(range.max);
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,198,* Returns a hash code value for this object.
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,200,* @return a hash code value for this object
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,202,public int hashCode() {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,203,int result = 17;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,204,result = 37 * result + min.hashCode();
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,205,result = 37 * result + max.hashCode();
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,206,return result;
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,210,* Returns the string representation of this range. This string is the
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,211,"* string representation of the minimum and maximum numbers in the range,"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,212,"* separated by a hyphen. If a number is negative, then it is enclosed"
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,213,* in parentheses.
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,215,* @return the string representation of this range
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,217,public String toString() {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,218,StringBuffer sb = new StringBuffer();
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,220,if (min.intValue() < 0) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,221,sb.append('(')
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,222,.append(min)
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,223,.append(')');
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,224,} else {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,225,sb.append(min);
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,228,sb.append('-');
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,230,if (max.intValue() < 0) {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,231,sb.append('(')
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,232,.append(max)
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,233,.append(')');
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,234,} else {
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,235,sb.append(max);
True,src/java/org/apache/commons/lang/NumberRange.java,src/java/org/apache/commons/lang/NumberRange.java,238,return sb.toString();
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,1,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,7,* reserved.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,11,* are met:
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,19,*    distribution.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,22,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,30,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,31,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,35,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,57,import java.math.BigInteger;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,58,import java.math.BigDecimal;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,60,* Provides extra functionality for java Number classes.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,62,"* @author <a href=""mailto:bayard@generationjava.com"">Henri Yandell</a>"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,63,"* @author <a href=""mailto:rand_mcneely@yahoo.com"">Rand McNeely</a>"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,64,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,65,"* @version $Id: NumberUtils.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,67,public final class NumberUtils {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,70,"* Convert a String to an int, returning zero if the conversion fails"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,72,* @param str  the string to convert
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,73,"* @return the int represented by the string, or zero if conversion fails"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,75,public static int stringToInt(String str) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,76,"return stringToInt(str, 0);"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,80,"* Convert a String to an int, returning a default value if the"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,81,* conversion fails.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,83,* @param str  the string to convert
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,84,* @param defaultValue  the default value
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,85,"* @return the int represented by the string, or the default if conversion fails"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,87,"public static int stringToInt(String str, int defaultValue) {"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,88,try {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,89,return Integer.parseInt(str);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,90,} catch (NumberFormatException nfe) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,91,return defaultValue;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,95,"// must handle Long, Float, Integer, Float, Short,"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,96,"//                  BigDecimal, BigInteger and Byte"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,97,// useful methods:
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,98,// Byte.decode(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,99,"// Byte.valueOf(String,int radix)"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,100,// Byte.valueOf(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,101,// Double.valueOf(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,102,// Float.valueOf(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,103,// new Float(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,104,"// Integer.valueOf(String,int radix)"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,105,// Integer.valueOf(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,106,// Integer.decode(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,107,// Integer.getInteger(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,108,"// Integer.getInteger(String,int val)"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,109,"// Integer.getInteger(String,Integer val)"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,110,// new Integer(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,111,// new Double(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,112,// new Byte(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,113,// new Long(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,114,// Long.getLong(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,115,"// Long.getLong(String,int)"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,116,"// Long.getLong(String,Integer)"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,117,"// Long.valueOf(String,int)"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,118,// Long.valueOf(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,119,// new Short(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,120,// Short.decode(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,121,"// Short.valueOf(String,int)"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,122,// Short.valueOf(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,123,// new BigDecimal(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,124,// new BigInteger(String)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,125,"// new BigInteger(String,int radix)"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,126,// Possible inputs:
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,127,// 45 45.5 45E7 4.5E7 Hex Oct Binary xxxF xxxD xxxf xxxd
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,128,// plus minus everything. Prolly more. A lot are not separable.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,131,* <p>
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,132,* Turns a string value into a java.lang.Number.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,133,"* First, the value is examined for a type qualifier on the end"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,134,"* (<code>'f','F','d','D','l','L'</code>).  If it is found, it starts"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,135,* trying to create succissively larger types from the type specified
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,136,* until one is found that can hold the value.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,137,* </p>
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,138,* <p>
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,139,"* If a type specifier is not found, it will check for a decimal point"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,140,* and then try successively larger types from Integer to BigInteger
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,141,* and from Float to BigDecimal.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,142,* </p>
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,143,* <p>
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,144,"* If the string starts with ""0x"" or ""-0x"", it will be interpreted as a"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,145,* hexadecimal integer.  Values with leading 0's will not be interpreted
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,146,* as octal.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,147,* </p>
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,149,* @param val String containing a number
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,150,* @return Number created from the string
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,151,* @throws NumberFormatException if the value cannot be converted
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,153,public static Number createNumber(String val) throws NumberFormatException {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,154,if (val == null) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,155,return null;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,157,if (val.length() == 0) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,158,"throw new NumberFormatException(""\""\"" is not a valid number."");"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,160,"if (val.startsWith(""--"")) {"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,161,// this is protection for poorness in java.lang.BigDecimal.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,162,"// it accepts this as a legal value, but it does not appear"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,163,// to be in specification of class. OS X Java parses it to
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,164,// a wrong value.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,165,return null;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,167,"if (val.startsWith(""0x"") || val.startsWith(""-0x"")) {"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,168,return createInteger(val);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,170,char lastChar = val.charAt(val.length() - 1);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,171,String mant;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,172,String dec;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,173,String exp;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,174,int decPos = val.indexOf('.');
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,175,int expPos = val.indexOf('e') + val.indexOf('E') + 1;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,177,if (decPos > -1) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,179,if (expPos > -1) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,180,if (expPos < decPos) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,181,"throw new NumberFormatException(val + "" is not a valid number."");"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,183,"dec = val.substring(decPos + 1, expPos);"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,184,} else {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,185,dec = val.substring(decPos + 1);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,187,"mant = val.substring(0, decPos);"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,188,} else {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,189,if (expPos > -1) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,190,"mant = val.substring(0, expPos);"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,191,} else {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,192,mant = val;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,194,dec = null;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,196,if (!Character.isDigit(lastChar)) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,197,if (expPos > -1 && expPos < val.length() - 1) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,198,"exp = val.substring(expPos + 1, val.length() - 1);"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,199,} else {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,200,exp = null;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,202,//Requesting a specific type..
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,203,"String numeric = val.substring(0, val.length() - 1);"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,204,boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,205,switch (lastChar) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,206,case 'l' :
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,207,case 'L' :
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,208,if (dec == null
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,209,&& exp == null
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,210,&& isDigits(numeric.substring(1))
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,211,&& (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,212,try {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,213,return createLong(numeric);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,214,} catch (NumberFormatException nfe) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,215,//Too big for a long
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,217,return createBigInteger(numeric);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,220,"throw new NumberFormatException(val + "" is not a valid number."");"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,221,case 'f' :
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,222,case 'F' :
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,223,try {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,224,Float f = NumberUtils.createFloat(numeric);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,225,if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,226,//If it's too big for a float or the float value = 0 and the string
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,227,"//has non-zeros in it, then float doens't have the presision we want"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,228,return f;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,231,} catch (NumberFormatException nfe) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,233,//Fall through
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,234,case 'd' :
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,235,case 'D' :
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,236,try {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,237,Double d = NumberUtils.createDouble(numeric);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,238,if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,239,return d;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,241,} catch (NumberFormatException nfe) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,243,try {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,244,return createBigDecimal(numeric);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,245,} catch (NumberFormatException e) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,247,//Fall through
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,248,default :
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,249,"throw new NumberFormatException(val + "" is not a valid number."");"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,252,} else {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,253,"//User doesn't have a preference on the return type, so let's start"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,254,//small and go from there...
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,255,if (expPos > -1 && expPos < val.length() - 1) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,256,"exp = val.substring(expPos + 1, val.length());"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,257,} else {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,258,exp = null;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,260,if (dec == null && exp == null) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,261,"//Must be an int,long,bigint"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,262,try {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,263,return createInteger(val);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,264,} catch (NumberFormatException nfe) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,266,try {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,267,return createLong(val);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,268,} catch (NumberFormatException nfe) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,270,return createBigInteger(val);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,272,} else {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,273,"//Must be a float,double,BigDec"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,274,boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,275,try {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,276,Float f = createFloat(val);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,277,if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,278,return f;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,280,} catch (NumberFormatException nfe) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,282,try {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,283,Double d = createDouble(val);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,284,if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,285,return d;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,287,} catch (NumberFormatException nfe) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,290,return createBigDecimal(val);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,298,* Utility method for createNumber.  Returns true if s is null
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,300,* @param s the String to check
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,301,* @return if it is all zeros or null
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,303,private static boolean isAllZeros(String s) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,304,if (s == null) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,305,return true;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,307,for (int i = s.length() - 1; i >= 0; i--) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,308,if (s.charAt(i) != '0') {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,309,return false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,312,return s.length() > 0;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,316,* Convert a String to a Float
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,318,* @param val  a String to convert
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,319,* @return converted Float
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,320,* @throws NumberFormatException if the value cannot be converted
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,322,public static Float createFloat(String val) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,323,return Float.valueOf(val);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,327,* Convert a String to a Double
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,329,* @param val  a String to convert
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,330,* @return converted Double
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,331,* @throws NumberFormatException if the value cannot be converted
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,333,public static Double createDouble(String val) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,334,return Double.valueOf(val);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,338,"* Convert a String to a Integer, handling hex and"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,339,* octal notations.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,341,* @param val  a String to convert
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,342,* @return converted Integer
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,343,* @throws NumberFormatException if the value cannot be converted
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,345,public static Integer createInteger(String val) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,346,// decode() handles 0xAABD and 0777 (hex and octal) as well.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,347,return Integer.decode(val);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,351,* Convert a String to a Long
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,353,* @param val  a String to convert
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,354,* @return converted Long
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,355,* @throws NumberFormatException if the value cannot be converted
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,357,public static Long createLong(String val) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,358,return Long.valueOf(val);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,362,* Convert a String to a BigInteger
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,364,* @param val  a String to convert
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,365,* @return converted BigInteger
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,366,* @throws NumberFormatException if the value cannot be converted
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,368,public static BigInteger createBigInteger(String val) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,369,BigInteger bi = new BigInteger(val);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,370,return bi;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,374,* Convert a String to a BigDecimal
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,376,* @param val  a String to convert
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,377,* @return converted BigDecimal
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,378,* @throws NumberFormatException if the value cannot be converted
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,380,public static BigDecimal createBigDecimal(String val) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,381,BigDecimal bd = new BigDecimal(val);
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,382,return bd;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,386,* Get the minimum of three values.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,388,"public static int minimum(int a, int b, int c) {"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,389,if (b < a) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,390,a = b;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,392,if (c < a) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,393,a = c;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,395,return a;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,399,* Get the maximum of three values.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,401,"public static int maximum(int a, int b, int c) {"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,402,if (b > a) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,403,a = b;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,405,if (c > a) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,406,a = c;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,408,return a;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,412,* Checks whether the String contains only digit characters.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,413,* Null and blank string will return false.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,415,* @param str  the string to check
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,416,* @return boolean contains only unicode numeric
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,418,public static boolean isDigits(String str) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,419,if ((str == null) || (str.length() == 0)) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,420,return false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,422,for (int i = 0; i < str.length(); i++) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,423,if (!Character.isDigit(str.charAt(i))) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,424,return false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,427,return true;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,431,* <p>
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,432,* Checks whether the String a valid Java number.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,433,"* Valid numbers include hexadecimal marked with the ""0x"" qualifier,"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,434,* scientific notation and numbers marked with a type qualifier (e.g. 123L).
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,435,* </p>
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,436,* <p>
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,437,* Null and blank string will return false.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,438,* </p>
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,440,* @param str  the string to check
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,441,* @return true if the string is a correctly formatted number
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,443,public static boolean isNumber(String str) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,444,if ((str == null) || (str.length() == 0)) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,445,return false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,447,char[] chars = str.toCharArray();
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,448,int sz = chars.length;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,449,boolean hasExp = false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,450,boolean hasDecPoint = false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,451,boolean allowSigns = false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,452,boolean foundDigit = false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,453,//Deal with any possible sign up front
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,454,int start = (chars[0] == '-') ? 1 : 0;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,455,if (sz > start + 1) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,456,if (chars[start] == '0' && chars[start + 1] == 'x') {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,457,int i = start + 2;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,458,if (i == sz) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,459,"return false; // str == ""0x"""
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,461,//Checking hex (it can't be anything else)
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,462,for (; i < chars.length; i++) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,463,if ((chars[i] < '0' || chars[i] > '9')
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,464,&& (chars[i] < 'a' || chars[i] > 'f')
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,465,&& (chars[i] < 'A' || chars[i] > 'F')) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,466,return false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,469,return true;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,472,"sz--; //Don't want to loop to the last char, check it afterwords"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,473,//for type qualifiers
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,474,int i = start;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,475,//Loop to the next to last char or to the last char if we need another digit to
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,476,"//make a valid number (e.g. chars[0..5] = ""1234E"")"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,477,while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,478,if (chars[i] >= '0' && chars[i] <= '9') {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,479,foundDigit = true;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,480,allowSigns = false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,482,} else if (chars[i] == '.') {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,483,if (hasDecPoint || hasExp) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,484,//Two decimal points or dec in exponent
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,485,return false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,487,hasDecPoint = true;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,488,} else if (chars[i] == 'e' || chars[i] == 'E') {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,489,//We've already taken care of hex.
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,490,if (hasExp) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,491,//Two E's
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,492,return false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,494,if (!foundDigit) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,495,return false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,497,hasExp = true;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,498,allowSigns = true;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,499,} else if (chars[i] == '+' || chars[i] == '-') {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,500,if (!allowSigns) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,501,return false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,503,allowSigns = false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,504,foundDigit = false; //We need a digit after the E
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,505,} else {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,506,return false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,508,i++;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,510,if (i < chars.length) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,511,if (chars[i] >= '0' && chars[i] <= '9') {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,512,"//No type qualifier, OK"
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,513,return true;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,515,if (chars[i] == 'e' || chars[i] == 'E') {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,516,//Can't have an E at the last byte
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,517,return false;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,519,if (!allowSigns
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,520,&& (chars[i] == 'd'
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,521,|| chars[i] == 'D'
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,522,|| chars[i] == 'f'
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,523,|| chars[i] == 'F')) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,524,return foundDigit;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,526,if (chars[i] == 'l'
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,527,|| chars[i] == 'L') {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,528,//Not allowing L with an exponoent
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,529,return foundDigit && !hasExp;
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,532,//allowSigns is true iff the val ends in 'E'
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,533,//Found digit it to make sure weird stuff like '.' and '1E-' doesn't pass
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,534,return !allowSigns && foundDigit;
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,1,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,7,* reserved.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,11,* are met:
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,19,*    distribution.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,22,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,30,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,31,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,35,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,58,* Common <code>Object</code> manipulation routines.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,60,"* @author <a href=""mailto:nissim@nksystems.com"">Nissim Karpenstein</a>"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,61,"* @author <a href=""mailto:janekdb@yahoo.co.uk"">Janek Bogucki</a>"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,62,"* @author <a href=""mailto:dlr@finemaltcoding.com"">Daniel Rall</a>"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,63,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,64,"* @version $Id: ObjectUtils.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,66,public class ObjectUtils {
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,69,* Prevent construction of ObjectUtils instances
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,71,private ObjectUtils() {
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,75,* Returns a default value if the object passed is null.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,77,* @param object  the object to test.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,78,* @param defaultValue  the default value to return.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,79,"* @return object if it is not null, defaultValue otherwise."
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,81,"public static Object defaultIfNull(Object object, Object defaultValue) {"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,82,return (object != null ? object : defaultValue);
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,86,"* Compares two objects for equality, where either one or both"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,87,* objects may be <code>null</code>.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,89,* @param object1  the first object.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,90,* @param object2  the second object.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,91,* @return True if the values of both objects are the same.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,93,"public static boolean equals(Object object1, Object object2) {"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,94,if (object1 == null) {
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,95,return (object2 == null);
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,96,} else if (object2 == null) {
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,97,// object1 is not null
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,98,return false;
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,99,} else {
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,100,return object1.equals(object2);
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,1,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,6,* Copyright (c) 2001-2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,7,* reserved.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,11,* are met:
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,19,*    distribution.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,21,"* 3. The end-user documentation included with the redistribution,"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,22,"*    if any, must include the following acknowledgment:"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,25,"*    Alternately, this acknowledgment may appear in the software itself,"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,26,*    if and wherever such third-party acknowledgments normally appear.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,28,"* 4. The names ""Apache"" and ""Apache Software Foundation"" and"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,29,"*    ""Commons"" must not be used to endorse or promote products"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,30,*    derived from this software without prior written permission. For
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,31,"*    written permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,33,"* 5. Products derived from this software may not be called ""Apache"","
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,34,"*    nor may ""Apache"" appear in their name, without"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,35,*    prior written permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,57,import java.util.Random;
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,59,* <p>Common random <code>String</code> manipulation routines.</p>
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,61,* <p>Originally from
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,62,"*  <a href=""http://jakarta.apache.org/turbine/"">Turbine</a> and the"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,63,* GenerationJavaCore library.</p>
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,65,"* @author <a href=""mailto:jon@latchkey.com"">Jon S. Stevens</a>"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,66,"* @author <a href=""mailto:dlr@finemaltcoding.com"">Daniel Rall</a>"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,67,"* @author <a href=""mailto:gcoladonato@yahoo.com"">Greg Coladonato</a>"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,68,"* @author <a href=""mailto:bayard@generationjava.com"">Bayard</a>"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,69,"* @author <a href=""mailto:ed@apache.org"">Ed Korthof</a>"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,70,"* @author <a href=""mailto:steven@caswell.name"">Steven Caswell</a>"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,71,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,72,"* @version $Id: RandomStringUtils.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,74,public class RandomStringUtils {
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,77,* Random object used by random method. This has to be not local
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,78,* to the random method so as to not return the same value in the
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,79,* same millisecond.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,81,private static final Random RANDOM = new Random();
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,84,* Prevent construction of RandomStringUtils instances
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,86,private RandomStringUtils() {
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,90,* Creates a random string whose length is the number of characters
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,91,* specified. Characters will be chosen from the set of all characters.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,93,* @param count length of random string to create
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,94,* @return the random string
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,96,public static String random(int count) {
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,97,"return random(count, false, false);"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,101,* Creates a random string whose length is the number of characters
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,102,* specified. Characters will be chosen from the set of characters whose
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,103,* ASCII value is between 32 and 127 .
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,105,* @param count length of random string to create
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,106,* @return the random string
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,108,public static String randomAscii(int count) {
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,109,"return random(count, 32, 127, false, false);"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,113,* Creates a random string whose length is the number of characters
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,114,* specified. Characters will be chosen from the set of alphabetic
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,115,* characters.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,117,* @param count length of random string to create
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,118,* @return the random string
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,120,public static String randomAlphabetic(int count) {
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,121,"return random(count, true, false);"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,125,* Creates a random string whose length is the number of characters
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,126,* specified. Characters will be chosen from the set of alpha-numeric
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,127,* characters.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,129,* @param count length of random string to create
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,130,* @return the random string
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,132,public static String randomAlphanumeric(int count) {
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,133,"return random(count, true, true);"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,137,* Creates a random string whose length is the number of characters
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,138,* specified. Characters will be chosen from the set of numeric
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,139,* characters.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,141,* @param count length of random string to create
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,142,* @return the random string
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,144,public static String randomNumeric(int count) {
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,145,"return random(count, false, true);"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,149,* Creates a random string whose length is the number of characters
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,150,* specified. Characters will be chosen from the set of alpha-numeric
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,151,* characters as indicated by the arguments.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,153,* @param count length of random string to create
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,154,"* @param letters if <code>true</code>, generated string will include"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,155,* alphabetic characters
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,156,"* @param numbers if <code>true</code>, generatd string will include"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,157,* numeric characters
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,158,* @return the random string
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,160,"public static String random(int count, boolean letters, boolean numbers) {"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,161,"return random(count, 0, 0, letters, numbers);"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,165,* Creates a random string whose length is the number of characters
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,166,* specified. Characters will be chosen from the set of alpha-numeric
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,167,* characters as indicated by the arguments.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,169,* @param count length of random string to create
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,170,* @param start int position in set of chars to start at
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,171,* @param end int position in set of chars to end before
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,172,"* @param letters if <code>true</code>, generated string will include"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,173,* alphabetic characters
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,174,"* @param numbers if <code>true</code>, generatd string will include"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,175,* numeric characters
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,176,* @return the random string
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,178,"public static String random(int count, int start, int end, boolean letters, boolean numbers) {"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,179,"return random(count, start, end, letters, numbers, null);"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,183,* Creates a random string based on a variety of options.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,185,* @param count int length of random string to create
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,186,* @param start int position in set of chars to start at
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,187,* @param end int position in set of chars to end before
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,188,* @param letters boolean only allow letters?
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,189,* @param numbers boolean only allow numbers?
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,190,* @param set char[] set of chars to choose randoms from.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,191,"*        If null, then it will use the set of all chars."
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,192,* @return the random string
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,194,"public static String random(int count, int start, int end, boolean letters, boolean numbers, char[] set) {"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,195,if( (start == 0) && (end == 0) ) {
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,196,end = (int)'z';
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,197,start = (int)' ';
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,198,if(!letters && !numbers) {
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,199,start = 0;
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,200,end = Integer.MAX_VALUE;
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,204,StringBuffer buffer = new StringBuffer();
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,205,int gap = end - start;
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,207,while(count-- != 0) {
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,208,char ch;
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,209,if(set == null) {
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,210,ch = (char)(RANDOM.nextInt(gap) + start);
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,211,} else {
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,212,ch = set[RANDOM.nextInt(gap) + start];
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,214,if( (letters && numbers && Character.isLetterOrDigit(ch)) ||
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,215,(letters && Character.isLetter(ch)) ||
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,216,(numbers && Character.isDigit(ch)) ||
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,217,(!letters && !numbers)
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,220,buffer.append( ch );
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,221,} else {
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,222,count++;
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,225,return buffer.toString();
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,229,* Creates a random string whose length is the number of characters
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,230,* specified. Characters will be chosen from the set of characters
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,231,* specified.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,233,* @param count int length of random string to create
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,234,* @param set String containing the set of characters to use
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,235,* @return the random string
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,237,"public static String random(int count, String set) {"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,238,"return random(count, set.toCharArray());"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,242,* Creates a random string whose length is the number of characters
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,243,* specified. Characters will be chosen from the set of characters
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,244,* specified.
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,246,* @param count int length of random string to create
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,247,* @param set character array containing the set of characters to use
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,248,* @return the random string
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,250,"public static String random(int count, char[] set) {"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,251,"return random(count, 0, set.length - 1, false, false, set);"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,1,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,7,* reserved.
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,11,* are met:
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,19,*    distribution.
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,22,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,30,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,31,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,35,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,57,import org.apache.commons.lang.exception.NestableRuntimeException;
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,60,* Exception thrown when the Serialization process fails. The original
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,61,* error is wrapped within this one.
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,63,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,64,"* @version $Id: SerializationException.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,66,public class SerializationException extends NestableRuntimeException {
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,69,* Constructs a new <code>SerializationException</code> without specified
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,70,* detail message.
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,72,public SerializationException() {
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,73,super();
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,77,* Constructs a new <code>SerializationException</code> with specified
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,78,* detail message.
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,80,* @param msg The error message.
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,82,public SerializationException(String msg) {
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,83,super(msg);
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,87,* Constructs a new <code>SerializationException</code> with specified
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,88,* nested <code>Throwable</code>.
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,90,* @param nested The exception or error that caused this exception
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,91,*               to be thrown.
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,93,public SerializationException(Throwable cause) {
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,94,super(cause);
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,98,* Constructs a new <code>SerializationException</code> with specified
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,99,* detail message and nested <code>Throwable</code>.
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,101,* @param msg    The error message.
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,102,* @param nested The exception or error that caused this exception
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,103,*               to be thrown.
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,105,"public SerializationException(String msg, Throwable cause) {"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,106,"super(msg, cause);"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,1,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,7,* reserved.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,11,* are met:
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,19,*    distribution.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,22,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,30,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,31,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,35,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,57,import java.io.ByteArrayInputStream;
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,58,import java.io.ByteArrayOutputStream;
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,59,import java.io.IOException;
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,60,import java.io.InputStream;
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,61,import java.io.ObjectInputStream;
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,62,import java.io.ObjectOutputStream;
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,63,import java.io.OutputStream;
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,64,import java.io.Serializable;
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,67,"* Methods that assist with the serialization process, or perform"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,68,* additional functionality based on serialization.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,69,* <ul>
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,70,* <li>Deep clone using serialization
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,71,* <li>Serialize managing finally and IOException
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,72,* <li>Deserialize managing finally and IOException
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,73,* </ul>
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,75,"* @author <a href=""mailto:nissim@nksystems.com"">Nissim Karpenstein</a>"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,76,"* @author <a href=""mailto:janekdb@yahoo.co.uk"">Janek Bogucki</a>"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,77,"* @author <a href=""mailto:dlr@finemaltcoding.com"">Daniel Rall</a>"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,78,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,79,"* @version $Id: SerializationUtils.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,81,public class SerializationUtils {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,84,* Constructor for SerializationUtils is private
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,86,private SerializationUtils() {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,87,super();
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,91,* Deep clone an object using serialization.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,92,* <p>
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,93,* This is many times slower than writing clone methods by hand
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,94,"* on all objects in your object graph. However, for complex object"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,95,"* graphs, or for those that don't support deep cloning this can"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,96,* be a simple alternative implementation. Of course all the objects
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,97,* must be <code>Serializable</code>.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,99,* @param object  the <code>Serializable</code> object to clone
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,100,* @return the cloned object
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,101,* @throws SerializationException (runtime) if the serialization fails
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,103,public static Object clone(Serializable object) {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,104,return deserialize( serialize(object) );
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,108,* Serializes an object to the specified stream. The stream will
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,109,* be closed once the object is written. This avoids the need for
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,110,"* a finally clause, and maybe also exception handling, in the"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,111,* application code.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,113,* @param obj  the object to serialize to bytes
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,114,* @param outputStream  the stream to write to
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,115,* @throws SerializationException (runtime) if the serialization fails
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,117,"public static void serialize(Serializable obj, OutputStream outputStream) {"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,118,ObjectOutputStream out = null;
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,119,try {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,120,// stream closed in the finally
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,121,out = new ObjectOutputStream(outputStream);
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,122,out.writeObject(obj);
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,124,} catch (IOException ex) {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,125,throw new SerializationException(ex);
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,126,} finally {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,127,try {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,128,if (out != null) {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,129,out.close();
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,131,} catch (IOException ex) {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,132,// ignore;
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,138,* Serializes an object to a byte array for storage/serialization.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,140,* @param obj  the object to serialize to bytes
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,141,* @return a byte[] with the converted Serializable.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,142,* @throws SerializationException (runtime) if the serialization fails
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,144,public static byte[] serialize(Serializable obj) {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,145,ByteArrayOutputStream baos = new ByteArrayOutputStream();
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,146,"serialize(obj, baos);"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,147,return baos.toByteArray();
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,151,* Deserializes an object from the specified stream. The stream will
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,152,* be closed once the object is written. This avoids the need for
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,153,"* a finally clause, and maybe also exception handling, in the"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,154,* application code.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,156,* @param objectData  the serialized object.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,157,* @return the deserialized object
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,158,* @throws SerializationException (runtime) if the serialization fails
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,160,public static Object deserialize(InputStream inputStream) {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,161,ObjectInputStream in = null;
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,162,try {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,163,// stream closed in the finally
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,164,in = new ObjectInputStream(inputStream);
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,165,return in.readObject();
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,167,} catch (ClassNotFoundException ex) {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,168,throw new SerializationException(ex);
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,169,} catch (IOException ex) {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,170,throw new SerializationException(ex);
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,171,} finally {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,172,try {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,173,if (in != null) {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,174,in.close();
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,176,} catch (IOException ex) {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,177,// ignore
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,183,* Deserializes a single object from an array of bytes.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,185,* @param objectData  the serialized object.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,186,* @return the deserialized object
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,187,* @throws SerializationException (runtime) if the serialization fails
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,189,public static Object deserialize(byte[] objectData) {
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,190,ByteArrayInputStream bais = new ByteArrayInputStream(objectData);
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,191,return deserialize(bais);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,7,* reserved.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,11,* are met:
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,19,*    distribution.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,22,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,30,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,31,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,35,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,57,import java.io.ByteArrayInputStream;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,58,import java.io.ByteArrayOutputStream;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,59,import java.io.InputStreamReader;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,60,import java.io.OutputStreamWriter;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,61,import java.io.OutputStream;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,62,import java.io.PrintWriter;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,63,import java.io.IOException;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,64,import java.util.NoSuchElementException;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,65,import java.util.StringTokenizer;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,67,import java.util.Iterator;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,70,* <p>Common <code>String</code> manipulation routines.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,72,* <p>Originally from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,73,"* <a href=""http://jakarta.apache.org/turbine/"">Turbine</a> and the"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,74,* GenerationJavaCore library.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,76,"* @author <a href=""mailto:jon@latchkey.com"">Jon S. Stevens</a>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,77,"* @author <a href=""mailto:dlr@finemaltcoding.com"">Daniel Rall</a>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,78,"* @author <a href=""mailto:gcoladonato@yahoo.com"">Greg Coladonato</a>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,79,"* @author <a href=""mailto:bayard@generationjava.com"">Bayard</a>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,80,"* @author <a href=""mailto:ed@apache.org"">Ed Korthof</a>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,81,"* @author <a href=""mailto:rand_mcneely@yahoo.com>Rand McNeely</a>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,82,"* @author <a href=""mailto:scolebourne@joda.org>Stephen Colebourne</a>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,83,"* @version $Id: StringUtils.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,85,public class StringUtils {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,88,* The size of the buffer to use when working with I/O (4 kB).
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,90,public static int CHAR_BUFFER_SIZE = 4 * 1024;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,93,* Prevent construction of StringUtils instances
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,95,private StringUtils() {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,98,// Empty
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,102,"* Removes white space from both ends of this string, handling null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,103,* by returning an empty string.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,105,* @see java.lang.String#trim()
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,106,* @param str  the string to check
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,107,* @return the trimmed text (never <code>null</code>)
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,109,public static String clean(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,110,"return (str == null ? """" : str.trim());"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,114,"* Removes white space from both ends of this string, handling null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,115,* by returning null.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,117,* @see java.lang.String#trim()
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,118,* @param str  the string to check
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,119,* @return the trimmed text (or <code>null</code>)
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,121,public static String trim(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,122,return (str == null ? null : str.trim());
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,126,* Checks if a String is non null and is not empty (length > 0).
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,128,* @param str  the string to check
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,129,"* @return true if the String is non-null, and not length zero"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,131,public static boolean isNotEmpty(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,132,return (str != null && str.length() > 0);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,136,* Checks if a (trimmed) String is null or empty.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,138,* @param str  the string to check
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,139,"* @return true if the String is null, or length zero once trimmed"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,141,public static boolean isEmpty(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,142,return (str == null || str.trim().length() == 0);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,145,// Equals and IndexOf
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,149,"* Compares two Strings, returning true if they are equal."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,150,* Nulls are handled without exceptions. Two <code>null</code>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,151,* references are considered equal. Comparison is case sensitive.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,153,* @param str1  the first string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,154,* @param str2  the second string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,155,"* @return true if the Strings are equal, case sensitive, or both null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,157,"public static boolean equals(String str1, String str2) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,158,return (str1 == null ? str2 == null : str1.equals(str2));
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,162,"* Compares two Strings, returning true if they are equal ignoring case."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,163,* Nulls are handled without exceptions. Two <code>null</code>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,164,* references are considered equal. Comparison is case insensitive.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,166,* @param str1  the first string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,167,* @param str2  the second string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,168,"* @return true if the Strings are equal, case insensitive, or both null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,170,"public static boolean equalsIgnoreCase(String str1, String str2) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,171,return (str1 == null ? str2 == null : str1.equalsIgnoreCase(str2));
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,175,* Find the earliest index of any of a set of potential substrings.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,176,* Null string will return -1.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,178,* @param str  the string to check
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,179,* @param searchStrs  the strings to search for
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,180,* @return the earliest index of any of the strings
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,182,"public static int indexOfAny(String str, String[] searchStrs) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,183,if ((str == null) || (searchStrs == null)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,184,return -1;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,186,int sz = searchStrs.length;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,188,// String's can't have a MAX_VALUEth index.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,189,int ret = Integer.MAX_VALUE;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,191,int tmp = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,192,for (int i = 0; i < sz; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,193,tmp = str.indexOf(searchStrs[i]);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,194,if (tmp == -1) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,195,continue;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,198,if (tmp < ret) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,199,ret = tmp;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,203,return (ret == Integer.MAX_VALUE) ? -1 : ret;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,207,* Find the latest index of any of a set of potential substrings.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,208,* Null string will return -1.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,210,* @param str  the string to check
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,211,* @param searchStrs  the strings to search for
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,212,* @return the last index of any of the strings
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,214,"public static int lastIndexOfAny(String str, String[] searchStrs) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,215,if ((str == null) || (searchStrs == null)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,216,return -1;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,218,int sz = searchStrs.length;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,219,int ret = -1;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,220,int tmp = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,221,for (int i = 0; i < sz; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,222,tmp = str.lastIndexOf(searchStrs[i]);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,223,if (tmp > ret) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,224,ret = tmp;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,227,return ret;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,230,// Substring
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,234,* Gets a substring of the specified string avoiding exceptions.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,235,* A negative start position can be used to start n characters from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,236,* the end of the string.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,238,* @param str  the string to get the substring from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,239,"* @param start  the position to start from,  negative means"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,240,* count back from the end of the string by this many characters
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,241,* @return substring from start position
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,243,"public static String substring(String str, int start) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,244,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,245,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,248,"// handle negatives, which means last n characters"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,249,if (start < 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,250,start = str.length() + start; // remember start is negative
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,253,if (start < 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,254,start = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,256,if (start > str.length()) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,257,"return """";"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,260,return str.substring(start);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,264,* Gets a substring of the specified string avoiding exceptions.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,265,* A negative start position can be used to start/end n characters
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,266,* from the end of the string.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,268,* @param str  the string to get the substring from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,269,"* @param start  the position to start from, negative means"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,270,* count back from the end of the string by this many characters
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,271,"* @param end  the position to end at (exclusive),  negative means"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,272,* count back from the end of the string by this many characters
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,273,* @return substring from start position to end positon
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,275,"public static String substring(String str, int start, int end) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,276,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,277,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,280,// handle negatives
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,281,if (end < 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,282,end = str.length() + end; // remember end is negative
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,284,if (start < 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,285,start = str.length() + start; // remember start is negative
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,288,// check length next
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,289,if (end > str.length()) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,290,// check this works.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,291,end = str.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,294,"// if start is greater than end, return """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,295,if (start > end) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,296,"return """";"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,299,if (start < 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,300,start = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,302,if (end < 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,303,end = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,306,"return str.substring(start, end);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,310,* Gets the leftmost n characters of a string. If n characters are not
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,311,"* available, or the string is null, the string will be returned"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,312,* without an exception.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,314,* @param str  the string to get the leftmost characters from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,315,* @param len  the length of the required string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,316,* @return the leftmost characters
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,317,* @throws IllegalArgumentException if len is less than zero
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,319,"public static String left(String str, int len) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,320,if (len < 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,321,"throw new IllegalArgumentException(""Requested String length "" + len + "" is less than zero"");"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,323,if ((str == null) || (str.length() <= len)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,324,return str;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,325,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,326,"return str.substring(0, len);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,331,* Gets the rightmost n characters of a string. If n characters are not
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,332,"* available, or the string is null, the string will be returned"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,333,* without an exception.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,335,* @param str  the string to get the rightmost characters from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,336,* @param len  the length of the required string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,337,* @return the leftmost characters
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,338,* @throws IllegalArgumentException if len is less than zero
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,340,"public static String right(String str, int len) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,341,if (len < 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,342,"throw new IllegalArgumentException(""Requested String length "" + len + "" is less than zero"");"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,344,if ((str == null) || (str.length() <= len)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,345,return str;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,346,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,347,return str.substring(str.length() - len);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,352,* Gets n characters from the middle of a string. If n characters are
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,353,"* not available, the remainder of the string will be returned"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,354,"* without an exception. If the string is null, null will be returned."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,356,* @param str  the string to get the characters from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,357,* @param pos  the position to start from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,358,* @param len  the length of the required string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,359,* @return the leftmost characters
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,360,* @throws IndexOutOfBoundsException if pos is out of bounds
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,361,* @throws IllegalArgumentException if len is less than zero
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,363,"public static String mid(String str, int pos, int len) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,364,if ((pos < 0) ||
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,365,(str != null && pos > str.length())) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,366,"throw new StringIndexOutOfBoundsException(""String index "" + pos + "" is out of bounds"");"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,368,if (len < 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,369,"throw new IllegalArgumentException(""Requested String length "" + len + "" is less than zero"");"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,371,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,372,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,374,if (str.length() <= (pos + len)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,375,return str.substring(pos);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,376,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,377,"return str.substring(pos, pos + len);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,381,// Splitting
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,385,"* Splits the provided text into a list, using whitespace as the separator."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,386,* The separator is not included in the returned String array.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,388,* @param str  the string to parse
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,389,* @return an array of parsed Strings
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,391,public static String[] split(String text) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,392,"return split(text, null, -1);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,396,"* Splits the provided text into a list, based on a given separator."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,397,* The separator is not included in the returned String array.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,398,* A null separator will cause parsing to be on whitespace.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,400,* @param str  the string to parse
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,401,"* @param separator  The separator character. If <code>null</code>, splits"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,402,*  on whitespace.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,403,* @return an array of parsed Strings
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,405,"public static String[] split(String text, String separator) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,406,"return split(text, separator, -1);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,410,"* Splits the provided text into a list, based on a given separator."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,411,* The separator is not included in the returned String array.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,412,* The maximum number of splits to perfom can be controlled.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,413,* A null separator will cause parsing to be on whitespace.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,415,* @param str  the string to parse
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,416,"* @param separator  The separator character. If <code>null</code>, splits"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,417,*  on whitespace.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,418,* @param max  The maximum number of elements to include in the
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,419,*  list.  A zero or negative value implies no limit.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,420,* @return an array of parsed Strings
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,422,"public static String[] split(String text, String separator, int max) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,423,StringTokenizer tok = null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,424,if (separator == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,425,// Null separator means we're using StringTokenizer's default
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,426,"// delimiter, which comprises all whitespace characters."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,427,tok = new StringTokenizer(text);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,428,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,429,"tok = new StringTokenizer(text, separator);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,432,int listSize = tok.countTokens();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,433,if (max > 0 && listSize > max) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,434,listSize = max;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,437,String[] list = new String[listSize];
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,438,int i = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,439,while (tok.hasMoreTokens()) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,440,if (max > 0 && i == listSize - 1) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,441,// In the situation where we hit the max yet have
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,442,"// tokens left over in our input, the last list"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,443,// element gets all remaining text.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,444,StringBuffer buf = new StringBuffer((int) 1.2 * text.length() * (listSize - i) / listSize);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,445,while (tok.hasMoreTokens()) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,446,buf.append(tok.nextToken());
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,447,if (tok.hasMoreTokens()) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,448,buf.append(separator);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,451,list[i] = buf.toString();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,452,break;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,453,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,454,list[i] = tok.nextToken();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,456,i++;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,458,return list;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,461,// Joining
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,465,* Joins the elements of the provided array into a single string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,466,* containing the provided list of elements.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,467,* No delimiter is added before or after the list.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,468,* A null separator is the same as a blank String.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,470,* @param array  the array of values to join together
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,471,* @param separator  the separator character to use
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,472,* @return the joined String
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,474,"public static String join(Object[] array, String separator) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,475,if (separator == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,476,"separator = """";"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,478,int arraySize = array.length;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,479,int bufSize = (arraySize == 0 ? 0 : (array[0].toString().length() +
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,480,separator.length()) * arraySize);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,481,StringBuffer buf = new StringBuffer(bufSize);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,483,for (int i = 0; i < arraySize; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,484,if (i > 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,485,buf.append(separator);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,487,buf.append(array[i]);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,489,return buf.toString();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,493,* Joins the elements of the provided iterator into a single string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,494,* containing the provided elements.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,495,* No delimiter is added before or after the list.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,496,* A null separator is the same as a blank String.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,498,* @param iterator  the iterator of values to join together
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,499,* @param separator  the separator character to use
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,500,* @return the joined String
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,502,"public static String join(Iterator iterator, String separator) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,503,if (separator == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,504,"separator = """";"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,506,"StringBuffer buf = new StringBuffer(256);  // Java default is 16, probably too small"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,507,while (iterator.hasNext()) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,508,buf.append(iterator.next());
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,509,if (iterator.hasNext()) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,510,buf.append(separator);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,513,return buf.toString();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,518,// Replacing
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,522,"* Replace a string with another string inside a larger string, once."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,524,"* @see #replace(String text, String repl, String with, int max)"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,525,* @param text  text to search and replace in
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,526,* @param repl  String to search for
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,527,* @param with  String to replace with
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,528,* @return the text with any replacements processed
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,530,"public static String replaceOnce(String text, String repl, String with) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,531,"return replace(text, repl, with, 1);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,535,* Replace all occurances of a string within another string.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,537,"* @see #replace(String text, String repl, String with, int max)"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,538,* @param text  text to search and replace in
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,539,* @param repl  String to search for
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,540,* @param with  String to replace with
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,541,* @return the text with any replacements processed
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,543,"public static String replace(String text, String repl, String with) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,544,"return replace(text, repl, with, -1);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,548,"* Replace a string with another string inside a larger string,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,549,* for the first <code>max</code> values of the search string.  A
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,550,* <code>null</code> reference is passed to this method is a
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,551,* no-op.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,553,* @param text  text to search and replace in
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,554,* @param repl  String to search for
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,555,* @param with  String to replace with
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,556,"* @param max  maximum number of values to replace, or"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,557,* <code>-1</code> if no maximum
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,558,* @return the text with any replacements processed
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,560,"public static String replace(String text, String repl, String with,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,561,int max) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,562,if (text == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,563,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,566,StringBuffer buf = new StringBuffer(text.length());
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,567,"int start = 0, end = 0;"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,568,"while ( (end = text.indexOf(repl, start)) != -1 ) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,569,"buf.append(text.substring(start, end)).append(with);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,570,start = end + repl.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,572,if (--max == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,573,break;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,576,buf.append(text.substring(start));
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,577,return buf.toString();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,581,* Overlay a part of a string with another string.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,583,* @param text String to do overlaying in
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,584,* @param overlay String to overlay
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,585,* @param start int to start overlaying at
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,586,* @param end   int to stop overlaying before
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,587,* @return String with overlayed text
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,589,"public static String overlayString(String text, String overlay, int start, int end) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,590,return new StringBuffer(start + overlay.length() + text.length() - end + 1)
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,591,".append(text.substring(0, start))"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,592,.append(overlay)
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,593,.append(text.substring(end))
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,594,.toString();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,597,// Centering
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,601,* Center a string in a larger string of size n.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,602,* Uses spaces as the value to buffer the string with..
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,604,* @param str  String to center
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,605,* @param size  int size of new String
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,606,* @return String containing centered String
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,608,"public static String center(String str, int size) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,609,"return center(str, size, "" "");"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,613,* Center a string in a larger string of size n.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,614,* Uses a supplied String as the value to buffer the string with..
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,616,* @param str  String to center
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,617,* @param size  int size of new String
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,618,* @param delim  String to buffer the new String with
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,619,* @return String containing centered String
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,621,"public static String center(String str, int size, String delim) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,622,int sz = str.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,623,int p = size - sz;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,624,if (p < 1) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,625,return str;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,627,"str = leftPad(str, sz + p / 2, delim);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,628,"str = rightPad(str, size, delim);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,629,return str;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,632,// Chomping
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,636,"* Remove the last newline, and everything after it from a String."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,638,* @param str  String to chomp the newline from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,639,* @return String without chomped newline
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,641,public static String chomp(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,642,"return chomp(str, ""\n"");"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,646,"* Remove the last value of a supplied String, and everything after it"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,647,* from a String.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,649,* @param str  String to chomp from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,650,* @param sep  String to chomp
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,651,* @return String without chomped ending
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,653,"public static String chomp(String str, String sep) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,654,int idx = str.lastIndexOf(sep);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,655,if (idx != -1) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,656,"return str.substring(0,idx);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,657,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,658,return str;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,663,* Remove a newline if and only if it is at the end
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,664,* of the supplied string.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,666,* @param str  String to chomp from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,667,* @return String without chomped ending
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,669,public static String chompLast(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,670,"return chompLast(str, ""\n"");"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,674,* Remove a value if and only if the string ends with that value.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,676,* @param str  String to chomp from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,677,* @param sep  String to chomp
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,678,* @return String without chomped ending
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,680,"public static String chompLast(String str, String sep) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,681,if (str.length() == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,682,return str;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,684,String sub = str.substring(str.length() - sep.length());
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,685,if (sep.equals(sub)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,686,"return str.substring(0, str.length() - sep.length());"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,687,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,688,return str;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,693,"* Remove everything and return the last value of a supplied String, and"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,694,* everything after it from a String.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,696,* @param str String to chomp from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,697,* @param sep String to chomp
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,698,* @return String chomped
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,700,"public static String getChomp(String str, String sep) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,701,int idx = str.lastIndexOf(sep);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,702,if (idx == str.length() - sep.length()) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,703,return sep;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,704,} else if (idx != -1) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,705,return str.substring(idx);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,706,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,707,"return """";"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,712,"* Remove the first value of a supplied String, and everything before it"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,713,* from a String.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,715,* @param str String to chomp from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,716,* @param sep String to chomp
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,717,* @return String without chomped beginning
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,719,"public static String prechomp(String str, String sep) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,720,int idx = str.indexOf(sep);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,721,if (idx != -1) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,722,return str.substring(idx + sep.length());
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,723,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,724,return str;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,729,* Remove and return everything before the first value of a
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,730,* supplied String from another String.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,732,* @param str String to chomp from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,733,* @param sep String to chomp
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,734,* @return String prechomped
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,736,"public static String getPrechomp(String str, String sep) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,737,int idx = str.indexOf(sep);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,738,if (idx != -1) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,739,"return str.substring(0, idx + sep.length());"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,740,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,741,"return """";"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,745,// Chopping
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,749,* Remove the last character from a String. If the String
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,750,"* ends in \r\n, then remove both of them."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,752,* @param str String to chop last character from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,753,* @return String without last character
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,755,public static String chop(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,756,"if ("""".equals(str)) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,757,"return """";"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,759,if (str.length() == 1) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,760,"return """";"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,762,int lastIdx = str.length() - 1;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,763,"String ret = str.substring(0, lastIdx);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,764,char last = str.charAt(lastIdx);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,765,if (last == '\n') {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,766,if (ret.charAt(lastIdx - 1) == '\r') {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,767,"return ret.substring(0, lastIdx - 1);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,770,return ret;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,774,* Remove \n from end of a String if it's there.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,775,"* If a \r precedes it, then remove that too."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,777,* @param str String to chop a newline from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,778,* @param String without newline on end
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,779,* @return String without newline
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,781,public static String chopNewline(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,782,int lastIdx = str.length()-1;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,783,char last = str.charAt(lastIdx);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,784,if(last == '\n') {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,785,if(str.charAt(lastIdx-1) == '\r') {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,786,lastIdx --;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,788,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,789,lastIdx++;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,791,"return str.substring(0,lastIdx);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,795,// Conversion
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,798,// spec 3.10.6
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,800,* Escapes any values it finds into their String form.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,801,* So a tab becomes the characters '\\' and 't'.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,803,* @param str String to escape values in
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,805,* @return String with escaped values
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,807,// improved with code from  cybertiger@cyberiantiger.org
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,808,"// unicode from him, and defaul for < 32's."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,809,public static String escape(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,810,int sz = str.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,811,StringBuffer buffer = new StringBuffer(2*sz);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,812,for(int i=0; i<sz; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,813,char ch = str.charAt(i);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,815,// handle unicode
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,816,if(ch > 0xfff) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,817,"buffer.append(""\\u""+Integer.toHexString(ch));"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,818,} else
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,819,if(ch > 0xff) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,820,"buffer.append(""\\u0""+Integer.toHexString(ch));"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,821,} else
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,822,if(ch > 0x7f) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,823,"buffer.append(""\\u00""+Integer.toHexString(ch));"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,824,} else
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,825,if(ch < 32) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,826,switch(ch) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,827,case '\b' :
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,828,buffer.append('\\');
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,829,buffer.append('b');
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,830,break;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,831,case '\n' :
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,832,buffer.append('\\');
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,833,buffer.append('n');
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,834,break;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,835,case '\t' :
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,836,buffer.append('\\');
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,837,buffer.append('t');
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,838,break;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,839,case '\f' :
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,840,buffer.append('\\');
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,841,buffer.append('f');
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,842,break;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,843,case '\r' :
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,844,buffer.append('\\');
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,845,buffer.append('r');
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,846,break;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,847,default :
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,848,if( ch > 0xf ) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,849,"buffer.append(""\\u00""+Integer.toHexString(ch));"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,850,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,851,"buffer.append(""\\u000""+Integer.toHexString(ch));"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,853,break;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,855,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,856,switch(ch) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,857,case '\'' :
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,858,buffer.append('\\');
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,859,buffer.append('\'');
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,860,break;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,861,"case '""' :"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,862,buffer.append('\\');
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,863,"buffer.append('""');"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,864,break;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,865,case '\\' :
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,866,buffer.append('\\');
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,867,buffer.append('\\');
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,868,break;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,869,default :
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,870,buffer.append(ch);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,871,break;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,875,return buffer.toString();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,878,// Padding
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,882,* Repeat a string n times to form a new string.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,884,* @param str  String to repeat
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,885,* @param repeat  int number of times to repeat
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,886,* @return String with repeated string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,888,"public static String repeat(String str, int repeat) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,889,StringBuffer buffer = new StringBuffer(repeat * str.length());
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,890,for (int i = 0; i < repeat; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,891,buffer.append(str);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,893,return buffer.toString();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,897,* Right pad a String with spaces. Pad to a size of n.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,899,* @param str  String to repeat
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,900,* @param size  int number of times to repeat
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,901,* @return String with repeated string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,903,"public static String rightPad(String str, int size) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,904,"return rightPad(str, size, "" "");"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,908,* Right pad a String with a specified string. Pad to a size of n.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,910,* @param str  String to pad out
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,911,* @param size  int size to pad to
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,912,* @param delim  String to pad with
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,914,"public static String rightPad(String str, int size, String delim) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,915,size = (size - str.length()) / delim.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,916,if (size > 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,917,"str += repeat(delim, size);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,919,return str;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,923,* Left pad a String with spaces. Pad to a size of n.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,925,* @param str  String to pad out
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,926,* @param size  int size to pad to
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,928,"public static String leftPad(String str, int size) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,929,"return leftPad(str, size, "" "");"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,932,* Left pad a String with a specified string. Pad to a size of n.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,934,* @param str  String to pad out
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,935,* @param size  int size to pad to
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,936,* @param delim  String to pad with
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,938,"public static String leftPad(String str, int size, String delim) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,939,size = (size - str.length()) / delim.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,940,if (size > 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,941,"str = repeat(delim, size) + str;"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,943,return str;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,946,// Stripping
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,950,* Remove whitespace from the front and back of a String.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,952,* @param str  the string to remove whitespace from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,953,* @return the stripped string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,955,public static String strip(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,956,"return strip(str, null);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,959,* Remove a specified String from the front and back of a
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,960,"* String. If Whitespace is wanted to be removed, used the"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,961,* strip(String) method.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,963,* @param str  the string to remove a string from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,964,* @param delim  the string to remove at start and end
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,965,* @return the stripped string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,967,"public static String strip(String str, String delim) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,968,"str = stripStart(str, delim);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,969,"return stripEnd(str, delim);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,973,* Strip whitespace from the front and back of every string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,974,* in the array.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,976,* @param strs  the strings to remove whitespace from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,977,* @return the stripped strings
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,979,public static String[] stripAll(String[] strs) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,980,"return stripAll(strs, null);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,984,* Strip the specified delimiter from the front and back of
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,985,* every String in the array.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,987,* @param strs  the strings to remove a string from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,988,* @param delim  the string to remove at start and end
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,989,* @return the stripped strings
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,991,"public static String[] stripAll(String[] strs, String delimiter) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,992,if ((strs == null) || (strs.length == 0)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,993,return strs;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,995,int sz = strs.length;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,996,String[] newArr = new String[sz];
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,997,for (int i = 0; i < sz; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,998,"newArr[i] = strip(strs[i], delimiter);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1000,return newArr;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1004,* Strip any of a supplied string (first letter) from the end of a String..
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1005,"* If the strip string is null, whitespace is stripped."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1007,* @param str  the string to remove characters from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1008,* @param strip  the string to remove
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1009,* @return the stripped string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1011,"public static String stripEnd(String str, String strip) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1012,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1013,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1015,int end = str.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1017,if (strip == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1018,while ((end != 0) && Character.isWhitespace(str.charAt(end - 1))) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1019,end--;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1021,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1022,char chr = strip.charAt(0);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1023,while ((end != 0) && (str.charAt(end - 1) == chr)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1024,end--;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1027,"return str.substring(0, end);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1031,* Strip any of a supplied string (first letter) from the start of a String.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1032,"* If the strip string is null, whitespace is stripped."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1034,* @param str  the string to remove characters from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1035,* @param strip  the string to remove
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1036,* @return the stripped string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1038,"public static String stripStart(String str, String strip) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1039,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1040,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1043,int start = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1045,int sz = str.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1047,if (strip == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1048,while ((start != sz) && Character.isWhitespace(str.charAt(start))) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1049,start++;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1051,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1052,char chr = strip.charAt(0);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1053,while ((start != sz) && (str.charAt(start) == chr)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1054,start++;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1057,return str.substring(start);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1060,// Case conversion
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1064,"* Convert a String to upper case, null string returns null."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1066,* @param str  the string to uppercase
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1067,* @return the upper cased string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1069,public static String upperCase(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1070,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1071,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1073,return str.toUpperCase();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1077,"* Convert a String to lower case, null string returns null."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1079,* @param str  the string to lowercase
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1080,* @return the lower cased string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1082,public static String lowerCase(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1083,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1084,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1086,return str.toLowerCase();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1090,"* Uncapitalise a string. That is, convert the first character into"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1091,* lower-case. Null is returned as null.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1093,* @param str  the string to uncapitalise
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1094,* @return uncapitalised string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1096,public static String uncapitalise(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1097,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1098,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1100,if (str.length() == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1101,"return """";"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1103,return new StringBuffer(str.length())
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1104,.append(Character.toLowerCase(str.charAt(0)))
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1105,.append(str.substring(1))
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1106,.toString();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1110,"* Capitalise a string. That is, convert the first character into"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1111,* title-case. Null is returned as null.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1113,* @param str  the string to capitalise
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1114,* @return capitalised string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1116,public static String capitalise(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1117,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1118,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1120,if (str.length() == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1121,"return """";"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1123,return new StringBuffer(str.length())
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1124,.append(Character.toTitleCase(str.charAt(0)))
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1125,.append(str.substring(1))
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1126,.toString();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1130,* Swaps the case of String. Properly looks after
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1131,* making sure the start of words are Titlecase and not
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1132,* Uppercase. Null is returned as null.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1134,* @param str  the string to swap the case of
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1135,* @return the modified string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1137,public static String swapCase(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1138,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1139,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1141,int sz = str.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1142,StringBuffer buffer = new StringBuffer(sz);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1144,boolean whitespace = false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1145,char ch = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1146,char tmp = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1148,for(int i=0; i<sz; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1149,ch = str.charAt(i);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1150,if(Character.isUpperCase(ch)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1151,tmp = Character.toLowerCase(ch);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1152,} else
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1153,if(Character.isTitleCase(ch)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1154,tmp = Character.toLowerCase(ch);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1155,} else
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1156,if(Character.isLowerCase(ch)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1157,if(whitespace) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1158,tmp = Character.toTitleCase(ch);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1159,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1160,tmp = Character.toUpperCase(ch);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1162,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1163,tmp = ch;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1165,buffer.append(tmp);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1166,whitespace = Character.isWhitespace(ch);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1168,return buffer.toString();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1173,* Capitalise all the words in a string. Uses Character.isWhitespace
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1174,* as a separator between words. Null will return null.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1176,* @param str  the string to capitalise
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1177,* @return capitalised string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1179,public static String capitaliseAllWords(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1180,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1181,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1183,int sz = str.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1184,StringBuffer buffer = new StringBuffer(sz);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1185,boolean space = true;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1186,for(int i=0; i<sz; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1187,char ch = str.charAt(i);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1188,if(Character.isWhitespace(ch)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1189,buffer.append(ch);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1190,space = true;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1191,} else
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1192,if(space) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1193,buffer.append(Character.toTitleCase(ch));
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1194,space = false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1195,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1196,buffer.append(ch);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1199,return buffer.toString();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1202,// Nested extraction
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1206,* Get the String that is nested in between two instances of the
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1207,* same String.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1209,* @param str  the string containing nested-string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1210,* @param tag  the string before and after nested-string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1211,"* @return the string that was nested, or null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1213,"public static String getNestedString(String str, String tag) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1214,"return getNestedString(str, tag, tag);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1218,* Get the string that is nested in between two strings.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1220,* @param str  the string containing nested-string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1221,* @param open  the string before nested-string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1222,* @param close  the string after nested-string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1223,"* @return the string that was nested, or null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1225,"public static String getNestedString(String str, String open, String close) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1226,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1227,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1229,int start = str.indexOf(open);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1230,if (start != -1) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1231,"int end = str.indexOf(close, start + open.length());"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1232,if (end != -1) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1233,"return str.substring(start + open.length(), end);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1236,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1240,* How many times is the substring in the larger string.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1241,* Null returns 0.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1243,* @param str  the string to check
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1244,"* @return the number of occurances, 0 if the string is null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1246,"public static int countMatches(String str, String sub) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1247,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1248,return 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1250,int count = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1251,int idx = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1252,"while ((idx = str.indexOf(sub, idx)) != -1) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1253,count++;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1254,idx += sub.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1256,return count;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1259,// Character Tests
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1263,* Checks if the string contains only unicode letters.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1264,* Null will return null.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1266,* @param str  the string to check
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1267,"* @return true if only contains letters, and is non-null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1269,public static boolean isAlpha(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1270,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1271,return false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1273,int sz = str.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1274,for (int i = 0; i < sz; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1275,if (Character.isLetter(str.charAt(i)) == false) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1276,return false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1279,return true;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1283,* Checks if the string contains only unicode letters and space (' ').
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1284,* Null will return null.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1286,* @param str  the string to check
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1287,"* @return true if only contains letters and space, and is non-null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1289,public static boolean isAlphaSpace(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1290,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1291,return false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1293,int sz = str.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1294,for (int i = 0; i < sz; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1295,if ((Character.isLetter(str.charAt(i)) == false) &&
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1296,(str.charAt(i) != ' ')) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1297,return false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1300,return true;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1304,* Checks if the string contains only unicode letters or digits.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1305,* Null will return null.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1307,* @param str  the string to check
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1308,"* @return true if only contains letters or digits, and is non-null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1310,public static boolean isAlphanumeric(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1311,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1312,return false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1314,int sz = str.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1315,for (int i = 0; i < sz; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1316,if (Character.isLetterOrDigit(str.charAt(i)) == false) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1317,return false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1320,return true;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1324,"* Checks if the string contains only unicode letters, digits or space (' ')."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1325,* Null will return null.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1327,* @param str  the string to check
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1328,"* @return true if only contains letters, digits or space, and is non-null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1330,public static boolean isAlphanumericSpace(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1331,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1332,return false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1334,int sz = str.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1335,for (int i = 0; i < sz; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1336,if ((Character.isLetterOrDigit(str.charAt(i)) == false) &&
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1337,(str.charAt(i) != ' ')) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1338,return false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1341,return true;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1345,* Checks if the string contains only unicode digits.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1346,* Null will return null.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1348,* @param str  the string to check
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1349,"* @return true if only contains digits, and is non-null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1351,public static boolean isNumeric(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1352,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1353,return false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1355,int sz = str.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1356,for (int i = 0; i < sz; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1357,if (Character.isDigit(str.charAt(i)) == false) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1358,return false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1361,return true;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1365,* Checks if the string contains only unicode digits or space (' ').
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1366,* Null will return null.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1368,* @param str  the string to check
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1369,"* @return true if only contains digits or space, and is non-null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1371,public static boolean isNumericSpace(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1372,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1373,return false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1375,int sz = str.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1376,for (int i = 0; i < sz; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1377,if ((Character.isDigit(str.charAt(i)) == false) &&
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1378,(str.charAt(i) != ' ')) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1379,return false;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1382,return true;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1385,// Defaults
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1389,"* Return either the passed in String, or if it is null,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1390,* then an empty String.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1392,* @param str  the string to check
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1393,"* @return the passed in string, or blank if it was null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1395,public static String defaultString(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1396,"return defaultString(str, """");"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1400,"* Return either the passed in String, or if it is null,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1401,* then a passed in default String.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1403,* @param str  the string to check
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1404,* @param defaultString  the default string to return is str is null
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1405,"* @return the passed in string, or the default if it was null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1407,"public static String defaultString(String str, String defaultString) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1408,return (str == null) ? defaultString : str;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1411,// Reversing
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1415,"* Reverse a String, null string returns null."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1417,* @param str  the string to reverse
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1418,* @return the reversed string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1420,public static String reverse(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1421,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1422,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1424,return new StringBuffer(str).reverse().toString();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1428,* Reverses a string that is delimited by a specific character.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1429,* The strings between the delimiters are not reversed.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1430,* Thus java.lang.String becomes String.lang.java (if the delimiter is '.').
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1432,* @param str  the string to reverse
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1433,* @param delimiter  the delimiter to use
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1434,* @return the reversed string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1436,"public static String reverseDelimitedString(String str, String delimiter) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1437,"// could implement manually, but simple way is to reuse other,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1438,"// probably slower, methods."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1439,"String[] strs = split(str, delimiter);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1440,reverseArray(strs);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1441,"return join(strs, delimiter);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1445,* Reverses an array.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1446,* TAKEN FROM CollectionsUtils.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1448,private static void reverseArray(Object[] array) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1449,int i = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1450,int j = array.length - 1;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1451,Object tmp;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1453,while (j > i) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1454,tmp = array[j];
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1455,array[j] = array[i];
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1456,array[i] = tmp;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1457,j--;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1458,i++;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1463,// Misc
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1467,* Get the stack trace from a Throwable as a String.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1468,* <p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1469,* This method uses printStackTrace() internally to obtain the stack trace.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1471,* @see java.lang.Throwable#printStackTrace()
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1472,* @param throwable  the throwable to extract a stack trace from
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1473,"* @return the extracted stack trace, or null if an error occurs"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1475,public static String stackTrace(Throwable throwable) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1476,String trace = null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1477,try {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1478,// And show the Error Screen.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1479,ByteArrayOutputStream buf = new ByteArrayOutputStream();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1480,"throwable.printStackTrace( new PrintWriter(buf, true) );"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1481,trace = buf.toString();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1483,} catch (Exception ex) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1484,// ignore
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1486,return trace;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1490,* Find the Levenshtein distance between two strings.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1491,* This is the number of changes needed to change one string into
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1492,* another. Where each change is a single character modification.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1494,* This implemmentation of the levenshtein distance algorithm
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1495,* is from http://www.merriampark.com/ld.htm
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1497,"public static int getLevenshteinDistance(String s, String t) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1498,int d[][]; // matrix
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1499,int n; // length of s
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1500,int m; // length of t
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1501,int i; // iterates through s
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1502,int j; // iterates through t
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1503,char s_i; // ith character of s
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1504,char t_j; // jth character of t
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1505,int cost; // cost
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1507,// Step 1
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1508,n = s.length ();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1509,m = t.length ();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1510,if (n == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1511,return m;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1513,if (m == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1514,return n;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1516,d = new int[n+1][m+1];
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1518,// Step 2
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1519,for (i = 0; i <= n; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1520,d[i][0] = i;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1523,for (j = 0; j <= m; j++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1524,d[0][j] = j;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1527,// Step 3
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1528,for (i = 1; i <= n; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1529,s_i = s.charAt (i - 1);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1531,// Step 4
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1532,for (j = 1; j <= m; j++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1533,t_j = t.charAt (j - 1);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1535,// Step 5
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1536,if (s_i == t_j) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1537,cost = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1538,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1539,cost = 1;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1542,// Step 6
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1543,"d[i][j] = NumberUtils.minimum(d[i-1][j]+1, d[i][j-1]+1, d[i-1][j-1] + cost);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1547,// Step 7
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1548,return d[n][m];
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1552,* Convert a string from unicode to bytes in a native encoding.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1553,* The string must be in unicode (as Java always expects this);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1554,"* {@link #convertNativeToUnicode(String, String)} will convert"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1555,* strings in native encodings into unicode.  This method is
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1556,* generally used to create a <code>String</code> for use as
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1557,"* output, and is useful when dealing with I18N."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1559,* @param source String the unicode string to convert
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1560,* @param charset String the name of the charset into which to
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1561,* convert.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1562,* @return The string given represented in the native encoding
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1563,* specified.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1564,"* @see #convertNativeToUnicode(String, String)"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1566,"public static String convertUnicodeToNative(String source, String charset)"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1567,throws IOException {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1568,ByteArrayOutputStream baos = new ByteArrayOutputStream();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1569,"OutputStreamWriter out = new OutputStreamWriter(baos, charset);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1570,out.write(source);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1571,out.close();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1572,return baos.toString();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1576,* Convert a string from a native encoding to unicode.  This
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1577,* method is generally used to create a <code>String</code> for
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1578,"* use as input, and is useful when dealing with I18N."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1580,* @param input String the input to convert from native encoding
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1581,* to unicode.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1582,* @param charset String the charset from which to convert.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1583,* @return The string given represented in unicode rather than the
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1584,* specified native encoding.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1586,"public static String convertNativeToUnicode(String input, String charset)"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1587,throws IOException {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1588,InputStreamReader in = new InputStreamReader
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1589,"(new ByteArrayInputStream(input.getBytes()), charset);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1590,StringBuffer output = new StringBuffer();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1591,char[] buf = new char[CHAR_BUFFER_SIZE];
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1592,int count = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1593,"while ((count = in.read(buf, 0, CHAR_BUFFER_SIZE)) > 0)"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1595,"output.append(buf, 0, count);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1597,in.close();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1598,return output.toString();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1601,// these are not really of use in the Java world. Only if you're a C afficionado
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1602,"//    public static String sprintf(String format, Object[] list);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1603,"//    public static Object[] sscanf(String str, String format);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1604,"//    public static String pack(String[] strs, String format);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1605,"//    public static String[] unpack(String str, String format);"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,1,package org.apache.commons.lang.exception;
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,7,* reserved.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,11,* are met:
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,19,*    distribution.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,22,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,30,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,31,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,35,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,57,import java.io.PrintWriter;
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,60,* An interface to be implemented by {@link java.lang.Throwable}
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,61,* extensions which would like to be able to nest root exceptions
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,62,* inside themselves.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,64,"* @author <a href=""mailto:dlr@collab.net"">Daniel Rall</a>"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,65,"* @author <a href=""mailto:knielsen@apache.org"">Kasper Nielsen</a>"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,66,"* @author <a href=""mailto:steven@caswell.name"">Steven Caswell</a>"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,67,"* @version $Id: Nestable.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,69,public interface Nestable
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,72,* Returns the reference to the exception or error that caused the
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,73,* exception implementing the <code>Nestable</code> to be thrown.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,75,public Throwable getCause();
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,78,* Returns the number of nested <code>Throwable</code>s represented by
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,79,"* this <code>Nestable</code>, including this <code>Nestable</code>."
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,81,public int getLength();
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,84,* Returns the error message of this and any nested
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,85,* <code>Throwable</code>.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,87,* @return The error message.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,89,public String getMessage();
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,92,* Returns the error message of the <code>Throwable</code> in the chain
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,93,"* of <code>Throwable</code>s at the specified index, numbererd from 0."
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,94,"* If <code>index</code> is negative, the effect is the same as if it"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,95,* were 0. If <code>index</code> is greater than or equal to the length
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,96,"* of the chain, the message of the last <code>Throwable</code> in the"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,97,* chain is returned.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,99,* @param index the index of the <code>Throwable</code> in the chain of
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,100,* <code>Throwable</code>s
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,101,* @return the error message
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,103,public String getMessage(int index);
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,106,* Returns the error message of this and any nested <code>Throwable</code>s
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,107,"* in an array of Strings, one element for each message. Any"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,108,* <code>Throwable</code> specified without a message is represented in
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,109,* the array by a null.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,111,* @return the error messages
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,113,public String[] getMessages();
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,116,* Returns the <code>Throwable</code> in the chain of
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,117,"* <code>Throwable</code>s at the specified index, numbererd from 0. If"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,118,"* <code>index</code> is negative, the effect is the same as if it"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,119,* were 0. If <code>index</code> is greater than or equal to the length
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,120,"* of the chain, the last <code>Throwable</code> in the chain is returned."
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,122,* @param index the index of the <code>Throwable</code> in the chain of
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,123,* <code>Throwable</code>s
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,124,* @return the <code>Throwable</code>
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,126,public Throwable getThrowable(int index);
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,129,* Returns the error message of this and any nested <code>Throwable</code>s
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,130,"* in an array of Strings, one element for each message. Any"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,131,* <code>Throwable</code> specified without a message is represented in
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,132,* the array by a null.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,134,* @return the <code>Throwable</code>s
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,136,public Throwable[] getThrowables();
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,139,"* Returns the index, numbered from 0, of the first occurrence of the"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,140,"* specified type in the chain of <code>Throwable</code>s, or -1 if the"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,141,* specified type is not found in the chain. If <code>pos</code> is
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,142,"* negative, the effect is the same as if it were 0. If <code>pos</code>"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,143,"* is greater than or equal to the length of the chain, the effect is the"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,144,* same as if it were the index of the last element in the chain.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,146,* @param type <code>Class</code> to be found
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,147,"* @return index of the first occurrence of the type in the chain, or -1 if"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,148,* the type is not found
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,150,public int indexOfThrowable(Class type);
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,153,"* Returns the index, numbered from 0, of the first <code>Throwable</code>"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,154,* that matches the specified type in the chain of <code>Throwable</code>s
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,155,"* with an index greater than or equal to the specified position, or -1 if"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,156,"* the type is not found. If <code>pos</code> is negative, the effect is the"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,157,* same as if it were 0. If <code>pos</code> is greater than or equal to the
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,158,"* length of the chain, the effect is the same as if it were the index of"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,159,* the last element in the chain.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,161,* @param type <code>Class</code> to be found
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,162,"* @param pos index, numbered from 0, of the starting position in the chain"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,163,* to be searched
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,165,"* @return index of the first occurrence of the type in the chain, or -1 if"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,166,* the type is not found
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,168,"public int indexOfThrowable(int pos, Class type);"
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,171,* Prints the stack trace of this exception to the specified print
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,172,* writer.  Includes inforamation from the exception--if
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,173,* any--which caused this exception.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,175,* @param out <code>PrintWriter</code> to use for output.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,177,public void printStackTrace(PrintWriter out);
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,180,* Prints the stack trace for this exception only--root cause not
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,181,* included--using the provided writer.  Used by {@link
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,182,* org.apache.commons.lang.exception.NestableDelegate} to write
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,183,* individual stack traces to a buffer.  The implementation of
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,184,* this method should call
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,185,* <code>super.printStackTrace(out);</code> in most cases.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,187,* @param out The writer to use.
True,src/java/org/apache/commons/lang/exception/Nestable.java,src/java/org/apache/commons/lang/exception/Nestable.java,189,public void printPartialStackTrace(PrintWriter out);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,1,package org.apache.commons.lang.exception;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,7,* reserved.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,11,* are met:
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,19,*    distribution.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,22,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,30,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,31,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,35,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,57,import java.io.OutputStream;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,58,import java.io.PrintStream;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,59,import java.io.PrintWriter;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,60,import java.io.StringWriter;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,61,import java.io.Writer;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,62,import java.util.LinkedList;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,63,import java.util.StringTokenizer;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,66,"* @author <a href=""mailto:Rafal.Krzewski@e-point.pl"">Rafal Krzewski</a>"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,67,"* @author <a href=""mailto:dlr@collab.net"">Daniel Rall</a>"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,68,"* @author <a href=""mailto:knielsen@apache.org"">Kasper Nielsen</a>"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,69,"* @author <a href=""mailto:steven@caswell.name"">Steven Caswell</a>"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,70,"* @version $Id: NestableDelegate.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,72,public class NestableDelegate
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,75,* Constructor error message.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,77,private static final String MUST_BE_THROWABLE =
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,78,"""The Nestable implementation passed to the NestableDelegate(Nestable) """
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,79,"+ ""constructor must extend java.lang.Throwable"";"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,82,* Holds the reference to the exception or error that caused
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,83,* this exception to be thrown.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,85,private Nestable cause = null;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,88,* @param cause The Nestable implementation to get a stack trace for
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,89,* (<i>must</i> extend {@link java.lang.Throwable}).
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,91,NestableDelegate(Nestable cause) // package
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,93,if (cause instanceof Throwable)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,95,this.cause = cause;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,97,else
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,99,throw new IllegalArgumentException(MUST_BE_THROWABLE);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,104,* Returns the number of <code>Throwable</code>s contained in the
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,105,* <code>Nestable</code> contained by this delegate.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,107,int getLength() // package
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,109,// Count the number of throwables
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,110,int count = 1;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,111,String msg = null;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,112,if(this.cause.getCause() == null)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,114,return count;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,116,Throwable t = this.cause.getCause();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,117,while(t != null)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,119,++count;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,120,if(Nestable.class.isInstance(t))
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,122,t = ((Nestable) t).getCause();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,124,else
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,126,t = null;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,129,return count;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,133,* @param baseMsg The base message to use when creating the full
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,134,* message.  Should be generally be called via
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,135,"* <code>nestableHelper.getMessage(super.getMessage())</code>,"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,136,* where <code>super</code> is an instance of {@link
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,137,* java.lang.Throwable}.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,138,* @return The concatenated message for this and all nested
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,139,* exceptions.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,141,String getMessage(String baseMsg) // package
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,143,StringBuffer msg = new StringBuffer();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,144,if (baseMsg != null)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,146,msg.append(baseMsg);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,149,Throwable nestedCause = cause.getCause();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,150,if (nestedCause != null)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,152,String causeMsg = nestedCause.getMessage();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,153,if (causeMsg != null)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,155,if (baseMsg != null)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,157,"msg.append("": "");"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,159,msg.append(causeMsg);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,163,return (msg.length() > 0 ? msg.toString() : null);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,166,String getMessage(int index)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,168,Throwable t = this.getThrowable(index);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,169,if(Nestable.class.isInstance(t))
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,171,return ((Nestable) t).getMessage(0);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,173,else
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,175,return t.getMessage();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,179,Throwable getThrowable(int index)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,181,Throwable[] throwables = this.getThrowables();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,182,if(index < 0)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,184,index = 0;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,186,if(index == 0)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,188,return (Throwable) this.cause;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,190,if(index >= throwables.length)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,192,index = throwables.length - 1;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,194,return throwables[index];
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,197,Throwable[] getThrowables() // package
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,199,int count = this.getLength();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,200,// Allocate an array to hold the messages
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,201,Throwable[] throwables = new Throwable[count];
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,202,count = 0;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,203,if(cause != null)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,205,throwables[count++] = (Throwable) this.cause;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,206,Throwable t = this.cause.getCause();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,207,while(t != null)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,209,throwables[count++] = t;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,210,if(Nestable.class.isInstance(t))
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,212,t = ((Nestable) t).getCause();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,214,else
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,216,t = null;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,220,return throwables;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,223,String[] getMessages() // package
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,225,Throwable throwables[] = this.getThrowables();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,226,String[] msgs = new String[throwables.length];
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,227,for(int i = 0; i < throwables.length; i++)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,229,msgs[i] = (Nestable.class.isInstance(throwables[i]) ? ((Nestable) throwables[i]).getMessage(0) : throwables[i].getMessage());
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,231,return msgs;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,234,"int indexOfThrowable(int pos, Class type) // package"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,236,pos = (pos < 0) ? 0 : pos;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,237,Throwable throwables[] = this.getThrowables();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,238,pos = (pos >= throwables.length) ? throwables.length - 1 : pos;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,239,for(int i = pos; i < throwables.length; i++)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,241,if(throwables[i].getClass().equals(type))
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,243,return i;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,246,return -1;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,250,* Prints the stack trace of this exception the the standar error
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,251,* stream.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,253,public void printStackTrace()
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,255,synchronized (System.err)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,257,printStackTrace(System.err);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,262,* Prints the stack trace of this exception to the specified print stream.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,264,* @param out <code>PrintStream</code> to use for output.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,266,public void printStackTrace(PrintStream out)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,268,synchronized (out)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,270,"PrintWriter pw = new PrintWriter(out, false);"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,271,printStackTrace(pw);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,272,// Flush the PrintWriter before it's GC'ed.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,273,pw.flush();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,278,* Prints the stack trace of this exception to the specified print writer.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,280,* @param out <code>PrintWriter</code> to use for output.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,282,public void printStackTrace(PrintWriter out)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,284,synchronized (out)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,286,String[] st = decompose((Throwable) cause);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,287,Throwable nestedCause = cause.getCause();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,288,if (nestedCause != null)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,290,if (nestedCause instanceof Nestable)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,292,// Recurse until a non-Nestable is encountered.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,293,((Nestable) nestedCause).printStackTrace(out);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,295,else
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,297,String[] nst = decompose(nestedCause);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,298,for (int i = 0; i < nst.length; i++)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,300,out.println(nst[i]);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,303,"out.print(""rethrown as "");"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,306,// Output desired frames from stack trace.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,307,for (int i = 0; i < st.length; i++)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,309,out.println(st[i]);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,315,* Captures the stack trace associated with a <code>Throwable</code>
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,316,"* object, decomposing it into a list of stack frames."
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,318,* @param t The <code>Throwable</code>.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,319,* @return  An array of strings describing each stack frame.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,321,private String[] decompose(Throwable t)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,323,StringWriter sw = new StringWriter();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,324,"PrintWriter pw = new PrintWriter(sw, true);"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,326,// Avoid infinite loop between decompose() and printStackTrace().
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,327,if (t instanceof Nestable)
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,329,((Nestable) t).printPartialStackTrace(pw);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,331,else
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,333,t.printStackTrace(pw);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,336,"String linebreak = System.getProperty(""line.separator"");"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,337,"StringTokenizer st = new StringTokenizer(sw.getBuffer().toString(),"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,338,linebreak);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,339,LinkedList list = new LinkedList();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,340,while (st.hasMoreTokens())
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,342,list.add(st.nextToken());
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,344,return (String []) list.toArray(new String[] {});
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,1,package org.apache.commons.lang.exception;
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,7,* reserved.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,11,* are met:
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,19,*    distribution.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,22,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,30,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,31,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,35,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,57,import java.io.OutputStream;
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,58,import java.io.PrintStream;
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,59,import java.io.PrintWriter;
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,60,import java.io.StringWriter;
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,61,import java.io.Writer;
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,62,import java.util.LinkedList;
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,63,import java.util.StringTokenizer;
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,66,* The base class of all exceptions which can contain other exceptions.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,68,* It is intended to ease the debugging by carrying on the information
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,69,* about the exception which was caught and provoked throwing the
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,70,* current exception. Catching and rethrowing may occur multiple
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,71,"* times, and provided that all exceptions except the first one"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,72,"* are descendands of <code>NestedException</code>, when the"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,73,* exception is finally printed out using any of the <code>
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,74,"* printStackTrace()</code> methods, the stacktrace will contain"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,75,* the information about all exceptions thrown and caught on
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,76,* the way.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,77,* <p> Running the following program
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,78,* <p><blockquote><pre>
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,79,*  1 import org.apache.commons.NestedException;
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,80,*  2
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,81,*  3 public class Test {
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,82,*  4     public static void main( String[] args ) {
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,83,*  5         try {
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,84,*  6             a();
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,85,*  7         } catch(Exception e) {
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,86,*  8             e.printStackTrace();
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,87,*  9         }
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,88,* 10      }
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,89,* 11
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,90,* 12      public static void a() throws Exception {
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,91,* 13          try {
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,92,* 14              b();
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,93,* 15          } catch(Exception e) {
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,94,"* 16              throw new NestedException(""foo"", e);"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,95,* 17          }
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,96,* 18      }
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,97,* 19
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,98,* 20      public static void b() throws Exception {
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,99,* 21          try {
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,100,* 22              c();
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,101,* 23          } catch(Exception e) {
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,102,"* 24              throw new NestedException(""bar"", e);"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,103,* 25          }
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,104,* 26      }
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,105,* 27
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,106,* 28      public static void c() throws Exception {
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,107,"* 29          throw new Exception(""baz"");"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,108,* 30      }
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,109,* 31 }
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,110,* </pre></blockquote>
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,111,* <p>Yields the following stacktrace:
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,112,* <p><blockquote><pre>
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,113,* java.lang.Exception: baz: bar: foo
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,114,*    at Test.c(Test.java:29)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,115,*    at Test.b(Test.java:22)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,116,* rethrown as NestedException: bar
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,117,*    at Test.b(Test.java:24)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,118,*    at Test.a(Test.java:14)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,119,* rethrown as NestedException: foo
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,120,*    at Test.a(Test.java:16)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,121,*    at Test.main(Test.java:6)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,122,* </pre></blockquote><br>
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,124,"* @author <a href=""mailto:Rafal.Krzewski@e-point.pl"">Rafal Krzewski</a>"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,125,"* @author <a href=""mailto:dlr@collab.net"">Daniel Rall</a>"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,126,"* @author <a href=""mailto:knielsen@apache.org"">Kasper Nielsen</a>"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,127,"* @author <a href=""mailto:steven@caswell.name"">Steven Caswell</a>"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,128,"* @version $Id: NestableException.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,130,public class NestableException extends Exception implements Nestable
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,133,* The helper instance which contains much of the code which we
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,134,* delegate to.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,136,protected NestableDelegate delegate = new NestableDelegate(this);
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,139,* Holds the reference to the exception or error that caused
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,140,* this exception to be thrown.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,142,private Throwable cause = null;
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,145,* Constructs a new <code>NestableException</code> without specified
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,146,* detail message.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,148,public NestableException()
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,150,super();
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,154,* Constructs a new <code>NestableException</code> with specified
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,155,* detail message.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,157,* @param msg The error message.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,159,public NestableException(String msg)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,161,super(msg);
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,165,* Constructs a new <code>NestableException</code> with specified
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,166,* nested <code>Throwable</code>.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,168,* @param nested The exception or error that caused this exception
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,169,*               to be thrown.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,171,public NestableException(Throwable cause)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,173,super();
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,174,this.cause = cause;
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,178,* Constructs a new <code>NestableException</code> with specified
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,179,* detail message and nested <code>Throwable</code>.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,181,* @param msg    The error message.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,182,* @param nested The exception or error that caused this exception
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,183,*               to be thrown.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,185,"public NestableException(String msg, Throwable cause)"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,187,super(msg);
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,188,this.cause = cause;
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,192,* @see org.apache.commons.lang.exception.Nestable#getCause()
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,194,public Throwable getCause()
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,196,return cause;
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,200,* Returns the number of nested <code>Throwable</code>s represented by
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,201,"* this <code>Nestable</code>, including this <code>Nestable</code>."
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,203,public int getLength()
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,205,return delegate.getLength();
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,209,* @see org.apache.commons.lang.exception.Nestable#getMessage()
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,211,public String getMessage()
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,213,StringBuffer msg = new StringBuffer();
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,214,String ourMsg = super.getMessage();
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,215,if (ourMsg != null)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,217,msg.append(ourMsg);
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,219,if (cause != null)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,221,String causeMsg = cause.getMessage();
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,222,if (causeMsg != null)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,224,if (ourMsg != null)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,226,"msg.append("": "");"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,228,msg.append(causeMsg);
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,232,return (msg.length() > 0 ? msg.toString() : null);
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,236,* Returns the error message of this and any nested <code>Throwable</code>s
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,237,"* in an array of Strings, one element for each message. Any"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,238,* <code>Throwable</code> specified without a message is represented in
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,239,* the array by a null.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,241,public String[] getMessages()
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,243,return delegate.getMessages();
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,246,public Throwable getThrowable(int index)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,248,return delegate.getThrowable(index);
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,251,public Throwable[] getThrowables()
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,253,return delegate.getThrowables();
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,256,public String getMessage(int index)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,258,if(index == 0)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,260,return super.getMessage();
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,262,else
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,264,return delegate.getMessage(index);
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,269,"* Returns the index, numbered from 0, of the first occurrence of the"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,270,"* specified type in the chain of <code>Throwable</code>s, or -1 if the"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,271,* specified type is not found in the chain. If <code>pos</code> is
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,272,"* negative, the effect is the same as if it were 0. If <code>pos</code>"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,273,"* is greater than or equal to the length of the chain, the effect is the"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,274,* same as if it were the index of the last element in the chain.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,276,* @param type <code>Class</code> to be found
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,277,"* @return index of the first occurrence of the type in the chain, or -1 if"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,278,* the type is not found
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,280,public int indexOfThrowable(Class type)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,282,"return delegate.indexOfThrowable(0, type);"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,286,"* Returns the index, numbered from 0, of the first <code>Throwable</code>"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,287,* that matches the specified type in the chain of <code>Throwable</code>s
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,288,"* with an index greater than or equal to the specified position, or -1 if"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,289,"* the type is not found. If <code>pos</code> is negative, the effect is the"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,290,* same as if it were 0. If <code>pos</code> is greater than or equal to the
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,291,"* length of the chain, the effect is the same as if it were the index of"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,292,* the last element in the chain.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,294,* @param type <code>Class</code> to be found
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,295,"* @param pos index, numbered from 0, of the starting position in the chain"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,296,* to be searched
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,298,"* @return index of the first occurrence of the type in the chain, or -1 if"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,299,* the type is not found
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,301,"public int indexOfThrowable(int pos, Class type)"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,303,"return delegate.indexOfThrowable(pos, type);"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,307,* Prints the stack trace of this exception the the standar error
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,308,* stream.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,310,public void printStackTrace()
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,312,delegate.printStackTrace();
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,316,* Prints the stack trace of this exception to the specified print stream.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,318,* @param out <code>PrintStream</code> to use for output.
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,320,public void printStackTrace(PrintStream out)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,322,delegate.printStackTrace(out);
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,326,* @see org.apache.commons.lang.exception.Nestable#printStackTrace(PrintWriter out)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,328,public void printStackTrace(PrintWriter out)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,330,delegate.printStackTrace(out);
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,334,* @see org.apache.commons.lang.exception.Nestable#printPartialStackTrace(PrintWriter out)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,336,public final void printPartialStackTrace(PrintWriter out)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,338,super.printStackTrace(out);
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,1,package org.apache.commons.lang.exception;
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,7,* reserved.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,11,* are met:
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,19,*    distribution.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,22,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,30,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,31,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,35,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,57,import java.io.OutputStream;
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,58,import java.io.PrintStream;
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,59,import java.io.PrintWriter;
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,60,import java.io.StringWriter;
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,61,import java.io.Writer;
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,62,import java.util.LinkedList;
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,63,import java.util.StringTokenizer;
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,66,* The base class of all runtime exceptions which can contain other
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,67,* exceptions.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,69,* @see org.apache.commons.lang.exception.NestableException
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,70,"* @author <a href=""mailto:Rafal.Krzewski@e-point.pl"">Rafal Krzewski</a>"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,71,"* @author <a href=""mailto:dlr@collab.net"">Daniel Rall</a>"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,72,"* @author <a href=""mailto:knielsen@apache.org"">Kasper Nielsen</a>"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,73,"* @author <a href=""mailto:steven@caswell.name"">Steven Caswell</a>"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,74,"* @version $Id: NestableRuntimeException.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,76,public class NestableRuntimeException extends RuntimeException
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,77,implements Nestable
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,80,* The helper instance which contains much of the code which we
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,81,* delegate to.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,83,protected NestableDelegate delegate = new NestableDelegate(this);
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,86,* Holds the reference to the exception or error that caused
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,87,* this exception to be thrown.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,89,private Throwable cause = null;
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,92,* Constructs a new <code>NestableRuntimeException</code> without specified
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,93,* detail message.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,95,public NestableRuntimeException()
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,97,super();
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,101,* Constructs a new <code>NestableRuntimeException</code> with specified
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,102,* detail message.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,104,* @param msg The error message.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,106,public NestableRuntimeException(String msg)
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,108,super(msg);
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,112,* Constructs a new <code>NestableRuntimeException</code> with specified
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,113,* nested <code>Throwable</code>.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,115,* @param nested The exception or error that caused this exception
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,116,*               to be thrown.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,118,public NestableRuntimeException(Throwable cause)
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,120,super();
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,121,this.cause = cause;
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,125,* Constructs a new <code>NestableRuntimeException</code> with specified
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,126,* detail message and nested <code>Throwable</code>.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,128,* @param msg    The error message.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,129,* @param nested The exception or error that caused this exception
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,130,*               to be thrown.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,132,"public NestableRuntimeException(String msg, Throwable cause)"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,134,super(msg);
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,135,this.cause = cause;
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,139,* @see org.apache.commons.lang.exception.Nestable#getCause()
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,141,public Throwable getCause()
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,143,return cause;
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,147,* Returns the number of nested <code>Throwable</code>s represented by
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,148,"* this <code>Nestable</code>, including this <code>Nestable</code>."
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,150,public int getLength()
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,152,return delegate.getLength();
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,156,* @see org.apache.commons.lang.exception.Nestable#getMessage()
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,158,public String getMessage()
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,160,StringBuffer msg = new StringBuffer();
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,161,String ourMsg = super.getMessage();
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,162,if (ourMsg != null)
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,164,msg.append(ourMsg);
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,166,if (cause != null)
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,168,String causeMsg = cause.getMessage();
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,169,if (causeMsg != null)
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,171,if (ourMsg != null)
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,173,"msg.append("": "");"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,175,msg.append(causeMsg);
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,179,return (msg.length() > 0 ? msg.toString() : null);
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,183,* Returns the error message of this and any nested <code>Throwable</code>s
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,184,"* in an array of Strings, one element for each message. Any"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,185,* <code>Throwable</code> specified without a message is represented in
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,186,* the array by a null.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,188,public String[] getMessages()
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,190,return delegate.getMessages();
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,193,public Throwable getThrowable(int index)
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,195,return delegate.getThrowable(index);
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,198,public Throwable[] getThrowables()
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,200,return delegate.getThrowables();
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,203,public String getMessage(int index)
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,205,if(index == 0)
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,207,return super.getMessage();
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,209,else
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,211,return delegate.getMessage(index);
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,216,"* Returns the index, numbered from 0, of the first occurrence of the"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,217,"* specified type in the chain of <code>Throwable</code>s, or -1 if the"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,218,* specified type is not found in the chain. If <code>pos</code> is
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,219,"* negative, the effect is the same as if it were 0. If <code>pos</code>"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,220,"* is greater than or equal to the length of the chain, the effect is the"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,221,* same as if it were the index of the last element in the chain.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,223,* @param type <code>Class</code> to be found
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,224,"* @return index of the first occurrence of the type in the chain, or -1 if"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,225,* the type is not found
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,227,public int indexOfThrowable(Class type)
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,229,"return delegate.indexOfThrowable(0, type);"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,233,"* Returns the index, numbered from 0, of the first <code>Throwable</code>"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,234,* that matches the specified type in the chain of <code>Throwable</code>s
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,235,"* with an index greater than or equal to the specified position, or -1 if"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,236,"* the type is not found. If <code>pos</code> is negative, the effect is the"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,237,* same as if it were 0. If <code>pos</code> is greater than or equal to the
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,238,"* length of the chain, the effect is the same as if it were the index of"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,239,* the last element in the chain.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,241,* @param type <code>Class</code> to be found
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,242,"* @param pos index, numbered from 0, of the starting position in the chain"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,243,* to be searched
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,245,"* @return index of the first occurrence of the type in the chain, or -1 if"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,246,* the type is not found
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,248,"public int indexOfThrowable(int pos, Class type)"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,250,"return delegate.indexOfThrowable(pos, type);"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,254,* Prints the stack trace of this exception the the standar error
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,255,* stream.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,257,public void printStackTrace()
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,259,delegate.printStackTrace();
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,263,* Prints the stack trace of this exception to the specified print stream.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,265,* @param out <code>PrintStream</code> to use for output.
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,267,public void printStackTrace(PrintStream out)
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,269,delegate.printStackTrace(out);
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,273,* @see org.apache.commons.lang.exception.Nestable#printStackTrace(PrintWriter out)
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,275,public void printStackTrace(PrintWriter out)
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,277,delegate.printStackTrace(out);
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,281,* @see org.apache.commons.lang.exception.Nestable#printPartialStackTrace(PrintWriter out)
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,283,public final void printPartialStackTrace(PrintWriter out)
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,285,super.printStackTrace(out);
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,1,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,7,* reserved.
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,11,* are met:
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,19,*    distribution.
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,35,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,57,import java.util.Arrays;
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,59,import junit.framework.Test;
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,60,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,61,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,62,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,64,* Unit tests {@link org.apache.commons.lang.CharSetUtils}.
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,66,"* @author <a href=""mailto:bayard@generationjava.com"">Henri Yandell</a>"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,67,"* @author <a href=""mailto:ridesmet@users.sourceforge.net"">Ringo De Smet</a>"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,68,"* @version $Id: CharSetUtilsTest.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,70,public class CharSetUtilsTest extends TestCase
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,72,public CharSetUtilsTest(String name) {
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,73,super(name);
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,76,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,77,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,80,public static Test suite() {
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,81,TestSuite suite = new TestSuite(CharSetUtilsTest.class);
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,82,"suite.setName(""CharSetUtils Tests"");"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,83,return suite;
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,86,protected void setUp() throws Exception {
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,87,super.setUp();
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,90,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,91,super.tearDown();
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,96,public void testSqueeze()
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,98,"assertEquals(""squeeze(String,String[]) failed"","
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,99,"""helo"", CharSetUtils.squeeze(""hello"", new String[] {""el""}));"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,100,"assertEquals(""squeeze(String,String[]) failed"","
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,101,""""", CharSetUtils.squeeze("""", new String[] {""el""}));"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,102,"assertEquals(""squeeze(String,String[]) failed"","
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,103,"""hello"", CharSetUtils.squeeze(""hello"", new String[] {""e""}));"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,104,"assertEquals(""squeeze(String,String[]) failed"","
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,105,"""fofof"", CharSetUtils.squeeze(""fooffooff"", new String[] {""of""}));"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,106,"assertEquals(""squeeze(String,String[]) failed"","
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,107,"""fof"", CharSetUtils.squeeze(""fooooff"", new String[] {""fo""}));"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,110,public void testCount()
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,112,"assertEquals(""count(String,String[]) failed"","
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,113,"3, CharSetUtils.count(""hello"", new String[] {""el""}));"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,114,"assertEquals(""count(String,String[]) failed"","
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,115,"0, CharSetUtils.count("""", new String[] {""el""}));"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,116,"assertEquals(""count(String,String[]) failed"","
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,117,"0, CharSetUtils.count(""hello"", new String[] {""x""}));"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,118,"assertEquals(""count(String,String[]) failed"","
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,119,"2, CharSetUtils.count(""hello"", new String[] {""e-i""}));"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,120,"assertEquals(""count(String,String[]) failed"","
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,121,"5, CharSetUtils.count(""hello"", new String[] {""a-z""}));"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,122,"assertEquals(""count(String,String[]) failed"","
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,123,"0, CharSetUtils.count(""hello"", new String[] {""""}));"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,126,public void testDelete()
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,128,"assertEquals(""delete(String,String[]) failed"","
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,129,"""ho"", CharSetUtils.delete(""hello"", new String[] {""el""}));"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,130,"assertEquals(""delete(String,String[]) failed"","
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,131,""""", CharSetUtils.delete(""hello"", new String[] {""elho""}));"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,132,"assertEquals(""delete(String,String[]) failed"","
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,133,"""hello"", CharSetUtils.delete(""hello"", new String[] {""""}));"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,134,"assertEquals(""delete(String,String[]) failed"","
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,135,""""", CharSetUtils.delete(""hello"", new String[] {""a-z""}));"
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,136,"assertEquals(""delete(String,String[]) failed"","
True,src/test/org/apache/commons/lang/CharSetUtilsTest.java,src/test/org/apache/commons/lang/CharSetUtilsTest.java,137,"""heo"", CharSetUtils.delete(""hello"", new String[] {""l""}));"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,5,* reserved.
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,9,* are met:
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,17,*    distribution.
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,54,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,59,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,61,* Test suite for the Lang package.
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,63,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,64,"* @author <a href=""mailto:ridesmet@users.sourceforge.net"">Ringo De Smet</a>"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,65,"* @version $Id: LangTestSuite.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,67,public class LangTestSuite extends TestCase {
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,70,* Construct a new instance.
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,72,public LangTestSuite(String name) {
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,73,super(name);
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,77,* Command-line interface.
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,79,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,80,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,84,* Get the suite of tests
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,86,public static Test suite() {
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,87,TestSuite suite = new TestSuite();
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,88,"suite.setName(""Commons-Lang Tests"");"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,89,suite.addTest(CharSetUtilsTest.suite());
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,90,suite.addTest(NumberRangeTest.suite());
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,91,suite.addTest(NumberUtilsTest.suite());
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,92,suite.addTest(ObjectUtilsTest.suite());
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,93,suite.addTest(RandomStringUtilsTest.suite());
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,94,suite.addTest(SerializationUtilsTest.suite());
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,95,suite.addTest(StringUtilsTest.suite());
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,96,suite.addTest(StringUtilsTrimEmptyTest.suite());
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,97,suite.addTest(StringUtilsSubstringTest.suite());
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,98,suite.addTest(StringUtilsEqualsIndexOfTest.suite());
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,99,suite.addTest(StringUtilsIsTest.suite());
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,100,return suite;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,1,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,7,* reserved.
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,11,* are met:
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,19,*    distribution.
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,35,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,57,import junit.framework.Test;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,58,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,59,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,63,* Test cases for the {@link NumberRange} class.
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,65,"* @author <a href=""mailto:chrise@esha.com"">Christopher Elkins</a>"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,66,"* @author <a href=""mailto:ridesmet@users.sourceforge.net"">Ringo De Smet</a>"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,67,* @version $Revision: 1.1 $ $Date: 2002/07/19 03:35:55 $
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,70,public final class NumberRangeTest extends TestCase {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,73,private NumberRange tenToTwenty;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,74,private Number five;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,75,private Number ten;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,76,private Number fifteen;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,77,private Number twenty;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,78,private Number twentyFive;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,81,public NumberRangeTest(String name) {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,82,super(name);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,86,public void setUp() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,87,five       = new Integer(5);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,88,ten        = new Integer(10);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,89,fifteen    = new Integer(15);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,90,twenty     = new Integer(20);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,91,twentyFive = new Integer(25);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,93,"tenToTwenty = new NumberRange(ten, twenty);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,97,public static Test suite() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,98,TestSuite suite = new TestSuite(NumberRangeTest.class);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,99,"suite.setName(""NumberRange Tests"");"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,100,return suite;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,104,public void testEquals() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,105,boolean expected = false;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,106,"boolean result = tenToTwenty.equals(new NumberRange(five, ten));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,107,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,109,expected = true;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,110,"result = tenToTwenty.equals(new NumberRange(ten, twenty));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,111,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,113,expected = false;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,114,"result = tenToTwenty.equals(new NumberRange(ten, fifteen));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,115,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,117,expected = false;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,118,"result = tenToTwenty.equals(new NumberRange(fifteen, twenty));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,119,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,123,public void testIncludesNumber() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,124,boolean expected = false;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,125,boolean result = tenToTwenty.includesNumber(five);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,126,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,128,expected = true;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,129,result = tenToTwenty.includesNumber(ten);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,130,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,132,expected = true;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,133,result = tenToTwenty.includesNumber(fifteen);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,134,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,136,expected = true;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,137,result = tenToTwenty.includesNumber(twenty);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,138,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,140,expected = false;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,141,result = tenToTwenty.includesNumber(twentyFive);
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,142,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,146,public void testIncludesRange() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,147,boolean expected = false;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,148,"boolean result = tenToTwenty.includesRange(new NumberRange(five, ten));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,149,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,151,expected = false;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,152,"result = tenToTwenty.includesRange(new NumberRange(five, fifteen));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,153,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,155,expected = true;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,156,"result = tenToTwenty.includesRange(new NumberRange(ten, fifteen));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,157,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,159,expected = true;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,160,"result = tenToTwenty.includesRange(new NumberRange(ten, twenty));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,161,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,163,expected = true;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,164,"result = tenToTwenty.includesRange(new NumberRange(fifteen, twenty));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,165,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,167,expected = false;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,168,result =
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,169,"tenToTwenty.includesRange(new NumberRange(fifteen, twentyFive));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,170,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,172,expected = false;
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,173,result =
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,174,"tenToTwenty.includesRange(new NumberRange(twenty, twentyFive));"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,175,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,179,public void testToString() {
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,180,"String expected = ""10-20"";"
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,181,String result = tenToTwenty.toString();
True,src/test/org/apache/commons/lang/NumberRangeTest.java,src/test/org/apache/commons/lang/NumberRangeTest.java,182,"assertEquals(expected, result);"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,1,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,7,* reserved.
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,11,* are met:
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,19,*    distribution.
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,35,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,57,import java.lang.reflect.Method;
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,58,import java.math.BigDecimal;
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,59,import java.math.BigInteger;
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,61,import junit.framework.Test;
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,62,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,63,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,65,* Unit tests {@link org.apache.commons.lang.NumberUtils}.
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,67,"* @author <a href=""mailto:rand_mcneely@yahoo.com"">Rand McNeely</a>"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,68,"* @author <a href=""mailto:ridesmet@users.sourceforge.net"">Ringo De Smet</a>"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,69,"* @version $Id: NumberUtilsTest.java,v 1.1 2002/07/19 03:35:55 bayard Exp $"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,71,public class NumberUtilsTest extends TestCase {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,73,public NumberUtilsTest(String name) {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,74,super(name);
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,77,public static Test suite() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,78,TestSuite suite = new TestSuite(NumberUtilsTest.class);
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,79,"suite.setName(""NumberUtils Tests"");"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,80,return suite;
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,86,* Test for int stringToInt(String)
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,88,public void testStringToIntString() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,89,"assertTrue(""stringToInt(String) 1 failed"", NumberUtils.stringToInt(""12345"") == 12345);"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,90,"assertTrue(""stringToInt(String) 2 failed"", NumberUtils.stringToInt(""abc"") == 0);"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,94,"* Test for int stringToInt(String, int)"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,96,public void testStringToIntStringI() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,97,"assertTrue(""stringToInt(String,int) 1 failed"", NumberUtils.stringToInt(""12345"", 5) == 12345);"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,98,"assertTrue(""stringToInt(String,int) 2 failed"", NumberUtils.stringToInt(""1234.5"", 5) == 5);"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,101,public void testCreateNumber() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,102,//a lot of things can go wrong
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,103,"assertEquals(""createNumber(String) 1 failed"", new Float(""1234.5""), NumberUtils.createNumber(""1234.5""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,104,"assertEquals(""createNumber(String) 2 failed"", new Integer(""12345""), NumberUtils.createNumber(""12345""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,105,"assertEquals(""createNumber(String) 3 failed"", new Double(""1234.5""), NumberUtils.createNumber(""1234.5D""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,106,"assertEquals(""createNumber(String) 4 failed"", new Float(""1234.5""), NumberUtils.createNumber(""1234.5F""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,107,"assertEquals(""createNumber(String) 5 failed"", new Long(Integer.MAX_VALUE + 1L), NumberUtils.createNumber("""" + (Integer.MAX_VALUE + 1L)));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,108,"assertEquals(""createNumber(String) 6 failed"", new Long(12345), NumberUtils.createNumber(""12345L""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,109,"assertEquals(""createNumber(String) 7 failed"", new Float(""-1234.5""), NumberUtils.createNumber(""-1234.5""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,110,"assertEquals(""createNumber(String) 8 failed"", new Integer(""-12345""), NumberUtils.createNumber(""-12345""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,111,"assertTrue(""createNumber(String) 9 failed"", 0xFADE == NumberUtils.createNumber(""0xFADE"").intValue());"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,112,"assertTrue(""createNumber(String) 10 failed"", -0xFADE == NumberUtils.createNumber(""-0xFADE"").intValue());"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,113,"assertEquals(""createNumber(String) 11 failed"", new Double(""1.1E200""), NumberUtils.createNumber(""1.1E200""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,114,"assertEquals(""createNumber(String) 12 failed"", new Float(""1.1E20""), NumberUtils.createNumber(""1.1E20""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,115,"assertEquals(""createNumber(String) 13 failed"", new Double(""-1.1E200""), NumberUtils.createNumber(""-1.1E200""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,116,"assertEquals(""createNumber(String) 14 failed"", new Double(""1.1E-200""), NumberUtils.createNumber(""1.1E-200""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,117,"assertEquals(""createNumber(String) 15 failed"", new BigDecimal(""1.1E-700""), NumberUtils.createNumber(""1.1E-700F""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,118,assertEquals(
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,119,"""createNumber(String) 16 failed"","
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,120,"new Long(""10"" + Integer.MAX_VALUE),"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,121,"NumberUtils.createNumber(""10"" + Integer.MAX_VALUE + ""L""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,122,assertEquals(
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,123,"""createNumber(String) 17 failed"","
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,124,"new Long(""10"" + Integer.MAX_VALUE),"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,125,"NumberUtils.createNumber(""10"" + Integer.MAX_VALUE));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,126,assertEquals(
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,127,"""createNumber(String) 18 failed"","
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,128,"new BigInteger(""10"" + Long.MAX_VALUE),"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,129,"NumberUtils.createNumber(""10"" + Long.MAX_VALUE));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,133,public void testCreateFloat() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,134,"assertEquals(""createFloat(String) failed"", new Float(""1234.5""), NumberUtils.createFloat(""1234.5""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,137,public void testCreateDouble() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,138,"assertEquals(""createDouble(String) failed"", new Double(""1234.5""), NumberUtils.createDouble(""1234.5""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,141,public void testCreateInteger() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,142,"assertEquals(""createInteger(String) failed"", new Integer(""12345""), NumberUtils.createInteger(""12345""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,145,public void testCreateLong() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,146,"assertEquals(""createInteger(String) failed"", new Long(""12345""), NumberUtils.createLong(""12345""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,149,public void testCreateBigInteger() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,150,"assertEquals(""createBigInteger(String) failed"", new BigInteger(""12345""), NumberUtils.createBigInteger(""12345""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,153,public void testCreateBigDecimal() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,154,"assertEquals(""createBigDecimal(String) failed"", new BigDecimal(""1234.5""), NumberUtils.createBigDecimal(""1234.5""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,157,public void testMinimum() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,158,"assertEquals(""minimum(int,int,int) 1 failed"", 12345, NumberUtils.minimum(12345, 12345 + 1, 12345 + 2));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,159,"assertEquals(""minimum(int,int,int) 2 failed"", 12345, NumberUtils.minimum(12345 + 1, 12345, 12345 + 2));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,160,"assertEquals(""minimum(int,int,int) 3 failed"", 12345, NumberUtils.minimum(12345 + 1, 12345 + 2, 12345));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,161,"assertEquals(""minimum(int,int,int) 4 failed"", 12345, NumberUtils.minimum(12345 + 1, 12345, 12345));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,162,"assertEquals(""minimum(int,int,int) 5 failed"", 12345, NumberUtils.minimum(12345, 12345, 12345));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,166,public void testMaximum() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,167,"assertEquals(""maximum(int,int,int) 1 failed"", 12345, NumberUtils.maximum(12345, 12345 - 1, 12345 - 2));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,168,"assertEquals(""maximum(int,int,int) 2 failed"", 12345, NumberUtils.maximum(12345 - 1, 12345, 12345 - 2));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,169,"assertEquals(""maximum(int,int,int) 3 failed"", 12345, NumberUtils.maximum(12345 - 1, 12345 - 2, 12345));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,170,"assertEquals(""maximum(int,int,int) 4 failed"", 12345, NumberUtils.maximum(12345 - 1, 12345, 12345));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,171,"assertEquals(""maximum(int,int,int) 5 failed"", 12345, NumberUtils.maximum(12345, 12345, 12345));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,175,public void testIsDigits() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,176,"assertEquals(""isDigits(null) failed"", false, NumberUtils.isDigits(null));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,177,"assertEquals(""isDigits('') failed"", false, NumberUtils.isDigits(""""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,178,"assertEquals(""isDigits(String) failed"", true, NumberUtils.isDigits(""12345""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,179,"assertEquals(""isDigits(String) neg 1 failed"", false, NumberUtils.isDigits(""1234.5""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,180,"assertEquals(""isDigits(String) neg 3 failed"", false, NumberUtils.isDigits(""1ab""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,181,"assertEquals(""isDigits(String) neg 4 failed"", false, NumberUtils.isDigits(""abc""));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,185,* Tests isNumber(String) and tests that createNumber(String) returns
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,186,* a valid number iff isNumber(String) returns false.
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,188,public void testIsNumber() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,189,"String val = ""12345"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,190,"assertTrue(""isNumber(String) 1 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,191,"assertTrue(""isNumber(String)/createNumber(String) 1 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,192,"val = ""1234.5"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,193,"assertTrue(""isNumber(String) 2 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,194,"assertTrue(""isNumber(String)/createNumber(String) 2 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,195,"val = "".12345"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,196,"assertTrue(""isNumber(String) 3 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,197,"assertTrue(""isNumber(String)/createNumber(String) 3 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,198,"val = ""1234E5"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,199,"assertTrue(""isNumber(String) 4 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,200,"assertTrue(""isNumber(String)/createNumber(String) 4 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,201,"val = ""1234E+5"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,202,"assertTrue(""isNumber(String) 5 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,203,"assertTrue(""isNumber(String)/createNumber(String) 5 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,204,"val = ""1234E-5"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,205,"assertTrue(""isNumber(String) 6 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,206,"assertTrue(""isNumber(String)/createNumber(String) 6 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,207,"val = ""123.4E5"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,208,"assertTrue(""isNumber(String) 7 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,209,"assertTrue(""isNumber(String)/createNumber(String) 7 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,210,"val = ""-1234"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,211,"assertTrue(""isNumber(String) 8 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,212,"assertTrue(""isNumber(String)/createNumber(String) 8 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,213,"val = ""-1234.5"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,214,"assertTrue(""isNumber(String) 9 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,215,"assertTrue(""isNumber(String)/createNumber(String) 9 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,216,"val = ""-.12345"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,217,"assertTrue(""isNumber(String) 10 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,218,"assertTrue(""isNumber(String)/createNumber(String) 10 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,219,"val = ""-1234E5"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,220,"assertTrue(""isNumber(String) 11 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,221,"assertTrue(""isNumber(String)/createNumber(String) 11 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,222,"val = ""0"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,223,"assertTrue(""isNumber(String) 12 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,224,"assertTrue(""isNumber(String)/createNumber(String) 12 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,225,"val = ""-0"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,226,"assertTrue(""isNumber(String) 13 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,227,"assertTrue(""isNumber(String)/createNumber(String) 13 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,228,"val = ""01234"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,229,"assertTrue(""isNumber(String) 14 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,230,"assertTrue(""isNumber(String)/createNumber(String) 14 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,231,"val = ""-01234"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,232,"assertTrue(""isNumber(String) 15 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,233,"assertTrue(""isNumber(String)/createNumber(String) 15 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,234,"val = ""0xABC123"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,235,"assertTrue(""isNumber(String) 16 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,236,"assertTrue(""isNumber(String)/createNumber(String) 16 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,237,"val = ""0x0"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,238,"assertTrue(""isNumber(String) 17 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,239,"assertTrue(""isNumber(String)/createNumber(String) 17 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,240,"val = ""123.4E21D"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,241,"assertTrue(""isNumber(String) 19 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,242,"assertTrue(""isNumber(String)/createNumber(String) 19 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,243,"val = ""-221.23F"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,244,"assertTrue(""isNumber(String) 20 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,245,"assertTrue(""isNumber(String)/createNumber(String) 20 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,246,"val = ""22338L"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,247,"assertTrue(""isNumber(String) 21 failed"", NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,248,"assertTrue(""isNumber(String)/createNumber(String) 21 failed"", checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,249,val = null;
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,250,"assertTrue(""isNumber(String) 1 Neg failed"", !NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,251,"assertTrue(""isNumber(String)/createNumber(String) 1 Neg failed"", !checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,252,"val = """";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,253,"assertTrue(""isNumber(String) 2 Neg failed"", !NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,254,"assertTrue(""isNumber(String)/createNumber(String) 2 Neg failed"", !checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,255,"val = ""--2.3"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,256,"assertTrue(""isNumber(String) 3 Neg failed"", !NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,257,"assertTrue(""isNumber(String)/createNumber(String) 3 Neg failed"", !checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,258,"val = "".12.3"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,259,"assertTrue(""isNumber(String) 4 Neg failed"", !NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,260,"assertTrue(""isNumber(String)/createNumber(String) 4 Neg failed"", !checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,261,"val = ""-123E"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,262,"assertTrue(""isNumber(String) 5 Neg failed"", !NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,263,"assertTrue(""isNumber(String)/createNumber(String) 5 Neg failed"", !checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,264,"val = ""-123E+-212"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,265,"assertTrue(""isNumber(String) 6 Neg failed"", !NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,266,"assertTrue(""isNumber(String)/createNumber(String) 6 Neg failed"", !checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,267,"val = ""-123E2.12"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,268,"assertTrue(""isNumber(String) 7 Neg failed"", !NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,269,"assertTrue(""isNumber(String)/createNumber(String) 7 Neg failed"", !checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,270,"val = ""0xGF"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,271,"assertTrue(""isNumber(String) 8 Neg failed"", !NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,272,"assertTrue(""isNumber(String)/createNumber(String) 8 Neg failed"", !checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,273,"val = ""0xFAE-1"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,274,"assertTrue(""isNumber(String) 9 Neg failed"", !NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,275,"assertTrue(""isNumber(String)/createNumber(String) 9 Neg failed"", !checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,276,"val = ""."";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,277,"assertTrue(""isNumber(String) 10 Neg failed"", !NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,278,"assertTrue(""isNumber(String)/createNumber(String) 10 Neg failed"", !checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,279,"val = ""-0ABC123"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,280,"assertTrue(""isNumber(String) 11 Neg failed"", !NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,281,"assertTrue(""isNumber(String)/createNumber(String) 11 Neg failed"", !checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,282,"val = ""123.4E-D"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,283,"assertTrue(""isNumber(String) 12 Neg failed"", !NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,284,"assertTrue(""isNumber(String)/createNumber(String) 12 Neg failed"", !checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,285,"val = ""123.4ED"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,286,"assertTrue(""isNumber(String) 13 Neg failed"", !NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,287,"assertTrue(""isNumber(String)/createNumber(String) 13 Neg failed"", !checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,288,"val = ""1234E5l"";"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,289,"assertTrue(""isNumber(String) 14 Neg failed"", !NumberUtils.isNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,290,"assertTrue(""isNumber(String)/createNumber(String) 14 Neg failed"", !checkCreateNumber(val));"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,294,private boolean checkCreateNumber(String val) {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,295,try {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,296,Object obj = NumberUtils.createNumber(val);
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,297,if(obj == null) {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,298,return false;
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,300,return true;
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,301,} catch (NumberFormatException e) {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,302,return false;
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,303,} catch (NullPointerException e) {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,304,return false;
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,1,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,7,* reserved.
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,11,* are met:
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,19,*    distribution.
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,35,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,57,import junit.framework.Test;
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,58,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,59,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,60,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,62,* Unit tests {@link org.apache.commons.lang.ObjectUtils}.
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,64,"* @author <a href=""mailto:jmcnally@collab.net"">John McNally</a>"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,65,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,66,"* @author <a href=""mailto:ridesmet@users.sourceforge.net"">Ringo De Smet</a>"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,67,"* @version $Id: ObjectUtilsTest.java,v 1.1 2002/07/19 03:35:55 bayard Exp $"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,69,public class ObjectUtilsTest extends TestCase
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,71,"private static final String FOO = ""foo"";"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,72,"private static final String BAR = ""bar"";"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,74,public ObjectUtilsTest(String name)
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,76,super(name);
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,79,public static void main(String[] args)
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,81,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,84,public static Test suite()
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,86,TestSuite suite = new TestSuite(ObjectUtilsTest.class);
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,87,"suite.setName(""ObjectUtils Tests"");"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,88,return suite;
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,91,protected void setUp() throws Exception
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,93,super.setUp();
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,96,protected void tearDown() throws Exception
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,98,super.tearDown();
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,103,public void testIsNull()
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,105,Object o = FOO;
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,106,Object dflt = BAR;
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,107,"assertSame(""dflt was not returned when o was null"", dflt,"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,108,"ObjectUtils.defaultIfNull(null, dflt));"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,109,"assertSame(""dflt was returned when o was not null"", o,"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,110,"ObjectUtils.defaultIfNull(o, dflt));"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,113,public void testEquals()
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,115,"assertTrue(""ObjectUtils.equals(null, null) returned false"","
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,116,"ObjectUtils.equals(null, null));"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,117,"assertTrue(""ObjectUtils.equals(\""foo\"", null) returned true"","
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,118,"!ObjectUtils.equals(FOO, null));"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,119,"assertTrue(""ObjectUtils.equals(null, \""bar\"") returned true"","
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,120,"!ObjectUtils.equals(null, BAR));"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,121,"assertTrue(""ObjectUtils.equals(\""foo\"", \""bar\"") returned true"","
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,122,"!ObjectUtils.equals(FOO, BAR));"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,123,"assertTrue(""ObjectUtils.equals(\""foo\"", \""foo\"") returned false"","
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,124,"ObjectUtils.equals(FOO, FOO));"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,1,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,7,* reserved.
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,11,* are met:
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,19,*    distribution.
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,21,"* 3. The end-user documentation included with the redistribution,"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,22,"*    if any, must include the following acknowledgment:"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,25,"*    Alternately, this acknowledgment may appear in the software itself,"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,26,*    if and wherever such third-party acknowledgments normally appear.
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,28,"* 4. The names ""Apache"" and ""Apache Software Foundation"" and"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,29,"*    ""Commons"" must not be used to endorse or promote products"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,30,*    derived from this software without prior written permission. For
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,31,"*    written permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,33,"* 5. Products derived from this software may not be called ""Apache"","
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,34,"*    nor may ""Apache"" appear in their name, without"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,35,*    prior written permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,57,import junit.framework.*;
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,58,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,60,* Unit tests {@link org.apache.commons.lang.RandomStringUtils}.
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,62,"* @author <a href=""mailto:steven@caswell.name"">Steven Caswell</a>"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,63,"* @author <a href=""mailto:ridesmet@users.sourceforge.net"">Ringo De Smet</a>"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,64,"* @version $Id: RandomStringUtilsTest.java,v 1.1 2002/07/19 03:35:55 bayard Exp $"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,66,public class RandomStringUtilsTest extends junit.framework.TestCase {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,68,* Construct a new instance of RandomStringUtilsTest with the specified name
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,70,public RandomStringUtilsTest(String name) {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,71,super(name);
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,74,public static Test suite() {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,75,TestSuite suite = new TestSuite(RandomStringUtilsTest.class);
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,76,"suite.setName(""RandomStringUtils Tests"");"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,77,return suite;
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,81,* Set up instance variables required by this test case.
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,83,public void setUp() {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,87,* Tear down instance variables required by this test case.
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,89,public void tearDown() {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,93,* Test the implementation
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,95,public void testRandomStringUtils() {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,96,String r1 = RandomStringUtils.random(50);
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,97,"assertEquals(""random(5) length"", 50, r1.length());"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,98,String r2 = RandomStringUtils.random(50);
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,99,"assertEquals(""random(5) length"", 50, r2.length());"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,100,"assertTrue(""!r1.equals(r2)"", !r1.equals(r2));"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,102,r1 = RandomStringUtils.randomAscii(50);
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,103,"assertEquals(""randomAscii(10) length"", 50, r1.length());"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,104,for(int i = 0; i < r1.length(); i++) {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,105,"assertTrue(""char between 32 and 127"", (int) r1.charAt(i) >= 32 && (int) r1.charAt(i) <= 127);"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,107,r2 = RandomStringUtils.randomAscii(50);
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,108,"assertTrue(""!r1.equals(r2)"", !r1.equals(r2));"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,110,r1 = RandomStringUtils.randomAlphabetic(50);
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,111,"assertEquals(""randomAlphabetic(50)"", 50, r1.length());"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,112,for(int i = 0; i < r1.length(); i++) {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,113,"assertEquals(""r1 contains alphabetic"", true, Character.isLetter(r1.charAt(i)) && !Character.isDigit(r1.charAt(i)));"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,115,r2 = RandomStringUtils.randomAlphabetic(50);
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,116,"assertTrue(""!r1.equals(r2)"", !r1.equals(r2));"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,118,r1 = RandomStringUtils.randomAlphanumeric(50);
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,119,"assertEquals(""randomAlphanumeric(50)"", 50, r1.length());"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,120,for(int i = 0; i < r1.length(); i++) {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,121,"assertEquals(""r1 contains alphanumeric"", true, Character.isLetterOrDigit(r1.charAt(i)));"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,123,r2 = RandomStringUtils.randomAlphabetic(50);
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,124,"assertTrue(""!r1.equals(r2)"", !r1.equals(r2));"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,126,r1 = RandomStringUtils.randomNumeric(50);
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,127,"assertEquals(""randomNumeric(50)"", 50, r1.length());"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,128,for(int i = 0; i < r1.length(); i++) {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,129,"assertEquals(""r1 contains numeric"", true, Character.isDigit(r1.charAt(i)) && !Character.isLetter(r1.charAt(i)));"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,131,r2 = RandomStringUtils.randomNumeric(50);
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,132,"assertTrue(""!r1.equals(r2)"", !r1.equals(r2));"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,134,"String set = ""abcdefg"";"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,135,"r1 = RandomStringUtils.random(50, set);"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,136,"assertEquals(""random(50, \""abcdefg\"")"", 50, r1.length());"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,137,for(int i = 0; i < r1.length(); i++) {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,138,"assertTrue(""random char in set"", set.indexOf(r1.charAt(i)) > -1);"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,140,"r2 = RandomStringUtils.random(50, set);"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,141,"assertTrue(""!r1.equals(r2)"", !r1.equals(r2));"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,143,"set = ""stuvwxyz"";"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,144,"r1 = RandomStringUtils.random(50, set.toCharArray());"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,145,"assertEquals(""random(50, \""stuvwxyz\"")"", 50, r1.length());"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,146,for(int i = 0; i < r1.length(); i++) {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,147,"assertTrue(""random char in set"", set.indexOf(r1.charAt(i)) > -1);"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,149,"r2 = RandomStringUtils.random(50, set);"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,150,"assertTrue(""!r1.equals(r2)"", !r1.equals(r2));"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,153,public static void main(String args[]) {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,154,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,1,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,7,* reserved.
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,11,* are met:
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,19,*    distribution.
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,35,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,57,import java.io.ByteArrayInputStream;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,58,import java.io.ByteArrayOutputStream;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,59,import java.io.InputStream;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,60,import java.io.ObjectOutputStream;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,61,import java.util.HashMap;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,63,import junit.framework.Test;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,64,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,65,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,66,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,69,* Unit tests {@link org.apache.commons.lang.SerializationUtils}.
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,71,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,72,"* @author <a href=""mailto:ridesmet@users.sourceforge.net"">Ringo De Smet</a>"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,73,"* @version $Id: SerializationUtilsTest.java,v 1.1 2002/07/19 03:35:55 bayard Exp $"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,75,public class SerializationUtilsTest extends TestCase {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,76,private String iString;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,77,private Integer iInteger;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,78,private HashMap iMap;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,80,public SerializationUtilsTest(String name) {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,81,super(name);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,84,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,85,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,88,public static Test suite() {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,89,TestSuite suite = new TestSuite(SerializationUtilsTest.class);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,90,"suite.setName(""SerializationUtils Tests"");"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,91,return suite;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,94,protected void setUp() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,95,super.setUp();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,97,"iString = ""foo"";"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,98,iInteger = new Integer(7);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,99,iMap = new HashMap();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,100,"iMap.put(""FOO"", iString);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,101,"iMap.put(""BAR"", iInteger);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,104,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,105,super.tearDown();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,110,public void testSerializeStream() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,111,ByteArrayOutputStream streamTest = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,112,"SerializationUtils.serialize(iMap, streamTest);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,114,ByteArrayOutputStream streamReal = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,115,ObjectOutputStream oos = new ObjectOutputStream(streamReal);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,116,oos.writeObject(iMap);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,117,oos.flush();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,118,oos.close();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,120,byte[] testBytes = streamTest.toByteArray();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,121,byte[] realBytes = streamReal.toByteArray();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,122,"assertEquals(testBytes.length, realBytes.length);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,123,for (int i = 0; i < realBytes.length; i++) {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,124,"assertEquals(realBytes[i], testBytes[i]);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,128,public void testSerializeStreamUnserializable() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,129,ByteArrayOutputStream streamTest = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,130,try {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,131,"iMap.put(new Object(), new Object());"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,132,"SerializationUtils.serialize(iMap, streamTest);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,133,} catch (SerializationException ex) {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,134,return;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,136,fail();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,139,public void testSerializeStreamNullObj() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,140,ByteArrayOutputStream streamTest = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,141,"SerializationUtils.serialize(null, streamTest);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,143,ByteArrayOutputStream streamReal = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,144,ObjectOutputStream oos = new ObjectOutputStream(streamReal);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,145,oos.writeObject(null);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,146,oos.flush();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,147,oos.close();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,149,byte[] testBytes = streamTest.toByteArray();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,150,byte[] realBytes = streamReal.toByteArray();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,151,"assertEquals(testBytes.length, realBytes.length);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,152,for (int i = 0; i < realBytes.length; i++) {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,153,"assertEquals(realBytes[i], testBytes[i]);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,157,public void testSerializeStreamObjNull() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,158,ByteArrayOutputStream streamTest = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,159,try {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,160,"SerializationUtils.serialize(iMap, null);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,161,} catch (NullPointerException ex) {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,162,return;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,164,fail();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,167,public void testSerializeStreamNullNull() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,168,ByteArrayOutputStream streamTest = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,169,try {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,170,"SerializationUtils.serialize(null, null);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,171,} catch (NullPointerException ex) {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,172,return;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,174,fail();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,179,public void testDeserializeStream() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,180,ByteArrayOutputStream streamReal = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,181,ObjectOutputStream oos = new ObjectOutputStream(streamReal);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,182,oos.writeObject(iMap);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,183,oos.flush();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,184,oos.close();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,186,ByteArrayInputStream inTest = new ByteArrayInputStream(streamReal.toByteArray());
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,187,Object test = SerializationUtils.deserialize(inTest);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,188,assertNotNull(test);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,189,assertTrue(test instanceof HashMap);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,190,assertTrue(test != iMap);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,191,HashMap testMap = (HashMap) test;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,192,"assertEquals(iString, testMap.get(""FOO""));"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,193,"assertTrue(iString != testMap.get(""FOO""));"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,194,"assertEquals(iInteger, testMap.get(""BAR""));"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,195,"assertTrue(iInteger != testMap.get(""BAR""));"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,196,"assertEquals(iMap, testMap);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,199,public void testDeserializeStreamOfNull() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,200,ByteArrayOutputStream streamReal = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,201,ObjectOutputStream oos = new ObjectOutputStream(streamReal);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,202,oos.writeObject(null);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,203,oos.flush();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,204,oos.close();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,206,ByteArrayInputStream inTest = new ByteArrayInputStream(streamReal.toByteArray());
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,207,Object test = SerializationUtils.deserialize(inTest);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,208,assertNull(test);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,211,public void testDeserializeStreamNull() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,212,try {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,213,SerializationUtils.deserialize((InputStream) null);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,214,} catch (NullPointerException ex) {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,215,return;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,217,fail();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,220,public void testDeserializeStreamBadStream() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,221,try {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,222,SerializationUtils.deserialize(new ByteArrayInputStream(new byte[0]));
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,223,} catch (SerializationException ex) {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,224,return;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,226,fail();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,231,public void testSerializeBytes() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,232,byte[] testBytes = SerializationUtils.serialize(iMap);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,234,ByteArrayOutputStream streamReal = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,235,ObjectOutputStream oos = new ObjectOutputStream(streamReal);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,236,oos.writeObject(iMap);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,237,oos.flush();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,238,oos.close();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,240,byte[] realBytes = streamReal.toByteArray();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,241,"assertEquals(testBytes.length, realBytes.length);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,242,for (int i = 0; i < realBytes.length; i++) {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,243,"assertEquals(realBytes[i], testBytes[i]);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,247,public void testSerializeBytesUnserializable() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,248,try {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,249,"iMap.put(new Object(), new Object());"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,250,SerializationUtils.serialize(iMap);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,251,} catch (SerializationException ex) {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,252,return;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,254,fail();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,257,public void testSerializeBytesNull() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,258,byte[] testBytes = SerializationUtils.serialize(null);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,260,ByteArrayOutputStream streamReal = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,261,ObjectOutputStream oos = new ObjectOutputStream(streamReal);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,262,oos.writeObject(null);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,263,oos.flush();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,264,oos.close();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,266,byte[] realBytes = streamReal.toByteArray();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,267,"assertEquals(testBytes.length, realBytes.length);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,268,for (int i = 0; i < realBytes.length; i++) {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,269,"assertEquals(realBytes[i], testBytes[i]);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,275,public void testDeserializeBytes() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,276,ByteArrayOutputStream streamReal = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,277,ObjectOutputStream oos = new ObjectOutputStream(streamReal);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,278,oos.writeObject(iMap);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,279,oos.flush();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,280,oos.close();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,282,Object test = SerializationUtils.deserialize(streamReal.toByteArray());
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,283,assertNotNull(test);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,284,assertTrue(test instanceof HashMap);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,285,assertTrue(test != iMap);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,286,HashMap testMap = (HashMap) test;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,287,"assertEquals(iString, testMap.get(""FOO""));"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,288,"assertTrue(iString != testMap.get(""FOO""));"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,289,"assertEquals(iInteger, testMap.get(""BAR""));"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,290,"assertTrue(iInteger != testMap.get(""BAR""));"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,291,"assertEquals(iMap, testMap);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,294,public void testDeserializeBytesOfNull() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,295,ByteArrayOutputStream streamReal = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,296,ObjectOutputStream oos = new ObjectOutputStream(streamReal);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,297,oos.writeObject(null);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,298,oos.flush();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,299,oos.close();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,301,Object test = SerializationUtils.deserialize(streamReal.toByteArray());
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,302,assertNull(test);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,305,public void testDeserializeBytesNull() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,306,try {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,307,SerializationUtils.deserialize((byte[]) null);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,308,} catch (NullPointerException ex) {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,309,return;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,311,fail();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,314,public void testDeserializeBytesBadStream() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,315,try {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,316,SerializationUtils.deserialize(new byte[0]);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,317,} catch (SerializationException ex) {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,318,return;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,320,fail();
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,325,public void testClone() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,326,Object test = SerializationUtils.clone(iMap);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,327,assertNotNull(test);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,328,assertTrue(test instanceof HashMap);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,329,assertTrue(test != iMap);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,330,HashMap testMap = (HashMap) test;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,331,"assertEquals(iString, testMap.get(""FOO""));"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,332,"assertTrue(iString != testMap.get(""FOO""));"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,333,"assertEquals(iInteger, testMap.get(""BAR""));"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,334,"assertTrue(iInteger != testMap.get(""BAR""));"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,335,"assertEquals(iMap, testMap);"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,338,public void testCloneNull() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,339,Object test = SerializationUtils.clone(null);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,340,assertNull(test);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,343,public void testCloneUnserializable() throws Exception {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,344,try {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,345,"iMap.put(new Object(), new Object());"
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,346,SerializationUtils.clone(iMap);
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,347,} catch (SerializationException ex) {
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,348,return;
True,src/test/org/apache/commons/lang/SerializationUtilsTest.java,src/test/org/apache/commons/lang/SerializationUtilsTest.java,350,fail();
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,5,* reserved.
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,9,* are met:
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,17,*    distribution.
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,54,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,59,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,62,* Unit tests {@link org.apache.commons.lang.StringUtils} - Substring methods
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,64,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,65,"* @author <a href=""mailto:ridesmet@users.sourceforge.net"">Ringo De Smet</a>"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,66,"* @version $Id: StringUtilsEqualsIndexOfTest.java,v 1.1 2002/07/19 03:35:55 bayard Exp $"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,68,public class StringUtilsEqualsIndexOfTest extends TestCase {
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,69,"private static final String FOO = ""foo"";"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,70,"private static final String BAR = ""bar"";"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,71,"private static final String FOOBAR = ""foobar"";"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,72,"private static final String[] FOOBAR_SUB_ARRAY = new String[] {""ob"", ""ba""};"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,74,public StringUtilsEqualsIndexOfTest(String name) {
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,75,super(name);
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,78,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,79,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,82,public static Test suite() {
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,83,TestSuite suite = new TestSuite(StringUtilsEqualsIndexOfTest.class);
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,84,"suite.setName(""StringUtilsEqualsIndexOf Tests"");"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,85,return suite;
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,88,protected void setUp() throws Exception {
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,89,super.setUp();
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,92,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,93,super.tearDown();
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,98,public void testEquals() {
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,99,"assertEquals(true, StringUtils.equals(null, null));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,100,"assertEquals(true, StringUtils.equals(FOO, FOO));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,101,"assertEquals(true, StringUtils.equals(FOO, new String(new char[] { 'f', 'o', 'o' })));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,102,"assertEquals(false, StringUtils.equals(FOO, new String(new char[] { 'f', 'O', 'O' })));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,103,"assertEquals(false, StringUtils.equals(FOO, BAR));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,104,"assertEquals(false, StringUtils.equals(FOO, null));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,105,"assertEquals(false, StringUtils.equals(null, FOO));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,108,public void testEqualsIgnoreCase() {
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,109,"assertEquals(true, StringUtils.equalsIgnoreCase(null, null));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,110,"assertEquals(true, StringUtils.equalsIgnoreCase(FOO, FOO));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,111,"assertEquals(true, StringUtils.equalsIgnoreCase(FOO, new String(new char[] { 'f', 'o', 'o' })));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,112,"assertEquals(true, StringUtils.equalsIgnoreCase(FOO, new String(new char[] { 'f', 'O', 'O' })));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,113,"assertEquals(false, StringUtils.equalsIgnoreCase(FOO, BAR));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,114,"assertEquals(false, StringUtils.equalsIgnoreCase(FOO, null));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,115,"assertEquals(false, StringUtils.equalsIgnoreCase(null, FOO));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,118,public void testIndexOfAny() {
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,119,"assertEquals(-1, StringUtils.indexOfAny(null, null));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,120,"assertEquals(-1, StringUtils.indexOfAny(null, FOOBAR_SUB_ARRAY));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,121,"assertEquals(-1, StringUtils.indexOfAny(FOOBAR, null));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,122,"assertEquals(2, StringUtils.indexOfAny(FOOBAR, FOOBAR_SUB_ARRAY));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,123,"assertEquals(-1, StringUtils.indexOfAny(FOOBAR, new String[0]));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,124,"assertEquals(-1, StringUtils.indexOfAny(FOOBAR, new String[] {""llll""}));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,127,public void testLastIndexOfAny() {
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,128,"assertEquals(-1, StringUtils.lastIndexOfAny(null, null));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,129,"assertEquals(-1, StringUtils.lastIndexOfAny(null, FOOBAR_SUB_ARRAY));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,130,"assertEquals(-1, StringUtils.lastIndexOfAny(FOOBAR, null));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,131,"assertEquals(3, StringUtils.lastIndexOfAny(FOOBAR, FOOBAR_SUB_ARRAY));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,132,"assertEquals(-1, StringUtils.lastIndexOfAny(FOOBAR, new String[0]));"
True,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java,133,"assertEquals(-1, StringUtils.lastIndexOfAny(FOOBAR, new String[] {""llll""}));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,5,* reserved.
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,9,* are met:
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,17,*    distribution.
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,54,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,59,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,62,* Unit tests {@link org.apache.commons.lang.StringUtils} - Substring methods
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,64,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,65,"* @version $Id: StringUtilsIsTest.java,v 1.1 2002/07/19 03:35:55 bayard Exp $"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,67,public class StringUtilsIsTest extends TestCase {
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,69,public StringUtilsIsTest(String name) {
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,70,super(name);
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,73,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,74,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,77,public static Test suite() {
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,78,TestSuite suite = new TestSuite(StringUtilsIsTest.class);
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,79,"suite.setName(""StringUtilsIsXxx Tests"");"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,80,return suite;
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,83,protected void setUp() throws Exception {
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,84,super.setUp();
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,87,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,88,super.tearDown();
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,93,public void testIsAlpha() {
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,94,"assertEquals(false, StringUtils.isAlpha(null));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,95,"assertEquals(true, StringUtils.isAlpha(""""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,96,"assertEquals(false, StringUtils.isAlpha("" ""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,97,"assertEquals(true, StringUtils.isAlpha(""a""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,98,"assertEquals(true, StringUtils.isAlpha(""A""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,99,"assertEquals(true, StringUtils.isAlpha(""kgKgKgKgkgkGkjkjlJlOKLgHdGdHgl""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,100,"assertEquals(false, StringUtils.isAlpha(""ham kso""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,101,"assertEquals(false, StringUtils.isAlpha(""1""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,102,"assertEquals(false, StringUtils.isAlpha(""hkHKHik6iUGHKJgU7tUJgKJGI87GIkug""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,103,"assertEquals(false, StringUtils.isAlpha(""_""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,104,"assertEquals(false, StringUtils.isAlpha(""hkHKHik*khbkuh""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,107,public void testIsAlphanumeric() {
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,108,"assertEquals(false, StringUtils.isAlphanumeric(null));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,109,"assertEquals(true, StringUtils.isAlphanumeric(""""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,110,"assertEquals(false, StringUtils.isAlphanumeric("" ""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,111,"assertEquals(true, StringUtils.isAlphanumeric(""a""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,112,"assertEquals(true, StringUtils.isAlphanumeric(""A""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,113,"assertEquals(true, StringUtils.isAlphanumeric(""kgKgKgKgkgkGkjkjlJlOKLgHdGdHgl""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,114,"assertEquals(false, StringUtils.isAlphanumeric(""ham kso""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,115,"assertEquals(true, StringUtils.isAlphanumeric(""1""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,116,"assertEquals(true, StringUtils.isAlphanumeric(""hkHKHik6iUGHKJgU7tUJgKJGI87GIkug""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,117,"assertEquals(false, StringUtils.isAlphanumeric(""_""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,118,"assertEquals(false, StringUtils.isAlphanumeric(""hkHKHik*khbkuh""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,121,public void testIsAlphaspace() {
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,122,"assertEquals(false, StringUtils.isAlphaSpace(null));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,123,"assertEquals(true, StringUtils.isAlphaSpace(""""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,124,"assertEquals(true, StringUtils.isAlphaSpace("" ""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,125,"assertEquals(true, StringUtils.isAlphaSpace(""a""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,126,"assertEquals(true, StringUtils.isAlphaSpace(""A""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,127,"assertEquals(true, StringUtils.isAlphaSpace(""kgKgKgKgkgkGkjkjlJlOKLgHdGdHgl""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,128,"assertEquals(true, StringUtils.isAlphaSpace(""ham kso""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,129,"assertEquals(false, StringUtils.isAlphaSpace(""1""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,130,"assertEquals(false, StringUtils.isAlphaSpace(""hkHKHik6iUGHKJgU7tUJgKJGI87GIkug""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,131,"assertEquals(false, StringUtils.isAlphaSpace(""_""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,132,"assertEquals(false, StringUtils.isAlphaSpace(""hkHKHik*khbkuh""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,135,public void testIsAlphanumericSpace() {
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,136,"assertEquals(false, StringUtils.isAlphanumericSpace(null));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,137,"assertEquals(true, StringUtils.isAlphanumericSpace(""""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,138,"assertEquals(true, StringUtils.isAlphanumericSpace("" ""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,139,"assertEquals(true, StringUtils.isAlphanumericSpace(""a""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,140,"assertEquals(true, StringUtils.isAlphanumericSpace(""A""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,141,"assertEquals(true, StringUtils.isAlphanumericSpace(""kgKgKgKgkgkGkjkjlJlOKLgHdGdHgl""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,142,"assertEquals(true, StringUtils.isAlphanumericSpace(""ham kso""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,143,"assertEquals(true, StringUtils.isAlphanumericSpace(""1""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,144,"assertEquals(true, StringUtils.isAlphanumericSpace(""hkHKHik6iUGHKJgU7tUJgKJGI87GIkug""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,145,"assertEquals(false, StringUtils.isAlphanumericSpace(""_""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,146,"assertEquals(false, StringUtils.isAlphanumericSpace(""hkHKHik*khbkuh""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,149,public void testIsNumeric() {
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,150,"assertEquals(false, StringUtils.isNumeric(null));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,151,"assertEquals(true, StringUtils.isNumeric(""""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,152,"assertEquals(false, StringUtils.isNumeric("" ""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,153,"assertEquals(false, StringUtils.isNumeric(""a""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,154,"assertEquals(false, StringUtils.isNumeric(""A""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,155,"assertEquals(false, StringUtils.isNumeric(""kgKgKgKgkgkGkjkjlJlOKLgHdGdHgl""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,156,"assertEquals(false, StringUtils.isNumeric(""ham kso""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,157,"assertEquals(true, StringUtils.isNumeric(""1""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,158,"assertEquals(true, StringUtils.isNumeric(""1000""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,159,"assertEquals(false, StringUtils.isNumeric(""2.3""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,160,"assertEquals(false, StringUtils.isNumeric(""10 00""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,161,"assertEquals(false, StringUtils.isNumeric(""hkHKHik6iUGHKJgU7tUJgKJGI87GIkug""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,162,"assertEquals(false, StringUtils.isNumeric(""_""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,163,"assertEquals(false, StringUtils.isNumeric(""hkHKHik*khbkuh""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,166,public void testIsNumericSpace() {
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,167,"assertEquals(false, StringUtils.isNumericSpace(null));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,168,"assertEquals(true, StringUtils.isNumericSpace(""""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,169,"assertEquals(true, StringUtils.isNumericSpace("" ""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,170,"assertEquals(false, StringUtils.isNumericSpace(""a""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,171,"assertEquals(false, StringUtils.isNumericSpace(""A""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,172,"assertEquals(false, StringUtils.isNumericSpace(""kgKgKgKgkgkGkjkjlJlOKLgHdGdHgl""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,173,"assertEquals(false, StringUtils.isNumericSpace(""ham kso""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,174,"assertEquals(true, StringUtils.isNumericSpace(""1""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,175,"assertEquals(true, StringUtils.isNumericSpace(""1000""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,176,"assertEquals(false, StringUtils.isNumericSpace(""2.3""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,177,"assertEquals(true, StringUtils.isNumericSpace(""10 00""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,178,"assertEquals(false, StringUtils.isNumericSpace(""hkHKHik6iUGHKJgU7tUJgKJGI87GIkug""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,179,"assertEquals(false, StringUtils.isNumericSpace(""_""));"
True,src/test/org/apache/commons/lang/StringUtilsIsTest.java,src/test/org/apache/commons/lang/StringUtilsIsTest.java,180,"assertEquals(false, StringUtils.isNumericSpace(""hkHKHik*khbkuh""));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,5,* reserved.
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,9,* are met:
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,17,*    distribution.
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,54,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,59,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,62,* Unit tests {@link org.apache.commons.lang.StringUtils} - Substring methods
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,64,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,65,"* @author <a href=""mailto:ridesmet@users.sourceforge.net"">Ringo De Smet</a>"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,66,"* @version $Id: StringUtilsSubstringTest.java,v 1.1 2002/07/19 03:35:55 bayard Exp $"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,68,public class StringUtilsSubstringTest extends TestCase {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,69,"private static final String FOO = ""foo"";"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,70,"private static final String BAR = ""bar"";"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,71,"private static final String BAZ = ""baz"";"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,72,"private static final String FOOBAR = ""foobar"";"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,73,"private static final String SENTENCE = ""foo bar baz"";"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,75,public StringUtilsSubstringTest(String name) {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,76,super(name);
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,79,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,80,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,83,public static Test suite() {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,84,TestSuite suite = new TestSuite(StringUtilsSubstringTest.class);
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,85,"suite.setName(""StringUtilsSubstring Tests"");"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,86,return suite;
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,89,protected void setUp() throws Exception {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,90,super.setUp();
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,93,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,94,super.tearDown();
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,100,public void testSubstring2() {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,101,"assertEquals("""", StringUtils.substring(SENTENCE, 80));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,102,"assertEquals(BAZ, StringUtils.substring(SENTENCE, 8));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,103,"assertEquals(BAZ, StringUtils.substring(SENTENCE, -3));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,104,"assertEquals(SENTENCE, StringUtils.substring(SENTENCE, 0));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,107,public void testSubstring3() {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,108,"assertEquals("""", StringUtils.substring(SENTENCE, 8, 6));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,109,"assertEquals(FOO, StringUtils.substring(SENTENCE, 0, 3));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,110,"assertEquals(""o"", StringUtils.substring(SENTENCE, -9, 3));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,111,"assertEquals(FOO, StringUtils.substring(SENTENCE, 0, -8));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,112,"assertEquals(""o"", StringUtils.substring(SENTENCE, -9, -8));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,113,"assertEquals(SENTENCE, StringUtils.substring(SENTENCE, 0, 80));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,116,public void testLeft() {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,117,"assertSame(null, StringUtils.left(null, 0));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,118,"assertSame(null, StringUtils.left(null, 2));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,119,"assertSame("""", StringUtils.left("""", 0));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,120,"assertSame("""", StringUtils.left("""", 2));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,121,"assertEquals("""", StringUtils.left(FOOBAR, 0));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,122,"assertEquals(FOO, StringUtils.left(FOOBAR, 3));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,123,"assertSame(FOOBAR, StringUtils.left(FOOBAR, 80));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,126,public void testLeftEx() {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,127,try {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,128,"StringUtils.left(FOOBAR, -1);"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,129,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,130,return;
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,132,fail();
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,135,public void testRight() {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,136,"assertSame(null, StringUtils.right(null, 0));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,137,"assertSame(null, StringUtils.right(null, 2));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,138,"assertSame("""", StringUtils.right("""", 0));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,139,"assertSame("""", StringUtils.right("""", 2));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,140,"assertEquals("""", StringUtils.right(FOOBAR, 0));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,141,"assertEquals(BAR, StringUtils.right(FOOBAR, 3));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,142,"assertSame(FOOBAR, StringUtils.right(FOOBAR, 80));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,145,public void testRightEx() {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,146,try {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,147,"StringUtils.right(FOOBAR, -1);"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,148,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,149,return;
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,151,fail();
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,154,public void testMid() {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,155,"assertSame(null, StringUtils.mid(null, 3, 0));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,156,"assertSame(null, StringUtils.mid(null, 3, 2));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,157,"assertSame("""", StringUtils.mid("""", 0, 0));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,158,"assertSame("""", StringUtils.mid("""", 0, 2));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,159,"assertEquals("""", StringUtils.mid(FOOBAR, 3, 0));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,160,"assertEquals(""b"", StringUtils.mid(FOOBAR, 3, 1));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,161,"assertEquals(FOO, StringUtils.mid(FOOBAR, 0, 3));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,162,"assertEquals(BAR, StringUtils.mid(FOOBAR, 3, 3));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,163,"assertEquals(FOOBAR, StringUtils.mid(FOOBAR, 0, 80));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,164,"assertEquals(BAR, StringUtils.mid(FOOBAR, 3, 80));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,167,public void testMidEx1() {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,168,try {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,169,"StringUtils.mid(FOOBAR, 0, -1);"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,170,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,171,return;
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,173,fail();
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,176,public void testMidEx2() {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,177,try {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,178,"StringUtils.mid(FOOBAR, -1, 3);"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,179,} catch (IndexOutOfBoundsException ex) {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,180,return;
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,182,fail();
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,185,public void testMidEx3() {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,186,try {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,187,"StringUtils.mid(FOOBAR, 7, 3);"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,188,} catch (IndexOutOfBoundsException ex) {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,189,return;
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,191,fail();
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,194,public void testCountMatches() {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,195,"assertEquals(3,"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,196,"StringUtils.countMatches(""one long someone sentence of one"", ""one""));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,197,"assertEquals(0,"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,198,"StringUtils.countMatches(""one long someone sentence of one"", ""two""));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,199,"assertEquals(4,"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,200,"StringUtils.countMatches(""oooooooooooo"", ""ooo""));"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,203,public void testGetNestedString() {
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,204,"assertEquals( """", StringUtils.getNestedString("""", """") );"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,205,"assertEquals( """", StringUtils.getNestedString(""    "", "" "") );"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,206,"assertEquals( ""bar"", StringUtils.getNestedString(""\nbar\n"", ""\n"") );"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,207,"assertEquals( """", StringUtils.getNestedString("""", """", """") );"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,208,"assertEquals( """", StringUtils.getNestedString(""    "", "" "", ""  "") );"
True,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,src/test/org/apache/commons/lang/StringUtilsSubstringTest.java,209,"assertEquals( ""bar"", StringUtils.getNestedString(""<foo>bar</foo>"", ""<foo>"", ""</foo>"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,7,* reserved.
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,11,* are met:
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,19,*    distribution.
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,35,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,57,import java.util.Arrays;
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,59,import junit.framework.Test;
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,60,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,61,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,62,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,64,* Unit tests {@link org.apache.commons.lang.StringUtils}.
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,66,"* @author <a href=""mailto:dlr@collab.net"">Daniel Rall</a>"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,67,"* @author <a href=""mailto:bayard@generationjava.com"">Henri Yandell</a>"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,68,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,69,"* @author <a href=""mailto:ridesmet@users.sourceforge.net"">Ringo De Smet</a>"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,70,"* @version $Id: StringUtilsTest.java,v 1.1 2002/07/19 03:35:55 bayard Exp $"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,72,public class StringUtilsTest extends TestCase
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,74,"private static final String[] ARRAY_LIST = { ""foo"", ""bar"", ""baz"" };"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,76,"private static final String SEPARATOR = "","";"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,78,"private static final String TEXT_LIST = ""foo,bar,baz"";"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,80,"private static final String FOO = ""foo"";"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,81,"private static final String BAR = ""bar"";"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,82,"private static final String CAP_FOO = ""Foo"";"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,83,"private static final String UPPER_FOO = ""FOO"";"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,85,"private static final String SENTENCE = ""foo bar baz"";"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,87,public StringUtilsTest(String name) {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,88,super(name);
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,91,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,92,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,95,public static Test suite() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,96,TestSuite suite = new TestSuite(StringUtilsTest.class);
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,97,"suite.setName(""StringUtilsTest Tests"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,98,return suite;
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,101,protected void setUp() throws Exception {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,102,super.setUp();
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,105,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,106,super.tearDown();
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,111,public void testCaseFunctions()
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,113,"assertEquals(""capitalise(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,114,"CAP_FOO, StringUtils.capitalise(FOO) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,115,"assertEquals(""capitalise(empty-string) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,116,""""", StringUtils.capitalise("""") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,117,"assertEquals(""capitaliseAllWords(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,118,"""Foo Bar Baz"", StringUtils.capitaliseAllWords(SENTENCE) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,119,"assertEquals(""capitaliseAllWords(empty-string) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,120,""""", StringUtils.capitaliseAllWords("""") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,121,"assertEquals(""uncapitalise(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,122,"FOO, StringUtils.uncapitalise(CAP_FOO) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,123,"assertEquals(""uncapitalise(empty-string) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,124,""""", StringUtils.uncapitalise("""") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,126,"assertEquals(""upperCase(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,127,"""FOO TEST THING"", StringUtils.upperCase(""fOo test THING"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,128,"assertEquals(""upperCase(empty-string) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,129,""""", StringUtils.upperCase("""") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,130,"assertEquals(""lowerCase(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,131,"""foo test thing"", StringUtils.lowerCase(""fOo test THING"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,132,"assertEquals(""lowerCase(empty-string) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,133,""""", StringUtils.lowerCase("""") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,135,"assertEquals(""swapCase(empty-string) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,136,""""", StringUtils.swapCase("""") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,137,"assertEquals(""swapCase(String-with-numbers) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,138,"""a123RgYu"", StringUtils.swapCase(""A123rGyU"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,139,"assertEquals(""swapCase(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,140,"""Hello aPACHE"", StringUtils.swapCase(""hELLO Apache"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,143,public void testJoin()
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,145,"assertEquals(""join(Object[], String) failed"", TEXT_LIST,"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,146,"StringUtils.join(ARRAY_LIST, SEPARATOR));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,147,"assertEquals(""join(Iterator, String) failed"", TEXT_LIST,"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,148,"StringUtils.join(Arrays.asList(ARRAY_LIST).iterator(),"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,149,SEPARATOR));
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,152,public void testSplit()
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,154,"String[] result = StringUtils.split(TEXT_LIST, SEPARATOR, 2);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,155,"String[] expected = { ""foo"", ""bar,baz"" };"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,156,"assertEquals(""split(Object[], String, int) yielded unexpected length"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,157,"expected.length, result.length);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,158,for (int i = 0; i < result.length; i++)
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,160,"assertEquals(""split(Object[], String, int) failed"", expected[i],"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,161,result[i]);
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,164,"result = StringUtils.split(TEXT_LIST, SEPARATOR, 0);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,165,expected = ARRAY_LIST;
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,166,"assertEquals(""split(Object[], String, int) yielded unexpected length"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,167,"expected.length, result.length);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,168,for (int i = 0; i < result.length; i++)
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,170,"assertEquals(""split(Object[], String, int) failed"", expected[i],"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,171,result[i]);
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,174,"result = StringUtils.split(TEXT_LIST, SEPARATOR, -1);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,175,expected = ARRAY_LIST;
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,176,"assertEquals(""split(Object[], String, int) yielded unexpected length"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,177,"expected.length, result.length);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,178,for (int i = 0; i < result.length; i++)
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,180,"assertEquals(""split(Object[], String, int) failed"", expected[i],"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,181,result[i]);
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,185,public void testReplaceFunctions()
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,187,"assertEquals(""replace(String, String, String, int) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,188,"FOO, StringUtils.replace(""oo"" + FOO, ""o"", """", 2));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,189,"assertEquals(""replace(String, String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,190,""""", StringUtils.replace(FOO + FOO + FOO, FOO, """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,191,"assertEquals(""replaceOnce(String, String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,192,"FOO, StringUtils.replaceOnce(FOO + FOO, FOO, """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,195,public void testOverlayString()
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,197,"assertEquals(""overlayString(String, String, int, int) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,198,"""foo foor baz"", StringUtils.overlayString(SENTENCE, FOO, 4, 6) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,201,public void testRepeat()
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,203,"assertEquals(""repeat(String, int) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,204,"FOO + FOO + FOO, StringUtils.repeat(FOO, 3) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,207,public void testCenter()
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,209,"assertEquals(""center(String, int) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,210,"""   ""+FOO+""   "", StringUtils.center(FOO, 9) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,213,public void testChompFunctions()
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,216,"assertEquals(""chomp(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,217,"FOO, StringUtils.chomp(FOO + ""\n"" + FOO) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,219,"assertEquals(""chompLast(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,220,"FOO, StringUtils.chompLast(FOO + ""\n"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,222,"assertEquals(""getChomp(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,223,"""\n"" + FOO, StringUtils.getChomp(FOO + ""\n"" + FOO, ""\n"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,225,"assertEquals(""prechomp(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,226,"FOO, StringUtils.prechomp(FOO + ""\n"" + FOO, ""\n"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,228,"assertEquals(""getPrechomp(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,229,"FOO + ""\n"", StringUtils.getPrechomp(FOO + ""\n"" + FOO, ""\n"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,231,"assertEquals(""chop(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,232,"FOO, StringUtils.chop(FOO + ""\r\n"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,234,"assertEquals(""chopNewline(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,235,"FOO, StringUtils.chopNewline(FOO + ""\r\n"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,238,public void testPadFunctions()
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,240,"assertEquals(""rightPad(String, int) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,241,"""1234    "", StringUtils.rightPad (""1234"", 8) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,243,"assertEquals(""rightPad(String, int, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,244,"""1234-+-+"", StringUtils.rightPad (""1234"", 8, ""-+"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,246,"assertEquals(""rightPad(String, int, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,247,"""123456-+~"", StringUtils.rightPad (""123456"", 9, ""-+~"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,249,"assertEquals(""leftPad(String, int) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,250,"""    1234"", StringUtils.leftPad(""1234"", 8) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,252,"assertEquals(""leftPad(String, int, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,253,"""-+-+1234"", StringUtils.leftPad(""1234"", 8, ""-+"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,255,"assertEquals(""leftPad(String, int, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,256,"""-+~123456"", StringUtils.leftPad(""123456"", 9, ""-+~"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,259,public void testUnicodeFunctions() throws java.io.IOException
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,261,/* this test fails on my window box with an Sun english JDK 1.3.1
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,262,I think that the input string is not right
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,264,/* Kept out for the moment.
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,265,"String input = ""$B$3$l$OF|K\\8l$N%F%9%H$G$9!(B#"";"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,266,"String unicode = StringUtils.convertNativeToUnicode(input, ""iso-2022-jp"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,267,"String iso = StringUtils.convertUnicodeToNative(unicode, ""iso-2022-jp"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,268,"assertEquals(""Unicode conversions failed"", input, iso);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,272,public void testReverseFunctions() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,273,"assertEquals(""reverse(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,274,"""sdrawkcab"", StringUtils.reverse(""backwards"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,275,"assertEquals(""reverse(empty-string) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,276,""""", StringUtils.reverse("""") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,277,"assertEquals(""reverseDelimitedString(String,'.') failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,278,"""org.apache.test"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,279,"StringUtils.reverseDelimitedString(""test.apache.org"", ""."") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,280,"assertEquals(""reverseDelimitedString(empty-string,'.') failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,282,"StringUtils.reverseDelimitedString("""", ""."") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,283,"assertEquals(""reverseDelimitedString(String,' ') failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,284,"""once upon a time"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,285,"StringUtils.reverseDelimitedString(""time a upon once"","" "") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,288,public void testDefaultFunctions() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,289,"assertEquals(""defaultString(empty-string) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,290,""""", StringUtils.defaultString("""") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,291,"assertEquals(""defaultString(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,292,"FOO, StringUtils.defaultString(FOO) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,293,"assertEquals(""defaultString(null) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,294,""""", StringUtils.defaultString(null) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,295,"assertEquals(""defaultString(empty-string,String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,296,""""", StringUtils.defaultString("""", BAR) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,297,"assertEquals(""defaultString(String,String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,298,"FOO, StringUtils.defaultString(FOO, BAR) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,299,"assertEquals(""defaultString(null,String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,300,"BAR, StringUtils.defaultString(null, BAR) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,303,public void testEscapeFunctions() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,304,"assertEquals(""escape(empty-string) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,305,""""", StringUtils.escape("""") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,306,"assertEquals(""escape(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,307,"FOO, StringUtils.escape(FOO) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,308,"assertEquals(""escape(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,309,"""\\t"", StringUtils.escape(""\t"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,310,"assertEquals(""escape(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,311,"""\\\\"", StringUtils.escape(""\\"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,312,"assertEquals(""escape(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,313,"""\\\\\\b\\t\\r"", StringUtils.escape(""\\\b\t\r"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,314,"assertEquals(""escape(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,315,"""\\u1234"", StringUtils.escape(""\u1234"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,316,"assertEquals(""escape(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,317,"""\\u0234"", StringUtils.escape(""\u0234"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,318,"assertEquals(""escape(String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,319,"""\\u00fd"", StringUtils.escape(""\u00fd"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,322,public void testGetLevenshteinDistance() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,323,"assertEquals(""getLevenshteinDistance(empty-string, empty-string) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,324,"0, StringUtils.getLevenshteinDistance("""", """") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,325,"assertEquals(""getLevenshteinDistance(empty-string, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,326,"1, StringUtils.getLevenshteinDistance("""", ""a"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,327,"assertEquals(""getLevenshteinDistance(String, empty-string) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,328,"7, StringUtils.getLevenshteinDistance(""aaapppp"", """") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,329,"assertEquals(""getLevenshteinDistance(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,330,"1, StringUtils.getLevenshteinDistance(""frog"", ""fog"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,331,"assertEquals(""getLevenshteinDistance(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,332,"3, StringUtils.getLevenshteinDistance(""fly"", ""ant"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,333,"assertEquals(""getLevenshteinDistance(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,334,"7, StringUtils.getLevenshteinDistance(""elephant"", ""hippo"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,335,"assertEquals(""getLevenshteinDistance(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,336,"7, StringUtils.getLevenshteinDistance(""hippo"", ""elephant"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,337,"assertEquals(""getLevenshteinDistance(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,338,"1, StringUtils.getLevenshteinDistance(""hello"", ""hallo"") );"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,5,* reserved.
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,9,* are met:
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,17,*    distribution.
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,54,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,59,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,62,* Unit tests {@link org.apache.commons.lang.StringUtils} - Trim/Empty methods
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,64,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,65,"* @author <a href=""mailto:ridesmet@users.sourceforge.net"">Ringo De Smet</a>"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,66,"* @version $Id: StringUtilsTrimEmptyTest.java,v 1.1 2002/07/19 03:35:55 bayard Exp $"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,68,public class StringUtilsTrimEmptyTest extends TestCase {
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,69,"private static final String FOO = ""foo"";"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,71,public StringUtilsTrimEmptyTest(String name) {
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,72,super(name);
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,75,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,76,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,79,public static Test suite() {
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,80,TestSuite suite = new TestSuite(StringUtilsTrimEmptyTest.class);
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,81,"suite.setName(""StringUtilsTrimEmpty Tests"");"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,82,return suite;
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,85,protected void setUp() throws Exception {
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,86,super.setUp();
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,89,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,90,super.tearDown();
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,95,public void testClean() {
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,96,"assertEquals(FOO, StringUtils.clean(FOO + ""  ""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,97,"assertEquals(FOO, StringUtils.clean("" "" + FOO + ""  ""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,98,"assertEquals(FOO, StringUtils.clean("" "" + FOO));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,99,"assertEquals(FOO, StringUtils.clean(FOO + """"));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,100,"assertEquals("""", StringUtils.clean(null));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,103,public void testTrim() {
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,104,"assertEquals(FOO, StringUtils.trim(FOO + ""  ""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,105,"assertEquals(FOO, StringUtils.trim("" "" + FOO + ""  ""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,106,"assertEquals(FOO, StringUtils.trim("" "" + FOO));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,107,"assertEquals(FOO, StringUtils.trim(FOO + """"));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,108,"assertEquals(null, StringUtils.trim(null));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,111,public void testIsNotEmpty() {
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,112,"assertEquals(true, StringUtils.isNotEmpty(FOO));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,113,"assertEquals(true, StringUtils.isNotEmpty("" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,114,"assertEquals(false, StringUtils.isNotEmpty(""""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,115,"assertEquals(false, StringUtils.isNotEmpty(null));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,118,public void testIsEmpty() {
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,119,"assertEquals(false, StringUtils.isEmpty(FOO));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,120,"assertEquals(true, StringUtils.isEmpty("" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,121,"assertEquals(true, StringUtils.isEmpty(""""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,122,"assertEquals(true, StringUtils.isEmpty(null));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,125,public void testStrip() {
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,126,// it's important that foo2Space is fooLeftSpace and fooRightSpace
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,127,// merged together. So same number of spaces to left as fLS and same
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,128,// to right as fLS. Same applies for foo2Dots.
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,129,"String foo2Space = ""    ""+FOO+""    "";"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,130,"String foo2Dots = ""......""+FOO+""........."";"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,131,"String fooLeftSpace = ""    ""+FOO;"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,132,"String fooLeftDots = ""......""+FOO;"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,133,"String fooRightSpace = FOO+""    "";"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,134,"String fooRightDots = FOO+""........."";"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,136,"assertEquals("""", StringUtils.strip(""""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,137,"assertEquals(FOO, StringUtils.strip(foo2Space));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,138,"assertEquals(FOO, StringUtils.strip(foo2Dots, "".""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,139,"assertEquals(FOO, StringUtils.strip(fooRightSpace));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,140,"assertEquals(FOO, StringUtils.strip(fooRightDots, "".""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,141,"assertEquals(FOO, StringUtils.strip(fooLeftSpace));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,142,"assertEquals(FOO, StringUtils.strip(fooLeftDots, "".""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,144,"assertEquals("""", StringUtils.stripStart("""", "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,145,"assertEquals(fooRightSpace, StringUtils.stripStart(foo2Space, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,146,"assertEquals(fooRightDots, StringUtils.stripStart(foo2Dots, "".""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,147,"assertEquals(fooRightSpace, StringUtils.stripStart(fooRightSpace, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,148,"assertEquals(fooRightDots, StringUtils.stripStart(fooRightDots, "".""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,149,"assertEquals(FOO, StringUtils.stripStart(fooLeftSpace, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,150,"assertEquals(FOO, StringUtils.stripStart(fooLeftDots, "".""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,152,"assertEquals("""", StringUtils.stripEnd("""", "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,153,"assertEquals(fooLeftSpace, StringUtils.stripEnd(foo2Space, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,154,"assertEquals(fooLeftDots, StringUtils.stripEnd(foo2Dots, "".""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,155,"assertEquals(FOO, StringUtils.stripEnd(fooRightSpace, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,156,"assertEquals(FOO, StringUtils.stripEnd(fooRightDots, "".""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,157,"assertEquals(fooLeftSpace, StringUtils.stripEnd(fooLeftSpace, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,158,"assertEquals(fooLeftDots, StringUtils.stripEnd(fooLeftDots, "".""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,160,"// test stripAll method, merely an array version of the above strip"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,161,String[] empty = new String[0];
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,162,"String[] fooSpace = new String[] { foo2Space, fooLeftSpace, fooRightSpace };"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,163,"String[] fooDots = new String[] { foo2Dots, fooLeftDots, fooRightDots };"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,164,"String[] foo = new String[] { FOO, FOO, FOO };"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,166,"assertArrayEquals(empty, StringUtils.stripAll(empty));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,167,"assertArrayEquals(foo, StringUtils.stripAll(fooSpace));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,168,"assertArrayEquals(foo, StringUtils.stripAll(fooDots, "".""));"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,171,"private void assertArrayEquals(Object[] o1, Object[] o2) {"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,172,if(o1 == null) {
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,173,"assertEquals(o1,o2);"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,174,return;
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,176,"assertEquals(""Length not equal. "", o1.length, o2.length);"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,177,int sz = o1.length;
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,178,for(int i=0; i<sz; i++) {
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,179,if(o1[i] instanceof Object[]) {
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,180,// do an assert equals on type....
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,181,"assertArrayEquals( (Object[]) o1[i], (Object[]) o2[i] );"
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,182,} else {
True,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java,183,"assertEquals(o1[i], o2[i]);"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,1,package org.apache.commons.lang.exception;
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,7,* reserved.
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,11,* are met:
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,19,*    distribution.
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,35,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,57,import junit.framework.Test;
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,58,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,59,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,60,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,63,* Test manager for the org.apache.commons.lang.exception classes.
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,65,"* @author <a href=""mailto:stevencaswell@yahoo.com"">Steven Caswell</a>"
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,67,public class ExceptionTestSuite extends TestCase
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,70,* Construct a new instance.
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,72,public ExceptionTestSuite(String name)
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,74,super(name);
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,78,* Command-line interface.
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,80,public static void main(String[] args)
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,82,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,85,public static Test suite()
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,87,TestSuite suite = new TestSuite();
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,88,suite.addTest(NestableDelegateTestCase.suite());
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,89,suite.addTest(NestableExceptionTestCase.suite());
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,90,suite.addTest(NestableRuntimeExceptionTestCase.suite());
True,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java,91,return suite;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1,package org.apache.commons.lang.exception;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,7,* reserved.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,11,* are met:
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,19,*    distribution.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,35,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,57,import java.io.ByteArrayOutputStream;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,58,import java.io.PrintWriter;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,59,import java.io.PrintStream;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,61,import junit.framework.*;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,62,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,64,* Tests the org.apache.commons.lang.exception.NestableDelegate class.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,66,"* @author <a href=""mailto:steven@caswell.name"">Steven Caswell</a>"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,67,"* @author <a href=""mailto:dlr@finemaltcoding.com"">Daniel Rall</a>"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,68,"* @version $Id: NestableDelegateTestCase.java,v 1.1 2002/07/19 03:35:55 bayard Exp $"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,70,public class NestableDelegateTestCase extends junit.framework.TestCase
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,72,private static final String CONSTRUCTOR_FAILED_MSG =
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,73,"""The Nestable implementation passed to the NestableDelegate(Nestable) constructor must extend java.lang.Throwable"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,75,private static final String PARTIAL_STACK_TRACE =
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,76,"""rethrown as ThrowableNestedNestable partial stack trace place-holder"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,78,protected String lineSeparator;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,81,* Construct a new instance of NestableDelegateTestCase with the specified name
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,83,public NestableDelegateTestCase(String name)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,85,super(name);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,89,* Set up instance variables required by this test case.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,91,public void setUp()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,93,"lineSeparator = System.getProperty(""line.separator"");"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,96,public static Test suite()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,98,return new TestSuite(NestableDelegateTestCase.class);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,102,* Tear down instance variables required by this test case.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,104,public void tearDown()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,106,lineSeparator = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,110,* Test the implementation
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,112,public void testNestableDelegateConstructor()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,114,String msg = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,115,boolean constructorFailed = false;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,116,try
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,118,NestableDelegate nonThrowableCause = new NestableDelegate(new NonThrowableNestable());
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,120,catch(IllegalArgumentException iae)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,122,constructorFailed = true;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,123,msg = iae.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,125,"assertTrue(""nestable delegate constructor with non-throwable cause failed == true"", constructorFailed);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,126,"assertTrue(""constructor failed exception msg == "" + CONSTRUCTOR_FAILED_MSG,"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,127,msg.equals(CONSTRUCTOR_FAILED_MSG));
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,129,constructorFailed = false;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,130,try
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,132,NestableDelegate nd1 = new NestableDelegate(new ThrowableNestable());
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,134,catch(IllegalArgumentException iae)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,136,constructorFailed = true;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,138,"assertTrue(""nestable delegate constructor with throwable cause failed == false"", !constructorFailed);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,141,public void testNestableDelegateGetMessage()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,143,Nestable ne1 = new ThrowableNestable();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,144,"assertTrue(""ThrowableNestable ne1 getMessage() == ThrowableNestable exception"","
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,145,"ne1.getMessage().equals(""ThrowableNestable exception""));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,146,NestableDelegate nd1 = new NestableDelegate(ne1);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,147,"assertTrue(""nd1 getMessage() == "" + ne1.getCause().getMessage(),"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,148,"nd1.getMessage(""base"").equals(""base: "" + ne1.getCause().getMessage()));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,150,"Nestable ne2 = new ThrowableNestedNestable(new Exception(""nested exception 2""));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,151,NestableDelegate nd2 = new NestableDelegate(ne2);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,152,"assertTrue(""nd2 getMessage() == base: "" + ne2.getCause().getMessage(),"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,153,"nd2.getMessage(""base"").equals(""base: "" + ne2.getCause().getMessage()));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,156,public void testNestableDelegateGetLength()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,158,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,159,NestableDelegate d = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,161,n = new NestableDelegateTester1();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,162,d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,163,"doNestableDelegateGetLength(d, 1);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,165,"n = new NestableDelegateTester1(""level 1"");"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,166,d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,167,"doNestableDelegateGetLength(d, 1);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,169,n = new NestableDelegateTester1(new Exception());
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,170,d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,171,"doNestableDelegateGetLength(d, 2);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,173,"n = new NestableDelegateTester1(new Exception(""level 2""));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,174,d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,175,"doNestableDelegateGetLength(d, 2);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,177,"n = new NestableDelegateTester1(""level 1"", new NestableDelegateTester2(""level 2"", new NestableDelegateTester1(new NestableDelegateTester2(""level 4"", new Exception(""level 5"")))));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,178,d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,179,"doNestableDelegateGetLength(d, 5);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,182,"private void doNestableDelegateGetLength(NestableDelegate d, int len)"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,184,// Compare the lengths
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,185,"assertEquals(""delegate length"", len, d.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,188,public void testNestableDelegateGetMessages()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,190,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,191,NestableDelegate d = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,192,String msgs[] = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,194,msgs = new String[1];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,195,n = new NestableDelegateTester1();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,196,d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,197,"doNestableDelegateGetMessages(d, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,199,msgs = new String[1];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,200,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,201,n = new NestableDelegateTester1(msgs[0]);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,202,d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,203,"doNestableDelegateGetMessages(d, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,205,msgs = new String[2];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,206,n = new NestableDelegateTester1(new Exception());
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,207,d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,208,"doNestableDelegateGetMessages(d, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,210,msgs = new String[2];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,211,msgs[0] = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,212,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,213,n = new NestableDelegateTester1(new Exception(msgs[1]));
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,214,d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,215,"doNestableDelegateGetMessages(d, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,217,msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,218,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,219,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,220,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,221,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,222,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,223,"n = new NestableDelegateTester1(msgs[0], new NestableDelegateTester2(msgs[1], new NestableDelegateTester1(new NestableDelegateTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,224,d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,225,"doNestableDelegateGetMessages(d, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,228,"private void doNestableDelegateGetMessages(NestableDelegate d, String[] nMsgs)"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,230,// Compare the messages
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,231,String[] dMsgs = d.getMessages();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,232,"assertEquals(""messages length"", nMsgs.length, dMsgs.length);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,233,for(int i = 0; i < nMsgs.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,235,"assertEquals(""message "" + i, nMsgs[i], dMsgs[i]);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,239,public void testNestableDelegateGetMessageN()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,241,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,242,NestableDelegate d = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,243,String[] msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,244,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,245,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,246,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,247,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,248,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,249,"n = new NestableDelegateTester1(msgs[0], new NestableDelegateTester2(msgs[1], new NestableDelegateTester1(new NestableDelegateTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,250,d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,251,for(int i = 0; i < msgs.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,253,"assertEquals(""message "" + i, msgs[i], d.getMessage(i));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,255,"assertEquals(""message -1"", msgs[0], d.getMessage(-1));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,256,"assertEquals(""message -1"", msgs[msgs.length - 1], d.getMessage(msgs.length + 100));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,259,public void testNestableDelegateGetThrowable()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,261,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,262,NestableDelegate d = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,263,String msgs[] = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,264,Class[] throwables = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,266,msgs = new String[2];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,267,msgs[0] = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,268,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,269,throwables = new Class[2];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,270,throwables[0] = NestableDelegateTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,271,throwables[1] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,272,n = new NestableDelegateTester1(new Exception(msgs[1]));
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,273,d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,274,"doNestableDelegateGetThrowable(d, throwables, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,276,msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,277,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,278,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,279,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,280,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,281,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,282,throwables = new Class[5];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,283,throwables[0] = NestableDelegateTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,284,throwables[1] = NestableDelegateTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,285,throwables[2] = NestableDelegateTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,286,throwables[3] = NestableDelegateTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,287,throwables[4] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,288,"n = new NestableDelegateTester1(msgs[0], new NestableDelegateTester2(msgs[1], new NestableDelegateTester1(new NestableDelegateTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,289,d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,290,"doNestableDelegateGetThrowable(d, throwables, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,293,"private void doNestableDelegateGetThrowable(NestableDelegate d, Class[] classes, String[] msgs)"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,295,Throwable t = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,296,String msg = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,298,for(int i = 0; i < classes.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,300,t = d.getThrowable(i);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,301,"assertEquals(""throwable class"", classes[i], t.getClass());"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,302,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,304,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,306,else
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,308,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,310,"assertEquals(""throwable message"", msgs[i], msg);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,312,t = d.getThrowable(-1);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,313,"assertEquals(""throwable(-1)"", classes[0], t.getClass());"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,314,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,316,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,318,else
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,320,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,322,"assertEquals(""throwable message"", msgs[0], msg);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,323,t = d.getThrowable(999);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,324,"assertEquals(""throwable(999)"", classes[classes.length - 1], t.getClass());"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,325,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,327,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,329,else
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,331,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,333,"assertEquals(""throwable message"", msgs[msgs.length - 1], msg);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,336,public void testNestableDelegateGetThrowables()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,338,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,339,NestableDelegate d = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,340,String msgs[] = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,341,Class[] throwables = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,343,msgs = new String[2];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,344,msgs[0] = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,345,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,346,throwables = new Class[2];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,347,throwables[0] = NestableDelegateTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,348,throwables[1] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,349,n = new NestableDelegateTester1(new Exception(msgs[1]));
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,350,d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,351,"doNestableDelegateGetThrowables(d, throwables, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,353,msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,354,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,355,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,356,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,357,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,358,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,359,throwables = new Class[5];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,360,throwables[0] = NestableDelegateTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,361,throwables[1] = NestableDelegateTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,362,throwables[2] = NestableDelegateTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,363,throwables[3] = NestableDelegateTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,364,throwables[4] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,365,"n = new NestableDelegateTester1(msgs[0], new NestableDelegateTester2(msgs[1], new NestableDelegateTester1(new NestableDelegateTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,366,d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,367,"doNestableDelegateGetThrowables(d, throwables, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,370,"private void doNestableDelegateGetThrowables(NestableDelegate d, Class[] classes, String[] msgs)"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,372,Throwable[] throwables = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,373,String msg = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,375,throwables = d.getThrowables();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,376,"assertEquals(""throwables length"", classes.length, throwables.length);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,377,for(int i = 0; i < classes.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,379,"assertEquals(""throwable class"", classes[i], throwables[i].getClass());"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,380,Throwable t = throwables[i];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,381,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,383,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,385,else
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,387,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,389,"assertEquals(""throwable message"", msgs[i], msg);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,393,public void testIndexOfThrowable()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,395,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,396,NestableDelegate d = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,397,String msgs[] = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,398,Class[] throwables = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,400,msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,401,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,402,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,403,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,404,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,405,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,406,throwables = new Class[5];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,407,throwables[0] = NestableDelegateTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,408,throwables[1] = NestableDelegateTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,409,throwables[2] = NestableDelegateTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,410,throwables[3] = NestableDelegateTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,411,throwables[4] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,412,"int[] indexes = {0, 1, 0, 1, 4};"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,413,"n = new NestableDelegateTester1(msgs[0], new NestableDelegateTester2(msgs[1], new NestableDelegateTester1(new NestableDelegateTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,414,d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,415,for(int i = 0; i < throwables.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,417,"doNestableDelegateIndexOfThrowable(d, throwables[i], 0, indexes[i], msgs[indexes[i]]);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,419,"doNestableDelegateIndexOfThrowable(d, NestableDelegateTester2.class, 2, 3, msgs[3]);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,420,"doNestableDelegateIndexOfThrowable(d, NestableDelegateTester1.class, 1, 2, msgs[2]);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,421,"doNestableDelegateIndexOfThrowable(d, java.util.Date.class, 0, -1, null);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,424,"private void doNestableDelegateIndexOfThrowable(NestableDelegate d, Class type, int pos, int expectedIndex, String expectedMsg)"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,426,Throwable t = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,428,"int index = d.indexOfThrowable(pos, type);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,429,"assertEquals(""index of throwable "" + type.getName(), expectedIndex, index);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,430,t = d.getThrowable(index);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,431,if(expectedMsg != null)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,433,String msg = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,434,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,436,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,438,else
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,440,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,442,"assertEquals(""message of indexed throwable"", expectedMsg, msg);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,446,public void testNestableDelegetePrintStackTrace()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,448,int lineSepLen = lineSeparator.length();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,449,int partialStackTraceLen = PARTIAL_STACK_TRACE.length();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,450,"Nestable ne3 = new ThrowableNestedNestable(new Exception(""nested exception 3""));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,451,NestableDelegate nd3 = new NestableDelegate(ne3);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,453,ByteArrayOutputStream baos1 = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,454,PrintStream ps1 = new PrintStream(baos1);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,455,nd3.printStackTrace(ps1);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,456,String stack1 = baos1.toString();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,457,"assertTrue(""stack trace startsWith == java.lang.Exception: nested exception 3"","
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,458,"stack1.startsWith(""java.lang.Exception: nested exception 3""));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,459,int start1 = (stack1.length() - lineSepLen) - partialStackTraceLen;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,460,int end1 = stack1.length() - lineSepLen;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,461,"assertEquals(""stack trace substring("" + start1 + "","" + end1 + "") == "" +"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,462,"PARTIAL_STACK_TRACE,"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,463,"PARTIAL_STACK_TRACE,"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,464,"stack1.substring(start1, end1));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,466,ByteArrayOutputStream baos2 = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,467,PrintStream ps2 = new PrintStream(baos2);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,468,System.setErr(ps2);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,469,nd3.printStackTrace();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,470,String stack2 = baos2.toString();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,471,"assertTrue(""stack trace startsWith == java.lang.Exception: nested exception 3"","
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,472,"stack2.startsWith(""java.lang.Exception: nested exception 3""));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,473,int start2 = (stack2.length() - lineSepLen) - partialStackTraceLen;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,474,int end2 = stack2.length() - lineSepLen;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,475,"assertTrue(""stack trace substring("" + start2 + "","" + end2 + "") == "" + PARTIAL_STACK_TRACE,"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,476,"stack2.substring(start2, end2).equals(PARTIAL_STACK_TRACE));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,479,public static void main(String args[])
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,481,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,485,class NestableDelegateTester1 extends Exception implements Nestable
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,487,private Throwable cause = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,489,public NestableDelegateTester1()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,491,super();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,494,"public NestableDelegateTester1(String reason, Throwable cause)"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,496,super(reason);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,497,this.cause = cause;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,500,public NestableDelegateTester1(String reason)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,502,super(reason);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,505,public NestableDelegateTester1(Throwable cause)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,507,super();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,508,this.cause = cause;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,512,* Returns the error message of this and any nested <code>Throwable</code>s
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,513,"* in an array of Strings, one element for each message. Any"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,514,* <code>Throwable</code> specified without a message is represented in
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,515,* the array by a null.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,517,* @return the <code>Throwable</code>s
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,519,public Throwable[] getThrowables()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,521,return new Throwable[0];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,525,* Returns the error message of this and any nested <code>Throwable</code>s
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,526,"* in an array of Strings, one element for each message. Any"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,527,* <code>Throwable</code> specified without a message is represented in
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,528,* the array by a null.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,530,* @return the error messages
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,532,public String[] getMessages()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,534,return new String[0];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,538,"* Returns the index, numbered from 0, of the first occurrence of the"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,539,"* specified type in the chain of <code>Throwable</code>s, or -1 if the"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,540,* specified type is not found in the chain. If <code>pos</code> is
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,541,"* negative, the effect is the same as if it were 0. If <code>pos</code>"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,542,"* is greater than or equal to the length of the chain, the effect is the"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,543,* same as if it were the index of the last element in the chain.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,545,* @param type <code>Class</code> to be found
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,546,"* @return index of the first occurrence of the type in the chain, or -1 if"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,547,* the type is not found
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,549,public int indexOfThrowable(Class type)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,551,return -1;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,555,* Returns the <code>Throwable</code> in the chain of
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,556,"* <code>Throwable</code>s at the specified index, numbererd from 0. If"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,557,"* <code>index</code> is negative, the effect is the same as if it"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,558,* were 0. If <code>index</code> is greater than or equal to the length
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,559,"* of the chain, the last <code>Throwable</code> in the chain is returned."
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,561,* @param index the index of the <code>Throwable</code> in the chain of
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,562,* <code>Throwable</code>s
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,563,* @return the <code>Throwable</code>
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,565,public Throwable getThrowable(int index)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,567,return null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,571,* Returns the number of nested <code>Throwable</code>s represented by
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,572,"* this <code>Nestable</code>, including this <code>Nestable</code>."
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,574,public int getLength()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,576,return 1;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,580,* Returns the reference to the exception or error that caused the
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,581,* exception implementing the <code>Nestable</code> to be thrown.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,583,public Throwable getCause()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,585,return cause;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,589,* Prints the stack trace for this exception only--root cause not
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,590,* included--using the provided writer.  Used by {@link
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,591,* org.apache.commons.lang.exception.NestableDelegate} to write
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,592,* individual stack traces to a buffer.  The implementation of
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,593,* this method should call
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,594,* <code>super.printStackTrace(out);</code> in most cases.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,596,* @param out The writer to use.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,598,public void printPartialStackTrace(PrintWriter out)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,603,* Returns the error message of the <code>Throwable</code> in the chain
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,604,"* of <code>Throwable</code>s at the specified index, numbererd from 0."
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,605,"* If <code>index</code> is negative, the effect is the same as if it"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,606,* were 0. If <code>index</code> is greater than or equal to the length
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,607,"* of the chain, the message of the last <code>Throwable</code> in the"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,608,* chain is returned.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,610,* @param index the index of the <code>Throwable</code> in the chain of
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,611,* <code>Throwable</code>s
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,612,* @return the error message
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,614,public String getMessage(int index)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,616,if(index == 0)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,618,return super.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,620,else
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,622,"return """";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,627,"* Returns the index, numbered from 0, of the first <code>Throwable</code>"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,628,* that matches the specified type in the chain of <code>Throwable</code>s
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,629,"* with an index greater than or equal to the specified position, or -1 if"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,630,"* the type is not found. If <code>pos</code> is negative, the effect is the"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,631,* same as if it were 0. If <code>pos</code> is greater than or equal to the
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,632,"* length of the chain, the effect is the same as if it were the index of"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,633,* the last element in the chain.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,635,* @param type <code>Class</code> to be found
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,636,"* @param pos index, numbered from 0, of the starting position in the chain"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,637,* to be searched
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,639,"* @return index of the first occurrence of the type in the chain, or -1 if"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,640,* the type is not found
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,642,"public int indexOfThrowable(int pos, Class type)"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,644,return -1;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,649,class NestableDelegateTester2 extends Throwable implements Nestable
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,651,private Throwable cause = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,653,public NestableDelegateTester2()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,655,super();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,658,"public NestableDelegateTester2(String reason, Throwable cause)"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,660,super(reason);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,661,this.cause = cause;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,664,public NestableDelegateTester2(String reason)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,666,super(reason);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,669,public NestableDelegateTester2(Throwable cause)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,671,super();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,672,this.cause = cause;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,676,* Returns the error message of this and any nested <code>Throwable</code>s
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,677,"* in an array of Strings, one element for each message. Any"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,678,* <code>Throwable</code> specified without a message is represented in
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,679,* the array by a null.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,681,* @return the <code>Throwable</code>s
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,683,public Throwable[] getThrowables()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,685,return new Throwable[0];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,689,* Returns the error message of this and any nested <code>Throwable</code>s
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,690,"* in an array of Strings, one element for each message. Any"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,691,* <code>Throwable</code> specified without a message is represented in
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,692,* the array by a null.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,694,* @return the error messages
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,696,public String[] getMessages()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,698,return new String[0];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,702,"* Returns the index, numbered from 0, of the first occurrence of the"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,703,"* specified type in the chain of <code>Throwable</code>s, or -1 if the"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,704,* specified type is not found in the chain. If <code>pos</code> is
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,705,"* negative, the effect is the same as if it were 0. If <code>pos</code>"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,706,"* is greater than or equal to the length of the chain, the effect is the"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,707,* same as if it were the index of the last element in the chain.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,709,* @param type <code>Class</code> to be found
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,710,"* @return index of the first occurrence of the type in the chain, or -1 if"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,711,* the type is not found
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,713,public int indexOfThrowable(Class type)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,715,return -1;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,719,* Returns the <code>Throwable</code> in the chain of
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,720,"* <code>Throwable</code>s at the specified index, numbererd from 0. If"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,721,"* <code>index</code> is negative, the effect is the same as if it"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,722,* were 0. If <code>index</code> is greater than or equal to the length
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,723,"* of the chain, the last <code>Throwable</code> in the chain is returned."
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,725,* @param index the index of the <code>Throwable</code> in the chain of
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,726,* <code>Throwable</code>s
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,727,* @return the <code>Throwable</code>
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,729,public Throwable getThrowable(int index)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,731,return null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,735,* Returns the number of nested <code>Throwable</code>s represented by
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,736,"* this <code>Nestable</code>, including this <code>Nestable</code>."
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,738,public int getLength()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,740,return 1;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,744,* Returns the reference to the exception or error that caused the
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,745,* exception implementing the <code>Nestable</code> to be thrown.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,747,public Throwable getCause()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,749,return cause;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,753,* Prints the stack trace for this exception only--root cause not
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,754,* included--using the provided writer.  Used by {@link
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,755,* org.apache.commons.lang.exception.NestableDelegate} to write
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,756,* individual stack traces to a buffer.  The implementation of
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,757,* this method should call
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,758,* <code>super.printStackTrace(out);</code> in most cases.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,760,* @param out The writer to use.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,762,public void printPartialStackTrace(PrintWriter out)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,767,* Returns the error message of the <code>Throwable</code> in the chain
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,768,"* of <code>Throwable</code>s at the specified index, numbererd from 0."
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,769,"* If <code>index</code> is negative, the effect is the same as if it"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,770,* were 0. If <code>index</code> is greater than or equal to the length
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,771,"* of the chain, the message of the last <code>Throwable</code> in the"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,772,* chain is returned.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,774,* @param index the index of the <code>Throwable</code> in the chain of
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,775,* <code>Throwable</code>s
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,776,* @return the error message
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,778,public String getMessage(int index)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,780,if(index == 0)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,782,return super.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,784,else
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,786,"return """";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,791,"* Returns the index, numbered from 0, of the first <code>Throwable</code>"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,792,* that matches the specified type in the chain of <code>Throwable</code>s
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,793,"* with an index greater than or equal to the specified position, or -1 if"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,794,"* the type is not found. If <code>pos</code> is negative, the effect is the"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,795,* same as if it were 0. If <code>pos</code> is greater than or equal to the
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,796,"* length of the chain, the effect is the same as if it were the index of"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,797,* the last element in the chain.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,799,* @param type <code>Class</code> to be found
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,800,"* @param pos index, numbered from 0, of the starting position in the chain"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,801,* to be searched
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,803,"* @return index of the first occurrence of the type in the chain, or -1 if"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,804,* the type is not found
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,806,"public int indexOfThrowable(int pos, Class type)"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,808,return -1;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,813,class ThrowableNestable extends Throwable implements Nestable
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,815,"private Throwable cause = new Exception(""ThrowableNestable cause"");"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,818,* Returns the number of nested <code>Throwable</code>s represented by
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,819,"* this <code>Nestable</code>, including this <code>Nestable</code>."
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,821,public int getLength()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,823,return 1;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,827,* Returns the error message of this and any nested
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,828,* <code>Throwable</code>.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,830,* @return The error message.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,832,public String getMessage()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,834,"return ""ThrowableNestable exception"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,838,* Returns the error message of the <code>Throwable</code> in the chain
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,839,"* of <code>Throwable</code>s at the specified index, numbererd from 0."
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,840,"* If <code>index</code> is negative, the effect is the same as if it"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,841,* were 0. If <code>index</code> is greater than or equal to the length
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,842,"* of the chain, the message of the last <code>Throwable</code> in the"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,843,* chain is returned.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,845,* @param index the index of the <code>Throwable</code> in the chain of
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,846,* <code>Throwable</code>s
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,847,* @return the error message
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,849,public String getMessage(int index)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,851,return getMessage();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,855,* Returns the error message of this and any nested <code>Throwable</code>s
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,856,"* in an array of Strings, one element for each message. Any"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,857,* <code>Throwable</code> specified without a message is represented in
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,858,* the array by a null.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,860,public String[] getMessages()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,862,String msgs[] = new String[1];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,863,msgs[0] = getMessage();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,864,return msgs;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,868,* Returns the reference to the exception or error that caused the
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,869,* exception implementing the <code>Nestable</code> to be thrown.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,871,public Throwable getCause()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,873,return cause;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,877,* Prints the stack trace of this exception to the specified print
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,878,* writer.  Includes inforamation from the exception--if
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,879,* any--which caused this exception.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,881,* @param out <code>PrintWriter</code> to use for output.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,883,public void printStackTrace(PrintWriter out)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,888,* Prints the stack trace for this exception only--root cause not
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,889,* included--using the provided writer.  Used by {@link
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,890,* org.apache.commons.lang.exception.NestableDelegate} to write
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,891,* individual stack traces to a buffer.  The implementation of
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,892,* this method should call
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,893,* <code>super.printStackTrace(out);</code> in most cases.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,895,* @param out The writer to use.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,897,public void printPartialStackTrace(PrintWriter out)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,901,public Throwable getThrowable(int index)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,903,return cause;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,906,public Throwable[] getThrowables()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,908,Throwable throwables[] = new Throwable[1];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,909,throwables[0] = cause;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,910,return throwables;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,913,public int indexOfThrowable(Class type)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,915,if(Exception.class.isInstance(type))
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,917,return 0;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,919,return -1;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,923,* Returns the index of the first <code>Throwable</code> that matches the
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,924,* specified type with an index greater than or equal to the specified
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,925,"* position, or -1 if the type is not found."
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,927,* @param type <code>Class</code> to be found
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,928,* @param pos
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,929,"* @return index of the first occurrence of the type in the chain, or -1 if"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,930,* the type is not found
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,932,"public int indexOfThrowable(int pos, Class type)"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,934,return indexOfThrowable(type);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,939,class ThrowableNestedNestable extends Throwable implements Nestable
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,941,private Throwable cause = null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,943,public ThrowableNestedNestable(Throwable cause)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,945,this.cause = cause;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,948,public int getLength()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,950,return 1;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,954,* Returns the error message of this and any nested
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,955,* <code>Throwable</code>.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,957,* @return The error message.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,959,public String getMessage()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,961,"return ""ThrowableNestedNestable exception ("" + cause.getMessage() + "")"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,964,public String getMessage(int index)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,966,"return ""ThrowableNestedNestable exception ("" + cause.getMessage() + "")"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,970,* Returns the error message of this and any nested <code>Throwable</code>s
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,971,"* in an array of Strings, one element for each message. Any"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,972,* <code>Throwable</code> specified without a message is represented in
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,973,* the array by a null.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,975,public String[] getMessages()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,977,String[] msgs = new String[1];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,978,"msgs[0] = ""ThrowableNestedNestable exception ("" + cause.getMessage() + "")"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,979,return msgs;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,983,* Returns the reference to the exception or error that caused the
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,984,* exception implementing the <code>Nestable</code> to be thrown.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,986,public Throwable getCause()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,988,return cause;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,992,* Prints the stack trace of this exception to the specified print
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,993,* writer.  Includes inforamation from the exception--if
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,994,* any--which caused this exception.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,996,* @param out <code>PrintWriter</code> to use for output.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,998,public void printStackTrace(PrintWriter out)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1000,"out.println(""ThrowableNestedNestable stack trace place-holder"");"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1004,* Prints the stack trace for this exception only--root cause not
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1005,* included--using the provided writer.  Used by {@link
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1006,* org.apache.commons.lang.exception.NestableDelegate} to write
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1007,* individual stack traces to a buffer.  The implementation of
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1008,* this method should call
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1009,* <code>super.printStackTrace(out);</code> in most cases.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1011,* @param out The writer to use.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1013,public void printPartialStackTrace(PrintWriter out)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1015,"out.println(""ThrowableNestedNestable partial stack trace place-holder"");"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1018,public Throwable getThrowable(int index)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1020,return cause;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1023,public Throwable[] getThrowables()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1025,Throwable throwables[] = new Throwable[1];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1026,throwables[0] = cause;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1027,return throwables;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1030,public int indexOfThrowable(Class type)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1032,if(Exception.class.isInstance(type))
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1034,return 0;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1036,return -1;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1040,* Returns the index of the first <code>Throwable</code> that matches the
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1041,* specified type with an index greater than or equal to the specified
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1042,"* position, or -1 if the type is not found."
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1044,* @param type <code>Class</code> to be found
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1045,* @param pos
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1046,"* @return index of the first occurrence of the type in the chain, or -1 if"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1047,* the type is not found
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1049,"public int indexOfThrowable(int pos, Class type)"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1051,return indexOfThrowable(type);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1056,class NonThrowableNestable implements Nestable
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1058,public int getLength()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1060,return 1;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1064,* Returns the error message of this and any nested
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1065,* <code>Throwable</code>.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1067,* @return The error message.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1069,public String getMessage()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1071,"return ""non-throwable"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1074,public String getMessage(int index)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1076,"return ""non-throwable"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1080,* Returns the error message of this and any nested <code>Throwable</code>s
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1081,"* in an array of Strings, one element for each message. Any"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1082,* <code>Throwable</code> specified without a message is represented in
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1083,* the array by a null.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1085,public String[] getMessages()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1087,String[] msgs = new String[1];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1088,"msgs[0] = ""non-throwable"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1089,return msgs;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1093,* Returns the reference to the exception or error that caused the
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1094,* exception implementing the <code>Nestable</code> to be thrown.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1096,public Throwable getCause()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1098,return null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1102,* Prints the stack trace of this exception to the specified print
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1103,* writer.  Includes inforamation from the exception--if
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1104,* any--which caused this exception.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1106,* @param out <code>PrintWriter</code> to use for output.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1108,public void printStackTrace(PrintWriter out)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1113,* Prints the stack trace for this exception only--root cause not
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1114,* included--using the provided writer.  Used by {@link
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1115,* org.apache.commons.lang.exception.NestableDelegate} to write
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1116,* individual stack traces to a buffer.  The implementation of
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1117,* this method should call
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1118,* <code>super.printStackTrace(out);</code> in most cases.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1120,* @param out The writer to use.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1122,public void printPartialStackTrace(PrintWriter out)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1126,public Throwable getThrowable(int index)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1128,return null;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1131,public Throwable[] getThrowables()
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1133,return new Throwable[0];
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1136,public int indexOfThrowable(Class type)
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1138,return -1;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1142,* Returns the index of the first <code>Throwable</code> that matches the
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1143,* specified type with an index greater than or equal to the specified
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1144,"* position, or -1 if the type is not found."
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1146,* @param type <code>Class</code> to be found
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1147,* @param pos
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1148,"* @return index of the first occurrence of the type in the chain, or -1 if"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1149,* the type is not found
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1151,"public int indexOfThrowable(int pos, Class type)"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1153,return -1;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,1,package org.apache.commons.lang.exception;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,7,* reserved.
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,11,* are met:
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,19,*    distribution.
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,35,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,57,import java.io.ByteArrayOutputStream;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,58,import java.io.PrintStream;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,59,import java.io.PrintWriter;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,61,import junit.framework.*;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,62,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,64,* Tests the org.apache.commons.lang.exception.NestableException class.
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,66,"* @author <a href=""mailto:steven@caswell.name"">Steven Caswell</a>"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,67,"* @version $Id: NestableExceptionTestCase.java,v 1.1 2002/07/19 03:35:55 bayard Exp $"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,69,public class NestableExceptionTestCase extends junit.framework.TestCase
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,73,* Construct a new instance of NestableExceptionTestCase with the specified name
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,75,public NestableExceptionTestCase(String name)
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,77,super(name);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,81,* Set up instance variables required by this test case.
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,83,public void setUp()
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,87,public static Test suite()
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,89,return new TestSuite(NestableExceptionTestCase.class);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,93,* Tear down instance variables required by this test case.
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,95,public void tearDown()
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,100,* Test the implementation
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,102,public void testGetCause()
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,104,NestableException ne1 = new NestableException();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,105,"assertNull(""nestable exception() cause is null"", ne1.getCause());"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,107,"NestableException ne2 = new NestableException(""ne2"");"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,108,"assertNull(""nestable exception(\""ne2\"") cause is null"", ne2.getCause());"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,110,"NestableException ne3 = new NestableException(new Exception(""ne3 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,111,"assertNotNull(""nestable exception(new Exception(\""ne3 exception\"") cause is not null"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,112,ne3.getCause());
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,113,"assertTrue(""nestable exception(new Exception(\""ne3 exception\"") cause message == ne3 exception"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,114,"ne3.getCause().getMessage().equals(""ne3 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,116,"NestableException ne4 = new NestableException(""ne4"", new Exception(""ne4 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,117,"assertNotNull(""nestable exception(\""ne4\"", new Exception(\""ne4 exception\"") cause is not null"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,118,ne4.getCause());
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,120,"NestableException ne5 = new NestableException(""ne5"", null);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,121,"assertNull(""nestable exception(\""ne5\"", null) cause is null"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,122,ne5.getCause());
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,124,"NestableException ne6 = new NestableException(null, new Exception(""ne6 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,125,"assertNotNull(""nestable exception(null, new Exception(\""ne6 exception\"") cause is not null"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,126,ne6.getCause());
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,129,public void testGetLength()
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,131,NestableException ne1 = new NestableException();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,132,"assertEquals(""ne1 length"", 1, ne1.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,134,"NestableException ne2 = new NestableException(""ne2"");"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,135,"assertEquals(""ne2 length"", 1, ne2.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,137,"NestableException ne3 = new NestableException(new Exception(""ne3 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,138,"assertEquals(""ne3 length"", 2, ne3.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,140,"NestableException ne4 = new NestableException(""ne4"", new Exception(""ne4 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,141,"assertEquals(""ne4 length"", 2, ne4.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,143,"NestableException ne5 = new NestableException(""ne5"", null);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,144,"assertEquals(""ne 5 length"", 1, ne5.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,146,"NestableException ne6 = new NestableException(null, new Exception(""ne6 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,147,"assertEquals(""ne 6 length"", 2, ne6.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,149,"NestableException ne7 = new NestableException(""ne7o"", new NestableException(""ne7i"", new Exception(""ne7 exception"")));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,150,"assertEquals(""ne 7 length"", 3, ne7.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,152,"NestableException ne8 = new NestableException(""level 1"", new NestableException(""level 2"", new NestableException(new NestableException(""level 4"", new Exception(""level 5"")))));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,153,"assertEquals(""ne 8 length"", 5, ne8.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,156,public void testGetMessage()
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,158,NestableException ne1 = new NestableException();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,159,"assertNull(""nestable exception() message is null"", ne1.getMessage());"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,161,"NestableException ne2 = new NestableException(""ne2"");"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,162,"assertNotNull(""nestable exception(\""ne2\"") message is not null"", ne2.getMessage());"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,163,"assertTrue(""nestable exception(\""ne2\"") message == ne2"", ne2.getMessage().equals(""ne2""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,165,"NestableException ne3 = new NestableException(new Exception(""ne3 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,166,"assertNotNull(""nestable exception(new Exception(\""ne3 exception\"") message is not null"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,167,ne3.getMessage());
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,168,"assertTrue(""nestable exception(new Exception(\""ne3 exception\"") message == cause message"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,169,ne3.getMessage().equals(ne3.getCause().getMessage()));
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,171,"NestableException ne4 = new NestableException(""ne4"", new Exception(""ne4 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,172,"assertNotNull(""nestable exception(\""ne4\"", new Exception(\""ne4 exception\"") message is not null"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,173,ne4.getMessage());
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,174,"assertTrue(""nestable exception(\""ne4\"", new Exception(\""ne4 exception\"") message == ne4: ne4 exception"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,175,"ne4.getMessage().equals(""ne4: ne4 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,177,"NestableException ne5 = new NestableException(""ne5"", null);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,178,"assertNotNull(""nestable exception(\""ne5\"", new Exception(\""ne5 exception\"") message is not null"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,179,ne5.getMessage());
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,180,"assertTrue(""nestable exception(\""ne5\"", null) message == ne5"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,181,"ne5.getMessage().equals(""ne5""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,183,"NestableException ne6 = new NestableException(null, new Exception(""ne6 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,184,"assertTrue(""nestable exception(null, new Exception(\""ne6 exception\"") cause == ne6 exception"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,185,"ne6.getMessage().equals(""ne6 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,187,"NestableException ne7 = new NestableException(""ne7o"", new NestableException(""ne7i"", new Exception(""ne7 exception"")));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,188,"assertTrue(""nextable exception(\""ne7o\"", new NestableException(\""ne7i\"", new Exception(\""ne7 exception\""))) message is ne7o: ne7i: ne7 exception"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,189,"ne7.getMessage().equals(""ne7o: ne7i: ne7 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,193,public void testGetMessageN()
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,195,String[] msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,196,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,197,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,198,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,199,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,200,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,201,"NestableException ne = new NestableException(msgs[0], new NestableException(msgs[1], new NestableException(new NestableException(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,202,for(int i = 0; i < msgs.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,204,"assertEquals(""message "" + i, msgs[i], ne.getMessage(i));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,206,"assertEquals(""message -1"", msgs[0], ne.getMessage(-1));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,207,"assertEquals(""message 999"", msgs[4], ne.getMessage(999));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,210,public void testGetMessages()
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,212,String[] msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,213,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,214,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,215,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,216,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,217,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,218,"NestableException ne = new NestableException(msgs[0], new NestableException(msgs[1], new NestableException(new NestableException(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,219,String[] nMsgs = ne.getMessages();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,220,"assertEquals(""messages length"", msgs.length, nMsgs.length);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,221,for(int i = 0; i < nMsgs.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,223,"assertEquals(""message "" + i, msgs[i], nMsgs[i]);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,227,public void testGetThrowable()
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,229,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,230,String msgs[] = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,231,Class[] throwables = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,233,msgs = new String[2];
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,234,msgs[0] = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,235,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,236,throwables = new Class[2];
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,237,throwables[0] = NestableExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,238,throwables[1] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,239,n = new NestableExceptionTester1(new Exception(msgs[1]));
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,240,"doNestableExceptionGetThrowable(n, throwables, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,242,msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,243,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,244,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,245,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,246,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,247,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,248,throwables = new Class[5];
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,249,throwables[0] = NestableExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,250,throwables[1] = NestableExceptionTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,251,throwables[2] = NestableExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,252,throwables[3] = NestableExceptionTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,253,throwables[4] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,254,"n = new NestableExceptionTester1(msgs[0], new NestableExceptionTester2(msgs[1], new NestableExceptionTester1(new NestableExceptionTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,255,"doNestableExceptionGetThrowable(n, throwables, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,258,"private void doNestableExceptionGetThrowable(Nestable n, Class[] classes, String[] msgs)"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,260,Throwable t = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,261,String msg = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,263,for(int i = 0; i < classes.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,265,t = n.getThrowable(i);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,266,"assertEquals(""throwable class"", classes[i], t.getClass());"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,267,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,269,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,271,else
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,273,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,275,"assertEquals(""throwable message"", msgs[i], msg);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,277,t = n.getThrowable(-1);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,278,"assertEquals(""throwable(-1)"", classes[0], t.getClass());"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,279,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,281,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,283,else
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,285,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,287,"assertEquals(""throwable message"", msgs[0], msg);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,288,t = n.getThrowable(999);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,289,"assertEquals(""throwable(999)"", classes[classes.length - 1], t.getClass());"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,290,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,292,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,294,else
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,296,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,298,"assertEquals(""throwable message"", msgs[msgs.length - 1], msg);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,301,public void testGetThrowables()
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,303,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,304,String msgs[] = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,305,Class[] throwables = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,307,msgs = new String[2];
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,308,msgs[0] = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,309,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,310,throwables = new Class[2];
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,311,throwables[0] = NestableExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,312,throwables[1] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,313,n = new NestableExceptionTester1(new Exception(msgs[1]));
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,314,"doNestableExceptionGetThrowables(n, throwables, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,316,msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,317,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,318,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,319,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,320,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,321,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,322,throwables = new Class[5];
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,323,throwables[0] = NestableExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,324,throwables[1] = NestableExceptionTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,325,throwables[2] = NestableExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,326,throwables[3] = NestableExceptionTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,327,throwables[4] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,328,"n = new NestableExceptionTester1(msgs[0], new NestableExceptionTester2(msgs[1], new NestableExceptionTester1(new NestableExceptionTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,329,"doNestableExceptionGetThrowables(n, throwables, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,332,"private void doNestableExceptionGetThrowables(Nestable n, Class[] classes, String[] msgs)"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,334,String msg = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,336,Throwable throwables[] = n.getThrowables();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,337,"assertEquals(""throwables length"", classes.length, throwables.length);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,338,for(int i = 0; i < classes.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,340,"assertEquals(""throwable class"", classes[i], throwables[i].getClass());"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,341,Throwable t = throwables[i];
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,342,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,344,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,346,else
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,348,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,350,"assertEquals(""throwable message"", msgs[i], msg);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,354,public void testIndexOfThrowable()
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,356,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,357,String msgs[] = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,358,Class[] throwables = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,360,msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,361,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,362,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,363,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,364,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,365,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,366,throwables = new Class[5];
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,367,throwables[0] = NestableExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,368,throwables[1] = NestableExceptionTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,369,throwables[2] = NestableExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,370,throwables[3] = NestableExceptionTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,371,throwables[4] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,372,"int[] indexes = {0, 1, 0, 1, 4};"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,373,"n = new NestableExceptionTester1(msgs[0], new NestableExceptionTester2(msgs[1], new NestableExceptionTester1(new NestableExceptionTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,374,for(int i = 0; i < throwables.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,376,"doNestableExceptionIndexOfThrowable(n, throwables[i], indexes[i], msgs[indexes[i]]);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,378,"doNestableExceptionIndexOfThrowable(n, java.util.Date.class, -1, null);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,381,"private void doNestableExceptionIndexOfThrowable(Nestable n, Class type, int expectedIndex, String expectedMsg)"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,383,Throwable t = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,385,int index = n.indexOfThrowable(type);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,386,"assertEquals(""index of throwable "" + type.getName(), expectedIndex, index);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,387,t = n.getThrowable(index);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,388,if(expectedMsg != null)
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,390,String msg = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,391,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,393,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,395,else
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,397,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,399,"assertEquals(""message of indexed throwable"", expectedMsg, msg);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,403,public void testIndexOfThrowableN()
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,405,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,406,String msgs[] = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,407,Class[] throwables = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,409,msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,410,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,411,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,412,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,413,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,414,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,415,throwables = new Class[5];
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,416,throwables[0] = NestableExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,417,throwables[1] = NestableExceptionTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,418,throwables[2] = NestableExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,419,throwables[3] = NestableExceptionTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,420,throwables[4] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,421,"int[] indexes = {0, 1, 0, 1, 4};"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,422,"n = new NestableExceptionTester1(msgs[0], new NestableExceptionTester2(msgs[1], new NestableExceptionTester1(new NestableExceptionTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,423,for(int i = 0; i < throwables.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,425,"doNestableExceptionIndexOfThrowableN(n, throwables[i], 0, indexes[i], msgs[indexes[i]]);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,427,"doNestableExceptionIndexOfThrowableN(n, NestableExceptionTester2.class, 2, 3, msgs[3]);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,428,"doNestableExceptionIndexOfThrowableN(n, NestableExceptionTester1.class, 1, 2, msgs[2]);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,429,"doNestableExceptionIndexOfThrowableN(n, java.util.Date.class, 0, -1, null);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,432,"private void doNestableExceptionIndexOfThrowableN(Nestable n, Class type, int pos, int expectedIndex, String expectedMsg)"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,434,Throwable t = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,436,"int index = n.indexOfThrowable(pos, type);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,437,"assertEquals(""index of throwable "" + type.getName(), expectedIndex, index);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,438,t = n.getThrowable(index);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,439,if(expectedMsg != null)
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,441,String msg = null;
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,442,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,444,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,446,else
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,448,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,450,"assertEquals(""message of indexed throwable"", expectedMsg, msg);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,454,public void testPrintPartialStackTrace()
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,456,"NestableException ne9 = new NestableException(""ne9"", new Exception(""ne9 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,457,ByteArrayOutputStream baos2 = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,458,PrintStream ps2 = new PrintStream(baos2);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,459,"PrintWriter pw2 = new PrintWriter(ps2, true);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,460,ne9.printPartialStackTrace(pw2);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,461,String stack2 = baos2.toString();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,462,"assertTrue(""stack trace startsWith == org.apache.commons.lang.exception.NestableException: ne9: ne9 exception"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,463,"stack2.startsWith(""org.apache.commons.lang.exception.NestableException: ne9: ne9 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,464,"assertEquals(""stack trace indexOf rethrown == -1"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,465,"stack2.indexOf(""rethrown""), -1);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,468,public void testPrintStackTrace()
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,470,"NestableException ne8 = new NestableException(""ne8"", new Exception(""ne8 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,471,ByteArrayOutputStream baos1 = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,472,PrintStream ps1 = new PrintStream(baos1);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,473,"PrintWriter pw1 = new PrintWriter(ps1, true);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,474,ne8.printStackTrace(ps1);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,475,String stack1 = baos1.toString();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,476,"assertTrue(""stack trace startsWith == java.lang.Exception: ne8 exception"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,477,"stack1.startsWith(""java.lang.Exception: ne8 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,478,"assertTrue(""stack trace indexOf org.apache.commons.lang.exception.NestableException: ne8: ne8 exception > -1"","
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,479,"stack1.indexOf(""org.apache.commons.lang.exception.NestableException: ne8: ne8 exception"") > -1);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,482,public static void main(String args[])
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,484,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,488,class NestableExceptionTester1 extends NestableException
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,490,public NestableExceptionTester1()
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,492,super();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,495,"public NestableExceptionTester1(String reason, Throwable cause)"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,497,"super(reason, cause);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,500,public NestableExceptionTester1(String reason)
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,502,super(reason);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,505,public NestableExceptionTester1(Throwable cause)
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,507,super(cause);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,512,class NestableExceptionTester2 extends NestableException
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,514,public NestableExceptionTester2()
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,516,super();
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,519,"public NestableExceptionTester2(String reason, Throwable cause)"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,521,"super(reason, cause);"
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,524,public NestableExceptionTester2(String reason)
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,526,super(reason);
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,529,public NestableExceptionTester2(Throwable cause)
True,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java,531,super(cause);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,1,package org.apache.commons.lang.exception;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,7,* reserved.
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,11,* are met:
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,19,*    distribution.
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,22,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,35,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,57,import java.io.ByteArrayOutputStream;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,58,import java.io.PrintStream;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,59,import java.io.PrintWriter;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,61,import junit.framework.*;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,62,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,64,* Tests the org.apache.commons.lang.exception.NestableRuntimeException class.
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,66,"* @author <a href=""mailto:steven@caswell.name"">Steven Caswell</a>"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,67,"* @version $Id: NestableRuntimeExceptionTestCase.java,v 1.1 2002/07/19 03:35:56 bayard Exp $"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,69,public class NestableRuntimeExceptionTestCase extends junit.framework.TestCase
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,72,* Construct a new instance of NestableRuntimeExceptionTestCase with the specified name
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,74,public NestableRuntimeExceptionTestCase(String name)
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,76,super(name);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,80,* Set up instance variables required by this test case.
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,82,public void setUp()
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,86,public static Test suite()
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,88,return new TestSuite(NestableRuntimeExceptionTestCase.class);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,92,* Tear down instance variables required by this test case.
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,94,public void tearDown()
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,99,* Test the implementation
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,101,public void testGetCause()
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,103,NestableRuntimeException ne1 = new NestableRuntimeException();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,104,"assertNull(""nestable runtime exception() cause is null"", ne1.getCause());"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,106,"NestableRuntimeException ne2 = new NestableRuntimeException(""ne2"");"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,107,"assertNull(""nestable runtime exception(\""ne2\"") cause is null"", ne2.getCause());"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,109,"NestableRuntimeException ne3 = new NestableRuntimeException(new Exception(""ne3 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,110,"assertNotNull(""nestable runtime exception(new Exception(\""ne3 exception\"") cause is not null"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,111,ne3.getCause());
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,112,"assertTrue(""nestable runtime exception(new Exception(\""ne3 exception\"") cause message == ne3 exception"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,113,"ne3.getCause().getMessage().equals(""ne3 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,115,"NestableRuntimeException ne4 = new NestableRuntimeException(""ne4"", new Exception(""ne4 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,116,"assertNotNull(""nestable runtime exception(\""ne4\"", new Exception(\""ne4 exception\"") cause is not null"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,117,ne4.getCause());
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,119,"NestableRuntimeException ne5 = new NestableRuntimeException(""ne5"", null);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,120,"assertNull(""nestable runtime exception(\""ne5\"", null) cause is null"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,121,ne5.getCause());
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,123,"NestableRuntimeException ne6 = new NestableRuntimeException(null, new Exception(""ne6 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,124,"assertNotNull(""nestable runtime exception(null, new Exception(\""ne6 exception\"") cause is not null"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,125,ne6.getCause());
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,128,public void testGetLength()
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,130,NestableRuntimeException ne1 = new NestableRuntimeException();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,131,"assertEquals(""ne1 length"", 1, ne1.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,133,"NestableRuntimeException ne2 = new NestableRuntimeException(""ne2"");"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,134,"assertEquals(""ne2 length"", 1, ne2.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,136,"NestableRuntimeException ne3 = new NestableRuntimeException(new Exception(""ne3 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,137,"assertEquals(""ne3 length"", 2, ne3.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,139,"NestableRuntimeException ne4 = new NestableRuntimeException(""ne4"", new Exception(""ne4 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,140,"assertEquals(""ne4 length"", 2, ne4.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,142,"NestableRuntimeException ne5 = new NestableRuntimeException(""ne5"", null);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,143,"assertEquals(""ne 5 length"", 1, ne5.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,145,"NestableRuntimeException ne6 = new NestableRuntimeException(null, new Exception(""ne6 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,146,"assertEquals(""ne 6 length"", 2, ne6.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,148,"NestableRuntimeException ne7 = new NestableRuntimeException(""ne7o"", new NestableRuntimeException(""ne7i"", new Exception(""ne7 exception"")));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,149,"assertEquals(""ne 7 length"", 3, ne7.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,151,"NestableRuntimeException ne8 = new NestableRuntimeException(""level 1"", new NestableRuntimeException(""level 2"", new NestableRuntimeException(new NestableRuntimeException(""level 4"", new Exception(""level 5"")))));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,152,"assertEquals(""ne 8 length"", 5, ne8.getLength());"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,155,public void testGetMessage()
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,157,NestableRuntimeException ne1 = new NestableRuntimeException();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,158,"assertNull(""nestable runtime exception() message is null"", ne1.getMessage());"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,160,"NestableRuntimeException ne2 = new NestableRuntimeException(""ne2"");"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,161,"assertNotNull(""nestable runtime exception(\""ne2\"") message is not null"", ne2.getMessage());"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,162,"assertTrue(""nestable runtime exception(\""ne2\"") message == ne2"", ne2.getMessage().equals(""ne2""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,164,"NestableRuntimeException ne3 = new NestableRuntimeException(new Exception(""ne3 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,165,"assertNotNull(""nestable runtime exception(new Exception(\""ne3 exception\"") message is not null"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,166,ne3.getMessage());
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,167,"assertTrue(""nestable runtime exception(new Exception(\""ne3 exception\"") message == cause message"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,168,ne3.getMessage().equals(ne3.getCause().getMessage()));
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,170,"NestableRuntimeException ne4 = new NestableRuntimeException(""ne4"", new Exception(""ne4 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,171,"assertNotNull(""nestable runtime exception(\""ne4\"", new Exception(\""ne4 exception\"") message is not null"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,172,ne4.getMessage());
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,173,"assertTrue(""nestable runtime exception(\""ne4\"", new Exception(\""ne4 exception\"") message == ne4: ne4 exception"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,174,"ne4.getMessage().equals(""ne4: ne4 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,176,"NestableRuntimeException ne5 = new NestableRuntimeException(""ne5"", null);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,177,"assertNotNull(""nestable runtime exception(\""ne5\"", new Exception(\""ne5 exception\"") message is not null"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,178,ne5.getMessage());
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,179,"assertTrue(""nestable runtime exception(\""ne5\"", null) message == ne5"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,180,"ne5.getMessage().equals(""ne5""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,182,"NestableRuntimeException ne6 = new NestableRuntimeException(null, new Exception(""ne6 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,183,"assertTrue(""nestable runtime exception(null, new Exception(\""ne6 exception\"") cause == ne6 exception"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,184,"ne6.getMessage().equals(""ne6 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,186,"NestableRuntimeException ne7 = new NestableRuntimeException(""ne7o"", new NestableRuntimeException(""ne7i"", new Exception(""ne7 exception"")));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,187,"assertTrue(""nextable exception(\""ne7o\"", new NestableRuntimeException(\""ne7i\"", new Exception(\""ne7 exception\""))) message is ne7o: ne7i: ne7 exception"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,188,"ne7.getMessage().equals(""ne7o: ne7i: ne7 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,191,public void testGetMessageN()
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,193,String[] msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,194,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,195,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,196,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,197,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,198,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,199,"NestableRuntimeException ne = new NestableRuntimeException(msgs[0], new NestableRuntimeException(msgs[1], new NestableRuntimeException(new NestableRuntimeException(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,200,for(int i = 0; i < msgs.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,202,"assertEquals(""message "" + i, msgs[i], ne.getMessage(i));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,204,"assertEquals(""message -1"", msgs[0], ne.getMessage(-1));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,205,"assertEquals(""message 999"", msgs[4], ne.getMessage(999));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,208,public void testGetMessages()
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,210,String[] msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,211,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,212,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,213,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,214,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,215,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,216,"NestableRuntimeException ne = new NestableRuntimeException(msgs[0], new NestableRuntimeException(msgs[1], new NestableRuntimeException(new NestableRuntimeException(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,217,String[] nMsgs = ne.getMessages();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,218,"assertEquals(""messages length"", msgs.length, nMsgs.length);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,219,for(int i = 0; i < nMsgs.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,221,"assertEquals(""message "" + i, msgs[i], nMsgs[i]);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,225,public void testGetThrowable()
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,227,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,228,String msgs[] = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,229,Class[] throwables = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,231,msgs = new String[2];
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,232,msgs[0] = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,233,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,234,throwables = new Class[2];
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,235,throwables[0] = NestableRuntimeExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,236,throwables[1] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,237,n = new NestableRuntimeExceptionTester1(new Exception(msgs[1]));
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,238,"doNestableRuntimeExceptionGetThrowable(n, throwables, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,240,msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,241,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,242,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,243,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,244,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,245,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,246,throwables = new Class[5];
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,247,throwables[0] = NestableRuntimeExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,248,throwables[1] = NestableRuntimeExceptionTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,249,throwables[2] = NestableRuntimeExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,250,throwables[3] = NestableRuntimeExceptionTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,251,throwables[4] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,252,"n = new NestableRuntimeExceptionTester1(msgs[0], new NestableRuntimeExceptionTester2(msgs[1], new NestableRuntimeExceptionTester1(new NestableRuntimeExceptionTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,253,"doNestableRuntimeExceptionGetThrowable(n, throwables, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,256,"private void doNestableRuntimeExceptionGetThrowable(Nestable n, Class[] classes, String[] msgs)"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,258,Throwable t = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,259,String msg = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,261,for(int i = 0; i < classes.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,263,t = n.getThrowable(i);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,264,"assertEquals(""throwable class"", classes[i], t.getClass());"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,265,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,267,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,269,else
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,271,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,273,"assertEquals(""throwable message"", msgs[i], msg);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,275,t = n.getThrowable(-1);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,276,"assertEquals(""throwable(-1)"", classes[0], t.getClass());"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,277,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,279,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,281,else
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,283,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,285,"assertEquals(""throwable message"", msgs[0], msg);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,286,t = n.getThrowable(999);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,287,"assertEquals(""throwable(999)"", classes[classes.length - 1], t.getClass());"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,288,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,290,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,292,else
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,294,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,296,"assertEquals(""throwable message"", msgs[msgs.length - 1], msg);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,299,public void testGetThrowables()
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,301,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,302,String msgs[] = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,303,Class[] throwables = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,305,msgs = new String[2];
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,306,msgs[0] = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,307,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,308,throwables = new Class[2];
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,309,throwables[0] = NestableRuntimeExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,310,throwables[1] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,311,n = new NestableRuntimeExceptionTester1(new Exception(msgs[1]));
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,312,"doNestableRuntimeExceptionGetThrowables(n, throwables, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,314,msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,315,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,316,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,317,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,318,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,319,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,320,throwables = new Class[5];
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,321,throwables[0] = NestableRuntimeExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,322,throwables[1] = NestableRuntimeExceptionTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,323,throwables[2] = NestableRuntimeExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,324,throwables[3] = NestableRuntimeExceptionTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,325,throwables[4] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,326,"n = new NestableRuntimeExceptionTester1(msgs[0], new NestableRuntimeExceptionTester2(msgs[1], new NestableRuntimeExceptionTester1(new NestableRuntimeExceptionTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,327,"doNestableRuntimeExceptionGetThrowables(n, throwables, msgs);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,330,"private void doNestableRuntimeExceptionGetThrowables(Nestable n, Class[] classes, String[] msgs)"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,332,String msg = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,334,Throwable throwables[] = n.getThrowables();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,335,"assertEquals(""throwables length"", classes.length, throwables.length);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,336,for(int i = 0; i < classes.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,338,"assertEquals(""throwable class"", classes[i], throwables[i].getClass());"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,339,Throwable t = throwables[i];
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,340,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,342,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,344,else
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,346,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,348,"assertEquals(""throwable message"", msgs[i], msg);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,352,public void testIndexOfThrowable()
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,354,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,355,String msgs[] = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,356,Class[] throwables = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,358,msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,359,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,360,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,361,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,362,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,363,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,364,throwables = new Class[5];
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,365,throwables[0] = NestableRuntimeExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,366,throwables[1] = NestableRuntimeExceptionTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,367,throwables[2] = NestableRuntimeExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,368,throwables[3] = NestableRuntimeExceptionTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,369,throwables[4] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,370,"int[] indexes = {0, 1, 0, 1, 4};"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,371,"n = new NestableRuntimeExceptionTester1(msgs[0], new NestableRuntimeExceptionTester2(msgs[1], new NestableRuntimeExceptionTester1(new NestableRuntimeExceptionTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,372,for(int i = 0; i < throwables.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,374,"doNestableRuntimeExceptionIndexOfThrowable(n, throwables[i], indexes[i], msgs[indexes[i]]);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,376,"doNestableRuntimeExceptionIndexOfThrowable(n, java.util.Date.class, -1, null);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,379,"private void doNestableRuntimeExceptionIndexOfThrowable(Nestable n, Class type, int expectedIndex, String expectedMsg)"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,381,Throwable t = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,383,int index = n.indexOfThrowable(type);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,384,"assertEquals(""index of throwable "" + type.getName(), expectedIndex, index);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,385,t = n.getThrowable(index);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,386,if(expectedMsg != null)
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,388,String msg = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,389,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,391,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,393,else
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,395,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,397,"assertEquals(""message of indexed throwable"", expectedMsg, msg);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,401,public void testIndexOfThrowableN()
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,403,Nestable n = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,404,String msgs[] = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,405,Class[] throwables = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,407,msgs = new String[5];
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,408,"msgs[0] = ""level 1"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,409,"msgs[1] = ""level 2"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,410,msgs[2] = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,411,"msgs[3] = ""level 4"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,412,"msgs[4] = ""level 5"";"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,413,throwables = new Class[5];
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,414,throwables[0] = NestableRuntimeExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,415,throwables[1] = NestableRuntimeExceptionTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,416,throwables[2] = NestableRuntimeExceptionTester1.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,417,throwables[3] = NestableRuntimeExceptionTester2.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,418,throwables[4] = Exception.class;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,419,"int[] indexes = {0, 1, 0, 1, 4};"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,420,"n = new NestableRuntimeExceptionTester1(msgs[0], new NestableRuntimeExceptionTester2(msgs[1], new NestableRuntimeExceptionTester1(new NestableRuntimeExceptionTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,421,for(int i = 0; i < throwables.length; i++)
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,423,"doNestableRuntimeExceptionIndexOfThrowableN(n, throwables[i], 0, indexes[i], msgs[indexes[i]]);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,425,"doNestableRuntimeExceptionIndexOfThrowableN(n, NestableRuntimeExceptionTester2.class, 2, 3, msgs[3]);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,426,"doNestableRuntimeExceptionIndexOfThrowableN(n, NestableRuntimeExceptionTester1.class, 1, 2, msgs[2]);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,427,"doNestableRuntimeExceptionIndexOfThrowableN(n, java.util.Date.class, 0, -1, null);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,430,"private void doNestableRuntimeExceptionIndexOfThrowableN(Nestable n, Class type, int pos, int expectedIndex, String expectedMsg)"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,432,Throwable t = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,434,"int index = n.indexOfThrowable(pos, type);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,435,"assertEquals(""index of throwable "" + type.getName(), expectedIndex, index);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,436,t = n.getThrowable(index);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,437,if(expectedMsg != null)
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,439,String msg = null;
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,440,if(Nestable.class.isInstance(t))
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,442,msg = ((Nestable) t).getMessage(0);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,444,else
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,446,msg = t.getMessage();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,448,"assertEquals(""message of indexed throwable"", expectedMsg, msg);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,452,public void testPrintStackTrace()
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,454,"NestableRuntimeException ne8 = new NestableRuntimeException(""ne8"", new Exception(""ne8 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,455,ByteArrayOutputStream baos1 = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,456,PrintStream ps1 = new PrintStream(baos1);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,457,"PrintWriter pw1 = new PrintWriter(ps1, true);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,458,ne8.printStackTrace(ps1);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,459,String stack1 = baos1.toString();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,460,"assertTrue(""stack trace startsWith == java.lang.Exception: ne8 exception"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,461,"stack1.startsWith(""java.lang.Exception: ne8 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,462,"assertTrue(""stack trace indexOf org.apache.commons.lang.exception.NestableRuntimeException: ne8: ne8 exception > -1"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,463,"stack1.indexOf(""org.apache.commons.lang.exception.NestableRuntimeException: ne8: ne8 exception"") > -1);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,466,public void testPrintPartialStackTrace()
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,468,"NestableRuntimeException ne9 = new NestableRuntimeException(""ne9"", new Exception(""ne9 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,469,ByteArrayOutputStream baos2 = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,470,PrintStream ps2 = new PrintStream(baos2);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,471,"PrintWriter pw2 = new PrintWriter(ps2, true);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,472,ne9.printPartialStackTrace(pw2);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,473,String stack2 = baos2.toString();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,474,"assertTrue(""stack trace startsWith == org.apache.commons.lang.exception.NestableRuntimeException: ne9: ne9 exception"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,475,"stack2.startsWith(""org.apache.commons.lang.exception.NestableRuntimeException: ne9: ne9 exception""));"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,476,"assertEquals(""stack trace indexOf rethrown == -1"","
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,477,"stack2.indexOf(""rethrown""), -1);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,480,public static void main(String args[])
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,482,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,486,class NestableRuntimeExceptionTester1 extends NestableRuntimeException
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,488,public NestableRuntimeExceptionTester1()
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,490,super();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,493,"public NestableRuntimeExceptionTester1(String reason, Throwable cause)"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,495,"super(reason, cause);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,498,public NestableRuntimeExceptionTester1(String reason)
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,500,super(reason);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,503,public NestableRuntimeExceptionTester1(Throwable cause)
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,505,super(cause);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,510,class NestableRuntimeExceptionTester2 extends NestableRuntimeException
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,512,public NestableRuntimeExceptionTester2()
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,514,super();
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,517,"public NestableRuntimeExceptionTester2(String reason, Throwable cause)"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,519,"super(reason, cause);"
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,522,public NestableRuntimeExceptionTester2(String reason)
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,524,super(reason);
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,527,public NestableRuntimeExceptionTester2(Throwable cause)
True,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java,529,super(cause);
