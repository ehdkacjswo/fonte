is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,114,* The enums can have functionality by using anonymous inner classes
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,115,"* [Effective Java, Bloch01]:"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,116,* <pre>
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,117,* public abstract class OperationEnum extends Enum {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,118,"*   public static final OperationEnum PLUS = new OperationEnum(""Plus"") {"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,119,"*     public double eval(double a, double b) {"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,120,*       return (a + b);
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,123,"*   public static final OperationEnum MINUS = new OperationEnum(""Minus"") {"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,124,"*     public double eval(double a, double b) {"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,125,*       return (a - b);
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,129,*   private OperationEnum(String color) {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,130,*     super(color);
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,133,"*   public abstract double eval(double a, double b);"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,135,*   public static OperationEnum getEnum(String name) {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,136,"*     return (OperationEnum) getEnum(OperationEnum.class, name);"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,139,*   public static Map getEnumMap() {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,140,*     return getEnumMap(OperationEnum.class);
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,143,*   public static List getEnumList() {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,144,*     return getEnumList(OperationEnum.class);
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,147,*   public static Iterator iterator() {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,148,*     return iterator(OperationEnum.class);
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,151,* </pre>
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,152,* <p>
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,157,* @author Chris Webb
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,119," @version $Id: Enum.java,v 1.5 2002/12/23 00:17:06 scolebourne Exp $"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,159,"* @version $Id: Enum.java,v 1.6 2002/12/31 22:39:39 scolebourne Exp $"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,163,ntry entry = (Entry) cEnumClasses.get(getClass().getName());
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,203,String className = Enum.getEnumClassName(getClass());
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,204,Entry entry = (Entry) cEnumClasses.get(className);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,166,"EnumClasses.put(getClass().getName(), entry);"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,207,"cEnumClasses.put(className, entry);"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,181,"eturn Enum.getEnum(getClass(), getName());"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,222,Entry entry = (Entry) cEnumClasses.get(Enum.getEnumClassName(getClass()));
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,223,if (entry == null) {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,224,return null;
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,226,return (Enum) entry.map.get(getName());
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,187, @param enumClass  the class of the Enum to get
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,234,"* @param enumClass  the class of the Enum to get, must not be null"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,193,f (enumClass == null) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,194,"hrow new IllegalArgumentException(""The Enum Class must not be null"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,196,ntry entry = (Entry) cEnumClasses.get(enumClass.getName());
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,240,Entry entry = getEntry(enumClass);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,207, @param enumClass  the class of the Enum to get
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,251,"* @param enumClass  the class of the Enum to get, must not be null"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,213,f (enumClass == null) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,214,"hrow new IllegalArgumentException(""The Enum Class must not be null"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,216,f (Enum.class.isAssignableFrom(enumClass) == false) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,217,"hrow new IllegalArgumentException(""The Class must be a subclass of Enum"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,219,ntry entry = (Entry) cEnumClasses.get(enumClass.getName());
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,257,Entry entry = getEntry(enumClass);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,231, @param enumClass  the class of the Enum to get
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,269,"* @param enumClass  the class of the Enum to get, must not be null"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,237,f (enumClass == null) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,238,"hrow new IllegalArgumentException(""The Enum Class must not be null"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,240,f (Enum.class.isAssignableFrom(enumClass) == false) {
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,241,"hrow new IllegalArgumentException(""The Class must be a subclass of Enum"");"
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,243,ntry entry = (Entry) cEnumClasses.get(enumClass.getName());
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,275,Entry entry = getEntry(enumClass);
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,255, @param enumClass  the class of the Enum to get
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,287,"* @param enumClass  the class of the Enum to get, must not be null"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,297,* Gets an entry from the map of Enums.
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,299,* @param enumClass  the class of the Enum to get
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,300,* @return the enum entry
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,302,private static Entry getEntry(Class enumClass) {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,303,if (enumClass == null) {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,304,"throw new IllegalArgumentException(""The Enum Class must not be null"");"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,306,if (Enum.class.isAssignableFrom(enumClass) == false) {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,307,"throw new IllegalArgumentException(""The Class must be a subclass of Enum"");"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,309,Entry entry = (Entry) cEnumClasses.get(enumClass.getName());
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,310,return entry;
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,314,* Convert a class to a class name accounting for inner classes.
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,316,* @param cls  the class to get the name for
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,317,* @return the class name
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,319,protected static String getEnumClassName(Class cls) {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,320,String className = cls.getName();
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,321,int index = className.lastIndexOf('$');
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,322,if (index > -1) {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,323,// is it an anonymous inner class?
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,324,String inner = className.substring(index + 1);
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,325,if (inner.length() > 0 &&
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,326,inner.charAt(0) >= '0' &&
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,327,inner.charAt(0) < '9') {
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,328,// Strip off anonymous inner class reference.
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,329,"className = className.substring(0, index);"
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,332,return className;
False,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,346,tring shortName = getClass().getName();
True,src/java/org/apache/commons/lang/enum/Enum.java,src/java/org/apache/commons/lang/enum/Enum.java,419,String shortName = Enum.getEnumClassName(getClass());
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,133," @version $Id: ValuedEnum.java,v 1.3 2002/12/23 00:17:06 scolebourne Exp $"
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,133,"* @version $Id: ValuedEnum.java,v 1.4 2002/12/31 22:39:39 scolebourne Exp $"
False,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,207,tring shortName = getClass().getName();
True,src/java/org/apache/commons/lang/enum/ValuedEnum.java,src/java/org/apache/commons/lang/enum/ValuedEnum.java,207,String shortName = Enum.getEnumClassName(getClass());
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,68," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,69," @version $Id: EnumTest.java,v 1.4 2002/11/06 19:14:43 bayard Exp $"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,68,* @author Stephen Colebourne
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,69,"* @version $Id: EnumTest.java,v 1.5 2002/12/31 22:39:39 scolebourne Exp $"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,185,public void testOperationGet() {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,186,"assertSame(OperationEnum.PLUS, OperationEnum.getEnum(""Plus""));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,187,"assertSame(OperationEnum.MINUS, OperationEnum.getEnum(""Minus""));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,188,"assertSame(null, OperationEnum.getEnum(""Pink""));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,191,public void testOperationSerialization() {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,192,"assertSame(OperationEnum.PLUS, SerializationUtils.clone(OperationEnum.PLUS));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,193,"assertSame(OperationEnum.MINUS, SerializationUtils.clone(OperationEnum.MINUS));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,196,public void testOperationToString() {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,197,"assertEquals(""OperationEnum[Plus]"", OperationEnum.PLUS.toString());"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,200,public void testOperationList() {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,201,List list = OperationEnum.getEnumList();
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,202,assertNotNull(list);
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,203,"assertEquals(2, list.size());"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,204,"assertEquals(list.size(), OperationEnum.getEnumMap().keySet().size());"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,206,Iterator it = list.iterator();
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,207,"assertSame(OperationEnum.PLUS, it.next());"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,208,"assertSame(OperationEnum.MINUS, it.next());"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,211,public void testOperationMap() {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,212,Map map = OperationEnum.getEnumMap();
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,213,assertNotNull(map);
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,214,"assertEquals(map.keySet().size(), OperationEnum.getEnumList().size());"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,216,assertTrue(map.containsValue(OperationEnum.PLUS));
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,217,assertTrue(map.containsValue(OperationEnum.MINUS));
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,218,"assertSame(OperationEnum.PLUS, map.get(""Plus""));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,219,"assertSame(OperationEnum.MINUS, map.get(""Minus""));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,222,public void testOperationCalculation() {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,223,"assertEquals(3, OperationEnum.PLUS.eval(1, 2));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,224,"assertEquals(-1, OperationEnum.MINUS.eval(1, 2));"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,5,* reserved.
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,9,* are met:
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,17,*    distribution.
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,54,package org.apache.commons.lang.enum;
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,56,import java.util.Iterator;
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,57,import java.util.List;
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,58,import java.util.Map;
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,60,* Operator enumeration.
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,62,* @author Stephen Colebourne
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,63,"* @version $Id: OperationEnum.java,v 1.1 2002/12/31 22:39:39 scolebourne Exp $"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,65,public abstract class OperationEnum extends Enum {
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,66,"public static final OperationEnum PLUS = new OperationEnum(""Plus"") {"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,67,"public int eval(int a, int b) {"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,68,return (a + b);
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,71,"public static final OperationEnum MINUS = new OperationEnum(""Minus"") {"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,72,"public int eval(int a, int b) {"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,73,return (a - b);
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,77,private OperationEnum(String name) {
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,78,super(name);
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,81,"public abstract int eval(int a, int b);"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,83,public static OperationEnum getEnum(String name) {
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,84,"return (OperationEnum) getEnum(OperationEnum.class, name);"
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,87,public static Map getEnumMap() {
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,88,return getEnumMap(OperationEnum.class);
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,91,public static List getEnumList() {
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,92,return getEnumList(OperationEnum.class);
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,95,public static Iterator iterator() {
True,src/test/org/apache/commons/lang/enum/OperationEnum.java,src/test/org/apache/commons/lang/enum/OperationEnum.java,96,return iterator(OperationEnum.class);
