is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CheckRegExp.java,src/com/google/javascript/jscomp/CheckRegExp.java,32,"iagnosticType.disabled(""JSC_REGEXP_REFERENCE"","
True,src/com/google/javascript/jscomp/CheckRegExp.java,src/com/google/javascript/jscomp/CheckRegExp.java,32,"DiagnosticType.warning(""JSC_REGEXP_REFERENCE"","
True,src/com/google/javascript/jscomp/CompilationLevel.java,src/com/google/javascript/jscomp/CompilationLevel.java,97,options.inlineLocalFunctions = true;
True,src/com/google/javascript/jscomp/CompilationLevel.java,src/com/google/javascript/jscomp/CompilationLevel.java,98,options.inlineAnonymousFunctionExpressions = true;
True,src/com/google/javascript/jscomp/CompilationLevel.java,src/com/google/javascript/jscomp/CompilationLevel.java,166,// Move code around based on the defined modules.
True,src/com/google/javascript/jscomp/CompilationLevel.java,src/com/google/javascript/jscomp/CompilationLevel.java,167,options.crossModuleCodeMotion = true;
True,src/com/google/javascript/jscomp/CompilationLevel.java,src/com/google/javascript/jscomp/CompilationLevel.java,168,options.crossModuleMethodMotion = true;
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,168,f (inlineAnonymousFunctionExpressions) {
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,169,"indAnonymousFunctionExpressions(t, n);"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,167,if (inlineAnonymousFunctionExpressions) {
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,168,"findAnonymousFunctionExpressions(t, n);"
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,754," ref.callNode.toStringTree() + ""\n parent:  """
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,754,"+ ref.callNode.toStringTree() + ""\n parent:  """
True,test/com/google/javascript/jscomp/AliasExternalsTest.java,test/com/google/javascript/jscomp/AliasExternalsTest.java,56,super.enableLineNumberCheck(false);
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,35,@Override
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,36,public void setUp() {
True,test/com/google/javascript/jscomp/AliasKeywordsTest.java,test/com/google/javascript/jscomp/AliasKeywordsTest.java,37,super.enableLineNumberCheck(false);
True,test/com/google/javascript/jscomp/AliasStringsTest.java,test/com/google/javascript/jscomp/AliasStringsTest.java,41,@Override
True,test/com/google/javascript/jscomp/AliasStringsTest.java,test/com/google/javascript/jscomp/AliasStringsTest.java,42,public void setUp() {
True,test/com/google/javascript/jscomp/AliasStringsTest.java,test/com/google/javascript/jscomp/AliasStringsTest.java,43,super.enableLineNumberCheck(false);
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,69,rivate boolean checkLineNumbers = false;
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,69,private boolean checkLineNumbers = true;
True,test/com/google/javascript/jscomp/CreateSyntheticBlocksTest.java,test/com/google/javascript/jscomp/CreateSyntheticBlocksTest.java,34,@Override
True,test/com/google/javascript/jscomp/CreateSyntheticBlocksTest.java,test/com/google/javascript/jscomp/CreateSyntheticBlocksTest.java,35,public void setUp() {
True,test/com/google/javascript/jscomp/CreateSyntheticBlocksTest.java,test/com/google/javascript/jscomp/CreateSyntheticBlocksTest.java,36,super.enableLineNumberCheck(false);
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,38,@Override
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,39,public void setUp() {
True,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,test/com/google/javascript/jscomp/ExportTestFunctionsTest.java,40,super.enableLineNumberCheck(false);
True,test/com/google/javascript/jscomp/FunctionRewriterTest.java,test/com/google/javascript/jscomp/FunctionRewriterTest.java,51,@Override
True,test/com/google/javascript/jscomp/FunctionRewriterTest.java,test/com/google/javascript/jscomp/FunctionRewriterTest.java,52,protected void setUp() {
True,test/com/google/javascript/jscomp/FunctionRewriterTest.java,test/com/google/javascript/jscomp/FunctionRewriterTest.java,53,super.enableLineNumberCheck(false);
True,test/com/google/javascript/jscomp/GenerateExportsTest.java,test/com/google/javascript/jscomp/GenerateExportsTest.java,49,super.enableLineNumberCheck(false);
True,test/com/google/javascript/jscomp/GroupVariableDeclarationsTest.java,test/com/google/javascript/jscomp/GroupVariableDeclarationsTest.java,21,@Override
True,test/com/google/javascript/jscomp/GroupVariableDeclarationsTest.java,test/com/google/javascript/jscomp/GroupVariableDeclarationsTest.java,22,protected void setUp() {
True,test/com/google/javascript/jscomp/GroupVariableDeclarationsTest.java,test/com/google/javascript/jscomp/GroupVariableDeclarationsTest.java,23,super.enableLineNumberCheck(false);
False,test/com/google/javascript/jscomp/IgnoreCajaPropertiesTest.java,test/com/google/javascript/jscomp/IgnoreCajaPropertiesTest.java,27,rivate static final String EXTERNS =
True,test/com/google/javascript/jscomp/IgnoreCajaPropertiesTest.java,test/com/google/javascript/jscomp/IgnoreCajaPropertiesTest.java,27,private static final String EXTERNS =
True,test/com/google/javascript/jscomp/IgnoreCajaPropertiesTest.java,test/com/google/javascript/jscomp/IgnoreCajaPropertiesTest.java,36,@Override
True,test/com/google/javascript/jscomp/IgnoreCajaPropertiesTest.java,test/com/google/javascript/jscomp/IgnoreCajaPropertiesTest.java,37,public void setUp() {
True,test/com/google/javascript/jscomp/IgnoreCajaPropertiesTest.java,test/com/google/javascript/jscomp/IgnoreCajaPropertiesTest.java,38,super.enableLineNumberCheck(false);
False,test/com/google/javascript/jscomp/IgnoreCajaPropertiesTest.java,test/com/google/javascript/jscomp/IgnoreCajaPropertiesTest.java,56,/ Check that the counter's incrementing properly and
True,test/com/google/javascript/jscomp/IgnoreCajaPropertiesTest.java,test/com/google/javascript/jscomp/IgnoreCajaPropertiesTest.java,61,// Check that the counter's incrementing properly and
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,27,oolean allowExpressionDecomposition = true;
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,28,oolean allowAnonymousFunctionExpressionInlining = true;
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,29,oolean allowLocalFunctionInlining = true;
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,27,final boolean allowExpressionDecomposition = true;
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,28,final boolean allowAnonymousFunctionExpressionInlining = true;
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,29,final boolean allowLocalFunctionInlining = true;
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,40,allowGlobalFunctionInlining = true;
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1500,public void testLocalFunctionInliningOnly1() {
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1501,this.allowGlobalFunctionInlining = true;
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1502,"test(""function f(){} f()"", ""void 0;"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1503,this.allowGlobalFunctionInlining = false;
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1504,"testSame(""function f(){} f()"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1507,public void testLocalFunctionInliningOnly2() {
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1508,this.allowGlobalFunctionInlining = false;
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1509,"testSame(""function f(){} f()"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1511,"test(""function f(){ function g() {return 1} return g() }; f();"","
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1512,"""function f(){ return 1 }; f();"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1515,public void testLocalFunctionInliningOnly3() {
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1516,this.allowGlobalFunctionInlining = false;
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1517,"testSame(""function f(){} f()"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1519,"test(""(function(){ function g() {return 1} return g() })();"","
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1520,"""(function(){ return 1 })();"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1523,public void testLocalFunctionInliningOnly4() {
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1524,this.allowGlobalFunctionInlining = false;
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1525,"testSame(""function f(){} f()"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1527,"test(""(function(){ return (function() {return 1})() })();"","
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1528,"""(function(){ return 1 })();"");"
True,test/com/google/javascript/jscomp/InstrumentFunctionsTest.java,test/com/google/javascript/jscomp/InstrumentFunctionsTest.java,39,super.enableLineNumberCheck(false);
True,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,31,@Override
True,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,32,public void setUp() {
True,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,33,super.enableLineNumberCheck(false);
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,31,@Override
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,32,public void setUp() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,33,super.enableLineNumberCheck(false);
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,33,@Override
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,34,protected void setUp() {
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,35,super.enableLineNumberCheck(false);
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,40,super.enableLineNumberCheck(false);
