is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,19,import com.google.common.annotations.VisibleForTesting;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,22,mport com.google.javascript.jscomp.NameReferenceGraph.Name;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,23,mport com.google.javascript.jscomp.NameReferenceGraph.Reference;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,24,mport com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,25,mport com.google.javascript.jscomp.graph.DiGraph.DiGraphNode;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,26,import java.util.Collection;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,43,lass OptimizeParameters implements CompilerPass {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,41,class OptimizeParameters
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,42,"implements CompilerPass, OptimizeCalls.CallGraphCompilerPass {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,46,rivate NameReferenceGraph nameGraph;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,48,"ptimizeParameters(AbstractCompiler compiler, NameReferenceGraph nameGraph) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,46,OptimizeParameters(AbstractCompiler compiler) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,50,his.nameGraph = nameGraph;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,53,ptimizeParameters(AbstractCompiler compiler) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,54,"his(compiler, null);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,50,// TODO(johnlenz): Remove this.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,51,"OptimizeParameters(AbstractCompiler compiler, NameReferenceGraph unused) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,52,this(compiler);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,56,@VisibleForTesting
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,59,f (nameGraph == null) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,60,ameReferenceGraphConstruction c =
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,61,ew NameReferenceGraphConstruction(compiler);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,62,".process(externs, root);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,63,ameGraph = c.getNameReferenceGraph();
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,58,SimpleDefinitionFinder defFinder = new SimpleDefinitionFinder(compiler);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,59,"defFinder.process(externs, root);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,60,process(defFinder);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,63,@Override
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,64,public void process(SimpleDefinitionFinder definitions) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,65,for (DefinitionSite defSite : definitions.getDefinitionSites()) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,66,"if (canChangeSignature(defSite, definitions)) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,67,"tryEliminateConstantArgs(defSite, definitions);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,68,"tryEliminateOptionalArgs(defSite, definitions);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,74,* @return Whether the definitionSite represents a function whose call
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,75,*      signature can be modified.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,77,private boolean canChangeSignature(
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,78,"DefinitionSite definitionSite, SimpleDefinitionFinder defFinder) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,79,Definition definition = definitionSite.definition;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,81,if (definitionSite.inExterns) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,82,return false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,85,// Only functions may be rewritten.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,86,"// Functions that access ""arguments"" are not eligible since"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,87,// rewrite changes the structure of this object.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,88,Node rValue = definition.getRValue();
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,89,if (rValue == null ||
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,90,!NodeUtil.isFunction(rValue) ||
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,91,NodeUtil.isVarArgsFunction(rValue)) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,92,return false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,95,// TODO(johnlenz): support rewriting methods defined as part of
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,96,// object literals (they are generally problematic because they may be
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,97,"// maps of functions use in for-in expressions, etc)."
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,98,"// Be conservative, don't try to optimize any declaration that isn't as"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,99,// simple function declaration or assignment.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,100,if (!OptimizeReturns.isSimpleFunctionDeclaration(rValue)) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,101,return false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,104,// Assume an exported method result is used.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,105,"if (OptimizeReturns.maybeExported(compiler, definition)) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,106,return false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,109,Collection<UseSite> useSites = defFinder.getUseSites(definition);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,111,if (useSites.isEmpty()) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,112,return false;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,66,"or (DiGraphNode<Name, Reference> node :"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,67,ameGraph.getDirectedGraphNodes()) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,68,ame name = node.getValue();
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,69,f (name.canChangeSignature()) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,70,"ist<DiGraphEdge<Name, Reference>> edges = node.getInEdges();"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,71,"ryEliminateConstantArgs(name, edges);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,72,"ryEliminateOptionalArgs(name, edges);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,115,for (UseSite site : useSites) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,116,// Any non-call reference maybe introducing an alias. Don't try to
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,117,"// change the function signature, if all the aliases can't also be"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,118,// changed.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,119,if (!isCallSite(site.node)) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,120,return false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,123,// TODO(johnlenz): support specialization
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,125,// Multiple definitions prevent rewrite.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,126,// TODO(johnlenz): Allow rewrite all definitions are valid.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,127,Node nameNode = site.node;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,128,Collection<Definition> singleSiteDefinitions =
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,129,defFinder.getDefinitionsReferencedAt(nameNode);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,130,if (singleSiteDefinitions.size() > 1) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,131,return false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,133,Preconditions.checkState(!singleSiteDefinitions.isEmpty());
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,134,Preconditions.checkState(singleSiteDefinitions.contains(definition));
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,137,return true;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,79, @param name The name of the function to optimize.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,80, @param edges All the references to this name.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,82,"rivate void tryEliminateOptionalArgs(Name name,"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,83,"ist<DiGraphEdge<Name, Reference>> edges) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,143,private void tryEliminateOptionalArgs(
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,144,"DefinitionSite defSite, SimpleDefinitionFinder defFinder) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,89,"or (DiGraphEdge<Name, Reference> refEdge : edges) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,90,eference ref = refEdge.getValue();
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,91,ode call = ref.parent;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,149,Definition definition = defSite.definition;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,150,Collection<UseSite> useSites = defFinder.getUseSites(definition);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,151,for (UseSite site : useSites) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,152,Preconditions.checkState(isCallSite(site.node));
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,153,Node call = site.node.getParent();
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,93,f (isCallSite(ref)) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,94,nt numArgs = call.getChildCount() - 1;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,95,f (numArgs > maxArgs) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,96,axArgs = numArgs;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,98," // else this is a definition or a dereference, ignore it."
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,155,int numArgs = call.getChildCount() - 1;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,156,if (numArgs > maxArgs) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,157,maxArgs = numArgs;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,101,or (Definition definition : name.getDeclarations()) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,102,"liminateParamsAfter(definition.getRValue(), maxArgs);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,161,"eliminateParamsAfter(definition.getRValue(), maxArgs);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,117, @param name The name of the function to optimize.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,118, @param edges All the references to this name.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,120,"rivate void tryEliminateConstantArgs(Name name,"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,121,"ist<DiGraphEdge<Name, Reference>> edges) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,175,private void tryEliminateConstantArgs(
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,176,"DefinitionSite defSite, SimpleDefinitionFinder defFinder) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,127,"or (DiGraphEdge<Name, Reference> refEdge : edges) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,128,eference ref = refEdge.getValue();
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,129,ode call = ref.parent;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,131,f (isCallSite(ref)) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,132,ode cur = call.getFirstChild();
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,133,f (firstCall) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,134,/ Use the first call to construct a list of parameters of the
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,135,/ function.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,136,"uildParameterList(parameters, cur);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,137,irstCall = false;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,138, else {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,139,"indConstantParameters(parameters, cur);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,182,Definition definition = defSite.definition;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,183,Collection<UseSite> useSites = defFinder.getUseSites(definition);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,184,for (UseSite site : useSites) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,185,Preconditions.checkState(isCallSite(site.node));
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,186,Node call = site.node.getParent();
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,188,Node cur = call.getFirstChild();
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,189,if (firstCall) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,190,// Use the first call to construct a list of parameters of the
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,191,// function.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,192,"buildParameterList(parameters, cur);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,193,firstCall = false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,194,} else {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,195,"findConstantParameters(parameters, cur);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,145,"or (DiGraphEdge<Name, Reference> refEdge : edges) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,146,eference ref = refEdge.getValue();
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,147,ode call = ref.parent;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,200,for (UseSite site : useSites) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,201,Preconditions.checkState(isCallSite(site.node));
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,202,Node call = site.node.getParent();
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,149,f (isCallSite(ref)) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,150,"ptimizeCallSite(parameters, call);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,204,"optimizeCallSite(parameters, call);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,156,or (Definition definition : name.getDeclarations()) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,157,ode function = definition.getRValue();
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,158,f (NodeUtil.isFunction(function)) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,159,"ptimizeFunctionDefinition(parameters, function);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,209,Node function = definition.getRValue();
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,210,if (NodeUtil.isFunction(function)) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,211,"optimizeFunctionDefinition(parameters, function);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,165,or (int index = 0; (cur = cur.getNext()) != null; index++) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,216,int index = 0;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,217,while ((cur = cur.getNext()) != null) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,168, else if (parameters.get(index).shouldRemove()){
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,220,} else if (parameters.get(index).shouldRemove()) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,226,index++;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,229,for (;index < parameters.size(); index++) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,230,parameters.get(index).setShouldRemove(false);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,205, @param ref A reference to a function.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,262,* @param fn A function to check.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,208,rivate boolean isCallSite(Reference ref) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,209,ode call = ref.parent;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,265,private boolean isCallSite(Node fn) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,266,Node call = fn.getParent();
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,213,eturn isCallOrNew(call) && call.getFirstChild() == ref.site;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,270,return isCallOrNew(call) && call.getFirstChild() == fn;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,299,hile (formalArgPtr != null) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,300,ode next = formalArgPtr.getNext();
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,301,unction.getFirstChild().getNext().removeChild(formalArgPtr);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,302,"ode var = new Node(Token.VAR, formalArgPtr);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,303,unction.getLastChild().addChildrenToFront(var);
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,356,"return eliminateParamsAfter(function, formalArgPtr);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,359,"private boolean eliminateParamsAfter(Node fnNode, Node argNode) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,360,if (argNode != null) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,361,"// Keep the args in the same order, do the last first."
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,362,"eliminateParamsAfter(fnNode, argNode.getNext());"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,363,argNode.detachFromParent();
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,364,"Node var = new Node(Token.VAR, argNode).copyInformationFrom(argNode);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,365,fnNode.getLastChild().addChildrenToFront(var);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,305,aramRemoved = true;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,306,ormalArgPtr = next;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,367,return true;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,309,eturn paramRemoved;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,369,return false;
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,40,public void testSimpleRemoval() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,41,"test(""function foo(p1) { } foo(); foo()"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,42,"""function foo() {var p1;} foo(); foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,43,"test(""function foo(p1) { } foo(1); foo(1)"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,44,"""function foo() {var p1 = 1;} foo(); foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,45,"test(""function foo(p1) { } foo(1,2); foo(1,4)"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,46,"""function foo() {var p1 = 1;} foo(2); foo(4)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,57,public void testDifferentScopes() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,58,"test(""function f(a, b) {} f(1, 2); f(1, 3); "" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,59,"""function h() {function g(a) {} g(4); g(5);} f(1, 2);"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,60,"""function f(b) {var a = 1} f(2); f(3); "" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,61,"""function h() {function g(a) {} g(4); g(5);} f(2);"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,64,public void testOptimizeOnlyImmutableValues() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,65,"test(""function foo(a) {}; foo(undefined);"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,66,"""function foo() {var a = undefined}; foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,67,"test(""function foo(a) {}; foo(null);"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,68,"""function foo() {var a = null}; foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,69,"test(""function foo(a) {}; foo(1);"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,70,"""function foo() {var a = 1}; foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,71,"test(""function foo(a) {}; foo('abc');"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,72,"""function foo() {var a = 'abc'}; foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,74,"test(""var foo = function(a) {}; foo(undefined);"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,75,"""var foo = function() {var a = undefined}; foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,76,"test(""var foo = function(a) {}; foo(null);"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,77,"""var foo = function() {var a = null}; foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,78,"test(""var foo = function(a) {}; foo(1);"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,79,"""var foo = function() {var a = 1}; foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,80,"test(""var foo = function(a) {}; foo('abc');"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,81,"""var foo = function() {var a = 'abc'}; foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,89,public void testDoOptimizeCall() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,90,"testSame(""var foo = function () {}; foo(); foo.call();"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,91,"testSame(""var foo = function () {}; foo(); foo.call(this);"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,92,// TODO(johnlenz): support foo.call
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,93,"testSame(""var foo = function (a, b) {}; foo(1); foo.call(this, 1);"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,54,"est(""var foo; foo = function (p1) { }; foo()"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,55,"var foo; foo = function () {var p1}; foo()"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,97,"// TODO(johnlenz): There are two definitions of ""foo"" here, ignore the"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,98,// one that can't be called.
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,99,"testSame(""var foo; foo = function (p1) { }; foo()"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,80,"est(src, expected);"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,124,// TODO(johnlenz): Support multiple valid definitions.
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,125,testSame(src);
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,95,"est(src, expected);"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,140,// TODO(johnlenz): Support multiple valid definitions.
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,141,testSame(src);
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,110,ublic void testUnknown() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,156,public void testMultipleUnknown() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,170,// TODO(johnlenz): Support multiple definitions.
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,171,testSame(src);
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,174,public void testSingleUnknown() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,175,String src =
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,176,"""var goog2 = {};"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,177,"""goog2.foo = function (p1) { };"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,178,"""var x = getGoog();"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,179,"""x.foo()"";"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,181,String expected =
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,182,"""var goog2 = {};"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,183,"""goog2.foo = function () { var p1 };"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,184,"""var x = getGoog();"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,185,"""x.foo()"";"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,231,public void testMethodsDefinedInArraysDontGetOptimized() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,232,String src =
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,233,"""var array = [true, function (a) {}];"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,234,"""array[1](1)"";"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,235,testSame(src);
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,238,public void testMethodsDefinedInObjectDontGetOptimized() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,239,String src =
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,240,"""var object = { foo: function bar() {} };"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,241,"""object.foo(1)"";"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,242,testSame(src);
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,243,src =
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,244,"""var object = { foo: function bar() {} };"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,245,"""object['foo'](1)"";"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,246,testSame(src);
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,342,"testSame(""var foo = function(a,b,c) { return arguments.size }; foo(1);"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,343,"testSame(""var foo = function bar(a,b,c) { return arguments.size }; "" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,344,"""foo(2); bar(2);"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,347,public void testFunctionWithTwoNames() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,348,"testSame(""var foo = function bar(a,b) {};"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,349,"testSame(""var foo = function bar(a,b) {}; foo(1)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,350,"testSame(""var foo = function bar(a,b) {}; bar(1);"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,351,"testSame(""var foo = function bar(a,b) {}; foo(1); foo(2)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,352,"testSame(""var foo = function bar(a,b) {}; foo(1); bar(1)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,353,"testSame(""var foo = function bar(a,b) {}; foo(1); bar(2)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,354,"testSame(""var foo = function bar(a,b) {}; foo(1,2); bar(2,1)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,357,public void testRecursion() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,358,"test(""var foo = function (a,b) {foo(1, b)}; foo(1, 2)"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,359,"""var foo = function (b) {var a=1; foo(b)}; foo(2)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,399,public void testDoNotOptimizeArrayElements() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,400,"testSame(""var array = [function (a, b) {}];"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,401,"testSame(""var array = [function f(a, b) {}]"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,403,"testSame(""var array = [function (a, b) {}];"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,404,"""array[0](1, 2);"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,405,"""array[0](1);"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,407,"testSame(""var array = [];"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,408,"""function foo(a, b) {};"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,409,"""array[0] = foo;"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,412,public void testOptimizeThis() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,413,"String src = ""function foo() {"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,414,"""var bar = function (a, b) {};"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,415,"""this.bar = function (a, b) {};"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,416,"""this.bar(3);"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,417,"""bar(2);}"";"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,418,"String expected = ""function foo() {"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,419,"""var bar = function () {var b; var a = 2;};"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,420,"""this.bar = function () {var b; var a = 3;};"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,421,"""this.bar();"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,422,"""bar();}"";"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,423,"test(src, expected);"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,426,public void testDoNotOptimizeWhenArgumentsPassedAsParameter() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,427,"testSame(""function foo(a) {}; foo(arguments)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,428,"testSame(""function foo(a) {}; foo(arguments[0])"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,430,"test(""function foo(a, b) {}; foo(arguments, 1)"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,431,"""function foo(a) {var b = 1}; foo(arguments)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,433,"test(""function foo(a, b) {}; foo(arguments)"","
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,434,"""function foo(a) {var b}; foo(arguments)"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,437,public void testDoNotOptimizeGoogExportFunctions() {
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,438,"testSame(""function foo(a, b) {}; foo(); goog.export_function(foo);"");"
