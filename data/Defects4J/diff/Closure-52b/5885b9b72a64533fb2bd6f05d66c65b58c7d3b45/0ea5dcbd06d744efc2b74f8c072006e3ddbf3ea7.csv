is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,19,import com.google.common.base.Predicate;
False,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,20,mport com.google.javascript.jscomp.CheckLevel;
False,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,22,mport com.google.javascript.jscomp.graph.GraphReachability;
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,23,import com.google.javascript.jscomp.graph.GraphReachability;
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,24,import com.google.javascript.jscomp.graph.GraphReachability.EdgeTuple;
False,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,49,.getControlFlowGraph()).compute(
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,50,"t.getControlFlowGraph(), new ReachablePredicate()).compute("
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,87,private final class ReachablePredicate implements
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,88,"Predicate<EdgeTuple<Node, ControlFlowGraph.Branch>> {"
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,90,@Override
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,91,"public boolean apply(EdgeTuple<Node, Branch> input) {"
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,92,Branch branch = input.edge;
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,93,if (!branch.isConditional()) {
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,94,return true;
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,96,Node predecessor = input.sourceNode;
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,97,Node condition = NodeUtil.getConditionExpression(predecessor);
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,99,"// TODO(user): Handle more complicated expression like true == true,"
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,100,// etc....
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,101,if (condition != null && NodeUtil.isImmutableValue(condition)) {
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,102,return NodeUtil.getBooleanValue(condition) ==
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,103,(branch == Branch.ON_TRUE);
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,105,return true;
False,src/com/google/javascript/jscomp/CompilationLevel.java,src/com/google/javascript/jscomp/CompilationLevel.java,111,ptions.flowSensitiveInlineVariables = true;
False,src/com/google/javascript/jscomp/CompilationLevel.java,src/com/google/javascript/jscomp/CompilationLevel.java,140,ptions.flowSensitiveInlineVariables = true;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,77,/** Returns localized replacement for MSG_* variables */
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,78,// Transient so that clients don't have to implement Serializable.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,79,public transient MessageBundle messageBundle = null;
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,154,if (options.closurePass) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,155,checks.add(closureGoogScopeAliases);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,284,// i18n
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,285,"// If you want to customize the compiler to use a different i18n pass,"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,286,// you can create a PassConfig that calls replacePassFactory
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,287,// to replace this.
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,288,checks.add(options.messageBundle != null ?
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,289,"replaceMessages : createEmptyPass(""replaceMessages""));"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,778,* The default i18n pass.
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,779,"* A lot of the options are not configurable, because ReplaceMessages"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,780,* has a lot of legacy logic.
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,782,private final PassFactory replaceMessages =
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,783,"new PassFactory(""replaceMessages"", true) {"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,784,@Override
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,785,protected CompilerPass createInternal(final AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,786,"return new ReplaceMessages(compiler,"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,787,"options.messageBundle,"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,788,/* warn about message dupes */
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,789,"true,"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,790,/* allow messages with goog.getMsg */
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,791,"JsMessage.Style.getFromParams(true, false),"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,792,"/* if we can't find a translation, don't worry about it. */"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,793,false);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,797,/** Applies aliases and inlines goog.scope. */
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,798,final PassFactory closureGoogScopeAliases =
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,799,"new PassFactory(""processGoogScopeAliases"", true) {"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,800,@Override
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,801,protected CompilerPass createInternal(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,802,return new ScopedAliases(compiler);
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,250,// We can skip over any named functions because they have no effect on
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,251,"// the control flow. In fact, they are lifted to the beginning of the"
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,252,// block. This happens a lot when devirtualization breaks the whole
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,253,// chain.
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,254,if (NodeUtil.isFunction(cur)) {
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,255,continue;
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,144,* Insert the given pass factory before the factory of the given name.
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,148,factoryList.add(
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,149,"findPassIndexByName(factoryList, passName), factory);"
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,153,"* Find a pass factory with the same name as the given one, and replace it."
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,155,final static void replacePassFactory(
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,156,"List<PassFactory> factoryList, PassFactory factory) {"
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,157,factoryList.set(
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,158,"findPassIndexByName(factoryList, factory.getName()), factory);"
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,162,* Throws an exception if no pass with the given name exists.
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,164,private static int findPassIndexByName(
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,165,"List<PassFactory> factoryList, String name) {"
False,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,146,f (factoryList.get(i).getName().equals(passName)) {
False,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,147,"actoryList.add(i, factory);"
False,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,148,eturn;
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,167,if (factoryList.get(i).getName().equals(name)) {
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,168,return i;
False,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,153,"No factory named '"" + passName + ""' in the factory list"");"
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,173,"""No factory named '"" + name + ""' in the factory list"");"
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,19,import com.google.common.annotations.VisibleForTesting;
False,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,20,mport com.google.common.io.Files;
False,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,23,mport com.google.common.annotations.VisibleForTesting;
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,22,import com.google.common.io.Files;
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,25,import java.io.FileReader;
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,30,import java.io.StringReader;
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,98,* Gets a reader for the code in this source file.
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,100,public Reader getCodeReader() throws IOException {
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,101,return new StringReader(getCode());
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,130,boolean hasSourceInMemory() {
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,131,return code != null;
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,372,* Gets a reader for the code in this source file.
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,374,public Reader getCodeReader() throws IOException {
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,375,if (hasSourceInMemory()) {
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,376,return super.getCodeReader();
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,377,} else {
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,378,"// If we haven't pulled the code into memory yet, don't."
True,src/com/google/javascript/jscomp/SourceFile.java,src/com/google/javascript/jscomp/SourceFile.java,379,return new FileReader(file);
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,19,import com.google.common.base.CharMatcher;
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,26,import java.io.FileReader;
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,28,import java.io.Reader;
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,81,"eturn parseFile(filePath, Files.toString(new File(filePath), Charsets.UTF_8));"
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,84,"return parseFileReader(filePath, new FileReader(filePath));"
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,97,"return parseFileReader(filePath, new StringReader(fileContents));"
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,102,* Parses the file from the given reader and returns a list of
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,103,* dependency information that it contained.
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,105,* @param filePath Path to the file to parse.
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,106,* @param reader A reader for the file.
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,107,* @return A list of DependencyInfo objects.
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,109,"public List<DependencyInfo> parseFileReader(String filePath, Reader reader) {"
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,96,"oParse(filePath, new StringReader(fileContents));"
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,112,"doParse(filePath, reader);"
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,126,boolean hasDependencies = false;
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,113,"f (line.indexOf(""addDependency"") == -1) {"
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,114,eturn true;
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,117,epMatcher.reset(line);
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,118,/ See if the line looks like: goog.addDependency(...)
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,119,f (depMatcher.matches()) {
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,120,tring addDependencyParams = depMatcher.group(1);
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,121,epArgsMatch.reset(addDependencyParams);
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,122,/ Extract the three parameters.
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,123,f (!depArgsMatch.matches()) {
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,124,"/ Although we could recover, we mark this as fatal since there should"
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,125,/ not be problems with generated deps.js files.
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,126,"hrow new ParseException(""Invalid arguments to goog.addDependency(). Found: """
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,127," addDependencyParams, true);"
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,129,/ Parse the file path.
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,130,tring path = parseJsString(depArgsMatch.group(1));
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,131,"ependencyInfo depInfo = new SimpleDependencyInfo(path, filePath,"
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,132,/ Parse the provides.
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,133,"arseJsStringArray(depArgsMatch.group(2)),"
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,134,/ Parse the requires.
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,135,arseJsStringArray(depArgsMatch.group(3)));
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,137,f (logger.isLoggable(Level.FINE)) {
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,138,"ogger.fine(""Found dep: "" + depInfo);"
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,130,"if (line.indexOf(""addDependency"") != -1) {"
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,131,depMatcher.reset(line);
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,132,// See if the line looks like: goog.addDependency(...)
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,133,if (depMatcher.matches()) {
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,134,hasDependencies = true;
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,135,String addDependencyParams = depMatcher.group(1);
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,136,depArgsMatch.reset(addDependencyParams);
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,137,// Extract the three parameters.
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,138,if (!depArgsMatch.matches()) {
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,139,"// Although we could recover, we mark this as fatal since there should"
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,140,// not be problems with generated deps.js files.
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,141,"throw new ParseException(""Invalid arguments to goog.addDependency(). Found: """
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,142,"+ addDependencyParams, true);"
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,144,// Parse the file path.
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,145,String path = parseJsString(depArgsMatch.group(1));
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,146,"DependencyInfo depInfo = new SimpleDependencyInfo(path, filePath,"
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,147,// Parse the provides.
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,148,"parseJsStringArray(depArgsMatch.group(2)),"
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,149,// Parse the requires.
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,150,parseJsStringArray(depArgsMatch.group(3)));
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,152,if (logger.isLoggable(Level.FINE)) {
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,153,"logger.fine(""Found dep: "" + depInfo);"
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,155,depInfos.add(depInfo);
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,140,epInfos.add(depInfo);
False,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,143,eturn true;
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,159,return !shortcutMode || hasDependencies ||
True,src/com/google/javascript/jscomp/deps/DepsFileParser.java,src/com/google/javascript/jscomp/deps/DepsFileParser.java,160,CharMatcher.WHITESPACE.matchesAllOf(line);
True,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,46,boolean shortcutMode = false;
True,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,97,"* In shortcut mode, the file line parser can stop reading early if"
True,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,98,* it thinks it found enough information.
True,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,100,"* For example, many parsers assume that dependency information never"
True,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,101,"* shows up after ""real"" code."
True,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,103,public void setShortcutMode(boolean mode) {
True,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,104,this.shortcutMode = mode;
False,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,162,f (!parseLine(revisedLine)) {
True,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,175,"// This check for shortcut mode should be redundant, but"
True,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,176,// it's done for safety reasons.
True,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,src/com/google/javascript/jscomp/deps/JsFileLineParser.java,177,if (!parseLine(revisedLine) && shortcutMode) {
False,src/com/google/javascript/jscomp/deps/JsFileParser.java,src/com/google/javascript/jscomp/deps/JsFileParser.java,57,rivate boolean shortcutMode = false;
False,src/com/google/javascript/jscomp/deps/JsFileParser.java,src/com/google/javascript/jscomp/deps/JsFileParser.java,68,ublic void setShortcutMode(boolean mode) {
False,src/com/google/javascript/jscomp/deps/JsFileParser.java,src/com/google/javascript/jscomp/deps/JsFileParser.java,69,his.shortcutMode = mode;
False,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,20,mport com.google.javascript.jscomp.graph.Annotation;
False,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,21,mport com.google.javascript.jscomp.graph.DiGraph;
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,20,import com.google.common.base.Predicate;
False,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,23,mport com.google.javascript.jscomp.graph.GraphNode;
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,37,"private final Predicate<EdgeTuple<N, E>> edgePredicate;"
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,40,"this(graph, null);"
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,44,* @param graph The graph.
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,45,* @param edgePredicate Given the predecessor P of the a node S and the edge
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,46,"*      coming from P to S, this predicate should return true if S is"
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,47,*      reachable from P using the edge.
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,49,"public GraphReachability(DiGraph<N, E> graph,"
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,50,"Predicate<EdgeTuple<N, E>> edgePredicate) {"
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,52,this.edgePredicate = edgePredicate;
False,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,60,f (graph.getNode(source).getAnnotation() == REACHABLE) {
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,72,if (graph.getNode(source).getAnnotation() == REACHABLE &&
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,73,(edgePredicate == null ||
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,74,"edgePredicate.apply(new EdgeTuple<N, E>(source, e, destination)))) {"
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,87,"* Represents Source Node, Edge and Destination Node."
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,89,"public static final class EdgeTuple<N, E> {"
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,90,public final N sourceNode;
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,91,public final E edge;
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,92,public final N destNode;
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,93,"public EdgeTuple(N sourceNode, E edge, N destNode) {"
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,94,this.sourceNode = sourceNode;
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,95,this.edge = edge;
True,src/com/google/javascript/jscomp/graph/GraphReachability.java,src/com/google/javascript/jscomp/graph/GraphReachability.java,96,this.destNode = destNode;
True,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,144,public void testFalseCondition() {
True,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,145,"assertUnreachable(""if(false) { }"");"
True,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,146,"assertUnreachable(""if(0) { }"");"
True,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,149,public void testUnreachableLoop() {
True,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,150,"assertUnreachable(""while(false) {}"");"
True,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,153,public void testInfiniteLoop() {
True,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,154,"testSame(""while (true) { foo(); break; }"");"
True,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,156,// TODO(user): Have a infinite loop warning instead.
True,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,test/com/google/javascript/jscomp/CheckUnreachableCodeTest.java,157,"assertUnreachable(""while(true) {} foo()"");"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,139,public void testWithDevirtualization() {
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,140,extract(
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,141,"""x.prototype.a = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,142,"""x.prototype.b = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,143,"""function devirtualize1() { }"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,144,"""x.prototype.c = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,145,"""x.prototype.d = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,146,"""x.prototype.e = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,147,"""x.prototype.f = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,148,"""x.prototype.g = 1;"","
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,150,"loadPrototype(""x"") +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,151,"TMP + "".a = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,152,"TMP + "".b = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,153,"""function devirtualize1() { }"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,154,"TMP + "".c = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,155,"TMP + "".d = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,156,"TMP + "".e = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,157,"TMP + "".f = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,158,"TMP + "".g = 1;"");"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,160,extract(
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,161,"""x.prototype.a = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,162,"""x.prototype.b = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,163,"""function devirtualize1() { }"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,164,"""x.prototype.c = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,165,"""x.prototype.d = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,166,"""function devirtualize2() { }"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,167,"""x.prototype.e = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,168,"""x.prototype.f = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,169,"""function devirtualize3() { }"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,170,"""x.prototype.g = 1;"","
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,172,"loadPrototype(""x"") +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,173,"TMP + "".a = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,174,"TMP + "".b = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,175,"""function devirtualize1() { }"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,176,"TMP + "".c = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,177,"TMP + "".d = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,178,"""function devirtualize2() { }"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,179,"TMP + "".e = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,180,"TMP + "".f = 1;"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,181,"""function devirtualize3() { }"" +"
True,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,test/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarationsTest.java,182,"TMP + "".g = 1;"");"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,40,private final List<String> EMPTY = Collections.emptyList();
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,46,parser.setShortcutMode(true);
False,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,66,ist<String> EMPTY = Collections.emptyList();
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,94,public void testShortcutMode() {
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,95,"List<DependencyInfo> result = parser.parseFile(SRC_PATH,"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,96,"""goog.addDependency('yes1', [], []); \n"" +"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,97,"""foo();\n"" +"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,98,"""goog.addDependency('no1', [], []);"");"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,99,ImmutableList<DependencyInfo> EXPECTED = ImmutableList.<DependencyInfo>of(
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,100,"new SimpleDependencyInfo(""yes1"", SRC_PATH, EMPTY, EMPTY));"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,101,"assertEquals(EXPECTED, result);"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,104,public void testNoShortcutMode() {
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,105,parser.setShortcutMode(false);
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,106,"List<DependencyInfo> result = parser.parseFile(SRC_PATH,"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,107,"""goog.addDependency('yes1', [], []); \n"" +"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,108,"""foo();\n"" +"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,109,"""goog.addDependency('yes2', [], []);"");"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,110,ImmutableList<DependencyInfo> EXPECTED = ImmutableList.<DependencyInfo>of(
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,111,"new SimpleDependencyInfo(""yes1"", SRC_PATH, EMPTY, EMPTY),"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,112,"new SimpleDependencyInfo(""yes2"", SRC_PATH, EMPTY, EMPTY));"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,113,"assertEquals(EXPECTED, result);"
