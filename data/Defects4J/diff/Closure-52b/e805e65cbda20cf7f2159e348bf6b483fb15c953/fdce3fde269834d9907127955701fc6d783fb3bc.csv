is_addition,old_file_path,new_file_path,line_num,content
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,1,// Generated by the protocol buffer compiler.  DO NOT EDIT!
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,2,// source: mapping.proto
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,4,package com.google.debugging.sourcemap.proto;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,6,public final class Mapping {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,7,private Mapping() {}
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,8,public static void registerAllExtensions(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,9,com.google.protobuf.ExtensionRegistry registry) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,11,public static final class LineMapping extends
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,12,com.google.protobuf.GeneratedMessage {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,13,// Use LineMapping.newBuilder() to construct.
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,14,private LineMapping() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,15,initFields();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,17,private LineMapping(boolean noInit) {}
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,19,private static final LineMapping defaultInstance;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,20,public static LineMapping getDefaultInstance() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,21,return defaultInstance;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,24,public LineMapping getDefaultInstanceForType() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,25,return defaultInstance;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,28,public static final com.google.protobuf.Descriptors.Descriptor
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,29,getDescriptor() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,30,return com.google.debugging.sourcemap.proto.Mapping.internal_static_sourcemap_LineMapping_descriptor;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,33,protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,34,internalGetFieldAccessorTable() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,35,return com.google.debugging.sourcemap.proto.Mapping.internal_static_sourcemap_LineMapping_fieldAccessorTable;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,38,// optional int32 line_number = 1;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,39,public static final int LINE_NUMBER_FIELD_NUMBER = 1;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,40,private boolean hasLineNumber;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,41,private int lineNumber_ = 0;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,42,public boolean hasLineNumber() { return hasLineNumber; }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,43,public int getLineNumber() { return lineNumber_; }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,45,// optional int32 column_position = 2;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,46,public static final int COLUMN_POSITION_FIELD_NUMBER = 2;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,47,private boolean hasColumnPosition;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,48,private int columnPosition_ = 0;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,49,public boolean hasColumnPosition() { return hasColumnPosition; }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,50,public int getColumnPosition() { return columnPosition_; }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,52,// optional .sourcemap.OriginalMapping original_mapping = 3;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,53,public static final int ORIGINAL_MAPPING_FIELD_NUMBER = 3;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,54,private boolean hasOriginalMapping;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,55,private com.google.debugging.sourcemap.proto.Mapping.OriginalMapping originalMapping_;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,56,public boolean hasOriginalMapping() { return hasOriginalMapping; }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,57,public com.google.debugging.sourcemap.proto.Mapping.OriginalMapping getOriginalMapping() { return originalMapping_; }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,59,private void initFields() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,60,originalMapping_ = com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.getDefaultInstance();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,62,public final boolean isInitialized() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,63,return true;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,66,public void writeTo(com.google.protobuf.CodedOutputStream output)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,67,throws java.io.IOException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,68,getSerializedSize();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,69,if (hasLineNumber()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,70,"output.writeInt32(1, getLineNumber());"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,72,if (hasColumnPosition()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,73,"output.writeInt32(2, getColumnPosition());"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,75,if (hasOriginalMapping()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,76,"output.writeMessage(3, getOriginalMapping());"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,78,getUnknownFields().writeTo(output);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,81,private int memoizedSerializedSize = -1;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,82,public int getSerializedSize() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,83,int size = memoizedSerializedSize;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,84,if (size != -1) return size;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,86,size = 0;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,87,if (hasLineNumber()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,88,size += com.google.protobuf.CodedOutputStream
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,89,".computeInt32Size(1, getLineNumber());"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,91,if (hasColumnPosition()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,92,size += com.google.protobuf.CodedOutputStream
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,93,".computeInt32Size(2, getColumnPosition());"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,95,if (hasOriginalMapping()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,96,size += com.google.protobuf.CodedOutputStream
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,97,".computeMessageSize(3, getOriginalMapping());"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,99,size += getUnknownFields().getSerializedSize();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,100,memoizedSerializedSize = size;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,101,return size;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,104,public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseFrom(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,105,com.google.protobuf.ByteString data)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,106,throws com.google.protobuf.InvalidProtocolBufferException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,107,return newBuilder().mergeFrom(data).buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,109,public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseFrom(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,110,"com.google.protobuf.ByteString data,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,111,com.google.protobuf.ExtensionRegistryLite extensionRegistry)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,112,throws com.google.protobuf.InvalidProtocolBufferException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,113,"return newBuilder().mergeFrom(data, extensionRegistry)"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,114,.buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,116,public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseFrom(byte[] data)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,117,throws com.google.protobuf.InvalidProtocolBufferException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,118,return newBuilder().mergeFrom(data).buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,120,public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseFrom(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,121,"byte[] data,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,122,com.google.protobuf.ExtensionRegistryLite extensionRegistry)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,123,throws com.google.protobuf.InvalidProtocolBufferException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,124,"return newBuilder().mergeFrom(data, extensionRegistry)"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,125,.buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,127,public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseFrom(java.io.InputStream input)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,128,throws java.io.IOException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,129,return newBuilder().mergeFrom(input).buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,131,public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseFrom(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,132,"java.io.InputStream input,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,133,com.google.protobuf.ExtensionRegistryLite extensionRegistry)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,134,throws java.io.IOException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,135,"return newBuilder().mergeFrom(input, extensionRegistry)"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,136,.buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,138,public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseDelimitedFrom(java.io.InputStream input)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,139,throws java.io.IOException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,140,Builder builder = newBuilder();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,141,if (builder.mergeDelimitedFrom(input)) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,142,return builder.buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,143,} else {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,144,return null;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,147,public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseDelimitedFrom(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,148,"java.io.InputStream input,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,149,com.google.protobuf.ExtensionRegistryLite extensionRegistry)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,150,throws java.io.IOException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,151,Builder builder = newBuilder();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,152,"if (builder.mergeDelimitedFrom(input, extensionRegistry)) {"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,153,return builder.buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,154,} else {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,155,return null;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,158,public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseFrom(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,159,com.google.protobuf.CodedInputStream input)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,160,throws java.io.IOException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,161,return newBuilder().mergeFrom(input).buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,163,public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseFrom(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,164,"com.google.protobuf.CodedInputStream input,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,165,com.google.protobuf.ExtensionRegistryLite extensionRegistry)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,166,throws java.io.IOException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,167,"return newBuilder().mergeFrom(input, extensionRegistry)"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,168,.buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,171,public static Builder newBuilder() { return Builder.create(); }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,172,public Builder newBuilderForType() { return newBuilder(); }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,173,public static Builder newBuilder(com.google.debugging.sourcemap.proto.Mapping.LineMapping prototype) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,174,return newBuilder().mergeFrom(prototype);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,176,public Builder toBuilder() { return newBuilder(this); }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,178,public static final class Builder extends
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,179,com.google.protobuf.GeneratedMessage.Builder<Builder> {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,180,private com.google.debugging.sourcemap.proto.Mapping.LineMapping result;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,182,// Construct using com.google.debugging.sourcemap.proto.Mapping.LineMapping.newBuilder()
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,183,private Builder() {}
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,185,private static Builder create() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,186,Builder builder = new Builder();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,187,builder.result = new com.google.debugging.sourcemap.proto.Mapping.LineMapping();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,188,return builder;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,191,protected com.google.debugging.sourcemap.proto.Mapping.LineMapping internalGetResult() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,192,return result;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,195,public Builder clear() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,196,if (result == null) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,197,throw new IllegalStateException(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,198,"""Cannot call clear() after build()."");"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,200,result = new com.google.debugging.sourcemap.proto.Mapping.LineMapping();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,201,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,204,public Builder clone() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,205,return create().mergeFrom(result);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,208,public com.google.protobuf.Descriptors.Descriptor
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,209,getDescriptorForType() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,210,return com.google.debugging.sourcemap.proto.Mapping.LineMapping.getDescriptor();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,213,public com.google.debugging.sourcemap.proto.Mapping.LineMapping getDefaultInstanceForType() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,214,return com.google.debugging.sourcemap.proto.Mapping.LineMapping.getDefaultInstance();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,217,public boolean isInitialized() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,218,return result.isInitialized();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,220,public com.google.debugging.sourcemap.proto.Mapping.LineMapping build() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,221,if (result != null && !isInitialized()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,222,throw newUninitializedMessageException(result);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,224,return buildPartial();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,227,private com.google.debugging.sourcemap.proto.Mapping.LineMapping buildParsed()
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,228,throws com.google.protobuf.InvalidProtocolBufferException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,229,if (!isInitialized()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,230,throw newUninitializedMessageException(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,231,result).asInvalidProtocolBufferException();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,233,return buildPartial();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,236,public com.google.debugging.sourcemap.proto.Mapping.LineMapping buildPartial() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,237,if (result == null) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,238,throw new IllegalStateException(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,239,"""build() has already been called on this Builder."");"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,241,com.google.debugging.sourcemap.proto.Mapping.LineMapping returnMe = result;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,242,result = null;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,243,return returnMe;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,246,public Builder mergeFrom(com.google.protobuf.Message other) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,247,if (other instanceof com.google.debugging.sourcemap.proto.Mapping.LineMapping) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,248,return mergeFrom((com.google.debugging.sourcemap.proto.Mapping.LineMapping)other);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,249,} else {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,250,super.mergeFrom(other);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,251,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,255,public Builder mergeFrom(com.google.debugging.sourcemap.proto.Mapping.LineMapping other) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,256,if (other == com.google.debugging.sourcemap.proto.Mapping.LineMapping.getDefaultInstance()) return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,257,if (other.hasLineNumber()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,258,setLineNumber(other.getLineNumber());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,260,if (other.hasColumnPosition()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,261,setColumnPosition(other.getColumnPosition());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,263,if (other.hasOriginalMapping()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,264,mergeOriginalMapping(other.getOriginalMapping());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,266,this.mergeUnknownFields(other.getUnknownFields());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,267,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,270,public Builder mergeFrom(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,271,"com.google.protobuf.CodedInputStream input,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,272,com.google.protobuf.ExtensionRegistryLite extensionRegistry)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,273,throws java.io.IOException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,274,com.google.protobuf.UnknownFieldSet.Builder unknownFields =
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,275,com.google.protobuf.UnknownFieldSet.newBuilder(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,276,this.getUnknownFields());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,277,while (true) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,278,int tag = input.readTag();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,279,switch (tag) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,280,case 0:
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,281,this.setUnknownFields(unknownFields.build());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,282,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,283,default: {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,284,"if (!parseUnknownField(input, unknownFields,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,285,"extensionRegistry, tag)) {"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,286,this.setUnknownFields(unknownFields.build());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,287,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,289,break;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,291,case 8: {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,292,setLineNumber(input.readInt32());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,293,break;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,295,case 16: {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,296,setColumnPosition(input.readInt32());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,297,break;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,299,case 26: {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,300,com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.Builder subBuilder = com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.newBuilder();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,301,if (hasOriginalMapping()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,302,subBuilder.mergeFrom(getOriginalMapping());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,304,"input.readMessage(subBuilder, extensionRegistry);"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,305,setOriginalMapping(subBuilder.buildPartial());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,306,break;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,313,// optional int32 line_number = 1;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,314,public boolean hasLineNumber() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,315,return result.hasLineNumber();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,317,public int getLineNumber() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,318,return result.getLineNumber();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,320,public Builder setLineNumber(int value) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,321,result.hasLineNumber = true;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,322,result.lineNumber_ = value;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,323,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,325,public Builder clearLineNumber() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,326,result.hasLineNumber = false;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,327,result.lineNumber_ = 0;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,328,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,331,// optional int32 column_position = 2;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,332,public boolean hasColumnPosition() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,333,return result.hasColumnPosition();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,335,public int getColumnPosition() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,336,return result.getColumnPosition();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,338,public Builder setColumnPosition(int value) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,339,result.hasColumnPosition = true;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,340,result.columnPosition_ = value;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,341,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,343,public Builder clearColumnPosition() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,344,result.hasColumnPosition = false;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,345,result.columnPosition_ = 0;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,346,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,349,// optional .sourcemap.OriginalMapping original_mapping = 3;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,350,public boolean hasOriginalMapping() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,351,return result.hasOriginalMapping();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,353,public com.google.debugging.sourcemap.proto.Mapping.OriginalMapping getOriginalMapping() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,354,return result.getOriginalMapping();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,356,public Builder setOriginalMapping(com.google.debugging.sourcemap.proto.Mapping.OriginalMapping value) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,357,if (value == null) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,358,throw new NullPointerException();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,360,result.hasOriginalMapping = true;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,361,result.originalMapping_ = value;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,362,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,364,public Builder setOriginalMapping(com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.Builder builderForValue) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,365,result.hasOriginalMapping = true;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,366,result.originalMapping_ = builderForValue.build();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,367,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,369,public Builder mergeOriginalMapping(com.google.debugging.sourcemap.proto.Mapping.OriginalMapping value) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,370,if (result.hasOriginalMapping() &&
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,371,result.originalMapping_ != com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.getDefaultInstance()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,372,result.originalMapping_ =
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,373,com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.newBuilder(result.originalMapping_).mergeFrom(value).buildPartial();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,374,} else {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,375,result.originalMapping_ = value;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,377,result.hasOriginalMapping = true;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,378,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,380,public Builder clearOriginalMapping() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,381,result.hasOriginalMapping = false;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,382,result.originalMapping_ = com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.getDefaultInstance();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,383,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,386,// @@protoc_insertion_point(builder_scope:sourcemap.LineMapping)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,389,static {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,390,defaultInstance = new LineMapping(true);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,391,com.google.debugging.sourcemap.proto.Mapping.internalForceInit();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,392,defaultInstance.initFields();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,395,// @@protoc_insertion_point(class_scope:sourcemap.LineMapping)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,398,public static final class OriginalMapping extends
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,399,com.google.protobuf.GeneratedMessage {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,400,// Use OriginalMapping.newBuilder() to construct.
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,401,private OriginalMapping() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,402,initFields();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,404,private OriginalMapping(boolean noInit) {}
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,406,private static final OriginalMapping defaultInstance;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,407,public static OriginalMapping getDefaultInstance() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,408,return defaultInstance;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,411,public OriginalMapping getDefaultInstanceForType() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,412,return defaultInstance;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,415,public static final com.google.protobuf.Descriptors.Descriptor
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,416,getDescriptor() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,417,return com.google.debugging.sourcemap.proto.Mapping.internal_static_sourcemap_OriginalMapping_descriptor;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,420,protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,421,internalGetFieldAccessorTable() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,422,return com.google.debugging.sourcemap.proto.Mapping.internal_static_sourcemap_OriginalMapping_fieldAccessorTable;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,425,// optional string original_file = 1;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,426,public static final int ORIGINAL_FILE_FIELD_NUMBER = 1;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,427,private boolean hasOriginalFile;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,428,"private java.lang.String originalFile_ = """";"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,429,public boolean hasOriginalFile() { return hasOriginalFile; }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,430,public java.lang.String getOriginalFile() { return originalFile_; }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,432,// optional int32 line_number = 2;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,433,public static final int LINE_NUMBER_FIELD_NUMBER = 2;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,434,private boolean hasLineNumber;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,435,private int lineNumber_ = 0;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,436,public boolean hasLineNumber() { return hasLineNumber; }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,437,public int getLineNumber() { return lineNumber_; }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,439,// optional int32 column_position = 3;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,440,public static final int COLUMN_POSITION_FIELD_NUMBER = 3;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,441,private boolean hasColumnPosition;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,442,private int columnPosition_ = 0;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,443,public boolean hasColumnPosition() { return hasColumnPosition; }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,444,public int getColumnPosition() { return columnPosition_; }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,446,// optional string identifier = 4;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,447,public static final int IDENTIFIER_FIELD_NUMBER = 4;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,448,private boolean hasIdentifier;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,449,"private java.lang.String identifier_ = """";"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,450,public boolean hasIdentifier() { return hasIdentifier; }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,451,public java.lang.String getIdentifier() { return identifier_; }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,453,private void initFields() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,455,public final boolean isInitialized() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,456,return true;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,459,public void writeTo(com.google.protobuf.CodedOutputStream output)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,460,throws java.io.IOException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,461,getSerializedSize();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,462,if (hasOriginalFile()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,463,"output.writeString(1, getOriginalFile());"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,465,if (hasLineNumber()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,466,"output.writeInt32(2, getLineNumber());"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,468,if (hasColumnPosition()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,469,"output.writeInt32(3, getColumnPosition());"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,471,if (hasIdentifier()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,472,"output.writeString(4, getIdentifier());"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,474,getUnknownFields().writeTo(output);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,477,private int memoizedSerializedSize = -1;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,478,public int getSerializedSize() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,479,int size = memoizedSerializedSize;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,480,if (size != -1) return size;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,482,size = 0;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,483,if (hasOriginalFile()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,484,size += com.google.protobuf.CodedOutputStream
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,485,".computeStringSize(1, getOriginalFile());"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,487,if (hasLineNumber()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,488,size += com.google.protobuf.CodedOutputStream
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,489,".computeInt32Size(2, getLineNumber());"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,491,if (hasColumnPosition()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,492,size += com.google.protobuf.CodedOutputStream
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,493,".computeInt32Size(3, getColumnPosition());"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,495,if (hasIdentifier()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,496,size += com.google.protobuf.CodedOutputStream
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,497,".computeStringSize(4, getIdentifier());"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,499,size += getUnknownFields().getSerializedSize();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,500,memoizedSerializedSize = size;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,501,return size;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,504,public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseFrom(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,505,com.google.protobuf.ByteString data)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,506,throws com.google.protobuf.InvalidProtocolBufferException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,507,return newBuilder().mergeFrom(data).buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,509,public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseFrom(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,510,"com.google.protobuf.ByteString data,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,511,com.google.protobuf.ExtensionRegistryLite extensionRegistry)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,512,throws com.google.protobuf.InvalidProtocolBufferException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,513,"return newBuilder().mergeFrom(data, extensionRegistry)"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,514,.buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,516,public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseFrom(byte[] data)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,517,throws com.google.protobuf.InvalidProtocolBufferException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,518,return newBuilder().mergeFrom(data).buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,520,public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseFrom(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,521,"byte[] data,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,522,com.google.protobuf.ExtensionRegistryLite extensionRegistry)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,523,throws com.google.protobuf.InvalidProtocolBufferException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,524,"return newBuilder().mergeFrom(data, extensionRegistry)"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,525,.buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,527,public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseFrom(java.io.InputStream input)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,528,throws java.io.IOException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,529,return newBuilder().mergeFrom(input).buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,531,public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseFrom(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,532,"java.io.InputStream input,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,533,com.google.protobuf.ExtensionRegistryLite extensionRegistry)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,534,throws java.io.IOException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,535,"return newBuilder().mergeFrom(input, extensionRegistry)"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,536,.buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,538,public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseDelimitedFrom(java.io.InputStream input)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,539,throws java.io.IOException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,540,Builder builder = newBuilder();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,541,if (builder.mergeDelimitedFrom(input)) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,542,return builder.buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,543,} else {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,544,return null;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,547,public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseDelimitedFrom(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,548,"java.io.InputStream input,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,549,com.google.protobuf.ExtensionRegistryLite extensionRegistry)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,550,throws java.io.IOException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,551,Builder builder = newBuilder();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,552,"if (builder.mergeDelimitedFrom(input, extensionRegistry)) {"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,553,return builder.buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,554,} else {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,555,return null;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,558,public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseFrom(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,559,com.google.protobuf.CodedInputStream input)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,560,throws java.io.IOException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,561,return newBuilder().mergeFrom(input).buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,563,public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseFrom(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,564,"com.google.protobuf.CodedInputStream input,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,565,com.google.protobuf.ExtensionRegistryLite extensionRegistry)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,566,throws java.io.IOException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,567,"return newBuilder().mergeFrom(input, extensionRegistry)"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,568,.buildParsed();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,571,public static Builder newBuilder() { return Builder.create(); }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,572,public Builder newBuilderForType() { return newBuilder(); }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,573,public static Builder newBuilder(com.google.debugging.sourcemap.proto.Mapping.OriginalMapping prototype) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,574,return newBuilder().mergeFrom(prototype);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,576,public Builder toBuilder() { return newBuilder(this); }
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,578,public static final class Builder extends
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,579,com.google.protobuf.GeneratedMessage.Builder<Builder> {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,580,private com.google.debugging.sourcemap.proto.Mapping.OriginalMapping result;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,582,// Construct using com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.newBuilder()
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,583,private Builder() {}
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,585,private static Builder create() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,586,Builder builder = new Builder();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,587,builder.result = new com.google.debugging.sourcemap.proto.Mapping.OriginalMapping();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,588,return builder;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,591,protected com.google.debugging.sourcemap.proto.Mapping.OriginalMapping internalGetResult() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,592,return result;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,595,public Builder clear() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,596,if (result == null) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,597,throw new IllegalStateException(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,598,"""Cannot call clear() after build()."");"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,600,result = new com.google.debugging.sourcemap.proto.Mapping.OriginalMapping();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,601,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,604,public Builder clone() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,605,return create().mergeFrom(result);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,608,public com.google.protobuf.Descriptors.Descriptor
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,609,getDescriptorForType() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,610,return com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.getDescriptor();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,613,public com.google.debugging.sourcemap.proto.Mapping.OriginalMapping getDefaultInstanceForType() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,614,return com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.getDefaultInstance();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,617,public boolean isInitialized() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,618,return result.isInitialized();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,620,public com.google.debugging.sourcemap.proto.Mapping.OriginalMapping build() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,621,if (result != null && !isInitialized()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,622,throw newUninitializedMessageException(result);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,624,return buildPartial();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,627,private com.google.debugging.sourcemap.proto.Mapping.OriginalMapping buildParsed()
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,628,throws com.google.protobuf.InvalidProtocolBufferException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,629,if (!isInitialized()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,630,throw newUninitializedMessageException(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,631,result).asInvalidProtocolBufferException();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,633,return buildPartial();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,636,public com.google.debugging.sourcemap.proto.Mapping.OriginalMapping buildPartial() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,637,if (result == null) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,638,throw new IllegalStateException(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,639,"""build() has already been called on this Builder."");"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,641,com.google.debugging.sourcemap.proto.Mapping.OriginalMapping returnMe = result;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,642,result = null;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,643,return returnMe;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,646,public Builder mergeFrom(com.google.protobuf.Message other) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,647,if (other instanceof com.google.debugging.sourcemap.proto.Mapping.OriginalMapping) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,648,return mergeFrom((com.google.debugging.sourcemap.proto.Mapping.OriginalMapping)other);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,649,} else {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,650,super.mergeFrom(other);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,651,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,655,public Builder mergeFrom(com.google.debugging.sourcemap.proto.Mapping.OriginalMapping other) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,656,if (other == com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.getDefaultInstance()) return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,657,if (other.hasOriginalFile()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,658,setOriginalFile(other.getOriginalFile());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,660,if (other.hasLineNumber()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,661,setLineNumber(other.getLineNumber());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,663,if (other.hasColumnPosition()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,664,setColumnPosition(other.getColumnPosition());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,666,if (other.hasIdentifier()) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,667,setIdentifier(other.getIdentifier());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,669,this.mergeUnknownFields(other.getUnknownFields());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,670,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,673,public Builder mergeFrom(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,674,"com.google.protobuf.CodedInputStream input,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,675,com.google.protobuf.ExtensionRegistryLite extensionRegistry)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,676,throws java.io.IOException {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,677,com.google.protobuf.UnknownFieldSet.Builder unknownFields =
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,678,com.google.protobuf.UnknownFieldSet.newBuilder(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,679,this.getUnknownFields());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,680,while (true) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,681,int tag = input.readTag();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,682,switch (tag) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,683,case 0:
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,684,this.setUnknownFields(unknownFields.build());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,685,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,686,default: {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,687,"if (!parseUnknownField(input, unknownFields,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,688,"extensionRegistry, tag)) {"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,689,this.setUnknownFields(unknownFields.build());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,690,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,692,break;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,694,case 10: {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,695,setOriginalFile(input.readString());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,696,break;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,698,case 16: {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,699,setLineNumber(input.readInt32());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,700,break;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,702,case 24: {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,703,setColumnPosition(input.readInt32());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,704,break;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,706,case 34: {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,707,setIdentifier(input.readString());
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,708,break;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,715,// optional string original_file = 1;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,716,public boolean hasOriginalFile() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,717,return result.hasOriginalFile();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,719,public java.lang.String getOriginalFile() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,720,return result.getOriginalFile();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,722,public Builder setOriginalFile(java.lang.String value) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,723,if (value == null) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,724,throw new NullPointerException();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,726,result.hasOriginalFile = true;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,727,result.originalFile_ = value;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,728,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,730,public Builder clearOriginalFile() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,731,result.hasOriginalFile = false;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,732,result.originalFile_ = getDefaultInstance().getOriginalFile();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,733,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,736,// optional int32 line_number = 2;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,737,public boolean hasLineNumber() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,738,return result.hasLineNumber();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,740,public int getLineNumber() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,741,return result.getLineNumber();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,743,public Builder setLineNumber(int value) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,744,result.hasLineNumber = true;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,745,result.lineNumber_ = value;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,746,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,748,public Builder clearLineNumber() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,749,result.hasLineNumber = false;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,750,result.lineNumber_ = 0;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,751,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,754,// optional int32 column_position = 3;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,755,public boolean hasColumnPosition() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,756,return result.hasColumnPosition();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,758,public int getColumnPosition() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,759,return result.getColumnPosition();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,761,public Builder setColumnPosition(int value) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,762,result.hasColumnPosition = true;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,763,result.columnPosition_ = value;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,764,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,766,public Builder clearColumnPosition() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,767,result.hasColumnPosition = false;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,768,result.columnPosition_ = 0;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,769,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,772,// optional string identifier = 4;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,773,public boolean hasIdentifier() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,774,return result.hasIdentifier();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,776,public java.lang.String getIdentifier() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,777,return result.getIdentifier();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,779,public Builder setIdentifier(java.lang.String value) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,780,if (value == null) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,781,throw new NullPointerException();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,783,result.hasIdentifier = true;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,784,result.identifier_ = value;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,785,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,787,public Builder clearIdentifier() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,788,result.hasIdentifier = false;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,789,result.identifier_ = getDefaultInstance().getIdentifier();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,790,return this;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,793,// @@protoc_insertion_point(builder_scope:sourcemap.OriginalMapping)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,796,static {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,797,defaultInstance = new OriginalMapping(true);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,798,com.google.debugging.sourcemap.proto.Mapping.internalForceInit();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,799,defaultInstance.initFields();
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,802,// @@protoc_insertion_point(class_scope:sourcemap.OriginalMapping)
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,805,private static com.google.protobuf.Descriptors.Descriptor
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,806,internal_static_sourcemap_LineMapping_descriptor;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,807,private static
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,808,com.google.protobuf.GeneratedMessage.FieldAccessorTable
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,809,internal_static_sourcemap_LineMapping_fieldAccessorTable;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,810,private static com.google.protobuf.Descriptors.Descriptor
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,811,internal_static_sourcemap_OriginalMapping_descriptor;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,812,private static
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,813,com.google.protobuf.GeneratedMessage.FieldAccessorTable
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,814,internal_static_sourcemap_OriginalMapping_fieldAccessorTable;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,816,public static com.google.protobuf.Descriptors.FileDescriptor
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,817,getDescriptor() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,818,return descriptor;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,820,private static com.google.protobuf.Descriptors.FileDescriptor
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,821,descriptor;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,822,static {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,823,java.lang.String[] descriptorData = {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,824,"""\n\rmapping.proto\022\tsourcemap\""q\n\013LineMappin"" +"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,825,"""g\022\023\n\013line_number\030\001 \001(\005\022\027\n\017column_positio"" +"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,826,"""n\030\002 \001(\005\0224\n\020original_mapping\030\003 \001(\0132\032.sour"" +"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,827,"""cemap.OriginalMapping\""j\n\017OriginalMapping"" +"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,828,"""\022\025\n\roriginal_file\030\001 \001(\t\022\023\n\013line_number\030\002"" +"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,829,""" \001(\005\022\027\n\017column_position\030\003 \001(\005\022\022\n\nidentif"" +"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,830,"""ier\030\004 \001(\tB&\n$com.google.debugging.source"" +"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,831,"""map.proto"""
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,833,com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,834,new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,835,public com.google.protobuf.ExtensionRegistry assignDescriptors(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,836,com.google.protobuf.Descriptors.FileDescriptor root) {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,837,descriptor = root;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,838,internal_static_sourcemap_LineMapping_descriptor =
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,839,getDescriptor().getMessageTypes().get(0);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,840,internal_static_sourcemap_LineMapping_fieldAccessorTable = new
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,841,com.google.protobuf.GeneratedMessage.FieldAccessorTable(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,842,"internal_static_sourcemap_LineMapping_descriptor,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,843,"new java.lang.String[] { ""LineNumber"", ""ColumnPosition"", ""OriginalMapping"", },"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,844,"com.google.debugging.sourcemap.proto.Mapping.LineMapping.class,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,845,com.google.debugging.sourcemap.proto.Mapping.LineMapping.Builder.class);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,846,internal_static_sourcemap_OriginalMapping_descriptor =
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,847,getDescriptor().getMessageTypes().get(1);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,848,internal_static_sourcemap_OriginalMapping_fieldAccessorTable = new
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,849,com.google.protobuf.GeneratedMessage.FieldAccessorTable(
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,850,"internal_static_sourcemap_OriginalMapping_descriptor,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,851,"new java.lang.String[] { ""OriginalFile"", ""LineNumber"", ""ColumnPosition"", ""Identifier"", },"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,852,"com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.class,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,853,com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.Builder.class);
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,854,return null;
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,857,com.google.protobuf.Descriptors.FileDescriptor
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,858,".internalBuildGeneratedFileFrom(descriptorData,"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,859,new com.google.protobuf.Descriptors.FileDescriptor[] {
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,860,"}, assigner);"
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,863,public static void internalForceInit() {}
True,gen/com/google/debugging/sourcemap/proto/Mapping.java,gen/com/google/debugging/sourcemap/proto/Mapping.java,865,// @@protoc_insertion_point(outer_class_scope)
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,2,* Copyright 2009 The Closure Compiler Authors.
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,6,* You may obtain a copy of the License at
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,13,* See the License for the specific language governing permissions and
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,14,* limitations under the License.
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,17,package com.google.debugging.sourcemap;
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,20,* A SourceMapConsumer is a SourceMapping provide that can parse from a raw
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,21,* string.
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,23,* @author johnlenz@google.com (John Lenz)
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,25,public interface SourceMapConsumer extends SourceMapping {
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,28,* Parses the given contents containing a source map to provide initialize
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,29,* a class providing SourceMapping.
True,src/com/google/debugging/sourcemap/SourceMapConsumer.java,src/com/google/debugging/sourcemap/SourceMapConsumer.java,31,public void parse(String contents) throws SourceMapParseException;
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,2,* Copyright 2011 The Closure Compiler Authors.
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,6,* You may obtain a copy of the License at
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,13,* See the License for the specific language governing permissions and
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,14,* limitations under the License.
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,17,package com.google.debugging.sourcemap;
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,20,* Detect and parse the provided source map.
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,21,* @author johnlenz@google.com (John Lenz)
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,23,public class SourceMapConsumerFactory {
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,25,/** not constructible */
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,26,private SourceMapConsumerFactory() {}
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,29,* @param contents The string representing the source map file contents.
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,30,* @return The parsed source map.
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,31,* @throws SourceMapParseException
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,33,public static SourceMapping parse(String contents)
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,34,throws SourceMapParseException {
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,35,SourceMapConsumer consumer = null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,36,SourceMapGenerator.Format format = detectVersion(contents);
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,37,consumer = createForVerion(detectVersion(contents));
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,38,consumer.parse(contents);
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,39,return consumer;
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,43,* @param contents
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,44,* @return The best guess of the source map version.
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,45,* @throws SourceMapParseException
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,47,private static SourceMapGenerator.Format detectVersion(String contents)
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,48,throws SourceMapParseException {
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,49,"if (contents.startsWith(""/** Begin line maps. **/"")) {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,50,return SourceMapGenerator.Format.LEGACY;
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,51,"} else if (contents.startsWith(""{"")){"
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,52,return SourceMapGenerator.Format.EXPERIMENTIAL;
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,53,} else {
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,54,"throw new SourceMapParseException(""unable to detect source map format"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,59,* @return The appropriate source map object for the given source map format.
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,60,* @throws SourceMapParseException
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,62,private static SourceMapConsumer createForVerion(
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,63,SourceMapGenerator.Format format)
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,64,throws SourceMapParseException {
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,65,switch (format) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,66,case LEGACY:
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,67,return new SourceMapConsumerV1();
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,68,case EXPERIMENTIAL:
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,69,return new SourceMapConsumerV2();
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,70,default:
True,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,src/com/google/debugging/sourcemap/SourceMapConsumerFactory.java,71,"throw new SourceMapParseException(""unsupported source map format"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,2,* Copyright 2009 The Closure Compiler Authors.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,6,* You may obtain a copy of the License at
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,13,* See the License for the specific language governing permissions and
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,14,* limitations under the License.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,17,package com.google.debugging.sourcemap;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,19,import com.google.common.base.Preconditions;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,20,import com.google.common.collect.ImmutableList;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,21,import com.google.common.collect.Interner;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,22,import com.google.common.collect.Interners;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,23,import com.google.common.collect.Lists;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,24,import com.google.common.primitives.Bytes;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,25,import com.google.common.primitives.Shorts;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,26,import com.google.debugging.sourcemap.proto.Mapping.OriginalMapping;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,28,import org.json.JSONArray;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,29,import org.json.JSONException;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,30,import org.json.JSONObject;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,32,import java.util.ArrayList;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,33,import java.util.List;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,36,"* Class for parsing and representing a SourceMap, as produced by the"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,37,"* Closure Compiler, Caja-Compiler, etc."
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,39,public class SourceMapConsumerV1 implements SourceMapConsumer {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,40,"private static final String LINEMAP_HEADER = ""/** Begin line maps. **/"";"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,41,private static final String FILEINFO_HEADER =
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,42,"""/** Begin file information. **/"";"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,44,private static final String DEFINITION_HEADER =
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,45,"""/** Begin mapping definitions. **/"";"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,48,* Internal class for parsing the SourceMap. Used to maintain parser
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,49,* state in an easy to use instance.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,51,private static class ParseState {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,52,final String contents;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,53,int currentPosition = 0;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,55,ParseState(String contents) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,56,this.contents = contents;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,59,"/** Reads a line, returning null at EOF. */"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,60,String readLineOrNull() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,61,if (currentPosition >= contents.length()) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,62,return null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,64,"int index = contents.indexOf('\n', currentPosition);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,65,if (index < 0) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,66,index = contents.length();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,68,"String line = contents.substring(currentPosition, index);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,69,currentPosition = index + 1;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,70,return line;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,73,"/** Reads a line, throwing a parse exception at EOF. */"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,74,String readLine() throws SourceMapParseException {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,75,String line = readLineOrNull();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,76,if (line == null) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,77,"fail(""EOF"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,79,return line;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,83,* Reads a line and throws an parse exception if the line does not
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,84,* equal the argument.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,86,void expectLine(String expect) throws SourceMapParseException {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,87,String line = readLine();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,88,if (!expect.equals(line)) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,89,"fail(""Expected "" + expect + "" got "" + line);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,94,* Indicates that parsing has failed by throwing a parse exception.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,96,void fail(String message) throws SourceMapParseException {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,97,throw new SourceMapParseException(message);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,102,"* Mapping from a line number (0-indexed), to a list of mapping IDs, one for"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,103,"* each character on the line. For example, if the array for line 2 is"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,104,"* {@code [4,,,,5,6,,,7]}, then there will be the entry:"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,106,* <pre>
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,107,"* 1 => {4, 4, 4, 4, 5, 6, 6, 6, 7}"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,108,* </pre>
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,110,private ImmutableList<ImmutableList<LineFragment>> characterMap;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,113,* Map of Mapping IDs to the actual mapping object.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,115,private ImmutableList<SourceFile> mappings;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,118,* Parses the given contents containing a source map.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,120,public void parse(String contents) throws SourceMapParseException {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,121,ParseState parser = new ParseState(contents);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,122,try {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,123,parseInternal(parser);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,124,} catch (JSONException ex) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,125,"parser.fail(""JSON parse exception: "" + ex);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,130,* Parses the first section of the source map file that has character
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,131,* mappings.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,132,* @param parser The parser to use
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,133,* @param lineCount The number of lines in the generated js
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,134,* @return The max id found in the file
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,136,private int parseCharacterMap(
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,137,"ParseState parser, int lineCount,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,138,ImmutableList.Builder<ImmutableList<LineFragment>> characterMapBuilder)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,139,"throws SourceMapParseException, JSONException {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,140,int maxID = -1;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,141,"// [0,,,,,,1,2]"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,142,for (int i = 0; i < lineCount; ++i) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,143,String currentLine = parser.readLine();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,145,// Blank lines are allowed in the spec to indicate no mapping
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,146,// information for the line.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,147,if (currentLine.isEmpty()) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,148,continue;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,151,ImmutableList.Builder<LineFragment> fragmentList =
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,152,ImmutableList.builder();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,153,"// We need the start index to initialize this, needs to be done in the"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,154,// loop.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,155,LineFragment myLineFragment = null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,157,JSONArray charArray = new JSONArray(currentLine);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,158,int numOffsets = charArray.length();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,159,int lastID = -1;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,160,int startID = Integer.MIN_VALUE;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,161,List<Byte> currentOffsets = Lists.newArrayList();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,162,for (int j = 0; j < charArray.length(); ++j) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,163,"// Keep track of the current mappingID, if the next element in the"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,164,// array is empty we reuse the existing mappingID for the column.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,165,int mappingID = lastID;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,166,if (!charArray.isNull(j)) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,167,mappingID = charArray.optInt(j);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,168,if (mappingID > maxID) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,169,maxID = mappingID;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,173,if (startID == Integer.MIN_VALUE) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,174,startID = mappingID;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,175,} else {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,176,// If the difference is bigger than a byte we need to keep track of
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,177,// a new line fragment with a new start value.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,178,if (mappingID - lastID > Byte.MAX_VALUE
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,179,|| mappingID - lastID < Byte.MIN_VALUE) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,180,myLineFragment = new LineFragment(
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,181,"startID, Bytes.toArray(currentOffsets));"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,182,currentOffsets.clear();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,183,// Start a new section.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,184,fragmentList.add(myLineFragment);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,185,startID = mappingID;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,186,} else {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,187,currentOffsets.add((byte) (mappingID - lastID));
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,191,lastID = mappingID;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,193,if (startID != Integer.MIN_VALUE) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,194,myLineFragment = new LineFragment(
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,195,"startID, Bytes.toArray(currentOffsets));"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,196,fragmentList.add(myLineFragment);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,198,characterMapBuilder.add(fragmentList.build());
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,200,return maxID;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,203,private class FileName {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,204,private final String dir;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,205,private final String name;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,207,"FileName(String directory, String name) {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,208,this.dir = directory;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,209,this.name = name;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,214,* Split the file into a filename/directory pair.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,216,* @param interner The interner to use for interning the strings.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,217,* @param input The input to split.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,218,"* @return The pair of directory, filename."
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,220,private FileName splitFileName(
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,221,"Interner<String> interner, String input) {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,222,int hashIndex = input.lastIndexOf('/');
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,223,"String dir = interner.intern(input.substring(0, hashIndex + 1));"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,224,String fileName = interner.intern(input.substring(hashIndex + 1));
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,225,"return new FileName(dir, fileName);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,229,* Parse the file mappings section of the source map file.  This maps the
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,230,"* ids to the filename, line number and colunm number in the original"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,231,* files.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,232,* @param parser The parser to get the data from.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,233,* @param maxID The maximum id found in the character mapping section.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,235,"private void parseFileMappings(ParseState parser, int maxID)"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,236,"throws SourceMapParseException, JSONException {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,237,"// ['d.js', 3, 78, 'foo']"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,238,// Intern the strings to save memory.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,239,Interner<String> interner = Interners.newStrongInterner();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,240,ImmutableList.Builder<SourceFile> mappingsBuilder = ImmutableList.builder();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,242,// Setup all the arrays to keep track of the various details about the
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,243,// source file.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,244,ArrayList<Byte> lineOffsets = Lists.newArrayList();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,245,ArrayList<Short> columns = Lists.newArrayList();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,246,ArrayList<String> identifiers = Lists.newArrayList();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,248,// The indexes and details about the current position in the file to do
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,249,// diffs against.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,250,String currentFile = null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,251,int lastLine = -1;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,252,int startLine = -1;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,253,int startMapId = -1;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,254,for (int mappingId = 0; mappingId <= maxID; ++mappingId) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,255,String currentLine = parser.readLine();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,256,JSONArray mapArray = new JSONArray(currentLine);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,257,if (mapArray.length() < 3) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,258,"parser.fail(""Invalid mapping array"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,261,// Split up the file and directory names to reduce memory usage.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,262,String myFile = mapArray.getString(0);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,263,int line = mapArray.getInt(1);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,264,if (!myFile.equals(currentFile) || (line - lastLine) > Byte.MAX_VALUE
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,265,|| (line - lastLine) < Byte.MIN_VALUE) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,266,if (currentFile != null) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,267,"FileName dirFile = splitFileName(interner, currentFile);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,268,SourceFile.Builder builder = SourceFile.newBuilder()
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,269,.setDir(dirFile.dir)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,270,.setFileName(dirFile.name)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,271,.setStartLine(startLine)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,272,.setStartMapId(startMapId)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,273,.setLineOffsets(lineOffsets)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,274,.setColumns(columns)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,275,.setIdentifiers(identifiers);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,276,mappingsBuilder.add(builder.build());
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,278,// Reset all the positions back to the start and clear out the arrays
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,279,// to start afresh.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,280,currentFile = myFile;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,281,startLine = line;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,282,lastLine = line;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,283,startMapId = mappingId;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,284,columns.clear();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,285,lineOffsets.clear();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,286,identifiers.clear();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,288,"// We need to add on the columns and identifiers for all the lines, even"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,289,// for the first line.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,290,lineOffsets.add((byte) (line - lastLine));
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,291,columns.add((short) mapArray.getInt(2));
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,292,"identifiers.add(interner.intern(mapArray.optString(3, """")));"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,293,lastLine = line;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,295,if (currentFile != null) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,296,"FileName dirFile = splitFileName(interner, currentFile);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,297,SourceFile.Builder builder = SourceFile.newBuilder()
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,298,.setDir(dirFile.dir)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,299,.setFileName(dirFile.name)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,300,.setStartLine(startLine)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,301,.setStartMapId(startMapId)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,302,.setLineOffsets(lineOffsets)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,303,.setColumns(columns)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,304,.setIdentifiers(identifiers);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,305,mappingsBuilder.add(builder.build());
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,307,mappings = mappingsBuilder.build();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,310,private void parseInternal(ParseState parser)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,311,"throws SourceMapParseException, JSONException {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,313,// /** Begin line maps. **/{ count: 2 }
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,314,String headerCount = parser.readLine();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,315,"Preconditions.checkArgument(headerCount.startsWith(LINEMAP_HEADER),"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,316,"""Expected %s"", LINEMAP_HEADER);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,317,JSONObject countObject = new JSONObject(
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,318,headerCount.substring(LINEMAP_HEADER.length()));
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,319,"if (!countObject.has(""count"")) {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,320,"parser.fail(""Missing 'count'"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,323,"int lineCount = countObject.getInt(""count"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,324,if (lineCount <= 0) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,325,"parser.fail(""Count must be >= 1"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,327,ImmutableList.Builder<ImmutableList<LineFragment>> characterMapBuilder =
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,328,ImmutableList.builder();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,329,"int maxId = parseCharacterMap(parser, lineCount, characterMapBuilder);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,330,characterMap = characterMapBuilder.build();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,332,// /** Begin file information. **/
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,333,parser.expectLine(FILEINFO_HEADER);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,335,"// File information. Not used, so we just consume it."
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,336,for (int i = 0; i < lineCount; i++) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,337,parser.readLine();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,340,// /** Begin mapping definitions. **/
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,341,parser.expectLine(DEFINITION_HEADER);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,343,"parseFileMappings(parser, maxId);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,346,@Override
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,347,"public OriginalMapping getMappingForLine(int lineNumber, int columnIndex) {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,348,"Preconditions.checkNotNull(characterMap, ""parse() must be called first"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,350,if (lineNumber < 1 || lineNumber > characterMap.size() || columnIndex < 1) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,351,return null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,354,List<LineFragment> lineFragments = characterMap.get(lineNumber - 1);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,355,if (lineFragments == null || lineFragments.isEmpty()) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,356,return null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,359,int columnOffset = 0;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,360,// The code assumes everything past the end is the same as the last item
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,361,// so we default to the last item in the line.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,362,LineFragment lastFragment = lineFragments.get(lineFragments.size() - 1);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,363,int mapId = lastFragment.valueAtColumn(lastFragment.length());
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,364,for (LineFragment lineFragment : lineFragments) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,365,int columnPosition = columnIndex - columnOffset;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,366,if (columnPosition <= lineFragment.length()) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,367,mapId = lineFragment.valueAtColumn(columnPosition);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,368,break;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,370,columnOffset += lineFragment.length();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,373,if (mapId < 0) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,374,return null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,377,return getMappingFromId(mapId);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,381,* Do a binary search for the correct mapping array to use.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,383,* @param mapId The mapping array to find
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,384,* @return The source file mapping to use.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,386,private SourceFile binarySearch(int mapId) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,387,int lower = 0;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,388,int upper = mappings.size() - 1;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,390,while (lower <= upper) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,391,int middle = lower + (upper - lower) / 2;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,392,SourceFile middleCompare = mappings.get(middle);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,393,if (mapId < middleCompare.getStartMapId()) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,394,upper = middle - 1;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,395,} else if (mapId < (middleCompare.getStartMapId()
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,396,+ middleCompare.getLength())) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,397,return middleCompare;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,398,} else {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,399,lower = middle + 1;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,403,return null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,407,* Find the original mapping for the specified mapping id.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,409,* @param mapID The mapID to lookup.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,410,* @return The originalMapping protocol buffer for the id.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,412,private OriginalMapping getMappingFromId(int mapID) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,413,SourceFile match = binarySearch(mapID);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,414,if (match == null) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,415,return null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,417,int pos = mapID - match.getStartMapId();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,418,return match.getOriginalMapping(pos);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,422,* Keeps track of the information about the line in a more compact way.  It
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,423,* represents a fragment of the line starting at a specific index and then
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,424,"* looks at offsets from that index stored as a byte, this dramatically"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,425,* reduces the memory usuage of this array.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,427,private static final class LineFragment {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,428,private final int startIndex;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,429,private final byte[] offsets;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,432,* Create a new line fragment to store information about.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,434,* @param startIndex The start index for this line.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,435,* @param offsets The byte array of offsets to store.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,437,"LineFragment(int startIndex, byte[] offsets) {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,438,this.startIndex = startIndex;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,439,this.offsets = offsets;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,443,* The length of columns stored in the line.  One is added because we
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,444,* store the start index outside of the offsets array.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,446,int length() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,447,return offsets.length + 1;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,451,* Find the mapping id at the specified column.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,453,* @param column The column to lookup
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,454,* @return the value at that point in the column
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,456,int valueAtColumn(int column) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,457,Preconditions.checkArgument(column > 0);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,458,int pos = startIndex;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,459,for (int i = 0; i < column - 1; i++) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,460,pos += offsets[i];
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,462,return pos;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,467,* Keeps track of data about the source file itself.  This is contains a list
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,468,* of line offsetsand columns to track down where exactly a line falls into
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,469,* the data.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,471,private static final class SourceFile {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,472,final String dir;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,473,final String fileName;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,474,final int startMapId;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,475,final int startLine;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,476,final byte[] lineOffsets;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,477,final short[] columns;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,478,final String[] identifiers;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,480,private SourceFile(
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,481,"String dir, String fileName, int startLine, int startMapId,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,482,"byte[] lineOffsets, short[] columns, String[] identifiers) {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,483,this.fileName = Preconditions.checkNotNull(fileName);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,484,this.dir = Preconditions.checkNotNull(dir);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,485,this.startLine = startLine;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,486,this.startMapId = startMapId;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,487,this.lineOffsets = Preconditions.checkNotNull(lineOffsets);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,488,this.columns = Preconditions.checkNotNull(columns);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,489,this.identifiers = Preconditions.checkNotNull(identifiers);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,490,Preconditions.checkArgument(lineOffsets.length == columns.length &&
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,491,columns.length == identifiers.length);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,494,private SourceFile(int startMapId) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,495,// Only used for binary searches.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,496,this.startMapId = startMapId;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,498,this.fileName = null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,499,this.dir = null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,500,this.startLine = 0;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,501,this.lineOffsets = null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,502,this.columns = null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,503,this.identifiers = null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,507,* Returns the number of elements in this source file.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,509,int getLength() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,510,return lineOffsets.length;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,514,* Returns the number of elements in this source file.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,516,int getStartMapId() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,517,return startMapId;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,521,* Creates an original mapping from the data.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,523,* @param offset The offset into the array to find the mapping for.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,524,* @return A new original mapping object.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,526,OriginalMapping getOriginalMapping(int offset) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,527,int lineNumber = this.startLine;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,528,// Offset is an index into this array and we need to include it.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,529,for (int i = 0; i <= offset; i++) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,530,lineNumber += lineOffsets[i];
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,532,OriginalMapping.Builder builder = OriginalMapping.newBuilder()
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,533,.setOriginalFile(dir + fileName)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,534,.setLineNumber(lineNumber)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,535,.setColumnPosition(columns[offset])
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,536,.setIdentifier(identifiers[offset]);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,537,return builder.build();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,541,* Builder to make a new SourceFile object.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,543,static final class Builder {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,544,String dir;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,545,String fileName;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,546,int startMapId;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,547,int startLine;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,548,byte[] lineOffsets;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,549,short[] columns;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,550,String[] identifiers;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,552,Builder setDir(String dir) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,553,this.dir = dir;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,554,return this;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,557,Builder setFileName(String fileName) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,558,this.fileName = fileName;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,559,return this;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,562,Builder setStartMapId(int startMapId) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,563,this.startMapId = startMapId;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,564,return this;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,567,Builder setStartLine(int startLine) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,568,this.startLine = startLine;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,569,return this;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,572,Builder setLineOffsets(List<Byte> lineOffsets) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,573,this.lineOffsets = Bytes.toArray(lineOffsets);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,574,return this;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,577,Builder setColumns(List<Short> columns) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,578,this.columns = Shorts.toArray(columns);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,579,return this;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,582,Builder setIdentifiers(List<String> identifiers) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,583,this.identifiers = identifiers.toArray(new String[0]);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,584,return this;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,588,* Creates a new SourceFile from the parameters.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,590,SourceFile build() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,591,"return new SourceFile(dir, fileName, startLine, startMapId,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,592,"lineOffsets, columns, identifiers);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,596,static Builder newBuilder() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,src/com/google/debugging/sourcemap/SourceMapConsumerV1.java,597,return new Builder();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,2,* Copyright 2010 The Closure Compiler Authors.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,6,* You may obtain a copy of the License at
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,13,* See the License for the specific language governing permissions and
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,14,* limitations under the License.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,17,package com.google.debugging.sourcemap;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,19,import com.google.common.base.Preconditions;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,20,import com.google.common.collect.Lists;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,21,import com.google.common.collect.Maps;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,22,import com.google.debugging.sourcemap.proto.Mapping.OriginalMapping;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,24,import org.json.JSONArray;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,25,import org.json.JSONException;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,26,import org.json.JSONObject;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,28,import java.util.List;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,29,import java.util.Map;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,32,"* Class for parsing version 2 of the SourceMap format, as produced by the"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,33,"* Closure Compiler, etc."
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,34,* @author johnlenz@google.com (John Lenz)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,35,* @author jschorr@google.com (Joseph Schorr)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,37,public class SourceMapConsumerV2 implements SourceMapConsumer {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,39,"* The character map for each line. If a line does not have an entry,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,40,* then it has not yet been decoded.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,42,"private Map<Integer, List<Integer>> characterMap = null;"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,45,* The undecoded line maps. Will be accessed to decode lines as needed.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,47,private JSONArray lineMaps = null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,50,* Map of Mapping IDs to the actual mapping object.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,52,private List<OriginalMapping> mappings;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,54,public SourceMapConsumerV2() {}
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,57,* Parses the given contents containing a source map.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,59,public void parse(String contents) throws SourceMapParseException {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,60,try {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,61,parseInternal(contents);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,62,} catch (JSONException ex) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,63,"throw new SourceMapParseException(""JSON parse exception: "" + ex);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,68,* Parses the given contents as version 2 of a SourceMap.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,70,private void parseInternal(String contents)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,71,"throws JSONException, SourceMapParseException {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,72,JSONObject sourceMapRoot = new JSONObject(contents);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,74,// Check basic assertions about the format.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,75,"int version = sourceMapRoot.getInt(""version"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,76,if (version != 2) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,77,"throw new SourceMapParseException(""Unknown version: "" + version);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,80,"String file = sourceMapRoot.getString(""file"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,81,if (file.isEmpty()) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,82,"throw new SourceMapParseException(""File entry is missing or empty"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,85,"int lineCount = sourceMapRoot.getInt(""lineCount"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,86,"lineMaps = sourceMapRoot.getJSONArray(""lineMaps"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,87,if (lineCount != lineMaps.length()) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,88,throw new SourceMapParseException(
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,89,"""lineMaps length does not match lineCount"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,92,// Build an empty character map. The character map will be filled in as
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,93,// lines are requested.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,94,characterMap = Maps.newHashMap();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,96,"JSONArray sources = sourceMapRoot.getJSONArray(""sources"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,97,"JSONArray names = sourceMapRoot.has(""names"")"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,98,"? sourceMapRoot.getJSONArray(""names"") : null;"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,100,// Create each of the OriginalMappings.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,101,"JSONArray jsonMappings = sourceMapRoot.getJSONArray(""mappings"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,102,mappings = Lists.newArrayListWithCapacity(lineCount);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,104,for (int i = 0; i < jsonMappings.length(); i++) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,105,JSONArray entry = jsonMappings.getJSONArray(i);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,107,// The name can be accessed in two ways: Directly (i.e. a string) or
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,108,// indirectly (i.e. an index into the name map).
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,109,"String name = entry.optString(3, """");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,110,if (names != null) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,111,try {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,112,int nameIndex = entry.getInt(3);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,113,name = names.getString(nameIndex);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,114,} catch (JSONException e) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,118,// Build the new OriginalMapping entry.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,119,String sourceFile = sources.getString(entry.getInt(0));
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,120,int lineNumber = entry.getInt(1);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,121,int column = entry.getInt(2);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,123,OriginalMapping.Builder builder = OriginalMapping.newBuilder()
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,124,.setOriginalFile(sourceFile)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,125,.setLineNumber(lineNumber)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,126,.setColumnPosition(column)
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,127,.setIdentifier(name);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,128,mappings.add(builder.build());
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,132,@Override
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,133,"public OriginalMapping getMappingForLine(int lineNumber, int columnIndex) {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,134,// Normalize the line and column numbers to 0.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,135,lineNumber--;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,136,columnIndex--;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,138,if (lineNumber >= lineMaps.length()) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,139,return null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,142,if (!characterMap.containsKey(lineNumber)) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,143,// Parse the line map entry and place it into the character map.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,144,try {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,145,"characterMap.put(lineNumber,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,146,SourceMapLineDecoder.decodeLine(lineMaps.getString(lineNumber)));
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,147,} catch (JSONException jse) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,148,throw new IllegalStateException(
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,149,"""JSON exception when retrieving line map"", jse);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,153,List<Integer> map = characterMap.get(lineNumber);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,154,if (map == null || map.size() <= columnIndex) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,155,return null;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,158,int index = map.get(columnIndex);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,159,"Preconditions.checkState(index < mappings.size(),"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,160,"""Invalid mapping reference"");"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,src/com/google/debugging/sourcemap/SourceMapConsumerV2.java,161,return mappings.get(index);
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,2,* Copyright 2010 The Closure Compiler Authors.
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,6,* You may obtain a copy of the License at
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,13,* See the License for the specific language governing permissions and
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,14,* limitations under the License.
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,17,package com.google.debugging.sourcemap;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,19,import com.google.common.collect.Lists;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,21,import java.util.List;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,24,* Class for parsing the line maps in SourceMap v2.
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,26,* @author johnlenz@google.com (John Lenz)
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,27,* @author jschorr@google.com (Joseph Schorr)
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,29,// NOTE : Copied from the JSC to avoid a dependency.
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,30,// TODO(user): Move this into a central shared location.
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,31,class SourceMapLineDecoder {
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,33,*  A map used to convert integer values in the range 0-63 to their base64
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,34,*  values.
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,36,private static final String BASE64_MAP =
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,37,"""ABCDEFGHIJKLMNOPQRSTUVWXYZ"" +"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,38,"""abcdefghijklmnopqrstuvwzyz"" +"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,39,"""0123456789+/"";"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,42,* Decodes a line in a character map into a list of mapping IDs.
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,44,static List<Integer> decodeLine(String lineSource) {
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,45,return decodeLine(new StringParser(lineSource));
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,48,private SourceMapLineDecoder() {}
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,50,"private static LineEntry decodeLineEntry(String in, int lastId) {"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,51,"return decodeLineEntry(new StringParser(in), lastId);"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,54,"private static LineEntry decodeLineEntry(StringParser reader, int lastId) {"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,55,int repDigits = 0;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,57,// Determine the number of digits used for the repetition count.
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,58,"// Each ""!"" indicates another base64 digit."
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,59,for (char peek = reader.peek(); peek == '!'; peek = reader.peek()) {
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,60,repDigits++;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,61,"reader.next(); // consume the ""!"""
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,64,int idDigits = 0;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,65,int reps = 0;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,66,if (repDigits == 0) {
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,67,"// No repetition digit escapes, so the next character represents the"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,68,// number of digits in the id (bottom 2 bits) and the number of
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,69,// repetitions (top 4 digits).
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,70,char digit = reader.next();
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,71,"int value = addBase64Digit(digit, 0);"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,72,reps = (value >> 2);
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,73,idDigits = (value & 3);
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,74,} else {
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,75,char digit = reader.next();
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,76,"idDigits = addBase64Digit(digit, 0);"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,78,int value = 0;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,79,for (int i = 0; i < repDigits; i++) {
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,80,digit = reader.next();
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,81,"value = addBase64Digit(digit, value);"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,83,reps = value;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,86,// Adjust for 1 offset encoding.
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,87,reps += 1;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,88,idDigits += 1;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,90,// Decode the id token.
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,91,int value = 0;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,92,for (int i = 0; i < idDigits; i++) {
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,93,char digit = reader.next();
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,94,"value = addBase64Digit(digit, value);"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,96,"int mappingId = getIdFromRelativeId(value, idDigits, lastId);"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,97,"return new LineEntry(mappingId, reps);"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,100,private static List<Integer> decodeLine(StringParser reader) {
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,101,List<Integer> result = Lists.newArrayListWithCapacity(512);
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,102,int lastId = 0;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,103,do {
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,104,"LineEntry entry = decodeLineEntry(reader, lastId);"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,105,lastId = entry.id;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,107,for (int i=0; i < entry.reps; i++) {
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,108,result.add(entry.id);
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,110,} while(reader.hasNext());
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,112,return result;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,116,"* Build base64 number a digit at a time, most significant digit first."
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,118,"private static int addBase64Digit(char digit, int previousValue) {"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,119,return (previousValue * 64) + BASE64_MAP.indexOf(digit);
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,123,* @return the id from the relative id.
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,125,"private static int getIdFromRelativeId(int rawId, int digits, int lastId) {"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,126,// The value range depends on the number of digits
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,127,int base = 1 << (digits * 6);
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,128,return ((rawId >= base/2) ? rawId - base : rawId) + lastId;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,132,* Simple class for tracking a single entry in a line map.
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,134,static class LineEntry {
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,135,final int id;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,136,final int reps;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,137,"public LineEntry(int id, int reps) {"
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,138,this.id = id;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,139,this.reps = reps;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,144,* A simple class for maintaining the current location
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,145,* in the input.
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,147,static class StringParser {
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,148,final String content;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,149,int current = 0;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,151,StringParser(String content) {
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,152,this.content = content;
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,155,char next() {
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,156,return content.charAt(current++);
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,159,char peek() {
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,160,return content.charAt(current);
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,163,boolean hasNext() {
True,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,src/com/google/debugging/sourcemap/SourceMapLineDecoder.java,164,return  current < content.length() -1;
True,src/com/google/debugging/sourcemap/SourceMapParseException.java,src/com/google/debugging/sourcemap/SourceMapParseException.java,2,* Copyright 2009 The Closure Compiler Authors.
True,src/com/google/debugging/sourcemap/SourceMapParseException.java,src/com/google/debugging/sourcemap/SourceMapParseException.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/debugging/sourcemap/SourceMapParseException.java,src/com/google/debugging/sourcemap/SourceMapParseException.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/debugging/sourcemap/SourceMapParseException.java,src/com/google/debugging/sourcemap/SourceMapParseException.java,6,* You may obtain a copy of the License at
True,src/com/google/debugging/sourcemap/SourceMapParseException.java,src/com/google/debugging/sourcemap/SourceMapParseException.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/debugging/sourcemap/SourceMapParseException.java,src/com/google/debugging/sourcemap/SourceMapParseException.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/debugging/sourcemap/SourceMapParseException.java,src/com/google/debugging/sourcemap/SourceMapParseException.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/debugging/sourcemap/SourceMapParseException.java,src/com/google/debugging/sourcemap/SourceMapParseException.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/debugging/sourcemap/SourceMapParseException.java,src/com/google/debugging/sourcemap/SourceMapParseException.java,13,* See the License for the specific language governing permissions and
True,src/com/google/debugging/sourcemap/SourceMapParseException.java,src/com/google/debugging/sourcemap/SourceMapParseException.java,14,* limitations under the License.
True,src/com/google/debugging/sourcemap/SourceMapParseException.java,src/com/google/debugging/sourcemap/SourceMapParseException.java,17,package com.google.debugging.sourcemap;
True,src/com/google/debugging/sourcemap/SourceMapParseException.java,src/com/google/debugging/sourcemap/SourceMapParseException.java,20,* Throw if an invalid or unknown source map is encountered.
True,src/com/google/debugging/sourcemap/SourceMapParseException.java,src/com/google/debugging/sourcemap/SourceMapParseException.java,22,public class SourceMapParseException extends Exception {
True,src/com/google/debugging/sourcemap/SourceMapParseException.java,src/com/google/debugging/sourcemap/SourceMapParseException.java,23,public SourceMapParseException(String message) {
True,src/com/google/debugging/sourcemap/SourceMapParseException.java,src/com/google/debugging/sourcemap/SourceMapParseException.java,24,super(message);
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,2,* Copyright 2009 The Closure Compiler Authors.
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,6,* You may obtain a copy of the License at
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,13,* See the License for the specific language governing permissions and
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,14,* limitations under the License.
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,17,package com.google.debugging.sourcemap;
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,19,import com.google.debugging.sourcemap.proto.Mapping.OriginalMapping;
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,22,"* Interface for provide a way of mapping (line, column) positions back to"
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,23,* positions in the original (uncompiled) source code.
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,26,public interface SourceMapping {
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,28,* Returns the original mapping for the line number and column position found
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,29,* in the source map. Returns null if none is found.
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,31,"* @param lineNumber The line number, with the first being '1'."
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,32,"* @param columnIndex The column index, with the first being '1'."
True,src/com/google/debugging/sourcemap/SourceMapping.java,src/com/google/debugging/sourcemap/SourceMapping.java,34,"OriginalMapping getMappingForLine(int lineNumber, int columnIndex);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,2,* Copyright 2009 The Closure Compiler Authors.
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,6,* You may obtain a copy of the License at
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,13,* See the License for the specific language governing permissions and
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,14,* limitations under the License.
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,17,package com.google.debugging.sourcemap;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,19,import com.google.debugging.sourcemap.SourceMapConsumerV1;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,20,import com.google.debugging.sourcemap.SourceMapParseException;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,21,import com.google.debugging.sourcemap.proto.Mapping.OriginalMapping;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,23,import junit.framework.TestCase;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,25,public class SourceMapConsumerV1Test extends TestCase {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,27,public SourceMapConsumerV1Test() {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,30,public SourceMapConsumerV1Test(String name) {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,31,super(name);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,34,public void testGetMappingForLine() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,35,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,36,"sb.append(""/** Begin line maps. **/{ count : 2 }\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,37,"sb.append(""[0,,,,1,,2]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,38,"sb.append(""[3,,,,,,,]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,39,"sb.append(""/** Begin file information. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,40,"sb.append(""['test.js']\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,41,"sb.append(""['foo.js']\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,42,"sb.append(""/** Begin mapping definitions. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,43,"sb.append(""['test.js', 0, 1]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,44,"sb.append(""['bleg.js', 5, 8, 'hello']\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,45,"sb.append(""['bleg.js', 12, 78]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,46,"sb.append(""['foo.js', 15, 16, 'yo!']"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,48,SourceMapConsumerV1 sourceMap = new SourceMapConsumerV1();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,49,sourceMap.parse(sb.toString());
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,51,"OriginalMapping mapping = sourceMap.getMappingForLine(1, 1);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,53,assertNotNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,54,"assertEquals(""test.js"", mapping.getOriginalFile());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,55,"assertEquals(0, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,56,"assertEquals(1, mapping.getColumnPosition());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,57,"assertEquals("""", mapping.getIdentifier());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,59,"mapping = sourceMap.getMappingForLine(1, 6);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,60,assertNotNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,61,"assertEquals(""bleg.js"", mapping.getOriginalFile());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,62,"assertEquals(5, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,63,"assertEquals(8, mapping.getColumnPosition());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,64,"assertEquals(""hello"", mapping.getIdentifier());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,66,"mapping = sourceMap.getMappingForLine(2, 4);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,67,assertNotNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,68,"assertEquals(""foo.js"", mapping.getOriginalFile());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,69,"assertEquals(15, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,70,"assertEquals(16, mapping.getColumnPosition());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,71,"assertEquals(""yo!"", mapping.getIdentifier());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,74,public void testLineEdges() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,75,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,76,"sb.append(""/** Begin line maps. **/{ count : 2 }\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,77,"sb.append(""[100]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,78,"sb.append(""[200]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,79,"sb.append(""/** Begin file information. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,80,"sb.append(""['test.js']\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,81,"sb.append(""['foo.js']\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,82,"sb.append(""/** Begin mapping definitions. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,83,for (int i = 0; i <= 200; i++) {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,84,"sb.append(""['foo.js', "").append(i).append("", 1]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,87,SourceMapConsumerV1 sourceMap = new SourceMapConsumerV1();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,88,sourceMap.parse(sb.toString());
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,90,"OriginalMapping mapping = sourceMap.getMappingForLine(-1, 1);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,91,assertNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,93,"mapping = sourceMap.getMappingForLine(0, 1);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,94,assertNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,96,"mapping = sourceMap.getMappingForLine(1, 1);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,97,"assertEquals(100, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,99,"mapping = sourceMap.getMappingForLine(2, 1);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,100,"assertEquals(200, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,102,"mapping = sourceMap.getMappingForLine(3, 1);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,103,assertNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,106,public void testColumnEdges() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,107,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,108,"sb.append(""/** Begin line maps. **/{ count : 1 }\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,109,"sb.append(""[100, 101]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,110,"sb.append(""/** Begin file information. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,111,"sb.append(""\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,112,"sb.append(""/** Begin mapping definitions. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,113,for (int i = 0; i <= 200; i++) {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,114,"sb.append(""['foo.js', "").append(i).append("", 1]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,117,SourceMapConsumerV1 sourceMap = new SourceMapConsumerV1();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,118,sourceMap.parse(sb.toString());
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,120,"OriginalMapping mapping = sourceMap.getMappingForLine(1, -1);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,121,assertNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,123,"mapping = sourceMap.getMappingForLine(1, 0);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,124,assertNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,126,"mapping = sourceMap.getMappingForLine(1, 1);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,127,"assertEquals(100, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,129,"mapping = sourceMap.getMappingForLine(1, 2);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,130,"assertEquals(101, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,132,// Columns beyond the end of the line are treated the same
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,133,// as the last column.
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,134,"mapping = sourceMap.getMappingForLine(1, 3);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,135,"assertEquals(101, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,138,public void testNegativeOneInLineMap() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,139,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,140,"sb.append(""/** Begin line maps. **/{ count : 1 }\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,141,"sb.append(""[200,-1,199,-1]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,142,"sb.append(""/** Begin file information. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,143,"sb.append(""\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,144,"sb.append(""/** Begin mapping definitions. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,145,for (int i = 0; i <= 200; i++) {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,146,"sb.append(""['foo.js', 1, "").append(i).append(""]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,149,SourceMapConsumerV1 sourceMap = new SourceMapConsumerV1();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,150,sourceMap.parse(sb.toString());
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,152,"OriginalMapping mapping = sourceMap.getMappingForLine(1, 2);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,153,assertNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,155,"mapping = sourceMap.getMappingForLine(1, 4);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,156,assertNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,159,public void testSimpleParse() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,160,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,161,"sb.append(""/** Begin line maps. **/{ count : 1 }\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,162,"sb.append(""[0,,,,1,2]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,163,"sb.append(""/** Begin file information. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,164,"sb.append(""['test.js']\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,165,"sb.append(""/** Begin mapping definitions. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,166,"sb.append(""['test.js', 0, 1]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,167,"sb.append(""['test.js', 0, 1, 'hello']\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,168,"sb.append(""['test.js', 0, 1]"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,170,SourceMapConsumerV1 sourceMap = new SourceMapConsumerV1();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,171,sourceMap.parse(sb.toString());
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,174,public void testBlankLine() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,175,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,176,"sb.append(""/** Begin line maps. **/{ count : 1 }\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,177,"sb.append(""\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,178,"sb.append(""/** Begin file information. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,179,"sb.append(""\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,180,"sb.append(""/** Begin mapping definitions. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,182,SourceMapConsumerV1 sourceMap = new SourceMapConsumerV1();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,183,sourceMap.parse(sb.toString());
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,186,public void testCountFailure() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,187,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,188,"sb.append(""/** Begin line maps. **/{ counter : 1 }\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,190,"assertException(""Missing 'count'"", sb);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,193,public void testInvalidCountFailure() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,194,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,195,"sb.append(""/** Begin line maps. **/{ count : 0 }\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,197,"assertException(""Count must be >= 1"", sb);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,200,public void testInvalidJSONFailure() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,201,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,202,"sb.append(""/** Begin line maps. **/{ count : 2 }\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,203,"sb.append(""[0,,,,2\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,205,"assertExceptionStartsWith(""JSON parse exception: org.json.JSONException: "" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,206,"""Expected a ',' or ']' at "", sb);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,209,public void testInvalidHeaderFailure() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,210,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,211,"sb.append(""/** Begin line maps. **/{ count : 1 }\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,212,"sb.append(""[0,,,1]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,213,"sb.append(""[3,,,4]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,215,assertException(
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,216,"""Expected /** Begin file information. **/ got [3,,,4]"", sb);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,219,public void testInvalidPostHeaderToken() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,220,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,221,"sb.append(""/** Begin line maps. **/{ count : 1 }\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,222,"sb.append(""[0,,,1]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,223,"sb.append(""/** Begin file information. **/f\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,225,"assertException(""Expected /** Begin file information. **/"""
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,226,"+ "" got /** Begin file information. **/f"", sb);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,229,public void testInvalidMappingArrayFailure() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,230,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,231,"sb.append(""/** Begin line maps. **/{ count : 1 }\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,232,"sb.append(""[0,,,,1,2]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,233,"sb.append(""/** Begin file information. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,234,"sb.append(""['test.js']\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,235,"sb.append(""/** Begin mapping definitions. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,236,"sb.append(""['test.js', 0]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,238,"assertException(""Invalid mapping array"", sb);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,241,public void testMultipleLineFragments() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,242,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,243,"sb.append(""/** Begin line maps. **/{ count : 1 }\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,244,"sb.append(""[0,1,2,3,260,261,262]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,245,"sb.append(""/** Begin file information. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,246,"sb.append(""\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,247,"sb.append(""/** Begin mapping definitions. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,248,for (int i = 0; i < 262; i++) {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,249,"sb.append(""['frog/test"" + i + "".js', "" + i + "", 1]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,251,"sb.append(""['frog/testigloo.js', 500, 1]"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,253,SourceMapConsumerV1 sourceMap = new SourceMapConsumerV1();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,254,sourceMap.parse(sb.toString());
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,256,"OriginalMapping mapping = sourceMap.getMappingForLine(1, 1);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,258,assertNotNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,259,"assertEquals(""frog/test0.js"", mapping.getOriginalFile());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,260,"assertEquals(0, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,261,"assertEquals(1, mapping.getColumnPosition());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,262,"assertEquals("""", mapping.getIdentifier());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,264,"mapping = sourceMap.getMappingForLine(1, 6);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,265,assertNotNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,266,"assertEquals(""frog/test261.js"", mapping.getOriginalFile());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,267,"assertEquals(261, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,268,"assertEquals(1, mapping.getColumnPosition());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,271,public void testMultipleMappingFragments() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,272,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,273,"sb.append(""/** Begin line maps. **/{ count : 1 }\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,274,"sb.append(""[0,1,2,3,260,261,262,1023]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,275,"sb.append(""/** Begin file information. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,276,"sb.append(""\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,277,"sb.append(""/** Begin mapping definitions. **/\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,278,for (int i = 0; i < 2000; i++) {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,279,"sb.append(""['frog/test"" + (i / 100) + "".js', "" + i + "", 1]\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,281,"sb.append(""['frog/testigloo.js', 500, 1]"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,283,SourceMapConsumerV1 sourceMap = new SourceMapConsumerV1();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,284,sourceMap.parse(sb.toString());
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,286,"OriginalMapping mapping = sourceMap.getMappingForLine(1, 1);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,288,assertNotNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,289,"assertEquals(""frog/test0.js"", mapping.getOriginalFile());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,290,"assertEquals(0, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,291,"assertEquals(1, mapping.getColumnPosition());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,292,"assertEquals("""", mapping.getIdentifier());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,294,"mapping = sourceMap.getMappingForLine(1, 6);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,295,assertNotNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,296,"assertEquals(""frog/test2.js"", mapping.getOriginalFile());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,297,"assertEquals(261, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,298,"assertEquals(1, mapping.getColumnPosition());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,300,"mapping = sourceMap.getMappingForLine(1, 8);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,301,assertNotNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,302,"assertEquals(""frog/test10.js"", mapping.getOriginalFile());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,303,"assertEquals(1023, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,304,"assertEquals(1, mapping.getColumnPosition());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,307,"private void assertException(String exception, StringBuilder sb) {"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,308,boolean exceptionRaised = false;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,310,try {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,311,SourceMapConsumerV1 sourceMap = new SourceMapConsumerV1();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,312,sourceMap.parse(sb.toString());
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,314,} catch (SourceMapParseException pe) {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,315,"assertEquals(exception, pe.getMessage());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,316,exceptionRaised = true;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,319,assertTrue(exceptionRaised);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,322,"private void assertExceptionStartsWith(String exception, StringBuilder sb) {"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,323,boolean exceptionRaised = false;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,325,try {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,326,SourceMapConsumerV1 sourceMap = new SourceMapConsumerV1();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,327,sourceMap.parse(sb.toString());
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,329,} catch (SourceMapParseException pe) {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,330,assertTrue(
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,331,"""expected <"" + exception +""> but was <""+ pe.getMessage() +"">"","
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,332,pe.getMessage().startsWith(exception));
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,333,exceptionRaised = true;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV1Test.java,336,assertTrue(exceptionRaised);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,2,* Copyright 2009 The Closure Compiler Authors.
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,6,* You may obtain a copy of the License at
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,13,* See the License for the specific language governing permissions and
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,14,* limitations under the License.
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,17,package com.google.debugging.sourcemap;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,19,import com.google.debugging.sourcemap.SourceMapConsumerV2;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,20,import com.google.debugging.sourcemap.SourceMapParseException;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,21,import com.google.debugging.sourcemap.proto.Mapping.OriginalMapping;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,23,import junit.framework.TestCase;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,25,public class SourceMapConsumerV2Test extends TestCase {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,27,public SourceMapConsumerV2Test() {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,30,public SourceMapConsumerV2Test(String name) {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,31,super(name);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,34,public void testEmptyMap() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,35,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,36,"sb.append(""{\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,37,"sb.append(""\""version\"": 2,\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,38,"sb.append(""\""file\"": \""somefile.js\"",\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,39,"sb.append(""\""lineCount\"": 0,\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,40,"sb.append(""\""lineMaps\"": [],\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,41,"sb.append(""\""sources\"": [],\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,42,"sb.append(""\""mappings\"": []\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,43,"sb.append(""}\n"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,45,SourceMapConsumerV2 sourceMap = new SourceMapConsumerV2();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,46,sourceMap.parse(sb.toString());
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,49,public void testGetMappingForLine() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,50,"// Input Code: function f(foo, bar) { foo = foo + bar + 2; return foo; }"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,51,String mapData =
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,52,"""{\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,53,"""\""version\"":2,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,54,"""\""file\"":\""testcode\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,55,"""\""lineCount\"":1,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,56,"""\""lineMaps\"":"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,57,"""[\""cAEBABIBA/ICA+ADICA/ICA+IDA9AEYBMBA5\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,58,"""\""sources\"":[\""testcode\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,59,"""\""mappings\"":[[0,1,9,\""f\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,60,"""[0,1,9,\""f\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,61,"""[0,1,10],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,62,"""[0,1,11,\""foo\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,63,"""[0,1,16,\""bar\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,64,"""[0,1,21],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,65,"""[0,1,23],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,66,"""[0,1,23,\""foo\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,67,"""[0,1,29,\""foo\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,68,"""[0,1,35,\""bar\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,69,"""[0,1,41],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,70,"""[0,1,44],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,71,"""[0,1,51,\""foo\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,72,"""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,73,"""}\n"";"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,75,SourceMapConsumerV2 sourceMap = new SourceMapConsumerV2();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,76,sourceMap.parse(mapData);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,78,"OriginalMapping mapping = sourceMap.getMappingForLine(1, 10);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,80,assertNotNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,81,"assertEquals(""testcode"", mapping.getOriginalFile());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,82,"assertEquals(1, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,83,"assertEquals(9, mapping.getColumnPosition());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,84,"assertEquals(""f"", mapping.getIdentifier());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,86,"mapping = sourceMap.getMappingForLine(1, 40);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,88,assertNotNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,89,"assertEquals(""testcode"", mapping.getOriginalFile());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,90,"assertEquals(1, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,91,"assertEquals(44, mapping.getColumnPosition());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,92,"assertEquals("""", mapping.getIdentifier());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,94,"mapping = sourceMap.getMappingForLine(1, 42);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,95,assertNotNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,96,"assertEquals(""testcode"", mapping.getOriginalFile());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,97,"assertEquals(1, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,98,"assertEquals(51, mapping.getColumnPosition());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,99,"assertEquals(""foo"", mapping.getIdentifier());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,102,public void testGetMappingForLineWithNameIndex() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,103,String mapData =
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,104,"""{\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,105,"""\""version\"":2,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,106,"""\""file\"":\""testcode\"",\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,107,"""\""lineCount\"":1,\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,108,"""\""lineMaps\"":"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,109,"""[\""cAEBABIBA/ICA+ADICA/ICA+IDA9AEYBMBA5\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,110,"""\""sources\"":[\""testcode\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,111,"""\""names\"": [\""f\""],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,112,"""\""mappings\"":[[0,1,9,0],\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,113,"""[0,1,9,0]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,114,"""]\n"" +"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,115,"""}\n"";"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,117,SourceMapConsumerV2 sourceMap = new SourceMapConsumerV2();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,118,sourceMap.parse(mapData);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,120,"OriginalMapping mapping = sourceMap.getMappingForLine(1, 10);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,122,assertNotNull(mapping);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,123,"assertEquals(""testcode"", mapping.getOriginalFile());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,124,"assertEquals(1, mapping.getLineNumber());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,125,"assertEquals(9, mapping.getColumnPosition());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,126,"assertEquals(""f"", mapping.getIdentifier());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,129,public void testInvalidJSONFailure() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,130,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,131,"sb.append(""notjson"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,133,"assertExceptionStartsWith(""JSON parse exception: org.json.JSONException: """
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,134,"+ ""A JSONObject text must begin """
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,135,"+ ""with '{' at character 1"", sb);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,138,public void testUnknownVersion() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,139,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,140,"sb.append(""{\""version\"": 3}"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,141,"assertException(""Unknown version: 3"", sb);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,144,public void testMissingFile() throws Exception {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,145,StringBuilder sb = new StringBuilder();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,146,"sb.append(""{\""version\"": 2, \""file\"": \""\""}"");"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,147,"assertException(""File entry is missing or empty"", sb);"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,150,"private void assertException(String exception, StringBuilder sb) {"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,151,boolean exceptionRaised = false;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,153,try {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,154,SourceMapConsumerV2 sourceMap = new SourceMapConsumerV2();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,155,sourceMap.parse(sb.toString());
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,157,} catch (SourceMapParseException pe) {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,158,"assertEquals(exception, pe.getMessage());"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,159,exceptionRaised = true;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,162,assertTrue(exceptionRaised);
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,165,"private void assertExceptionStartsWith(String exception, StringBuilder sb) {"
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,166,boolean exceptionRaised = false;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,168,try {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,169,SourceMapConsumerV2 sourceMap = new SourceMapConsumerV2();
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,170,sourceMap.parse(sb.toString());
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,172,} catch (SourceMapParseException pe) {
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,173,assertTrue(
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,174,"""expected <"" + exception +""> but was <""+ pe.getMessage() +"">"","
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,175,pe.getMessage().startsWith(exception));
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,176,exceptionRaised = true;
True,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,test/com/google/debugging/sourcemap/SourceMapConsumerV2Test.java,179,assertTrue(exceptionRaised);
