is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,21,import org.apache.commons.math.TestUtils;
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,22,import org.apache.commons.math.stat.univariate.DescriptiveStatistics;
False,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,25, @version $Revision: 1.10 $ $Date: 2004/02/18 03:24:20 $
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,27,* @version $Revision: 1.11 $ $Date: 2004/06/02 00:11:53 $
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,216,* Test Serialization and Recovery
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,218,public void testSerialization() {
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,221,try {
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,222,UnivariateRealFunction f = (UnivariateRealFunction)TestUtils.serializeAndRecover(new QuinticFunction());
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,223,double result;
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,225,BisectionSolver solver = new BisectionSolver(f);
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,226,UnivariateRealSolver solver2 = (UnivariateRealSolver)TestUtils.serializeAndRecover(solver);
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,228,"result = solver.solve(-0.2, 0.2);"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,229,"assertEquals(result, 0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,230,"assertEquals(solver2.solve(-0.2, 0.2), result, solver2.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,232,"result = solver.solve(-0.1, 0.3);"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,233,"assertEquals(result, 0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,234,"assertEquals(solver2.solve(-0.1, 0.3), result, solver2.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,236,"result = solver.solve(-0.3, 0.45);"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,237,"assertEquals(result, 0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,238,"assertEquals(solver2.solve(-0.3, 0.45), result, solver2.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,240,"result = solver.solve(0.3, 0.7);"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,241,"assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,242,"assertEquals(solver2.solve(0.3, 0.7), result, solver2.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,244,"result = solver.solve(0.2, 0.6);"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,245,"assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,246,"assertEquals(solver2.solve(0.2, 0.6), result, solver2.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,248,"result = solver.solve(0.05, 0.95);"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,249,"assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,250,"assertEquals(solver2.solve(0.05, 0.95), result, solver2.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,252,"result = solver.solve(0.85, 1.25);"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,253,"assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,254,"assertEquals(solver2.solve(0.85, 1.25), result, solver2.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,256,"result = solver.solve(0.8, 1.2);"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,257,"assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,258,"assertEquals(solver2.solve(0.8, 1.2), result, solver2.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,260,"result = solver.solve(0.85, 1.75);"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,261,"assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,262,"assertEquals(solver2.solve(0.85, 1.75), result, solver2.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,264,"result = solver.solve(0.55, 1.45);"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,265,"assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,266,"assertEquals(solver2.solve(0.55, 1.45), result, solver2.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,268,"result = solver.solve(0.85, 5);"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,269,"assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,270,"assertEquals(solver2.solve(0.85, 5), result, solver2.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,272,} catch(MathException ex){
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,273,fail(ex.getMessage());
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,276,/* Test Reset */
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,277,try{
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,278,double newValue = 1.0e-2;
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,279,UnivariateRealFunction f = (UnivariateRealFunction)TestUtils.serializeAndRecover(new QuinticFunction());
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,280,UnivariateRealSolver solver = new BisectionSolver(f);
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,282,double oldValue = solver.getRelativeAccuracy();
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,283,solver.setRelativeAccuracy(newValue);
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,284,solver.resetRelativeAccuracy();
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,285,"assertEquals(oldValue, solver.getRelativeAccuracy(), 1.0e-2);"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,287,UnivariateRealSolver  solver2 = (UnivariateRealSolver)TestUtils.serializeAndRecover(solver);
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,289,"assertEquals(oldValue, solver2.getRelativeAccuracy(), 1.0e-2);"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,291,solver2.setRelativeAccuracy(newValue);
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,292,solver2.resetRelativeAccuracy();
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,294,"assertEquals(oldValue, solver2.getRelativeAccuracy(), 1.0e-2);"
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,296,} catch(MathException ex){
True,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,src/test/org/apache/commons/math/analysis/BisectionSolverTest.java,297,fail(ex.getMessage());
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,18,import java.io.Serializable;
False,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,23, @version $Revision: 1.12 $ $Date: 2004/04/08 21:19:17 $
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,25,* @version $Revision: 1.13 $ $Date: 2004/06/02 00:12:01 $
False,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,25,ublic class QuinticFunction implements DifferentiableUnivariateRealFunction {
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,27,"public class QuinticFunction implements DifferentiableUnivariateRealFunction, Serializable {"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,29,static final long serialVersionUID = -8866263034920607152L;
