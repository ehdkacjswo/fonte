is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,15,* limitations under the License.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,18,package org.apache.commons.math.stat.descriptive;
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,20,import java.io.Serializable;
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,23,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,24,* A StatisticalSummary that aggregates statistics from several data sets or
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,25,"* data set partitions.  In its simplest usage mode, the client creates an"
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,26,"* instance via the zero-argument constructor, then uses"
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,27,* {@link #createContributingStatistics()} to obtain a {@code SummaryStatistics}
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,28,* for each individual data set / partition.  The per-set statistics objects
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,29,"* are used as normal, and at any time the aggregate statistics for all the"
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,30,* contributors can be obtained from this object.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,31,* </p><p>
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,32,* Clients with specialized requirements can use alternative constructors to
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,33,* control the statistics implementations and initial values used by the
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,34,* contributing and the internal aggregate {@code SummaryStatistics} objects.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,35,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,37,* @since 2.0
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,38,* @version $Revision:$ $Date:$
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,41,"public class AggregateSummaryStatistics implements StatisticalSummary,"
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,42,Serializable {
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,45,* The serialization version of this class
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,47,private static final long serialVersionUID = 1L;
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,50,* A SummaryStatistics serving as a prototype for creating SummaryStatistics
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,51,* contributing to this aggregate
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,53,private SummaryStatistics statisticsPrototype;
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,56,* The SummaryStatistics in which aggregate statistics are accumulated
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,58,private SummaryStatistics statistics;
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,61,* Initializes a new AggregateSummaryStatistics with default statistics
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,62,* implementations.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,64,* @see SummaryStatistics#SummaryStatistics()
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,66,public AggregateSummaryStatistics() {
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,67,this(new SummaryStatistics());
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,71,* Initializes a new AggregateSummaryStatistics with the specified statistics
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,72,* object as a prototype for contributing statistics and for the internal
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,73,* aggregate statistics.  This provides for customized statistics implementations
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,74,* to be used by contributing and aggregate statistics.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,76,* @param prototypeStatistics a {@code SummaryStatistics} serving as a
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,77,*      prototype both for the internal aggregate statistics and for
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,78,*      contributing statistics obtained via the
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,79,*      {@code createContributingStatistics()} method.  Being a prototype
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,80,*      means that other objects are initialized by copying this object's state.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,81,"*      If {@code null}, a new, default statistics object is used.  Any statistic"
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,82,*      values in the prototype are propagated to contributing statistics
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,83,*      objects and (once) into these aggregate statistics.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,84,* @see #createContributingStatistics()
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,86,public AggregateSummaryStatistics(SummaryStatistics prototypeStatistics) {
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,87,"this(prototypeStatistics, (prototypeStatistics == null ? null :"
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,88,new SummaryStatistics(prototypeStatistics)));
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,92,* Initializes a new AggregateSummaryStatistics with the specified statistics
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,93,* object as a prototype for contributing statistics and for the internal
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,94,* aggregate statistics.  This provides for different statistics implementations
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,95,* to be used by contributing and aggregate statistics and for an initial
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,96,* state to be supplied for the aggregate statistics.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,98,* @param prototypeStatistics a {@code SummaryStatistics} serving as a
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,99,*      prototype both for the internal aggregate statistics and for
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,100,*      contributing statistics obtained via the
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,101,*      {@code createContributingStatistics()} method.  Being a prototype
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,102,*      means that other objects are initialized by copying this object's state.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,103,"*      If {@code null}, a new, default statistics object is used.  Any statistic"
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,104,*      values in the prototype are propagated to contributing statistics
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,105,"*      objects, but not into these aggregate statistics."
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,106,* @param initialStatistics a {@code SummaryStatistics} to serve as the
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,107,"*      internal aggregate statistics object.  If {@code null}, a new, default"
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,108,*      statistics object is used.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,109,* @see #createContributingStatistics()
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,111,"public AggregateSummaryStatistics(SummaryStatistics prototypeStatistics,"
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,112,SummaryStatistics initialStatistics) {
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,113,this.statisticsPrototype = ((prototypeStatistics == null) ?
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,114,new SummaryStatistics() : prototypeStatistics);
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,115,this.statistics = ((initialStatistics == null) ?
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,116,new SummaryStatistics() : initialStatistics);
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,120,* {@inheritDoc}.  This version returns the maximum over all the aggregated
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,121,* data.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,123,* @see StatisticalSummary#getMax()
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,125,public double getMax() {
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,126,return statistics.getMax();
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,130,* {@inheritDoc}.  This version returns the mean of all the aggregated data.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,132,* @see StatisticalSummary#getMean()
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,134,public double getMean() {
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,135,return statistics.getMean();
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,139,* {@inheritDoc}.  This version returns the minimum over all the aggregated
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,140,* data.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,142,* @see StatisticalSummary#getMin()
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,144,public double getMin() {
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,145,return statistics.getMin();
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,149,* {@inheritDoc}.  This version returns a count of all the aggregated data.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,151,* @see StatisticalSummary#getN()
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,153,public long getN() {
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,154,return statistics.getN();
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,158,* {@inheritDoc}.  This version returns the standard deviation of all the
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,159,* aggregated data.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,161,* @see StatisticalSummary#getStandardDeviation()
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,163,public double getStandardDeviation() {
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,164,return statistics.getStandardDeviation();
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,168,* {@inheritDoc}.  This version returns a sum of all the aggregated data.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,170,* @see StatisticalSummary#getSum()
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,172,public double getSum() {
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,173,return statistics.getSum();
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,177,* {@inheritDoc}.  This version returns the variance of all the aggregated
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,178,* data.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,180,* @see StatisticalSummary#getVariance()
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,182,public double getVariance() {
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,183,return statistics.getVariance();
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,187,* Creates and returns a {@code SummaryStatistics} whose data will be
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,188,* aggregated with those of this {@code AggregateSummaryStatistics}.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,190,* @return a {@code SummaryStatistics} whose data will be aggregated with
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,191,*      those of this {@code AggregateSummaryStatistics}.  The initial state
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,192,*      is a copy of the configured prototype statistics.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,194,public SummaryStatistics createContributingStatistics() {
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,195,SummaryStatistics contributingStatistics
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,196,= new AggregatingSummaryStatistics(statistics);
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,198,"SummaryStatistics.copy(statisticsPrototype, contributingStatistics);"
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,200,return contributingStatistics;
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,204,* A SummaryStatistics that also forwards all values added to it to a second
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,205,* {@code SummaryStatistics} for aggregation.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,207,* @since 2.0
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,209,private static class AggregatingSummaryStatistics extends SummaryStatistics {
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,212,* The serialization version of this class
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,214,private static final long serialVersionUID = 1L;
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,217,* An additional SummaryStatistics into which values added to these
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,218,* statistics (and possibly others) are aggregated
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,220,private SummaryStatistics aggregateStatistics;
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,223,* Initializes a new AggregatingSummaryStatistics with the specified
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,224,* aggregate statistics object
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,226,* @param aggregateStatistics a {@code SummaryStatistics} into which
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,227,*      values added to this statistics object should be aggregated
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,229,public AggregatingSummaryStatistics(SummaryStatistics aggregateStatistics) {
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,230,this.aggregateStatistics = aggregateStatistics;
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,234,* {@inheritDoc}.  This version adds the provided value to the configured
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,235,* aggregate after adding it to these statistics.
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,237,* @see SummaryStatistics#addValue(double)
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,239,@Override
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,240,public void addValue(double value) {
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,241,super.addValue(value);
True,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java,242,aggregateStatistics.addValue(value);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,18,package org.apache.commons.math.stat.descriptive;
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,20,import junit.framework.Test;
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,21,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,22,import junit.framework.TestSuite;
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,26,* Test cases for {@link AggregateSummaryStatistics}
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,29,public class AggregateSummaryStatisticsTest extends TestCase {
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,32,* Tests the standard aggregation behavior
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,34,public void testAggregation() {
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,35,AggregateSummaryStatistics aggregate = new AggregateSummaryStatistics();
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,36,SummaryStatistics setOneStats = aggregate.createContributingStatistics();
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,37,SummaryStatistics setTwoStats = aggregate.createContributingStatistics();
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,39,"assertNotNull(""The set one contributing stats are null"", setOneStats);"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,40,"assertNotNull(""The set two contributing stats are null"", setTwoStats);"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,41,"assertNotSame(""Contributing stats objects are the same"", setOneStats, setTwoStats);"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,43,setOneStats.addValue(2);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,44,setOneStats.addValue(3);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,45,setOneStats.addValue(5);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,46,setOneStats.addValue(7);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,47,setOneStats.addValue(11);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,48,"assertEquals(""Wrong number of set one values"", 5, setOneStats.getN());"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,49,"assertEquals(""Wrong sum of set one values"", 28.0, setOneStats.getSum());"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,51,setTwoStats.addValue(2);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,52,setTwoStats.addValue(4);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,53,setTwoStats.addValue(8);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,54,"assertEquals(""Wrong number of set two values"", 3, setTwoStats.getN());"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,55,"assertEquals(""Wrong sum of set two values"", 14.0, setTwoStats.getSum());"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,57,"assertEquals(""Wrong number of aggregate values"", 8, aggregate.getN());"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,58,"assertEquals(""Wrong aggregate sum"", 42.0, aggregate.getSum());"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,62,* Creates and returns a {@code Test} representing all the test cases in this
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,63,* class
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,65,* @return a {@code Test} representing all the test cases in this class
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,67,public static Test suite() {
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,68,TestSuite suite = new TestSuite(AggregateSummaryStatisticsTest.class);
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,69,"suite.setName(""AggregateSummaryStatistics tests"");"
True,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/AggregateSummaryStatisticsTest.java,70,return suite;
