is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,235,argetY = -REDUCTION_FACTOR * yB;
True,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,235,final int p = agingA - MAXIMAL_AGING;
True,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,236,final double weightA = (1 << p) - 1;
True,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,237,final double weightB = p + 1;
True,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,238,targetY = (weightA * yA - weightB * REDUCTION_FACTOR * yB) / (weightA + weightB);
False,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,238,argetY = -REDUCTION_FACTOR * yA;
True,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,241,final int p = agingB - MAXIMAL_AGING;
True,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,242,final double weightA = p + 1;
True,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,243,final double weightB = (1 << p) - 1;
True,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java,244,targetY = (weightB * yB - weightA * REDUCTION_FACTOR * yA) / (weightA + weightB);
False,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,44,"eturn new int[] {1, 3, 8, 1, 9, 4, 8, 1, 12, 1, 14};"
True,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,44,"return new int[] {1, 3, 8, 1, 9, 4, 8, 1, 12, 1, 16};"
True,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,84,@Test
True,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,85,public void testIssue716() {
True,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,86,BracketingNthOrderBrentSolver solver =
True,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,87,"new BracketingNthOrderBrentSolver(1.0e-12, 1.0e-10, 1.0e-22, 5);"
True,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,88,UnivariateFunction sharpTurn = new UnivariateFunction() {
True,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,89,public double value(double x) {
True,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,90,return (2 * x + 1) / (1.0e9 * (x + 1));
True,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,93,"double result = solver.solve(100, sharpTurn, -0.9999999, 30, 15, AllowedSolution.RIGHT_SIDE);"
True,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,94,"Assert.assertEquals(0, sharpTurn.value(result), solver.getFunctionValueAccuracy());"
True,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,95,Assert.assertTrue(sharpTurn.value(result) >= 0);
True,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java,96,"Assert.assertEquals(-0.5, result, 1.0e-10);"
