is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,20,import java.io.IOException;
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,21,import java.io.ObjectInputStream;
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,22,import java.io.ObjectOutputStream;
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,25,import org.apache.commons.math.linear.MatrixUtils;
False,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,53,rivate final RealVector coefficients;
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,57,private final transient RealVector coefficients;
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,187,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,188,@Override
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,189,public boolean equals(Object other) {
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,191,if (this == other) {
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,192,return true;
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,195,if (other == null) {
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,196,return false;
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,199,try {
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,201,LinearConstraint rhs = (LinearConstraint) other;
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,202,return (relationship == rhs.relationship) &&
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,203,(value        == rhs.value) &&
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,204,coefficients.equals(rhs.coefficients);
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,206,} catch (ClassCastException ex) {
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,207,// ignore exception
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,208,return false;
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,213,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,214,@Override
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,215,public int hashCode() {
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,216,return relationship.hashCode() ^
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,217,Double.valueOf(value).hashCode() ^
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,218,coefficients.hashCode();
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,221,/** Serialize the instance.
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,222,* @param oos stream where object should be written
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,223,* @throws IOException if object cannot be written to stream
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,225,private void writeObject(ObjectOutputStream oos)
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,226,throws IOException {
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,227,oos.defaultWriteObject();
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,228,"MatrixUtils.serializeRealVector(coefficients, oos);"
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,231,/** Deserialize the instance.
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,232,* @param ois stream from which the object should be read
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,233,* @throws ClassNotFoundException if a class in the stream cannot be found
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,234,* @throws IOException if object cannot be read from the stream
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,236,private void readObject(ObjectInputStream ois)
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,237,"throws ClassNotFoundException, IOException {"
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,238,ois.defaultReadObject();
True,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java,239,"MatrixUtils.deserializeRealVector(this, ""coefficients"", ois);"
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,20,import java.io.IOException;
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,21,import java.io.ObjectInputStream;
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,22,import java.io.ObjectOutputStream;
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,25,import org.apache.commons.math.linear.MatrixUtils;
False,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,44,rivate final RealVector coefficients;
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,48,private final transient RealVector coefficients;
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,104,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,105,@Override
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,106,public boolean equals(Object other) {
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,108,if (this == other) {
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,109,return true;
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,112,if (other == null) {
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,113,return false;
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,116,try {
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,118,LinearObjectiveFunction rhs = (LinearObjectiveFunction) other;
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,119,return (constantTerm == rhs.constantTerm) && coefficients.equals(rhs.coefficients);
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,121,} catch (ClassCastException ex) {
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,122,// ignore exception
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,123,return false;
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,128,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,129,@Override
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,130,public int hashCode() {
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,131,return Double.valueOf(constantTerm).hashCode() ^ coefficients.hashCode();
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,134,/** Serialize the instance.
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,135,* @param oos stream where object should be written
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,136,* @throws IOException if object cannot be written to stream
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,138,private void writeObject(ObjectOutputStream oos)
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,139,throws IOException {
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,140,oos.defaultWriteObject();
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,141,"MatrixUtils.serializeRealVector(coefficients, oos);"
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,144,/** Deserialize the instance.
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,145,* @param ois stream from which the object should be read
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,146,* @throws ClassNotFoundException if a class in the stream cannot be found
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,147,* @throws IOException if object cannot be read from the stream
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,149,private void readObject(ObjectInputStream ois)
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,150,"throws ClassNotFoundException, IOException {"
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,151,ois.defaultReadObject();
True,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java,152,"MatrixUtils.deserializeRealVector(this, ""coefficients"", ois);"
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,20,import java.io.IOException;
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,21,import java.io.ObjectInputStream;
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,22,import java.io.ObjectOutputStream;
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,28,import org.apache.commons.math.linear.MatrixUtils;
False,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,72,rotected RealMatrix tableau;
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,76,protected transient RealMatrix tableau;
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,495,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,496,@Override
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,497,public boolean equals(Object other) {
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,499,if (this == other) {
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,500,return true;
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,503,if (other == null) {
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,504,return false;
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,507,try {
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,509,SimplexTableau rhs = (SimplexTableau) other;
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,510,return (restrictToNonNegative  == rhs.restrictToNonNegative) &&
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,511,(numDecisionVariables   == rhs.numDecisionVariables) &&
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,512,(numSlackVariables      == rhs.numSlackVariables) &&
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,513,(numArtificialVariables == rhs.numArtificialVariables) &&
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,514,(epsilon                == rhs.epsilon) &&
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,515,f.equals(rhs.f) &&
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,516,constraints.equals(rhs.constraints) &&
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,517,tableau.equals(rhs.tableau);
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,519,} catch (ClassCastException ex) {
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,520,// ignore exception
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,521,return false;
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,526,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,527,@Override
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,528,public int hashCode() {
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,529,return Boolean.valueOf(restrictToNonNegative).hashCode() ^
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,530,numDecisionVariables ^
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,531,numSlackVariables ^
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,532,numArtificialVariables ^
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,533,Double.valueOf(epsilon).hashCode() ^
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,534,f.hashCode() ^
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,535,constraints.hashCode() ^
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,536,tableau.hashCode();
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,539,/** Serialize the instance.
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,540,* @param oos stream where object should be written
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,541,* @throws IOException if object cannot be written to stream
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,543,private void writeObject(ObjectOutputStream oos)
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,544,throws IOException {
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,545,oos.defaultWriteObject();
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,546,"MatrixUtils.serializeRealMatrix(tableau, oos);"
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,549,/** Deserialize the instance.
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,550,* @param ois stream from which the object should be read
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,551,* @throws ClassNotFoundException if a class in the stream cannot be found
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,552,* @throws IOException if object cannot be read from the stream
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,554,private void readObject(ObjectInputStream ois)
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,555,"throws ClassNotFoundException, IOException {"
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,556,ois.defaultReadObject();
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,557,"MatrixUtils.deserializeRealMatrix(this, ""tableau"", ois);"
