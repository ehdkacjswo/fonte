is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,5,* reserved.
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,9,* are met:
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,17,*    distribution.
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,54,package org.apache.commons.math;
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,56,import java.util.Hashtable;
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,57,import java.util.Enumeration;
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,60,* Maintains a frequency distribution. <br>
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,61,"* Accepts int, long or string values, converting"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,62,* all to Strings and maintaining frequency counts.
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,64,* @author Phil Steitz
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,67,public class Freq {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,69,private String name;
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,71,private Hashtable freqTable;
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,73,/** instance initializer */
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,75,freqTable = new Hashtable();
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,78,public Freq() {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,81,public Freq(String name) {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,82,this.name = name;
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,85,public String toString() {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,86,StringBuffer outBuffer = new StringBuffer();
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,87,"outBuffer.append(""Value \t Frequency \n"");"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,88,Enumeration e = freqTable.keys();
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,89,Long count = null;
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,90,String value = null;
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,91,while (e.hasMoreElements()) {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,92,value = (String)e.nextElement();
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,93,count = (Long)freqTable.get(value);
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,94,outBuffer.append(value);
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,95,"outBuffer.append(""\t"");"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,96,outBuffer.append(count.toString());
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,97,"outBuffer.append(""\n"");"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,99,return outBuffer.toString();
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,102,public String toXML() {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,103,return null;
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,106,/** Adds 1 to the frequency count for v */
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,107,public void addValue(java.lang.String v) {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,108,insertValue(v);
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,111,/** Adds 1 to the frequency count for v */
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,112,public void addValue(int v) {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,113,insertValue((new Integer(v)).toString());
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,116,/** Adds 1 to the frequency count for v */
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,117,public void addValue(long v) {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,118,insertValue((new Long(v)).toString());
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,121,/** Returns the number of values = v */
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,122,public long getCount(String v) {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,123,Long ct = (Long)freqTable.get(v);
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,124,if (ct == null) {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,125,return 0;
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,126,} else {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,127,return ct.longValue();
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,131,/** Returns the sum of all frequencies */
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,132,public long getSumFreq() {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,133,Enumeration e = freqTable.keys();
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,134,long count = 0;
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,135,String value = null;
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,136,while (e.hasMoreElements()) {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,137,value = (String)e.nextElement();
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,138,count += ((Long)freqTable.get(value)).longValue();
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,140,return count;
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,143,/** Returns the percentage of values = v */
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,144,public double getPct(String v) {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,145,return (new Double(getCount(v))).doubleValue()
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,146,/(new Double(getSumFreq())).doubleValue();
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,149,/** Clears the frequency table */
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,150,public void clear() {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,151,freqTable.clear();
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,154,/** Adds 1 to the frequency count for v */
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,155,private void insertValue(String v) {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,156,Long ct = (Long)freqTable.get(v);
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,157,if (ct == null) {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,158,Long val = new Long(1);
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,159,"freqTable.put(v,val);"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,160,} else {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,161,"freqTable.put(v,(new Long(ct.longValue()+1)));"
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,165,/** Getter for property name.
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,166,* @return Value of property name.
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,168,public java.lang.String getName() {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,169,return name;
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,172,/** Setter for property name.
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,173,* @param name New value of property name.
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,175,public void setName(java.lang.String name) {
True,src/java/org/apache/commons/math/Freq.java,src/java/org/apache/commons/math/Freq.java,176,this.name = name;
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,5,* reserved.
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,9,* are met:
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,17,*    distribution.
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,55,package org.apache.commons.math;
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,58,* Interface defining a real-valued matrix with basic algebraic operations
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,59,* @author  Phil Steitz
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,60,* @version $Revision: 1.1 $ $Date: 2003/05/12 19:03:41 $
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,62,public interface RealMatrix {
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,64,public RealMatrix copy();
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,67,* Compute the sum of *this and m
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,68,* @param m    matrix to be added
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,69,* @return     this + m
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,70,* @exception  IllegalArgumentException if m is not the same size as *this
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,72,public RealMatrix add(RealMatrix m);
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,75,* Compute *this minus m
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,76,* @param m    matrix to be subtracted
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,77,* @return     this + m
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,78,* @exception  IllegalArgumentException if m is not the same size as *this
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,80,public RealMatrix subtract(RealMatrix m);
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,83,* Returns the rank of the matrix
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,84,* @return     the rank of this matrix
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,86,public int getRank();
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,89,* Returns the result of adding d to each entry of *this
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,90,* @param d    value to be added to each entry
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,91,* @return     d + this
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,93,public RealMatrix scalarAdd(double d);
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,96,* Returns the result multiplying each entry of *this by d
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,97,* @param d    value to multiply all entries by
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,98,* @return     d*this
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,100,public RealMatrix scalarMultiply(double d);
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,103,* Returns the result postmultiplyin *this by m
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,104,* @param m    matrix to postmultiply by
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,105,* @return     this*m
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,106,* @throws     IllegalArgumentException
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,107,*             if columnDimension(this) != rowDimension(m)
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,109,public RealMatrix multiply(RealMatrix m);
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,112,* Returns matrix entries as a two-dimensional array
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,113,* @return    2-dimensional array of entries
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,115,public double[][] getData();
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,118,* Sets/overwrites the underlying data for the matrix
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,119,* @param    2-dimensional array of entries
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,121,public void setData(double[][] data);
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,124,* Returns the norm of the matrix
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,125,* @return norm
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,127,public double getNorm();
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,130,* Returns entries in row as an array
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,131,* @param row  the row to be fetched
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,132,* @return     array of entries in the row
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,133,* @throws     IllegalArgumentException if row > rowDimension
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,135,public double[] getRow(int row);
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,138,* Returns entries in column as an array
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,139,* @param col  column to fetch
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,140,* @return     array of entries in the column
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,141,* @throws     IllegalArgumentException if column > columnDimension
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,143,public double[] getColumn(int col);
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,146,* Returns the entry in the specified row and column
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,147,* @param row  row location of entry to be fetched
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,148,* @param col  column location of entry to be fetched
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,149,"* @return     matrix entry in row,column"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,150,* @throws     IllegalArgumentException if entry does not exist
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,152,"public double getEntry(int row, int column);"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,155,* Sets the entry in the specified row and column to the specified value
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,156,* @param row    row location of entry to be set
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,157,* @param col    column location of entry to be set
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,158,* @param value  value to set
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,159,* @throws IllegalArgumentException if entry does not exist
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,161,"public void setEntry(int row, int column, double value);"
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,164,* Returns the transpose of this matrix
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,165,* @return transpose matrix
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,167,public RealMatrix transpose();
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,170,* Returns the inverse of this matrix
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,171,* @return inverse matrix
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,172,* @throws IllegalArgumentException if *this is not invertible
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,174,public RealMatrix inverse();
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,177,* Returns the determinant of this matrix
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,178,* @returns determinant
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,180,public double getDeterminant();
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,183,* Is this a square matrix?
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,184,* @return true if the matrix is square (rowDimension = columnDimension)
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,186,public boolean isSquare();
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,189,* Is this a singular matrix?
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,190,* @return true if the matrix is singular
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,192,public boolean isSingular();
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,195,* Returns the number of rows in the matrix
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,196,* @return rowDimension
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,198,public int getRowDimension();
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,201,* Returns the number of columns in the matrix
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,202,* @return columnDimension
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,204,public int getColumnDimension();
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,207,* Returns the trace of the matrix
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,208,* @return trace
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,210,public double getTrace();
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,213,* Returns the result of multiplying this by vector v
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,214,* @return this*v
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,215,* @throws IllegalArgumentException if columnDimension != v.size()
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,217,public double[] operate(double[] v);
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,220,* Returns the result of premultiplying this by vector v
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,221,* @return v*this
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,222,* @throws IllegalArgumentException if rowDimension != v.size()
True,src/java/org/apache/commons/math/RealMatrix.java,src/java/org/apache/commons/math/RealMatrix.java,224,public RealMatrix preMultiply(double[] v);
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,5,* reserved.
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,9,* are met:
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,17,*    distribution.
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,55,package org.apache.commons.math;
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,58,* Implementation for RealMatrix using double[][] array
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,59,* @author  Phil Stetiz
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,60,* @version $Revision: 1.1 $ $Date: 2003/05/12 19:04:10 $
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,62,public class RealMatrixImpl implements RealMatrix {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,64,private double data[][];
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,66,public RealMatrixImpl() {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,70,* Create a new RealMatrix with the supplied row and column dimensions
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,71,* @param rowDimension      the number of rows in the new matrix
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,72,* @param columnDimension   the number of columns in the new matrix
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,73,* @return                  newly created matrix
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,75,"public RealMatrixImpl(int rowDimension,"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,76,int columnDimension) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,77,data = new double[rowDimension][columnDimension];
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,80,public RealMatrixImpl(double[][] data) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,81,this.data = data;
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,85,* Create a new RealMatrix which is a copy of *this
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,86,* @return  the cloned matrix
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,88,public RealMatrix copy() {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,89,return null;
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,93,* Compute the sum of *this and m
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,94,* @param m    matrix to be added
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,95,* @return     this + m
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,96,* @exception  IllegalArgumentException if m is not the same size as *this
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,98,public RealMatrix add(RealMatrix m) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,99,if (this.getColumnDimension() != m.getColumnDimension() ||
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,100,this.getRowDimension() != m.getRowDimension()) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,101,"throw new IllegalArgumentException(""matrix dimension mismatch"");"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,103,int rowCount = this.getRowDimension();
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,104,int columnCount = this.getColumnDimension();
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,105,double[][] outData = new double[rowCount][columnCount];
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,106,double[][] mData = m.getData();
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,107,for (int row = 0; row < rowCount; row++) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,108,for (int col = 0; col < columnCount; col++) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,109,outData[row][col] = data[row][col] + mData[row][col];
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,112,return new RealMatrixImpl(outData);
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,116,* Compute *this minus m
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,117,* @param m    matrix to be subtracted
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,118,* @return     this + m
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,119,* @exception  IllegalArgumentException if m is not the same size as *this
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,121,public RealMatrix subtract(RealMatrix m) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,122,if (this.getColumnDimension() != m.getColumnDimension() ||
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,123,this.getRowDimension() != m.getRowDimension()) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,124,"throw new IllegalArgumentException(""matrix dimension mismatch"");"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,126,int rowCount = this.getRowDimension();
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,127,int columnCount = this.getColumnDimension();
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,128,double[][] outData = new double[rowCount][columnCount];
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,129,double[][] mData = m.getData();
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,130,for (int row = 0; row < rowCount; row++) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,131,for (int col = 0; col < columnCount; col++) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,132,outData[row][col] = data[row][col] - mData[row][col];
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,135,return new RealMatrixImpl(outData);
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,139,* Returns the rank of the matrix
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,140,* @return     the rank of this matrix
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,142,public int getRank() {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,143,"throw new UnsupportedOperationException(""not implemented yet"");"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,148,* Returns the result of adding d to each entry of *this
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,149,* @param d    value to be added to each entry
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,150,* @return     d + this
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,152,public RealMatrix scalarAdd(double d) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,153,int rowCount = this.getRowDimension();
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,154,int columnCount = this.getColumnDimension();
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,155,double[][] outData = new double[rowCount][columnCount];
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,156,for (int row = 0; row < rowCount; row++) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,157,for (int col = 0; col < columnCount; col++) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,158,outData[row][col] = data[row][col] + d;
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,161,return new RealMatrixImpl(outData);
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,165,* Returns the result multiplying each entry of *this by d
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,166,* @param d    value to multiply all entries by
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,167,* @return     d*this
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,169,public RealMatrix scalarMultiply(double d) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,170,int rowCount = this.getRowDimension();
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,171,int columnCount = this.getColumnDimension();
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,172,double[][] outData = new double[rowCount][columnCount];
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,173,for (int row = 0; row < rowCount; row++) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,174,for (int col = 0; col < columnCount; col++) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,175,outData[row][col] = data[row][col]*d;
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,178,return new RealMatrixImpl(outData);
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,182,* Returns the result postmultiplying *this by m
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,183,* @param m    matrix to postmultiply by
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,184,* @return     this*m
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,185,* @throws     IllegalArgumentException
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,186,*             if columnDimension(this) != rowDimension(m)
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,188,public RealMatrix multiply(RealMatrix m) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,189,if (this.getColumnDimension() != m.getRowDimension()) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,190,throw new IllegalArgumentException
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,191,"(""Matrices are not multiplication compatible."");"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,193,double[][] mData = m.getData();
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,194,double[][] outData =
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,195,new double[this.getRowDimension()][m.getColumnDimension()];
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,196,double sum = 0;
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,197,for (int row = 0; row < this.getRowDimension(); row++) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,198,for (int col = 0; col < m.getColumnDimension(); col++) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,199,sum = 0;
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,200,for (int i = 0; i < this.getColumnDimension(); i++) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,201,sum += data[row][i] * mData[i][col];
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,203,outData[row][col] = sum;
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,206,return new RealMatrixImpl(outData);
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,210,* Returns matrix entries as a two-dimensional array
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,211,* @return    2-dimensional array of entries
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,213,public double[][] getData() {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,214,return data;
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,218,* Sets/overwrites the underlying data for the matrix
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,219,* @param    2-dimensional array of entries
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,221,public void setData(double[][] data) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,222,this.data = data;
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,226,* Returns the 1-norm of the matrix (max column sum)
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,227,* @return norm
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,229,public double getNorm() {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,230,double maxColSum = 0;
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,231,for (int col = 0; col < this.getColumnDimension(); col++) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,232,double sum = 0;
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,233,for (int row = 0; row < this.getRowDimension(); row++) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,234,sum += Math.abs(data[row][col]);
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,236,"maxColSum = Math.max(maxColSum,sum);"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,238,return maxColSum;
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,242,* Returns entries in row as an array
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,243,* @param row  the row to be fetched
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,244,* @return     array of entries in the row
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,245,* @throws     IllegalArgumentException if row > rowDimension
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,247,public double[] getRow(int row) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,248,return data[row];
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,252,* Returns entries in column as an array
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,253,* @param col  column to fetch
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,254,* @return     array of entries in the column
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,255,* @throws     IllegalArgumentException if column > columnDimension
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,257,public double[] getColumn(int col) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,258,"throw new UnsupportedOperationException(""not implemented yet"");"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,262,* Returns the entry in the specified row and column
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,263,* @param row  row location of entry to be fetched
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,264,* @param col  column location of entry to be fetched
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,265,"* @return     matrix entry in row,column"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,266,* @throws     IllegalArgumentException if entry does not exist
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,268,"public double getEntry(int row, int column) {"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,269,if (row < 1 || column < 1 || row > this.getRowDimension()
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,270,|| column > this.getColumnDimension()) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,271,throw new IllegalArgumentException
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,272,"(""matrix entry does not exist"");"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,274,return data[row-1][column-1];
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,278,* Sets the entry in the specified row and column to the specified value
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,279,* @param row    row location of entry to be set
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,280,* @param col    column location of entry to be set
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,281,* @param value  value to set
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,282,* @throws IllegalArgumentException if entry does not exist
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,284,"public void setEntry(int row, int column, double value) {"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,285,if (row < 1 || column < 1 || row > this.getRowDimension()
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,286,|| column > this.getColumnDimension()) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,287,throw new IllegalArgumentException
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,288,"(""matrix entry does not exist"");"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,290,data[row-1][column-1] = value;
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,294,* Returns the transpose of this matrix
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,295,* @return transpose matrix
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,297,public RealMatrix transpose() {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,298,"throw new UnsupportedOperationException(""not implemented yet"");"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,303,* Returns the inverse of this matrix
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,304,* @return inverse matrix
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,305,* @throws IllegalArgumentException if *this is not invertible
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,307,public RealMatrix inverse() {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,308,"throw new UnsupportedOperationException(""not implemented yet"");"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,312,* Returns the determinant of this matrix
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,313,* @return determinant
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,315,public double getDeterminant() {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,316,"throw new UnsupportedOperationException(""not implemented yet"");"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,320,* Is this a square matrix?
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,321,* @return true if the matrix is square (rowDimension = columnDimension)
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,323,public boolean isSquare() {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,324,return (this.getColumnDimension() == this.getRowDimension());
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,328,* Is this a singular matrix?
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,329,* @return true if the matrix is singular
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,331,public boolean isSingular() {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,332,"throw new UnsupportedOperationException(""not implemented yet"");"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,336,* Returns the number of rows in the matrix
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,337,* @return rowDimension
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,339,public int getRowDimension() {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,340,return data.length;
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,344,* Returns the number of columns in the matrix
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,345,* @return columnDimension
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,347,public int getColumnDimension() {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,348,return data[0].length;
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,352,* Returns the trace of the matrix
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,353,* @return trace
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,355,public double getTrace() {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,356,"throw new UnsupportedOperationException(""not implemented yet"");"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,360,* Returns the result of multiplying this by the vector b
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,361,* @return this*v
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,362,* @throws IllegalArgumentException if columnDimension != v.size()
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,364,public double[] operate(double[] v) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,365,"throw new UnsupportedOperationException(""not implemented yet"");"
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,369,* Returns the result of premultiplying this by the vector v
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,370,* @return v*this
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,371,* @throws IllegalArgumentException if rowDimension != v.size()
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,373,public RealMatrix preMultiply(double[] v) {
True,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/RealMatrixImpl.java,374,"throw new UnsupportedOperationException(""not implemented yet"");"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,5,* reserved.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,9,* are met:
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,17,*    distribution.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,54,package org.apache.commons.math;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,58,* Accumulates univariate statistics for values fed in
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,59,* through the addValue() method.  Does not store raw data values.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,60,* All data (including n) are represented internally as doubles.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,61,"* Integers, floats and longs can be added, but will be converted"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,62,* to doubles by addValue().
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,64,* @author Phil Steitz
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,65,* @version $Revision: 1.1 $ $Date: 2003/05/12 19:04:10 $
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,68,public class Univariate {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,70,/** running sum of values that have been added */
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,71,private double sum = 0.0;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,73,/** running sum of squares that have been added */
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,74,private double sumsq = 0.0;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,76,/** count of values that have been added */
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,77,private double n = 0.0;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,79,/** min of values that have been added */
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,80,private double min = Double.MAX_VALUE;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,82,/** max of values that have been added */
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,83,private double max = Double.MIN_VALUE;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,85,/** display name */
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,86,"private String name = """";"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,88,/** Creates new univariate */
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,89,public Univariate() {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,90,clear();
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,93,/** Creates a new univariate with the given name */
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,94,public Univariate(java.lang.String name) {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,95,this.name = name;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,96,clear();
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,100,"* Adds the value, updating running sums.<br>"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,101,* Converts value to a double before adding.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,102,* @param v the value to be added
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,104,public void addValue(int v) {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,105,double f = (new Double(v)).doubleValue();
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,106,insertValue(f);
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,110,"* Adds the value, updating running sums.<br>"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,111,* Converts value to a double before adding.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,112,* @param v the value to be added
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,114,public void addValue(long v) {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,115,double f = (new Double(v)).doubleValue();
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,116,insertValue(f);
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,120,"* Adds the value, updating running sums.<br>"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,121,* Converts value to a double before adding.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,122,* @param v the value to be added
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,124,public void addValue(float v) {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,125,insertValue(v);
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,129,"* Adds the value, updating running sums."
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,130,* @param v the value to be added
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,132,public void addValue(double v) {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,133,insertValue(v);
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,137,* Returns the mean of the values that have been added
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,138,* @return mean value
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,140,public double getMean() {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,141,// FIXME: throw something meaningful if n = 0
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,142,return sum/n;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,146,* Returns the variance of the values that have been added
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,147,* @return variance value
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,149,public double getVariance() {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,150,double xbar = getMean();
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,151,// FIXME: throw something meaningful if n = 0
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,152,return (sumsq - xbar*xbar*n)/(n-1);
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,156,* Returns the standard deviation of the values that have been added
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,157,* @return standard deviation value
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,159,public double getStandardDeviation() {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,160,// FIXME: throw something meaningful if n = 0
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,161,return (new Double(Math.sqrt
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,162,((new Double(getVariance())).doubleValue()))).doubleValue();
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,166,"* Adds the value, updating running sums."
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,167,* @param v the value to be added
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,169,private void insertValue(double v) {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,170,n += 1.0;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,171,if (v < min) min = v;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,172,if (v > max) max = v;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,173,sum += v;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,174,sumsq += v*v;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,177,/** Getter for property max.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,178,* @return Value of property max.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,180,public double getMax() {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,181,return max;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,184,/** Setter for property max.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,185,* @param max New value of property max.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,187,public void setMax(double max) {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,188,this.max = max;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,191,/** Getter for property min.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,192,* @return Value of property min.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,194,public double getMin() {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,195,return min;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,198,/** Getter for property n.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,199,* @return Value of property n.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,201,public double getN() {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,202,return n;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,205,/** Getter for property sum.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,206,* @return Value of property sum.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,208,public double getSum() {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,209,return sum;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,212,/** Getter for property sumsq.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,213,* @return Value of property sumsq.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,215,public double getSumsq() {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,216,return sumsq;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,219,/** Getter for property name.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,220,* @return Value of property name.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,222,public java.lang.String getName() {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,223,return name;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,226,/** Setter for property name.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,227,* @param name New value of property name.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,229,public void setName(java.lang.String name) {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,230,this.name = name;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,234,* Generates a text report displaying
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,235,* univariate statistics from values that
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,236,* have been added.
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,237,* @return String with line feeds displaying statistics
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,239,public String toString() {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,240,StringBuffer outBuffer = new StringBuffer();
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,241,"outBuffer.append(name + ""\n"");"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,242,"outBuffer.append(""n: "" + n + ""\n"");"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,243,"outBuffer.append(""min: "" + min + ""\n"");"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,244,"outBuffer.append(""max: "" + max + ""\n"");"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,245,"outBuffer.append(""mean: "" + getMean() + ""\n"");"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,246,"outBuffer.append(""std dev: "" + getStandardDeviation() + ""\n"");"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,247,return outBuffer.toString();
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,250,"/** Resets all sums to 0, resets min and max */"
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,251,public void clear() {
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,252,this.sum = 0.0;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,253,this.sumsq = 0.0;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,254,this.n = 0.0;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,255,this.min = Double.MAX_VALUE;
True,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,256,this.max = Double.MIN_VALUE;
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,5,* reserved.
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,9,* are met:
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,17,*    distribution.
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,54,package org.apache.commons.math;
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,61,* Test cases for the {@link Freq} class.
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,63,* @author Phil Steitz
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,64,* @version $Revision: 1.1 $ $Date: 2003/05/12 19:04:38 $
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,67,public final class FreqTest extends TestCase {
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,68,private long oneL = 1;
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,69,private long twoL = 2;
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,70,private int oneI = 1;
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,71,private int twoI = 2;
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,72,"private String oneS = ""1"";"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,73,"private String twoS = ""2"";"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,74,private double tolerance = 10E-15;
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,76,public FreqTest(String name) {
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,77,super(name);
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,80,public void setUp() {
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,83,public static Test suite() {
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,84,TestSuite suite = new TestSuite(FreqTest.class);
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,85,"suite.setName(""Freq Tests"");"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,86,return suite;
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,89,/** test freq counts */
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,90,public void testCounts() {
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,91,"Freq f = new Freq(""test counts"");"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,92,"assertEquals(""total count"",0,f.getSumFreq());"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,93,f.addValue(oneL);
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,94,f.addValue(twoL);
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,95,f.addValue(oneS);
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,96,f.addValue(oneI);
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,97,"assertEquals(""one frequency count"",3,f.getCount(""1""));"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,98,"assertEquals(""two frequency count"",1,f.getCount(""2""));"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,99,"assertEquals(""foo frequency count"",0,f.getCount(""foo""));"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,100,"assertEquals(""total count"",4,f.getSumFreq());"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,101,f.clear();
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,102,"assertEquals(""total count"",0,f.getSumFreq());"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,105,/** test pcts */
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,106,public void testPcts() {
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,107,"Freq f = new Freq(""test counts"");"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,108,f.addValue(oneL);
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,109,f.addValue(twoL);
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,110,f.addValue(oneI);
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,111,f.addValue(twoI);
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,112,"f.addValue(""foo"");"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,113,"f.addValue(""foo"");"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,114,"f.addValue(""foo"");"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,115,"f.addValue(""foo"");"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,116,"assertEquals(""one pct"",0.25,f.getPct(""1""),tolerance);"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,117,"assertEquals(""two pct"",0.25,f.getPct(""2""),tolerance);"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,118,"assertEquals(""foo pct"",0.5,f.getPct(""foo""),tolerance);"
True,src/test/org/apache/commons/math/FreqTest.java,src/test/org/apache/commons/math/FreqTest.java,119,"assertEquals(""bar pct"",0,f.getPct(""bar""),tolerance);"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,5,* reserved.
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,9,* are met:
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,17,*    distribution.
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,54,package org.apache.commons.math;
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,59,import junit.textui.TestRunner;
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,61,* Test suite for the Math package.
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,63,* @author Phil Steitz
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,64,"* @version $Id: MathTestSuite.java,v 1.1 2003/05/12 19:04:38 rdonkin Exp $"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,66,public class MathTestSuite extends TestCase {
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,69,* Construct a new instance.
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,71,public MathTestSuite(String name) {
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,72,super(name);
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,76,* Command-line interface.
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,78,public static void main(String[] args) {
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,79,TestRunner.run(suite());
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,83,* Get the suite of tests
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,85,public static Test suite() {
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,86,TestSuite suite = new TestSuite();
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,87,"suite.setName(""Commons Math Tests"");"
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,88,suite.addTest(RealMatrixImplTest.suite());
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,89,suite.addTest(FreqTest.suite());
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,90,suite.addTest(UnivariateTest.suite());
True,src/test/org/apache/commons/math/MathTestSuite.java,src/test/org/apache/commons/math/MathTestSuite.java,91,return suite;
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,5,* reserved.
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,9,* are met:
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,17,*    distribution.
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,54,package org.apache.commons.math;
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,61,* Test cases for the {@link RealMatrixImpl} class.
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,63,* @author Phil Steitz
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,64,* @version $Revision: 1.1 $ $Date: 2003/05/12 19:02:53 $
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,67,public final class RealMatrixImplTest extends TestCase {
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,69,"private double[][] testData = { {1d,2d,3d}, {2d,5d,3d}, {1d,0d,8d} };"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,70,private double[][] testDataInv =
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,71,"{ {-40d,16d,9d}, {13d,-5d,-3d}, {5d,-2d,-1d} };"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,72,"private double[][] testData2 ={ {1d,2d,3d}, {2d,5d,3d}};"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,73,private double[][] testDataPlusInv =
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,74,"{ {-39d,18d,12d}, {15d,0d,0d}, {6d,-2d,7d} };"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,75,"private double[][] id = { {1d,0d,0d}, {0d,1d,0d}, {0d,0d,1d} };"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,76,"private double[] testVector = {1,2,3};"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,77,"private double entryTolerance = Math.pow(2,-64);"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,78,"private double normTolerance = Math.pow(2,-64);"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,80,public RealMatrixImplTest(String name) {
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,81,super(name);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,84,public void setUp() {
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,88,public static Test suite() {
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,89,TestSuite suite = new TestSuite(RealMatrixImplTest.class);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,90,"suite.setName(""RealMatrixImpl Tests"");"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,91,return suite;
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,94,/** test dimensions */
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,95,public void testDimensions() {
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,96,RealMatrixImpl m = new RealMatrixImpl(testData);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,97,RealMatrixImpl m2 = new RealMatrixImpl(testData2);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,98,"assertEquals(""testData row dimension"",3,m.getRowDimension());"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,99,"assertEquals(""testData column dimension"",3,m.getColumnDimension());"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,100,"assertTrue(""testData is square"",m.isSquare());"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,101,"assertEquals(""testData2 row dimension"",m2.getRowDimension(),2);"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,102,"assertEquals(""testData2 column dimension"",m2.getColumnDimension(),3);"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,103,"assertTrue(""testData2 is not square"",!m2.isSquare());"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,106,/** test add */
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,107,public void testAdd() {
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,108,RealMatrixImpl m = new RealMatrixImpl(testData);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,109,RealMatrixImpl mInv = new RealMatrixImpl(testDataInv);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,110,RealMatrixImpl mPlusMInv = (RealMatrixImpl)m.add(mInv);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,111,double[][] sumEntries = mPlusMInv.getData();
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,112,for (int row = 0; row < m.getRowDimension(); row++) {
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,113,for (int col = 0; col < m.getColumnDimension(); col++) {
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,114,"assertEquals(""sum entry entry"","
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,115,"testDataPlusInv[row][col],sumEntries[row][col],"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,116,entryTolerance);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,121,/** test add failure */
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,122,public void testAddFail() {
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,123,RealMatrixImpl m = new RealMatrixImpl(testData);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,124,RealMatrixImpl m2 = new RealMatrixImpl(testData2);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,125,try {
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,126,RealMatrixImpl mPlusMInv = (RealMatrixImpl)m.add(m2);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,127,"fail(""IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,128,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,133,/** test norm */
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,134,public void testNorm() {
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,135,RealMatrixImpl m = new RealMatrixImpl(testData);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,136,RealMatrixImpl m2 = new RealMatrixImpl(testData2);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,137,"assertEquals(""testData norm"",14d,m.getNorm(),entryTolerance);"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,138,"assertEquals(""testData2 norm"",7d,m2.getNorm(),entryTolerance);"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,141,/** test m-n = m + -n */
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,142,public void testPlusMinus() {
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,143,RealMatrixImpl m = new RealMatrixImpl(testData);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,144,RealMatrixImpl m2 = new RealMatrixImpl(testDataInv);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,145,"assertClose(""m-n = m + -n"",m.subtract(m2),"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,146,"m2.scalarMultiply(-1d).add(m),entryTolerance);"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,149,/** test multiply */
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,150,public void testMultiply() {
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,151,RealMatrixImpl m = new RealMatrixImpl(testData);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,152,RealMatrixImpl mInv = new RealMatrixImpl(testDataInv);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,153,RealMatrixImpl identity = new RealMatrixImpl(id);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,154,RealMatrixImpl m2 = new RealMatrixImpl(testData2);
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,155,"assertClose(""inverse multiply"",m.multiply(mInv),"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,156,"identity,entryTolerance);"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,157,"assertClose(""inverse multiply"",mInv.multiply(m),"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,158,"identity,entryTolerance);"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,159,"assertClose(""identity multiply"",m.multiply(identity),"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,160,"m,entryTolerance);"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,161,"assertClose(""identity multiply"",identity.multiply(mInv),"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,162,"mInv,entryTolerance);"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,163,"assertClose(""identity multiply"",m2.multiply(identity),"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,164,"m2,entryTolerance);"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,167,"private void assertClose(String msg, RealMatrix m, RealMatrix n,"
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,168,double tolerance) {
True,src/test/org/apache/commons/math/RealMatrixImplTest.java,src/test/org/apache/commons/math/RealMatrixImplTest.java,169,"assertTrue(msg,m.subtract(n).getNorm() < tolerance);"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,5,* reserved.
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,9,* are met:
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,17,*    distribution.
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,54,package org.apache.commons.math;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,61,* Test cases for the {@link Univariate} class.
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,63,"* @author <a href=""mailto:phil@steitz.com"">Phil Steitz</a>"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,64,* @version $Revision: 1.1 $ $Date: 2003/05/12 19:02:53 $
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,67,public final class UnivariateTest extends TestCase {
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,68,private double one = 1;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,69,private float twoF = 2;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,70,private long twoL = 2;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,71,private int three = 3;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,72,private double mean = 2;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,73,private double sumSq = 18;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,74,private double sum = 8;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,75,private double var = 0.666666666666666666667;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,76,private double std = Math.sqrt(var);
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,77,private double n = 4;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,78,private double min = 1;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,79,private double max = 3;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,80,private double tolerance = 10E-15;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,82,public UnivariateTest(String name) {
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,83,super(name);
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,86,public void setUp() {
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,89,public static Test suite() {
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,90,TestSuite suite = new TestSuite(UnivariateTest.class);
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,91,"suite.setName(""Freq Tests"");"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,92,return suite;
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,95,/** test stats */
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,96,public void testStats() {
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,97,"Univariate u = new Univariate(""test univariate"");"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,98,"assertEquals(""total count"",0,u.getN(),tolerance);"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,99,u.addValue(one);
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,100,u.addValue(twoF);
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,101,u.addValue(twoL);
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,102,u.addValue(three);
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,103,"assertEquals(""N"",n,u.getN(),tolerance);"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,104,"assertEquals(""sum"",sum,u.getSum(),tolerance);"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,105,"assertEquals(""sumsq"",sumSq,u.getSumsq(),tolerance);"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,106,"assertEquals(""var"",var,u.getVariance(),tolerance);"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,107,"assertEquals(""std"",std,u.getStandardDeviation(),tolerance);"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,108,"assertEquals(""mean"",mean,u.getMean(),tolerance);"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,109,"assertEquals(""min"",min,u.getMin(),tolerance);"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,110,"assertEquals(""max"",max,u.getMax(),tolerance);"
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,111,u.clear();
True,src/test/org/apache/commons/math/UnivariateTest.java,src/test/org/apache/commons/math/UnivariateTest.java,112,"assertEquals(""total count"",0,u.getN(),tolerance);"
