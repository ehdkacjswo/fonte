is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,17,package org.apache.commons.math.util;
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,19,import java.util.EventObject;
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,22,* The root class from which all events occurring while running an
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,23,* {@link IterationManager} should be derived.
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,25,* @version $Id$
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,27,public class IterationEvent extends EventObject {
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,29,private static final long serialVersionUID = -1405936936084001482L;
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,32,* Creates a new instance of this class.
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,34,* @param source The iterative algorithm on which the event initially
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,35,* occurred.
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,37,public IterationEvent(final Object source) {
True,src/main/java/org/apache/commons/math/util/IterationEvent.java,src/main/java/org/apache/commons/math/util/IterationEvent.java,38,super(source);
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,17,package org.apache.commons.math.util;
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,19,import java.util.EventListener;
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,22,* The listener interface for receiving events occurring in an iterative
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,23,* algorithm.
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,25,* @version $Id$
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,27,public interface IterationListener extends EventListener {
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,29,* Invoked after completion of the initial phase of the iterative algorithm
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,30,* (prior to the main iteration loop).
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,32,* @param e The {@link IterationEvent} object.
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,34,void initializationPerformed(IterationEvent e);
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,37,* Invoked each time an iteration is completed (in the main iteration loop).
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,39,* @param e The {@link IterationEvent} object.
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,41,void iterationPerformed(IterationEvent e);
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,44,* Invoked each time a new iteration is completed (in the main iteration
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,45,* loop).
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,47,* @param e The {@link IterationEvent} object.
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,49,void iterationStarted(IterationEvent e);
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,52,* Invoked after completion of the operations which occur after breaking out
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,53,* of the main iteration loop.
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,55,* @param e The {@link IterationEvent} object.
True,src/main/java/org/apache/commons/math/util/IterationListener.java,src/main/java/org/apache/commons/math/util/IterationListener.java,57,void terminationPerformed(IterationEvent e);
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,3,* contributor license agreements. See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,7,* the License. You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,9,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,17,package org.apache.commons.math.util;
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,19,import java.util.Collection;
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,20,import java.util.concurrent.CopyOnWriteArrayList;
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,23,* This abstract class provides a general framework for managing iterative
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,24,"* algorithms. The maximum number of iterations can be set, and methods are"
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,25,* provided to monitor the current iteration count. A lightweight event
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,26,* framework is also provided.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,28,* @version $Id$
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,30,public class IterationManager {
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,31,/** Keeps a count of the number of iterations. */
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,32,private final Incrementor iterations;
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,34,/** The collection of all listeners attached to this iterative algorithm. */
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,35,private final Collection<IterationListener> listeners;
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,38,* Creates a new instance of this class.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,40,* @param maxIterations Maximum number of iterations.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,42,public IterationManager(final int maxIterations) {
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,43,this.iterations = new Incrementor();
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,44,this.iterations.setMaximalCount(maxIterations);
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,45,this.listeners = new CopyOnWriteArrayList<IterationListener>();
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,49,* Attaches a listener to this manager.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,51,* @param listener A {@code IterationListener} object.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,53,public void addIterationListener(final IterationListener listener) {
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,54,listeners.add(listener);
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,58,* Informs all registered listeners that the initial phase (prior to the
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,59,* main iteration loop) has been completed.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,61,* @param e The {@link IterationEvent} object.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,63,public void fireInitializationEvent(final IterationEvent e) {
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,64,for (IterationListener l : listeners) {
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,65,l.initializationPerformed(e);
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,70,* Informs all registered listeners that a new iteration (in the main
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,71,* iteration loop) has been performed.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,73,* @param e The {@link IterationEvent} object.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,75,public void fireIterationPerformedEvent(final IterationEvent e) {
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,76,for (IterationListener l : listeners) {
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,77,l.iterationPerformed(e);
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,82,* Informs all registered listeners that a new iteration (in the main
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,83,* iteration loop) has been started.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,85,* @param e The {@link IterationEvent} object.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,87,public void fireIterationStartedEvent(final IterationEvent e) {
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,88,for (IterationListener l : listeners) {
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,89,l.iterationStarted(e);
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,94,* Informs all registered listeners that the final phase (post-iterations)
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,95,* has been completed.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,97,* @param e The {@link IterationEvent} object.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,99,public void fireTerminationEvent(final IterationEvent e) {
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,100,for (IterationListener l : listeners) {
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,101,l.terminationPerformed(e);
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,106,"* Returns the number of iterations of this solver, 0 if no iterations has"
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,107,* been performed yet.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,109,* @return the number of iterations.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,111,public int getIterations() {
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,112,return iterations.getCount();
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,116,* Returns the maximum number of iterations.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,118,* @return the maximum number of iterations.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,120,public int getMaxIterations() {
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,121,return iterations.getMaximalCount();
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,125,"* Increments the iteration count by one, and throws an exception if the"
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,126,* maximum number of iterations is reached. This method should be called at
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,127,* the beginning of a new iteration.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,129,* @throws MaxCountExceededException if the maximum number of iterations
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,130,* is reached.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,132,public void incrementIterationCount() {
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,133,iterations.incrementCount();
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,137,* Removes the specified iteration listener from the list of listeners
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,138,* currently attached to {@code this} object. Attempting to remove a
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,139,* listener which was <em>not</em> previously registered does not cause any
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,140,* error.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,142,* @param listener The {@link IterationListener} to be removed.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,144,public void removeIterationListener(final IterationListener listener) {
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,145,listeners.remove(listener);
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,149,* Sets the iteration count to 0. This method must be called during the
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,150,* initial phase.
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,152,public void resetIterationCount() {
True,src/main/java/org/apache/commons/math/util/IterationManager.java,src/main/java/org/apache/commons/math/util/IterationManager.java,153,iterations.resetCount();
