is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,33,mport org.apache.commons.math.util.SerializablePair;
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,48,"rivate List<SerializablePair<Localizable, Object[]>> messages"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,49," new ArrayList<SerializablePair<Localizable, Object[]>>();"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,47,private List<Localizable> msgPatterns = new ArrayList<Localizable>();
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,49,* Various informations that enrich the informative message.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,50,* The arguments will replace the corresponding place-holders in
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,51,* {@link #msgPatterns}.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,53,private List<Object[]> msgArguments = new ArrayList<Object[]>();
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,72,"essages.add(new SerializablePair<Localizable, Object[]>(pattern,"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,73,rgUtils.flatten(arguments)));
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,77,msgPatterns.add(pattern);
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,78,msgArguments.add(ArgUtils.flatten(arguments));
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,136,inal int len = messages.size();
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,137,"or (SerializablePair<Localizable, Object[]> pair : messages) {"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,138,"inal MessageFormat fmt = new MessageFormat(pair.getKey().getLocalizedString(locale),"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,141,final int len = msgPatterns.size();
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,142,for (int i = 0; i < len; i++) {
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,143,final Localizable pat = msgPatterns.get(i);
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,144,final Object[] args = msgArguments.get(i);
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,145,"final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,140,b.append(fmt.format(pair.getValue()));
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,147,sb.append(fmt.format(args));
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,176, Serialize {@link #messages}.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,183,* Serialize  {@link #msgPatterns} and {@link #msgArguments}.
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,184,inal int len = messages.size();
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,191,final int len = msgPatterns.size();
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,188,"erializablePair<Localizable, Object[]> pair = messages.get(i);"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,195,final Localizable pat = msgPatterns.get(i);
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,190,ut.writeObject(pair.getKey());
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,191,inal Object[] args = pair.getValue();
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,197,out.writeObject(pat);
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,198,final Object[] args = msgArguments.get(i);
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,208, Deserialize {@link #messages}.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,215,* Deserialize {@link #msgPatterns} and {@link #msgArguments}.
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,219,"essages = new ArrayList<SerializablePair<Localizable, Object[]>>(len);"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,226,msgPatterns = new ArrayList<Localizable>(len);
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,227,msgArguments = new ArrayList<Object[]>(len);
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,223,inal Localizable key = (Localizable) in.readObject();
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,231,final Localizable pat = (Localizable) in.readObject();
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,232,msgPatterns.add(pat);
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,231,"essages.add(new SerializablePair<Localizable, Object[]>(key, args));"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,240,msgArguments.add(args);
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,17,ackage org.apache.commons.math.util;
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,19,mport java.io.Serializable;
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,22, Generic pair.
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,23, Immutable class.
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,25, @param <K> Key type.
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,26, @param <V> Value type.
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,28, @version $Revision$ $Date$
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,29, @since 3.0
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,31,"ublic class SerializablePair<K extends Serializable, V extends Serializable>"
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,32,"xtends Pair<K, V>"
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,33,mplements Serializable {
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,35,** serializable UID. */
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,36,rivate static final long serialVersionUID = 1573515225013398712L;
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,39, Create an entry representing a mapping from the specified key to the
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,40, specified value.
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,42, @param k Key.
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,43, @param v Value.
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,45,"ublic SerializablePair(K k, V v) {"
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,46,"uper(k, v);"
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,50, Create an entry representing the same mapping as the specified entry.
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,52, @param entry Entry to copy.
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,54,"ublic SerializablePair(SerializablePair<? extends K, ? extends V> entry) {"
False,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,55,uper(entry);
