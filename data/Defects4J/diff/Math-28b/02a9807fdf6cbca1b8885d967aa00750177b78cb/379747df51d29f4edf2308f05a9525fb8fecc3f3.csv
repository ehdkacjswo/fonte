is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,38,/ TODO: Add Serializable documentation
False,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,39,/ TODO: Check Serializable implementation
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,209,/** Get the double value corresponding to the instance.
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,210,* @return double value corresponding to the instance
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,212,public double doubleValue() {
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,213,return d.doubleValue();
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,216,/** Get the BigDecimal value corresponding to the instance.
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,217,* @return BigDecimal value corresponding to the instance
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,219,public BigDecimal bigDecimalValue() {
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,220,return d;
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,17,package org.apache.commons.math.util;
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,19,import static org.junit.Assert.assertEquals;
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,20,import static org.junit.Assert.assertFalse;
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,21,import static org.junit.Assert.assertTrue;
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,23,import java.math.BigDecimal;
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,24,import java.math.BigInteger;
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,25,import java.math.MathContext;
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,27,import org.apache.commons.math.TestUtils;
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,28,import org.junit.Test;
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,30,public class BigRealTest {
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,32,@Test
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,33,public void testConstructor() {
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,34,"assertEquals(1.625, new BigReal(new BigDecimal(""1.625"")).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,35,"assertEquals(-5.0, new BigReal(new BigInteger(""-5"")).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,36,"assertEquals(-5.0, new BigReal(new BigInteger(""-5""), MathContext.DECIMAL64).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,37,"assertEquals(0.125, new BigReal(new BigInteger(""125""), 3).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,38,"assertEquals(0.125, new BigReal(new BigInteger(""125""), 3, MathContext.DECIMAL64).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,39,"assertEquals(1.625, new BigReal(new char[] { '1', '.', '6', '2', '5' }).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,40,"assertEquals(1.625, new BigReal(new char[] { 'A', 'A', '1', '.', '6', '2', '5', '9' }, 2, 5).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,41,"assertEquals(1.625, new BigReal(new char[] { 'A', 'A', '1', '.', '6', '2', '5', '9' }, 2, 5, MathContext.DECIMAL64).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,42,"assertEquals(1.625, new BigReal(new char[] { '1', '.', '6', '2', '5' }, MathContext.DECIMAL64).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,43,"assertEquals(1.625, new BigReal(1.625).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,44,"assertEquals(1.625, new BigReal(1.625, MathContext.DECIMAL64).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,45,"assertEquals(-5.0, new BigReal(-5).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,46,"assertEquals(-5.0, new BigReal(-5, MathContext.DECIMAL64).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,47,"assertEquals(-5.0, new BigReal(-5l).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,48,"assertEquals(-5.0, new BigReal(-5l, MathContext.DECIMAL64).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,49,"assertEquals(1.625, new BigReal(""1.625"").doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,50,"assertEquals(1.625, new BigReal(""1.625"", MathContext.DECIMAL64).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,53,@Test
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,54,public void testCompareTo() {
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,55,BigReal first = new BigReal(1.0 / 2.0);
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,56,BigReal second = new BigReal(1.0 / 3.0);
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,57,BigReal third = new BigReal(1.0 / 2.0);
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,59,"assertEquals(0, first.compareTo(first));"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,60,"assertEquals(0, first.compareTo(third));"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,61,"assertEquals(1, first.compareTo(second));"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,62,"assertEquals(-1, second.compareTo(first));"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,66,public void testAdd() {
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,67,"BigReal a = new BigReal(""1.2345678"");"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,68,"BigReal b = new BigReal(""8.7654321"");"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,69,"assertEquals(9.9999999, a.add(b).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,72,public void testSubtract() {
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,73,"BigReal a = new BigReal(""1.2345678"");"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,74,"BigReal b = new BigReal(""8.7654321"");"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,75,"assertEquals( -7.5308643, a.subtract(b).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,78,public void testDivide() {
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,79,"BigReal a = new BigReal(""1.0000000000"");"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,80,"BigReal b = new BigReal(""0.0009765625"");"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,81,"assertEquals(1024.0, a.divide(b).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,84,public void testMultiply() {
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,85,"BigReal a = new BigReal(""1024.0"");"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,86,"BigReal b = new BigReal(""0.0009765625"");"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,87,"assertEquals(1.0, a.multiply(b).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,90,@Test
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,91,public void testDoubleValue() {
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,92,"assertEquals(0.5, new BigReal(0.5).doubleValue(), 1.0e-15);"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,95,@Test
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,96,public void testBigDecimalValue() {
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,97,"BigDecimal pi = new BigDecimal(""3.1415926535897932384626433832795028841971693993751"");"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,98,"assertEquals(pi, new BigReal(pi).bigDecimalValue());"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,99,"assertEquals(new BigDecimal(0.5), new BigReal(1.0 / 2.0).bigDecimalValue());"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,102,@Test
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,103,public void testEqualsAndHashCode() {
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,104,BigReal zero = new BigReal(0.0);
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,105,BigReal nullReal = null;
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,106,assertTrue(zero.equals(zero));
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,107,assertFalse(zero.equals(nullReal));
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,108,assertFalse(zero.equals(Double.valueOf(0)));
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,109,BigReal zero2 = new BigReal(0.0);
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,110,assertTrue(zero.equals(zero2));
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,111,"assertEquals(zero.hashCode(), zero2.hashCode());"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,112,BigReal one = new BigReal(1.0);
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,113,assertFalse((one.equals(zero) || zero.equals(one)));
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,114,assertTrue(one.equals(BigReal.ONE));
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,117,public void testSerial() {
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,118,BigReal[] Reals = {
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,119,"new BigReal(3.0), BigReal.ONE, BigReal.ZERO,"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,120,"new BigReal(17), new BigReal(Math.PI),"
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,121,new BigReal(-2.5)
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,123,for (BigReal Real : Reals) {
True,src/test/org/apache/commons/math/util/BigRealTest.java,src/test/org/apache/commons/math/util/BigRealTest.java,124,"assertEquals(Real, TestUtils.serializeAndRecover(Real));"
