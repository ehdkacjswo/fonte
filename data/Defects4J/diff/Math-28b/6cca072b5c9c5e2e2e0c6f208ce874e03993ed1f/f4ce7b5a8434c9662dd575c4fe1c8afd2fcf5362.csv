is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java,75,"rotected void setup(DifferentiableUnivariateRealFunction f,"
False,src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java,76,"ouble min, double max,"
False,src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java,77,ouble startValue) {
False,src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java,78,"uper.setup(f, min, max, startValue);"
True,src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java,75,"protected void setup(int maxEval, DifferentiableUnivariateRealFunction f,"
True,src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java,76,"double min, double max, double startValue) {"
True,src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java,77,"super.setup(maxEval, f, min, max, startValue);"
False,src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java,69,"rotected void setup(PolynomialFunction f,"
False,src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java,70,"ouble min, double max,"
False,src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java,71,ouble startValue) {
False,src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java,72,"uper.setup(f, min, max, startValue);"
True,src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java,69,"protected void setup(int maxEval, PolynomialFunction f,"
True,src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java,70,"double min, double max, double startValue) {"
True,src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java,71,"super.setup(maxEval, f, min, max, startValue);"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,37,/** Default maximum number of evaluations */
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,38,public static final int DEFAULT_MAX_EVALUATIONS = 100;
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,99,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,100,ublic void setMaxEvaluations(int maxEvaluations) {
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,101,valuations.setMaximalCount(maxEvaluations);
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,168,* @param maxEval Maximum number of evaluations.
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,171,"rotected void setup(FUNC f,"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,170,"protected void setup(int maxEval,"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,171,"FUNC f,"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,184,evaluations.setMaximalCount(maxEval);
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,190,"return solve(DEFAULT_MAX_EVALUATIONS, f, min, max, startValue);"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,193,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,194,"public double solve(FUNC f, double min, double max) {"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,195,"return solve(DEFAULT_MAX_EVALUATIONS, f, min, max);"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,198,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,199,"public double solve(FUNC f, double startValue) {"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,200,"return solve(DEFAULT_MAX_EVALUATIONS, f, startValue);"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,203,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,204,"public double solve(int maxEval, FUNC f, double min, double max, double startValue) {"
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,190,"etup(f, min, max, startValue);"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,206,"setup(maxEval, f, min, max, startValue);"
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,197,"ublic double solve(FUNC f, double min, double max) {"
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,198,"eturn solve(f, min, max, min + 0.5 * (max - min));"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,213,"public double solve(int maxEval, FUNC f, double min, double max) {"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,214,"return solve(maxEval, f, min, max, min + 0.5 * (max - min));"
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,202,"ublic double solve(FUNC f, double startValue) {"
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,203,"eturn solve(f, Double.NaN, Double.NaN, startValue);"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,218,"public double solve(int maxEval, FUNC f, double startValue) {"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java,219,"return solve(maxEval, f, Double.NaN, Double.NaN, startValue);"
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,33, Set the maximal number of function evaluations.
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,35, @param maxEvaluations Maximal number of function evaluations.
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,37,oid setMaxEvaluations(int maxEvaluations);
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,79, @throws IllegalArgumentException if {@code min > max} or the endpoints
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,80, do not satisfy the requirements specified by the solver.
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,81, @since 2.0
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,72,* @throws org.apache.commons.math.exception.MathIllegalArgumentException
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,73,* if the arguments do not satisfy the requirements specified by the solver.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,74,* @throws org.apache.commons.math.exception.TooManyEvaluationsException if
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,75,* the default allowed number of evaluations is exceeded.
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,96, @throws IllegalArgumentException if {@code min > max} or the arguments
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,97, do not satisfy the requirements specified by the solver.
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,98, @since 2.0
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,90,* @throws org.apache.commons.math.exception.MathIllegalArgumentException
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,91,* if the arguments do not satisfy the requirements specified by the solver.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,92,* @throws org.apache.commons.math.exception.TooManyEvaluationsException if
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,93,* the default allowed number of evaluations is exceeded.
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,104, A solver may require that the interval brackets a single zero root.
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,109, @throws IllegalArgumentException if {@code min > max} or the arguments
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,110, do not satisfy the requirements specified by the solver.
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,111, @since 2.0
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,103,* @throws org.apache.commons.math.exception.MathIllegalArgumentException
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,104,* if the arguments do not satisfy the requirements specified by the solver.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,105,* @throws org.apache.commons.math.exception.TooManyEvaluationsException if
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,106,* the default allowed number of evaluations is exceeded.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,111,* Solve for a zero root in the given interval.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,112,* A solver may require that the interval brackets a single zero root.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,113,* Solvers that do require bracketing should be able to handle the case
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,114,* where one of the endpoints is itself a root.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,116,* @param f Function to solve.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,117,* @param min Lower bound for the interval.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,118,* @param max Upper bound for the interval.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,119,* @param maxEval Maximum number of evaluations.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,120,* @return a value where the function is zero.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,121,* @throws org.apache.commons.math.exception.MathIllegalArgumentException
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,122,* if the arguments do not satisfy the requirements specified by the solver.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,123,* @throws org.apache.commons.math.exception.TooManyEvaluationsException if
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,124,* the allowed number of evaluations is exceeded.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,126,"double solve(int maxEval, FUNC f, double min, double max);"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,129,"* Solve for a zero in the given interval, start at {@code startValue}."
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,130,* A solver may require that the interval brackets a single zero root.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,131,* Solvers that do require bracketing should be able to handle the case
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,132,* where one of the endpoints is itself a root.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,134,* @param f Function to solve.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,135,* @param min Lower bound for the interval.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,136,* @param max Upper bound for the interval.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,137,* @param startValue Start value to use.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,138,* @param maxEval Maximum number of evaluations.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,139,* @return a value where the function is zero.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,140,* @throws org.apache.commons.math.exception.MathIllegalArgumentException
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,141,* if the arguments do not satisfy the requirements specified by the solver.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,142,* @throws org.apache.commons.math.exception.TooManyEvaluationsException if
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,143,* the allowed number of evaluations is exceeded.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,145,"double solve(int maxEval, FUNC f, double min, double max, double startValue);"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,148,* Solve for a zero in the vicinity of {@code startValue}.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,150,* @param f Function to solve.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,151,* @param startValue Start value to use.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,152,* @return a value where the function is zero.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,153,* @param maxEval Maximum number of evaluations.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,154,* @throws org.apache.commons.math.exception.MathIllegalArgumentException
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,155,* if the arguments do not satisfy the requirements specified by the solver.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,156,* @throws org.apache.commons.math.exception.TooManyEvaluationsException if
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,157,* the allowed number of evaluations is exceeded.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java,159,"double solve(int maxEval, FUNC f, double startValue);"
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,54,olver.setMaxEvaluations(Integer.MAX_VALUE);
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,55,"eturn solver.solve(function, x0, x1);"
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,54,"return solver.solve(Integer.MAX_VALUE, function, x0, x1);"
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,78,olver.setMaxEvaluations(Integer.MAX_VALUE);
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,79,"eturn solver.solve(function, x0, x1);"
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,77,"return solver.solve(Integer.MAX_VALUE, function, x0, x1);"
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,256,olver.setMaxEvaluations(maxIterationCount);
False,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,257,"inal double root = (ta <= tb) ? solver.solve(f, ta, tb) : solver.solve(f, tb, ta);"
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,256,final double root = (ta <= tb) ?
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,257,"solver.solve(maxIterationCount, f, ta, tb) :"
True,src/main/java/org/apache/commons/math/ode/events/EventState.java,src/main/java/org/apache/commons/math/ode/events/EventState.java,258,"solver.solve(maxIterationCount, f, tb, ta);"
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,21,mport org.apache.commons.math.exception.MathUserException;
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,88,olver.setMaxEvaluations(getMaxEvaluations());
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,111,rotected RealPointValuePair doOptimize() throws MathUserException {
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,109,protected RealPointValuePair doOptimize() {
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,118,olver.setMaxEvaluations(getMaxEvaluations());
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,138,int maxEval = getMaxEvaluations();
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,165,"inal double step = solver.solve(lsf, 0, uB, 1e-15);"
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,163,"final double step = solver.solve(maxEval, lsf, 0, uB, 1e-15);"
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,164,maxEval -= solver.getEvaluations(); // Subtract used up evaluations.
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,220, @exception MathIllegalStateException if no bracket can be found.
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,221, @exception MathUserException if function throws one.
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,219,* @throws MathIllegalStateException if no bracket can be found.
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,220,* @throws org.apache.commons.math.exception.MathUserException if the
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,221,* function throws one.
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,224,"inal double a, final double h)"
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,225,hrows MathUserException {
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,224,"final double a, final double h) {"
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,268,ublic double value(double x) throws MathUserException {
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,267,public double value(double x) {
False,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,36,olver.setMaxEvaluations(50);
False,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,50,olver.setMaxEvaluations(50);
False,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,88,ublic void testMath369() throws Exception {
True,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,86,public void testMath369() {
False,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,91,olver.setMaxEvaluations(40);
False,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,98,Test
False,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,99,ublic void testSetMaximalEvaluationCount(){
False,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,100,nt expected = 100;
False,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,101,isectionSolver solver = new BisectionSolver();
False,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,102,olver.setMaxEvaluations(expected);
False,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java,103,"ssert.assertEquals(expected, solver.getMaxEvaluations());"
True,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,24,import org.apache.commons.math.exception.NumberIsTooLargeException;
True,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,25,import org.apache.commons.math.exception.NoBracketingException;
True,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,26,import org.apache.commons.math.exception.TooManyEvaluationsException;
False,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,47,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,75,olver.setMaxEvaluations(20);
True,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,150,try {
True,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,151,"result = solver.solve(5, f, 0.85, 5);"
True,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,152,} catch (TooManyEvaluationsException e) {
True,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,153,// Expected.
False,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,154,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,175,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,178,"ssert.fail(""Expecting IllegalArgumentException - bad interval"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,179, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,182,"Assert.fail(""Expecting NumberIsTooLargeException - bad interval"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,183,} catch (NumberIsTooLargeException ex) {
False,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,184,"ssert.fail(""Expecting IllegalArgumentException - non-bracketing"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,185, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,188,"Assert.fail(""Expecting NoBracketingException - non-bracketing"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,189,} catch (NoBracketingException ex) {
False,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,190,"ssert.fail(""Expecting IllegalArgumentException - non-bracketing"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,191, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,194,"Assert.fail(""Expecting NoBracketingException - non-bracketing"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,195,} catch (NoBracketingException ex) {
False,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,200,olver.setMaxEvaluations(20);
False,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,212,"ssert.fail(""an IllegalArgumentException was expected"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,213, catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,215,"Assert.fail(""a NumberIsTooLargeException was expected"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java,216,} catch (NumberIsTooLargeException iae) {
True,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,24,import org.apache.commons.math.exception.NumberIsTooLargeException;
True,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,25,import org.apache.commons.math.exception.NoBracketingException;
False,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,51,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,71,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,97,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,165,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,170,"ssert.fail(""Expecting IllegalArgumentException - bad interval"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,171, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,168,"Assert.fail(""Expecting NumberIsTooLargeException - bad interval"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,169,} catch (NumberIsTooLargeException ex) {
False,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,177,"ssert.fail(""Expecting IllegalArgumentException - no bracketing"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,178, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,175,"Assert.fail(""Expecting NoBracketingException - no bracketing"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java,176,} catch (NoBracketingException ex) {
False,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,50,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,73,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,104,olver.setMaxEvaluations(55);
False,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,133,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,138,"ssert.fail(""Expecting IllegalArgumentException - bad interval"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,134,"Assert.fail(""Expecting NumberIsTooLargeException - bad interval"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,145,"ssert.fail(""Expecting IllegalArgumentException - no bracketing"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java,141,"Assert.fail(""Expecting NoBracketingException - no bracketing"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,50,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,73,olver.setMaxEvaluations(15);
False,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,106,olver.setMaxEvaluations(25);
False,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,135,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,141,"ssert.fail(""Expecting IllegalArgumentException - bad interval"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,137,"Assert.fail(""Expecting NumberIsTooLargeException - bad interval"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,148,"ssert.fail(""Expecting IllegalArgumentException - no bracketing"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java,144,"Assert.fail(""Expecting NoBracketingException - no bracketing"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/NewtonSolverTest.java,40,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/NewtonSolverTest.java,59,olver.setMaxEvaluations(30);
False,src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,48,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,71,olver.setMaxEvaluations(15);
False,src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,100,olver.setMaxEvaluations(20);
False,src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,129,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,134,"ssert.fail(""Expecting IllegalArgumentException - bad interval"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,130,"Assert.fail(""Expecting NumberIsTooLargeException - bad interval"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,141,"ssert.fail(""Expecting IllegalArgumentException - no bracketing"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java,137,"Assert.fail(""Expecting NoBracketingException - no bracketing"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,23,import org.apache.commons.math.exception.NumberIsTooLargeException;
True,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,24,import org.apache.commons.math.exception.NoBracketingException;
False,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,41,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,68,olver.setMaxEvaluations(20);
False,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,132,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,153,olver.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,156,"ssert.fail(""Expecting IllegalArgumentException - bad interval"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,157, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,154,"Assert.fail(""Expecting NumberIsTooLargeException - bad interval"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,155,} catch (NumberIsTooLargeException ex) {
False,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,162,"ssert.fail(""Expecting IllegalArgumentException - non-bracketing"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,163, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,160,"Assert.fail(""Expecting NoBracketingException - non-bracketing"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,161,} catch (NoBracketingException ex) {
False,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,168,"ssert.fail(""Expecting IllegalArgumentException - non-bracketing"");"
False,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,169, catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,166,"Assert.fail(""Expecting NoBracketingException - non-bracketing"");"
True,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java,167,} catch (NoBracketingException ex) {
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,58,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,59,"ssertEquals(100, optimizer.getMaxEvaluations());"
True,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,58,optimizer.setMaxEvaluations(200);
True,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,59,"assertEquals(200, optimizer.getMaxEvaluations());"
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,238,ptimizer.setMaxEvaluations(100);
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,238,optimizer.setMaxEvaluations(200);
