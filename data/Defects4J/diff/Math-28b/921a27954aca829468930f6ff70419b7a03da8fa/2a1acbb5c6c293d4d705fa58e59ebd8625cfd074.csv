is_addition,old_file_path,new_file_path,line_num,content
False,src/mantissa/src/org/spaceroots/mantissa/ode/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,393,OException ioe = new IOException();
False,src/mantissa/src/org/spaceroots/mantissa/ode/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,394,oe.initCause(e);
False,src/mantissa/src/org/spaceroots/mantissa/ode/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,395,hrow ioe;
True,src/mantissa/src/org/spaceroots/mantissa/ode/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,393,throw new IOException(e.getMessage());
False,src/mantissa/src/org/spaceroots/mantissa/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/ClassicalRungeKuttaIntegrator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/ClassicalRungeKuttaIntegrator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaStepInterpolator.java,src/java/org/apache/commons/math/ode/ClassicalRungeKuttaStepInterpolator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaStepInterpolator.java,src/java/org/apache/commons/math/ode/ClassicalRungeKuttaStepInterpolator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/ContinuousOutputModel.java,src/java/org/apache/commons/math/ode/ContinuousOutputModel.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/ContinuousOutputModel.java,src/java/org/apache/commons/math/ode/ContinuousOutputModel.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/ContinuousOutputModel.java,src/java/org/apache/commons/math/ode/ContinuousOutputModel.java,319,"hrow new RuntimeException(""unexpected DerivativeException caught"", de);"
True,src/mantissa/src/org/spaceroots/mantissa/ode/ContinuousOutputModel.java,src/java/org/apache/commons/math/ode/ContinuousOutputModel.java,319,"throw new RuntimeException(""unexpected DerivativeException caught: """
True,src/mantissa/src/org/spaceroots/mantissa/ode/ContinuousOutputModel.java,src/java/org/apache/commons/math/ode/ContinuousOutputModel.java,320,+ de.getMessage());
False,src/mantissa/src/org/spaceroots/mantissa/ode/DerivativeException.java,src/java/org/apache/commons/math/ode/DerivativeException.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/DerivativeException.java,src/java/org/apache/commons/math/ode/DerivativeException.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/DerivativeException.java,src/java/org/apache/commons/math/ode/DerivativeException.java,20,mport org.spaceroots.mantissa.MantissaException;
True,src/mantissa/src/org/spaceroots/mantissa/ode/DerivativeException.java,src/java/org/apache/commons/math/ode/DerivativeException.java,20,import org.apache.commons.math.MathException;
False,src/mantissa/src/org/spaceroots/mantissa/ode/DerivativeException.java,src/java/org/apache/commons/math/ode/DerivativeException.java,30,xtends MantissaException {
True,src/mantissa/src/org/spaceroots/mantissa/ode/DerivativeException.java,src/java/org/apache/commons/math/ode/DerivativeException.java,30,extends MathException {
False,src/mantissa/src/org/spaceroots/mantissa/ode/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,273,OException ioe = new IOException();
False,src/mantissa/src/org/spaceroots/mantissa/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,274,oe.initCause(e);
False,src/mantissa/src/org/spaceroots/mantissa/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,275,hrow ioe;
True,src/mantissa/src/org/spaceroots/mantissa/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,273,throw new IOException(e.getMessage());
False,src/mantissa/src/org/spaceroots/mantissa/ode/DummyStepHandler.java,src/java/org/apache/commons/math/ode/DummyStepHandler.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/DummyStepHandler.java,src/java/org/apache/commons/math/ode/DummyStepHandler.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/DummyStepInterpolator.java,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/DummyStepInterpolator.java,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/DummyStepInterpolator.java,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,116,OException ioe = new IOException();
False,src/mantissa/src/org/spaceroots/mantissa/ode/DummyStepInterpolator.java,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,117,oe.initCause(e);
False,src/mantissa/src/org/spaceroots/mantissa/ode/DummyStepInterpolator.java,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,118,hrow ioe;
True,src/mantissa/src/org/spaceroots/mantissa/ode/DummyStepInterpolator.java,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,116,throw new IOException(e.getMessage());
False,src/mantissa/src/org/spaceroots/mantissa/ode/EulerIntegrator.java,src/java/org/apache/commons/math/ode/EulerIntegrator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/EulerIntegrator.java,src/java/org/apache/commons/math/ode/EulerIntegrator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/EulerStepInterpolator.java,src/java/org/apache/commons/math/ode/EulerStepInterpolator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/EulerStepInterpolator.java,src/java/org/apache/commons/math/ode/EulerStepInterpolator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/FirstOrderConverter.java,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/FirstOrderConverter.java,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/FirstOrderDifferentialEquations.java,src/java/org/apache/commons/math/ode/FirstOrderDifferentialEquations.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/FirstOrderDifferentialEquations.java,src/java/org/apache/commons/math/ode/FirstOrderDifferentialEquations.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/FixedStepHandler.java,src/java/org/apache/commons/math/ode/FixedStepHandler.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/FixedStepHandler.java,src/java/org/apache/commons/math/ode/FixedStepHandler.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/GillIntegrator.java,src/java/org/apache/commons/math/ode/GillIntegrator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/GillIntegrator.java,src/java/org/apache/commons/math/ode/GillIntegrator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/GillStepInterpolator.java,src/java/org/apache/commons/math/ode/GillStepInterpolator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/GillStepInterpolator.java,src/java/org/apache/commons/math/ode/GillStepInterpolator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/GraggBulirschStoerStepInterpolator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/GraggBulirschStoerStepInterpolator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/GraggBulirschStoerStepInterpolator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolator.java,395,OException ioe = new IOException();
False,src/mantissa/src/org/spaceroots/mantissa/ode/GraggBulirschStoerStepInterpolator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolator.java,396,oe.initCause(e);
False,src/mantissa/src/org/spaceroots/mantissa/ode/GraggBulirschStoerStepInterpolator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolator.java,397,hrow ioe;
True,src/mantissa/src/org/spaceroots/mantissa/ode/GraggBulirschStoerStepInterpolator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolator.java,395,throw new IOException(e.getMessage());
False,src/mantissa/src/org/spaceroots/mantissa/ode/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/HighamHall54Integrator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/HighamHall54Integrator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/HighamHall54StepInterpolator.java,src/java/org/apache/commons/math/ode/HighamHall54StepInterpolator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/HighamHall54StepInterpolator.java,src/java/org/apache/commons/math/ode/HighamHall54StepInterpolator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/IntegratorException.java,src/java/org/apache/commons/math/ode/IntegratorException.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/IntegratorException.java,src/java/org/apache/commons/math/ode/IntegratorException.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/IntegratorException.java,src/java/org/apache/commons/math/ode/IntegratorException.java,20,mport org.spaceroots.mantissa.MantissaException;
True,src/mantissa/src/org/spaceroots/mantissa/ode/IntegratorException.java,src/java/org/apache/commons/math/ode/IntegratorException.java,20,import org.apache.commons.math.MathException;
False,src/mantissa/src/org/spaceroots/mantissa/ode/IntegratorException.java,src/java/org/apache/commons/math/ode/IntegratorException.java,29,xtends MantissaException {
True,src/mantissa/src/org/spaceroots/mantissa/ode/IntegratorException.java,src/java/org/apache/commons/math/ode/IntegratorException.java,29,extends MathException {
False,src/mantissa/src/org/spaceroots/mantissa/ode/MidpointIntegrator.java,src/java/org/apache/commons/math/ode/MidpointIntegrator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/MidpointIntegrator.java,src/java/org/apache/commons/math/ode/MidpointIntegrator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/MidpointStepInterpolator.java,src/java/org/apache/commons/math/ode/MidpointStepInterpolator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/MidpointStepInterpolator.java,src/java/org/apache/commons/math/ode/MidpointStepInterpolator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/RungeKuttaFehlbergIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/RungeKuttaFehlbergIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaFehlbergIntegrator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/RungeKuttaStepInterpolator.java,src/java/org/apache/commons/math/ode/RungeKuttaStepInterpolator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/RungeKuttaStepInterpolator.java,src/java/org/apache/commons/math/ode/RungeKuttaStepInterpolator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/RungeKuttaStepInterpolator.java,src/java/org/apache/commons/math/ode/RungeKuttaStepInterpolator.java,172,OException ioe = new IOException();
False,src/mantissa/src/org/spaceroots/mantissa/ode/RungeKuttaStepInterpolator.java,src/java/org/apache/commons/math/ode/RungeKuttaStepInterpolator.java,173,oe.initCause(e);
False,src/mantissa/src/org/spaceroots/mantissa/ode/RungeKuttaStepInterpolator.java,src/java/org/apache/commons/math/ode/RungeKuttaStepInterpolator.java,174,hrow ioe;
True,src/mantissa/src/org/spaceroots/mantissa/ode/RungeKuttaStepInterpolator.java,src/java/org/apache/commons/math/ode/RungeKuttaStepInterpolator.java,172,throw new IOException(e.getMessage());
False,src/mantissa/src/org/spaceroots/mantissa/ode/SecondOrderDifferentialEquations.java,src/java/org/apache/commons/math/ode/SecondOrderDifferentialEquations.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SecondOrderDifferentialEquations.java,src/java/org/apache/commons/math/ode/SecondOrderDifferentialEquations.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SecondOrderIntegrator.java,src/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SecondOrderIntegrator.java,src/java/org/apache/commons/math/ode/SecondOrderIntegrator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/StepHandler.java,src/java/org/apache/commons/math/ode/StepHandler.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/StepHandler.java,src/java/org/apache/commons/math/ode/StepHandler.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/StepInterpolator.java,src/java/org/apache/commons/math/ode/StepInterpolator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/StepInterpolator.java,src/java/org/apache/commons/math/ode/StepInterpolator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/StepNormalizer.java,src/java/org/apache/commons/math/ode/StepNormalizer.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/StepNormalizer.java,src/java/org/apache/commons/math/ode/StepNormalizer.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,20,mport org.spaceroots.mantissa.functions.FunctionException;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,21,mport org.spaceroots.mantissa.functions.scalar.ComputableFunction;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,20,import java.io.Serializable;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,23,mport org.spaceroots.mantissa.roots.ConvergenceChecker;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,24,mport org.spaceroots.mantissa.roots.RootsFinder;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,25,mport org.spaceroots.mantissa.roots.BrentSolver;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,22,import org.apache.commons.math.ConvergenceException;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,23,import org.apache.commons.math.FunctionEvaluationException;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,24,import org.apache.commons.math.analysis.BrentSolver;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,25,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,26,import org.apache.commons.math.analysis.UnivariateRealSolver;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,42,lass SwitchState
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,43,"mplements ComputableFunction, ConvergenceChecker {"
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,43,class SwitchState implements Serializable {
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,45,rivate static final long serialVersionUID = 6944466361876662425L;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,45,/** Serializable version identifier. */
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,46,private static final long serialVersionUID = 3256541562455482289L;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,82,** Interpolator valid for the current step. */
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,83,rivate StepInterpolator interpolator;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,108,nterpolator      = null;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,130,ublic boolean evaluateStep(StepInterpolator interpolator) {
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,126,public boolean evaluateStep(final StepInterpolator interpolator) {
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,134,his.interpolator = interpolator;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,157,ootsFinder solver = new BrentSolver();
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,158,"f (solver.findRoot(this, this, 1000, ta, ga, tb, gb)) {"
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,159,f (Double.isNaN(previousEventTime)
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,160,| (Math.abs(previousEventTime - solver.getRoot()) > convergence)) {
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,161,endingEventTime = solver.getRoot();
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,162,f (pendingEvent
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,163,& (Math.abs(t1 - pendingEventTime) <= convergence)) {
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,164,/ we were already waiting for this event which was
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,165,/ found during a previous call for a step that was
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,166,"/ rejected, this step must now be accepted since it"
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,167,/ properly ends exactly at the event occurrence
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,168,eturn false;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,151,try {
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,152,UnivariateRealSolver solver = new BrentSolver(new UnivariateRealFunction() {
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,153,public double value(double t) throws FunctionEvaluationException {
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,154,try {
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,155,interpolator.setInterpolatedTime(t);
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,156,"return function.g(t, interpolator.getInterpolatedState());"
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,157,} catch (DerivativeException e) {
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,158,"throw new FunctionEvaluationException(t, e);"
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,162,solver.setAbsoluteAccuracy(convergence);
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,163,solver.setMaximalIterationCount(1000);
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,164,"double root = solver.solve(ta, tb);"
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,165,if (Double.isNaN(previousEventTime) || (Math.abs(previousEventTime - root) > convergence)) {
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,166,pendingEventTime = root;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,167,if (pendingEvent && (Math.abs(t1 - pendingEventTime) <= convergence)) {
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,168,// we were already waiting for this event which was
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,169,// found during a previous call for a step that was
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,170,"// rejected, this step must now be accepted since it"
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,171,// properly ends exactly at the event occurrence
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,172,return false;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,174,// either we were not waiting for the event or it has
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,175,// moved in such a way the step cannot be accepted
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,176,pendingEvent = true;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,177,return true;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,170,/ either we were not waiting for the event or it has
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,171,/ moved in such a way the step cannot be accepted
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,172,endingEvent = true;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,173,eturn true;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,175, else {
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,176,"hrow new RuntimeException(""internal error"");"
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,179,} catch (ConvergenceException ce) {
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,180,"throw new RuntimeException(""internal error"");"
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,193,"hrow new RuntimeException(""unexpected exception"", e);"
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,194, catch (FunctionException e) {
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,195,"hrow new RuntimeException(""unexpected exception"", e);"
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,197,"throw new RuntimeException(""unexpected exception: "" + e.getMessage());"
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,198,} catch (FunctionEvaluationException e) {
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,199,"throw new RuntimeException(""unexpected exception: "" + e.getMessage());"
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,263,** Get the value of the g function at the specified time.
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,264, @param t current time
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,265, @return g function value
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,266, @exception FunctionException if the underlying interpolator is
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,267, unable to interpolate the state at the specified time
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,269,ublic double valueAt(double t)
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,270,hrows FunctionException {
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,271,ry {
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,272,nterpolator.setInterpolatedTime(t);
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,273,"eturn function.g(t, interpolator.getInterpolatedState());"
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,274, catch (DerivativeException e) {
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,275,hrow new FunctionException(e);
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,279,** Check if the event time has been found.
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,280, @param x0 lower bound of the interval
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,281, @param y0 value of the function at x0
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,282, @param x1 higher bound of the interval
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,283, @param y1 value of the function at x1
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,284, @return convergence indicator
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,286,"ublic int converged(double x0, double y0, double x1, double y1) {"
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,287,f (Math.abs(x1 - x0) < convergence) {
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,288,eturn (Math.abs(y0) < Math.abs(y1))
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,289, ConvergenceChecker.LOW : ConvergenceChecker.HIGH;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,291,eturn ConvergenceChecker.NONE;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchingFunction.java,src/java/org/apache/commons/math/ode/SwitchingFunction.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchingFunction.java,src/java/org/apache/commons/math/ode/SwitchingFunction.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchingFunctionsHandler.java,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchingFunctionsHandler.java,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchingFunctionsHandler.java,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,20,mport org.spaceroots.mantissa.ode.DerivativeException;
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchingFunctionsHandler.java,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,20,import org.apache.commons.math.ode.DerivativeException;
False,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchingFunctionsHandler.java,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,123,"hrow new RuntimeException(""unexpected exception"", e);"
True,src/mantissa/src/org/spaceroots/mantissa/ode/SwitchingFunctionsHandler.java,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,123,"throw new RuntimeException(""unexpected exception: "" + e.getMessage());"
False,src/mantissa/src/org/spaceroots/mantissa/ode/ThreeEighthesIntegrator.java,src/java/org/apache/commons/math/ode/ThreeEighthesIntegrator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/ThreeEighthesIntegrator.java,src/java/org/apache/commons/math/ode/ThreeEighthesIntegrator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/src/org/spaceroots/mantissa/ode/ThreeEighthesStepInterpolator.java,src/java/org/apache/commons/math/ode/ThreeEighthesStepInterpolator.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/src/org/spaceroots/mantissa/ode/ThreeEighthesStepInterpolator.java,src/java/org/apache/commons/math/ode/ThreeEighthesStepInterpolator.java,18,package org.apache.commons.math.ode;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,1,/ Licensed to the Apache Software Foundation (ASF) under one
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,2,/ or more contributor license agreements.  See the NOTICE file
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,3,/ distributed with this work for additional information
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,4,/ regarding copyright ownership.  The ASF licenses this file
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,5,"/ to you under the Apache License, Version 2.0 (the"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,6,"/ ""License""); you may not use this file except in compliance"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,7,/ with the License.  You may obtain a copy of the License at
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,9,/   http://www.apache.org/licenses/LICENSE-2.0
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,11,"/ Unless required by applicable law or agreed to in writing,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,12,/ software distributed under the License is distributed on an
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,13,"/ ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,14,"/ KIND, either express or implied.  See the License for the"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,15,/ specific language governing permissions and limitations
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,16,/ under the License.
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,18,ackage org.spaceroots.mantissa.ode;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,20,mport junit.framework.Test;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,21,mport junit.framework.TestSuite;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,23,ublic class AllTests {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,24,ublic static Test suite() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,26,"estSuite suite = new TestSuite(""org.spaceroots.mantissa.ode"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,28,uite.addTest(EulerStepInterpolatorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,29,uite.addTest(EulerIntegratorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,30,uite.addTest(MidpointIntegratorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,31,uite.addTest(ClassicalRungeKuttaIntegratorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,32,uite.addTest(GillIntegratorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,33,uite.addTest(ThreeEighthesIntegratorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,34,uite.addTest(HighamHall54IntegratorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,35,uite.addTest(DormandPrince54IntegratorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,36,uite.addTest(DormandPrince853IntegratorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,37,uite.addTest(GraggBulirschStoerIntegratorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,38,uite.addTest(FirstOrderConverterTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,39,uite.addTest(StepNormalizerTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,40,uite.addTest(ContinuousOutputModelTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,41,uite.addTest(ClassicalRungeKuttaStepInterpolatorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,42,uite.addTest(GillStepInterpolatorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,43,uite.addTest(ThreeEighthesStepInterpolatorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,44,uite.addTest(DormandPrince853StepInterpolatorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,45,uite.addTest(DormandPrince54StepInterpolatorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,46,uite.addTest(HighamHall54StepInterpolatorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,47,uite.addTest(MidpointStepInterpolatorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,48,uite.addTest(GraggBulirschStoerStepInterpolatorTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/ode/AllTests.java,50,eturn suite;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,18,package org.apache.commons.math.ode;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,22,mport org.spaceroots.mantissa.estimation.EstimationException;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,23,mport org.spaceroots.mantissa.estimation.LevenbergMarquardtEstimator;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,24,mport org.spaceroots.mantissa.fitting.PolynomialFitter;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,22,import org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,23,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,24,import org.apache.commons.math.ode.FirstOrderIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,25,import org.apache.commons.math.ode.IntegratorException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,26,import org.apache.commons.math.ode.StepHandler;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,27,import org.apache.commons.math.ode.StepInterpolator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,28,import org.apache.commons.math.ode.SwitchingFunction;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,94,ublic void testOrder()
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,95,"hrows EstimationException, DerivativeException,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,96,ntegratorException {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,97,olynomialFitter fitter =
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,98,"ew PolynomialFitter(1, new LevenbergMarquardtEstimator());"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,100,estProblemAbstract[] problems = TestProblemFactory.getProblems();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,101,or (int k = 0; k < problems.length; ++k) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,103,or (int i = 0; i < 10; ++i) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,105,estProblemAbstract pb = (TestProblemAbstract) problems[k].clone();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,106,ouble step = (pb.getFinalTime() - pb.getInitialTime())
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,107," Math.pow(2.0, -(i + 1));"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,109,irstOrderIntegrator integ = new ClassicalRungeKuttaIntegrator(step);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,110,estProblemHandler handler = new TestProblemHandler(pb);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,111,nteg.setStepHandler(handler);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,112,witchingFunction[] functions = pb.getSwitchingFunctions();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,113,or (int l = 0; l < functions.length; ++l) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,114,"nteg.addSwitchingFunction(functions[l],"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,115,"ouble.POSITIVE_INFINITY, 1.0e-6 * step);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,117,"nteg.integrate(pb, pb.getInitialTime(), pb.getInitialState(),"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,118,"b.getFinalTime(), new double[pb.getDimension()]);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,120,"itter.addWeightedPair(1.0,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,121,"ath.log(Math.abs(step)),"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,122,ath.log(handler.getLastError()));
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,126,/ this is an order 4 method
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,127,ouble[] coeffs = fitter.fit();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,128,ssertTrue(coeffs[1] > 3.2);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaIntegratorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaIntegratorTest.java,129,ssertTrue(coeffs[1] < 4.8);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaStepInterpolatorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaStepInterpolatorTest.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaStepInterpolatorTest.java,28,import org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaStepInterpolatorTest.java,29,import org.apache.commons.math.ode.ContinuousOutputModel;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaStepInterpolatorTest.java,30,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ClassicalRungeKuttaStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/ClassicalRungeKuttaStepInterpolatorTest.java,31,import org.apache.commons.math.ode.IntegratorException;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,23,import org.apache.commons.math.ode.ContinuousOutputModel;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,24,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,25,import org.apache.commons.math.ode.DormandPrince54Integrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,26,import org.apache.commons.math.ode.FirstOrderIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ContinuousOutputModelTest.java,src/test/org/apache/commons/math/ode/ContinuousOutputModelTest.java,27,import org.apache.commons.math.ode.IntegratorException;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,20,import org.apache.commons.math.ode.AdaptiveStepsizeIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,21,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,22,import org.apache.commons.math.ode.DormandPrince54Integrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,23,import org.apache.commons.math.ode.FirstOrderIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,24,import org.apache.commons.math.ode.IntegratorException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,25,import org.apache.commons.math.ode.StepHandler;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,26,import org.apache.commons.math.ode.StepInterpolator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince54IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54IntegratorTest.java,27,import org.apache.commons.math.ode.SwitchingFunction;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54StepInterpolatorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54StepInterpolatorTest.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54StepInterpolatorTest.java,28,import org.apache.commons.math.ode.ContinuousOutputModel;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54StepInterpolatorTest.java,29,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54StepInterpolatorTest.java,30,import org.apache.commons.math.ode.DormandPrince54Integrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DormandPrince54StepInterpolatorTest.java,31,import org.apache.commons.math.ode.IntegratorException;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,20,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,21,import org.apache.commons.math.ode.DormandPrince853Integrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,22,import org.apache.commons.math.ode.DummyStepHandler;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,23,import org.apache.commons.math.ode.FirstOrderIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,24,import org.apache.commons.math.ode.IntegratorException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,25,import org.apache.commons.math.ode.StepHandler;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,26,import org.apache.commons.math.ode.StepInterpolator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince853IntegratorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853IntegratorTest.java,27,import org.apache.commons.math.ode.SwitchingFunction;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince853StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853StepInterpolatorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince853StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853StepInterpolatorTest.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince853StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853StepInterpolatorTest.java,28,import org.apache.commons.math.ode.ContinuousOutputModel;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince853StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853StepInterpolatorTest.java,29,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince853StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853StepInterpolatorTest.java,30,import org.apache.commons.math.ode.DormandPrince853Integrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/DormandPrince853StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DormandPrince853StepInterpolatorTest.java,31,import org.apache.commons.math.ode.IntegratorException;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,18,package org.apache.commons.math.ode;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,22,mport org.spaceroots.mantissa.estimation.EstimationException;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,23,mport org.spaceroots.mantissa.estimation.LevenbergMarquardtEstimator;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,24,mport org.spaceroots.mantissa.fitting.PolynomialFitter;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,22,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,23,import org.apache.commons.math.ode.EulerIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,24,import org.apache.commons.math.ode.FirstOrderIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,25,import org.apache.commons.math.ode.IntegratorException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,26,import org.apache.commons.math.ode.SwitchingFunction;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,83,ublic void testOrder()
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,84,"hrows EstimationException, DerivativeException,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,85,ntegratorException {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,86,olynomialFitter fitter =
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,87,"ew PolynomialFitter(1, new LevenbergMarquardtEstimator());"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,89,estProblemAbstract[] problems = TestProblemFactory.getProblems();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,90,or (int k = 0; k < problems.length; ++k) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,92,or (int i = 0; i < 10; ++i) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,94,estProblemAbstract pb = (TestProblemAbstract) problems[k].clone();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,95,ouble step  = (pb.getFinalTime() - pb.getInitialTime())
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,96," Math.pow(2.0, -(i + 1));"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,98,irstOrderIntegrator integ = new EulerIntegrator(step);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,99,estProblemHandler handler = new TestProblemHandler(pb);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,100,nteg.setStepHandler(handler);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,101,witchingFunction[] functions = pb.getSwitchingFunctions();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,102,or (int l = 0; l < functions.length; ++l) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,103,"nteg.addSwitchingFunction(functions[l],"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,104,"ouble.POSITIVE_INFINITY, 1.0e-6 * step);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,106,"nteg.integrate(pb,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,107,"b.getInitialTime(), pb.getInitialState(),"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,108,"b.getFinalTime(), new double[pb.getDimension()]);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,110,"itter.addWeightedPair(1.0,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,111,"ath.log(Math.abs(step)),"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,112,ath.log(handler.getLastError()));
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,116,/ this is an order 1 method
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,117,ouble[] coeffs = fitter.fit();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,118,ssertTrue(coeffs[1] > 0.2);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerIntegratorTest.java,src/test/org/apache/commons/math/ode/EulerIntegratorTest.java,119,ssertTrue(coeffs[1] < 1.8);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/EulerStepInterpolatorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/EulerStepInterpolatorTest.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/EulerStepInterpolatorTest.java,28,import org.apache.commons.math.ode.ContinuousOutputModel;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/EulerStepInterpolatorTest.java,29,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/EulerStepInterpolatorTest.java,30,import org.apache.commons.math.ode.EulerIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/EulerStepInterpolatorTest.java,31,import org.apache.commons.math.ode.EulerStepInterpolator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/EulerStepInterpolatorTest.java,32,import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/EulerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/EulerStepInterpolatorTest.java,33,import org.apache.commons.math.ode.IntegratorException;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/FirstOrderConverterTest.java,src/test/org/apache/commons/math/ode/FirstOrderConverterTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/FirstOrderConverterTest.java,src/test/org/apache/commons/math/ode/FirstOrderConverterTest.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/FirstOrderConverterTest.java,src/test/org/apache/commons/math/ode/FirstOrderConverterTest.java,20,import org.apache.commons.math.ode.ClassicalRungeKuttaIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/FirstOrderConverterTest.java,src/test/org/apache/commons/math/ode/FirstOrderConverterTest.java,21,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/FirstOrderConverterTest.java,src/test/org/apache/commons/math/ode/FirstOrderConverterTest.java,22,import org.apache.commons.math.ode.FirstOrderConverter;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/FirstOrderConverterTest.java,src/test/org/apache/commons/math/ode/FirstOrderConverterTest.java,23,import org.apache.commons.math.ode.IntegratorException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/FirstOrderConverterTest.java,src/test/org/apache/commons/math/ode/FirstOrderConverterTest.java,24,import org.apache.commons.math.ode.SecondOrderDifferentialEquations;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,18,package org.apache.commons.math.ode;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,22,mport org.spaceroots.mantissa.estimation.EstimationException;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,23,mport org.spaceroots.mantissa.estimation.LevenbergMarquardtEstimator;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,24,mport org.spaceroots.mantissa.fitting.PolynomialFitter;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,22,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,23,import org.apache.commons.math.ode.FirstOrderIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,24,import org.apache.commons.math.ode.GillIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,25,import org.apache.commons.math.ode.IntegratorException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,26,import org.apache.commons.math.ode.StepHandler;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,27,import org.apache.commons.math.ode.StepInterpolator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,28,import org.apache.commons.math.ode.SwitchingFunction;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,81,ublic void testOrder()
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,82,"hrows EstimationException, DerivativeException,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,83,ntegratorException {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,84,olynomialFitter fitter =
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,85,"ew PolynomialFitter(1, new LevenbergMarquardtEstimator());"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,87,estProblemAbstract[] problems = TestProblemFactory.getProblems();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,88,or (int k = 0; k < problems.length; ++k) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,90,or (int i = 0; i < 10; ++i) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,92,estProblemAbstract pb = (TestProblemAbstract) problems[k].clone();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,93,ouble step = (pb.getFinalTime() - pb.getInitialTime())
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,94," Math.pow(2.0, -(i + 1));"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,96,irstOrderIntegrator integ = new GillIntegrator(step);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,97,estProblemHandler handler = new TestProblemHandler(pb);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,98,nteg.setStepHandler(handler);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,99,witchingFunction[] functions = pb.getSwitchingFunctions();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,100,or (int l = 0; l < functions.length; ++l) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,101,"nteg.addSwitchingFunction(functions[l],"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,102,"ouble.POSITIVE_INFINITY, 1.0e-6 * step);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,104,"nteg.integrate(pb, pb.getInitialTime(), pb.getInitialState(),"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,105,"b.getFinalTime(), new double[pb.getDimension()]);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,107,"itter.addWeightedPair(1.0,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,108,"ath.log(Math.abs(step)),"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,109,ath.log(handler.getLastError()));
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,113,/ this is an order 4 method
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,114,ouble[] coeffs = fitter.fit();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,115,ssertTrue(coeffs[1] > 3.2);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillIntegratorTest.java,src/test/org/apache/commons/math/ode/GillIntegratorTest.java,116,ssertTrue(coeffs[1] < 4.8);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/GillStepInterpolatorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/GillStepInterpolatorTest.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/GillStepInterpolatorTest.java,28,import org.apache.commons.math.ode.ContinuousOutputModel;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/GillStepInterpolatorTest.java,29,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/GillStepInterpolatorTest.java,30,import org.apache.commons.math.ode.GillIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GillStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/GillStepInterpolatorTest.java,31,import org.apache.commons.math.ode.IntegratorException;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,20,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,21,import org.apache.commons.math.ode.FirstOrderIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,22,import org.apache.commons.math.ode.GraggBulirschStoerIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,23,import org.apache.commons.math.ode.IntegratorException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,24,import org.apache.commons.math.ode.StepHandler;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,25,import org.apache.commons.math.ode.StepInterpolator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GraggBulirschStoerIntegratorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerIntegratorTest.java,26,import org.apache.commons.math.ode.SwitchingFunction;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GraggBulirschStoerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolatorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GraggBulirschStoerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolatorTest.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GraggBulirschStoerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolatorTest.java,28,import org.apache.commons.math.ode.ContinuousOutputModel;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GraggBulirschStoerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolatorTest.java,29,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GraggBulirschStoerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolatorTest.java,30,import org.apache.commons.math.ode.GraggBulirschStoerIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/GraggBulirschStoerStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolatorTest.java,31,import org.apache.commons.math.ode.IntegratorException;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,20,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,21,import org.apache.commons.math.ode.FirstOrderIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,22,import org.apache.commons.math.ode.HighamHall54Integrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,23,import org.apache.commons.math.ode.IntegratorException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,24,import org.apache.commons.math.ode.StepHandler;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,25,import org.apache.commons.math.ode.StepInterpolator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/HighamHall54IntegratorTest.java,src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java,26,import org.apache.commons.math.ode.SwitchingFunction;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/HighamHall54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/HighamHall54StepInterpolatorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/HighamHall54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/HighamHall54StepInterpolatorTest.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/HighamHall54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/HighamHall54StepInterpolatorTest.java,28,import org.apache.commons.math.ode.ContinuousOutputModel;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/HighamHall54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/HighamHall54StepInterpolatorTest.java,29,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/HighamHall54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/HighamHall54StepInterpolatorTest.java,30,import org.apache.commons.math.ode.HighamHall54Integrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/HighamHall54StepInterpolatorTest.java,src/test/org/apache/commons/math/ode/HighamHall54StepInterpolatorTest.java,31,import org.apache.commons.math.ode.IntegratorException;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,18,package org.apache.commons.math.ode;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,22,mport org.spaceroots.mantissa.estimation.EstimationException;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,23,mport org.spaceroots.mantissa.estimation.LevenbergMarquardtEstimator;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,24,mport org.spaceroots.mantissa.fitting.PolynomialFitter;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,22,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,23,import org.apache.commons.math.ode.FirstOrderIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,24,import org.apache.commons.math.ode.IntegratorException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,25,import org.apache.commons.math.ode.MidpointIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,26,import org.apache.commons.math.ode.SwitchingFunction;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,81,ublic void testOrder()
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,82,"hrows EstimationException, DerivativeException, IntegratorException {"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,83,olynomialFitter fitter =
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,84,"ew PolynomialFitter(1, new LevenbergMarquardtEstimator());"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,86,estProblemAbstract[] problems = TestProblemFactory.getProblems();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,87,or (int k = 0; k < problems.length; ++k) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,89,or (int i = 0; i < 10; ++i) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,91,estProblemAbstract pb = (TestProblemAbstract) problems[k].clone();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,92,ouble step  = (pb.getFinalTime() - pb.getInitialTime())
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,93," Math.pow(2.0, -(i + 1));"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,95,irstOrderIntegrator integ = new MidpointIntegrator(step);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,96,estProblemHandler handler = new TestProblemHandler(pb);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,97,nteg.setStepHandler(handler);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,98,witchingFunction[] functions = pb.getSwitchingFunctions();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,99,or (int l = 0; l < functions.length; ++l) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,100,"nteg.addSwitchingFunction(functions[l],"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,101,"ouble.POSITIVE_INFINITY, 1.0e-6 * step);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,103,"nteg.integrate(pb,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,104,"b.getInitialTime(), pb.getInitialState(),"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,105,"b.getFinalTime(), new double[pb.getDimension()]);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,107,"itter.addWeightedPair(1.0,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,108,"ath.log(Math.abs(step)),"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,109,ath.log(handler.getLastError()));
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,113,/ this is an order 2 method
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,114,ouble[] coeffs = fitter.fit();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,115,ssertTrue(coeffs[1] > 1.2);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointIntegratorTest.java,src/test/org/apache/commons/math/ode/MidpointIntegratorTest.java,116,ssertTrue(coeffs[1] < 2.8);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/MidpointStepInterpolatorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/MidpointStepInterpolatorTest.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/MidpointStepInterpolatorTest.java,28,import org.apache.commons.math.ode.ContinuousOutputModel;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/MidpointStepInterpolatorTest.java,29,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/MidpointStepInterpolatorTest.java,30,import org.apache.commons.math.ode.IntegratorException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/MidpointStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/MidpointStepInterpolatorTest.java,31,import org.apache.commons.math.ode.MidpointIntegrator;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/StepNormalizerTest.java,src/test/org/apache/commons/math/ode/StepNormalizerTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/StepNormalizerTest.java,src/test/org/apache/commons/math/ode/StepNormalizerTest.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/StepNormalizerTest.java,src/test/org/apache/commons/math/ode/StepNormalizerTest.java,20,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/StepNormalizerTest.java,src/test/org/apache/commons/math/ode/StepNormalizerTest.java,21,import org.apache.commons.math.ode.DormandPrince54Integrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/StepNormalizerTest.java,src/test/org/apache/commons/math/ode/StepNormalizerTest.java,22,import org.apache.commons.math.ode.FirstOrderIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/StepNormalizerTest.java,src/test/org/apache/commons/math/ode/StepNormalizerTest.java,23,import org.apache.commons.math.ode.FixedStepHandler;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/StepNormalizerTest.java,src/test/org/apache/commons/math/ode/StepNormalizerTest.java,24,import org.apache.commons.math.ode.IntegratorException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/StepNormalizerTest.java,src/test/org/apache/commons/math/ode/StepNormalizerTest.java,25,import org.apache.commons.math.ode.StepNormalizer;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/StepProblem.java,src/test/org/apache/commons/math/ode/StepProblem.java,1,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/StepProblem.java,src/test/org/apache/commons/math/ode/StepProblem.java,1,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/StepProblem.java,src/test/org/apache/commons/math/ode/StepProblem.java,3,import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/StepProblem.java,src/test/org/apache/commons/math/ode/StepProblem.java,4,import org.apache.commons.math.ode.SwitchingFunction;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblem1.java,src/test/org/apache/commons/math/ode/TestProblem1.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblem1.java,src/test/org/apache/commons/math/ode/TestProblem1.java,18,package org.apache.commons.math.ode;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblem2.java,src/test/org/apache/commons/math/ode/TestProblem2.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblem2.java,src/test/org/apache/commons/math/ode/TestProblem2.java,18,package org.apache.commons.math.ode;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblem3.java,src/test/org/apache/commons/math/ode/TestProblem3.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblem3.java,src/test/org/apache/commons/math/ode/TestProblem3.java,18,package org.apache.commons.math.ode;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblem4.java,src/test/org/apache/commons/math/ode/TestProblem4.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblem4.java,src/test/org/apache/commons/math/ode/TestProblem4.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblem4.java,src/test/org/apache/commons/math/ode/TestProblem4.java,20,import org.apache.commons.math.ode.SwitchingFunction;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblem5.java,src/test/org/apache/commons/math/ode/TestProblem5.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblem5.java,src/test/org/apache/commons/math/ode/TestProblem5.java,18,package org.apache.commons.math.ode;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblemAbstract.java,src/test/org/apache/commons/math/ode/TestProblemAbstract.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblemAbstract.java,src/test/org/apache/commons/math/ode/TestProblemAbstract.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblemAbstract.java,src/test/org/apache/commons/math/ode/TestProblemAbstract.java,20,import org.apache.commons.math.ode.FirstOrderDifferentialEquations;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblemAbstract.java,src/test/org/apache/commons/math/ode/TestProblemAbstract.java,21,import org.apache.commons.math.ode.SwitchingFunction;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblemFactory.java,src/test/org/apache/commons/math/ode/TestProblemFactory.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblemFactory.java,src/test/org/apache/commons/math/ode/TestProblemFactory.java,18,package org.apache.commons.math.ode;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,20,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,21,import org.apache.commons.math.ode.StepHandler;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/TestProblemHandler.java,src/test/org/apache/commons/math/ode/TestProblemHandler.java,22,import org.apache.commons.math.ode.StepInterpolator;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,18,package org.apache.commons.math.ode;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,22,mport org.spaceroots.mantissa.estimation.EstimationException;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,23,mport org.spaceroots.mantissa.estimation.LevenbergMarquardtEstimator;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,24,mport org.spaceroots.mantissa.fitting.PolynomialFitter;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,22,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,23,import org.apache.commons.math.ode.FirstOrderIntegrator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,24,import org.apache.commons.math.ode.IntegratorException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,25,import org.apache.commons.math.ode.StepHandler;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,26,import org.apache.commons.math.ode.StepInterpolator;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,27,import org.apache.commons.math.ode.SwitchingFunction;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,28,import org.apache.commons.math.ode.ThreeEighthesIntegrator;
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,81,ublic void testOrder()
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,82,"hrows EstimationException, DerivativeException,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,83,ntegratorException {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,84,olynomialFitter fitter =
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,85,"ew PolynomialFitter(1, new LevenbergMarquardtEstimator());"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,87,estProblemAbstract[] problems = TestProblemFactory.getProblems();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,88,or (int k = 0; k < problems.length; ++k) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,90,or (int i = 0; i < 10; ++i) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,92,estProblemAbstract pb = (TestProblemAbstract) problems[k].clone();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,93,ouble step = (pb.getFinalTime() - pb.getInitialTime())
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,94," Math.pow(2.0, -(i + 1));"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,96,irstOrderIntegrator integ = new ThreeEighthesIntegrator(step);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,97,estProblemHandler handler = new TestProblemHandler(pb);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,98,nteg.setStepHandler(handler);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,99,witchingFunction[] functions = pb.getSwitchingFunctions();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,100,or (int l = 0; l < functions.length; ++l) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,101,"nteg.addSwitchingFunction(functions[l],"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,102,"ouble.POSITIVE_INFINITY, 1.0e-6 * step);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,104,"nteg.integrate(pb, pb.getInitialTime(), pb.getInitialState(),"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,105,"b.getFinalTime(), new double[pb.getDimension()]);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,107,"itter.addWeightedPair(1.0,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,108,"ath.log(Math.abs(step)),"
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,109,ath.log(handler.getLastError()));
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,113,/ this is an order 4 method
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,114,ouble[] coeffs = fitter.fit();
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,115,ssertTrue(coeffs[1] > 3.2);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,116,ssertTrue(coeffs[1] < 4.8);
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,122,ublic void testSmallStep()
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesIntegratorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesIntegratorTest.java,85,public void testSmallStep()
False,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesStepInterpolatorTest.java,18,ackage org.spaceroots.mantissa.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesStepInterpolatorTest.java,18,package org.apache.commons.math.ode;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesStepInterpolatorTest.java,28,import org.apache.commons.math.ode.ContinuousOutputModel;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesStepInterpolatorTest.java,29,import org.apache.commons.math.ode.DerivativeException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesStepInterpolatorTest.java,30,import org.apache.commons.math.ode.IntegratorException;
True,src/mantissa/tests-src/org/spaceroots/mantissa/ode/ThreeEighthesStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/ThreeEighthesStepInterpolatorTest.java,31,import org.apache.commons.math.ode.ThreeEighthesIntegrator;
