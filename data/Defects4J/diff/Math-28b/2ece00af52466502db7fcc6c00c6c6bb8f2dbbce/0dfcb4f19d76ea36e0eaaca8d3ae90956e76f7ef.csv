is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1213,* (non-Javadoc)
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1214, @see java.lang.Object#hashCode()
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1216,Override
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1217,ublic int hashCode() {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1218,inal int prime = 31;
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1219,nt result = 1;
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1220,esult = prime * result + ((entries == null) ? 0 : entries.hashCode());
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1221,ong temp;
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1222,emp = Double.doubleToLongBits(epsilon);
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1223,esult = prime * result + (int) (temp ^ (temp >>> 32));
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1224,esult = prime * result + virtualSize;
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1225,eturn result;
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1228,* (non-Javadoc)
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1229, @see java.lang.Object#equals(java.lang.Object)
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1231,Override
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1232,ublic boolean equals(Object obj) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1233,f (this == obj)
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1234,eturn true;
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1235,f (obj == null)
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1236,eturn false;
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1237,f (!(obj instanceof SparseRealVector))
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1238,eturn false;
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1239,parseRealVector other = (SparseRealVector) obj;
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1240,f (entries == null) {
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1241,f (other.entries != null)
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1242,eturn false;
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1243, else if (!entries.equals(other.entries)){
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1244,eturn false;
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1245,if (Double.doubleToLongBits(epsilon) != Double
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1246,doubleToLongBits(other.epsilon))
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1247,eturn false;
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1248,f (virtualSize != other.virtualSize)
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1249,eturn false;
False,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,1250,eturn true;
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,598,* (non-Javadoc)
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,599, @see java.lang.Object#hashCode()
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,601,Override
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,602,ublic int hashCode() {
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,603,inal int prime = 31;
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,604,nt result = 1;
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,605,esult = prime * result + Arrays.hashCode(keys);
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,606,ong temp;
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,607,emp = Double.doubleToLongBits(missingEntries);
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,608,esult = prime * result + (int) (temp ^ (temp >>> 32));
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,609,esult = prime * result + size;
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,610,esult = prime * result + Arrays.hashCode(states);
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,611,esult = prime * result + Arrays.hashCode(values);
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,612,eturn result;
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,615,* (non-Javadoc)
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,616, @see java.lang.Object#equals(java.lang.Object)
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,618,Override
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,619,ublic boolean equals(Object obj) {
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,620,f (this == obj)
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,621,eturn true;
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,622,f (obj == null)
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,623,eturn false;
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,624,f (getClass() != obj.getClass())
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,625,eturn false;
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,626,penIntToDoubleHashMap other = (OpenIntToDoubleHashMap) obj;
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,627,"f (!Arrays.equals(keys, other.keys))"
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,628,eturn false;
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,629,f (Double.doubleToLongBits(missingEntries) != Double
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,630,doubleToLongBits(other.missingEntries))
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,631,eturn false;
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,632,f (size != other.size)
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,633,eturn false;
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,634,"f (!Arrays.equals(states, other.states)){"
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,635,eturn false;
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,637,"f (!Arrays.equals(values, other.values)){"
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,638,eturn false;
False,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,640,eturn true;
True,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,1127,//TODO: backing store doesn't implement equals
False,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,1130,"ssertNotSame(v, new SparseRealVector(new double[] { 0, 1, 2 + Math.ulp(2)}));"
False,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,1131,"ssertNotSame(v, new SparseRealVector(new double[] { 0, 1, 2, 3 }));"
True,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,1131,"//assertNotSame(v, new SparseRealVector(new double[] { 0, 1, 2 + Math.ulp(2)}));"
True,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,1132,"//assertNotSame(v, new SparseRealVector(new double[] { 0, 1, 2, 3 }));"
