is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,19,mport org.apache.commons.math.MathException;
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,39,inal double[][] fval)
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,40,hrows MathException {
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,38,final double[][] fval) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,19,mport org.apache.commons.math.MathException;
False,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,30, Computes an interpolating function for the data set.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,29,* Compute an interpolating function for the dataset.
False,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,38, @return a function which interpolates the data set.
False,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,39, @throws MathException if arguments violate assumptions made by the
False,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,40,         interpolation algorithm.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,37,* @return a function which interpolates the dataset.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,38,* @throws org.apache.commons.math.exception.NoDataException if any of
True,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,39,* the arrays has zero length.
True,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,40,* @throws org.apache.commons.math.exception.DimensionMismatchException
True,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,41,* if the array lengths are inconsistent.
False,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,42,"ivariateRealFunction interpolate(double[] xval, double[] yval, double[][] fval)"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,43,hrows MathException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,43,"BivariateRealFunction interpolate(double[] xval, double[] yval,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java,44,double[][] fval);
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,22,mport org.apache.commons.math.MathException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,23,import org.apache.commons.math.exception.NotPositiveException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,24,import org.apache.commons.math.exception.OutOfRangeException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,25,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,26,import org.apache.commons.math.exception.NoDataException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,27,import org.apache.commons.math.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,31,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,102, Constructs a new {@link LoessInterpolator}
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,100,* Construct a new {@link LoessInterpolator}
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,120," @throws MathException if bandwidth does not lie in the interval [0,1]"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,121, or if robustnessIters is negative.
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,124,"ublic LoessInterpolator(double bandwidth, int robustnessIters) throws MathException {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,121,"public LoessInterpolator(double bandwidth, int robustnessIters) {"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,129, Constructs a new {@link LoessInterpolator}
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,126,* Construct a new {@link LoessInterpolator}
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,144," @throws MathException if bandwidth does not lie in the interval [0,1]"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,145, or if robustnessIters is negative.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,141,"* @throws OutOfRangeException if bandwidth does not lie in the interval [0,1]."
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,142,* @throws NotPositiveException if {@code robustnessIters} is negative.
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,149,"ublic LoessInterpolator(double bandwidth, int robustnessIters, double accuracy) throws MathException {"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,150,f (bandwidth < 0 || bandwidth > 1) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,151,"hrow new MathException(LocalizedFormats.BANDWIDTH_OUT_OF_INTERVAL,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,152,andwidth);
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,146,"public LoessInterpolator(double bandwidth, int robustnessIters, double accuracy) {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,147,if (bandwidth < 0 ||
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,148,bandwidth > 1) {
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,149,"throw new OutOfRangeException(LocalizedFormats.BANDWIDTH, bandwidth, 0, 1);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,156,"hrow new MathException(LocalizedFormats.NEGATIVE_ROBUSTNESS_ITERATIONS, robustnessIters);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,153,"throw new NotPositiveException(LocalizedFormats.ROBUSTNESS_ITERATIONS, robustnessIters);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,172, @throws MathException  if some of the following conditions are false:
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,173, <ul>
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,174, <li> Arguments and values are of the same size that is greater than zero</li>
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,175, <li> The arguments are in a strictly increasing order</li>
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,176, <li> All arguments and values are finite real numbers</li>
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,177, </ul>
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,169,* @throws org.apache.commons.math.exception.NonMonotonousSequenceException
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,170,* if {@code xval} not sorted in strictly increasing order.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,171,* @throws DimensionMismatchException if {@code xval} and {@code yval} have
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,172,* different sizes.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,173,* @throws NoDataException if {@code xval} or {@code yval} has zero size.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,174,* @throws org.apache.commons.math.exception.NotFiniteNumberException if
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,175,* any of the arguments and values are not finite real numbers.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,176,* @throws NumberIsTooSmallException if the bandwidth is too small to
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,177,* accomodate the size of the input data (i.e. the bandwidth must be
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,178,* larger than 2/n).
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,179,ublic final PolynomialSplineFunction interpolate(
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,180,"inal double[] xval, final double[] yval) throws MathException {"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,180,"public final PolynomialSplineFunction interpolate(final double[] xval, final double[] yval) {"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,187, @param xval the arguments for the interpolation points
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,188, @param yval the values for the interpolation points
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,189, @param weights point weights: coefficients by which the robustness weight of a point is multiplied
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,190, @return values of the loess fit at corresponding original abscissae
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,191, @throws MathException if some of the following conditions are false:
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,192, <ul>
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,193, <li> Arguments and values are of the same size that is greater than zero</li>
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,194, <li> The arguments are in a strictly increasing order</li>
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,195, <li> All arguments and values are finite real numbers</li>
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,196, </ul>
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,187,* @param xval Arguments for the interpolation points.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,188,* @param yval Values for the interpolation points.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,189,* @param weights point weights: coefficients by which the robustness weight
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,190,* of a point is multiplied.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,191,* @return the values of the loess fit at corresponding original abscissae.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,192,* @throws org.apache.commons.math.exception.NonMonotonousSequenceException
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,193,* if {@code xval} not sorted in strictly increasing order.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,194,* @throws DimensionMismatchException if {@code xval} and {@code yval} have
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,195,* different sizes.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,196,* @throws NoDataException if {@code xval} or {@code yval} has zero size.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,197,* @throws org.apache.commons.math.exception.NotFiniteNumberException if
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,198,* any of the arguments and values are not finite real numbers.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,199,* @throws NumberIsTooSmallException if the bandwidth is too small to
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,200,* accomodate the size of the input data (i.e. the bandwidth must be
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,201,* larger than 2/n).
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,199,"ublic final double[] smooth(final double[] xval, final double[] yval, final double[] weights)"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,200,hrows MathException {
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,204,"public final double[] smooth(final double[] xval, final double[] yval,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,205,final double[] weights)  {
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,202,"hrow new MathException(LocalizedFormats.MISMATCHED_LOESS_ABSCISSA_ORDINATE_ARRAYS,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,203,"val.length, yval.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,207,"throw new DimensionMismatchException(xval.length, yval.length);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,209,hrow new MathException(LocalizedFormats.LOESS_EXPECTS_AT_LEAST_ONE_POINT);
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,213,throw new NoDataException();
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,212,"heckAllFiniteReal(xval, LocalizedFormats.NON_REAL_FINITE_ABSCISSA);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,213,"heckAllFiniteReal(yval, LocalizedFormats.NON_REAL_FINITE_ORDINATE);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,214,"heckAllFiniteReal(weights, LocalizedFormats.NON_REAL_FINITE_WEIGHT);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,216,checkAllFiniteReal(xval);
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,217,checkAllFiniteReal(yval);
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,218,checkAllFiniteReal(weights);
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,216,heckStrictlyIncreasing(xval);
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,220,MathUtils.checkOrder(xval);
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,229,"hrow new MathException(LocalizedFormats.TOO_SMALL_BANDWIDTH,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,230,", 2.0 / n, bandwidth);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,233,"throw new NumberIsTooSmallException(LocalizedFormats.BANDWIDTH,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,234,"bandwidthInPoints, 2, true);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,352, @throws MathException if some of the following conditions are false:
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,353, <ul>
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,354, <li> Arguments and values are of the same size that is greater than zero</li>
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,355, <li> The arguments are in a strictly increasing order</li>
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,356, <li> All arguments and values are finite real numbers</li>
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,357, </ul>
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,356,* @throws org.apache.commons.math.exception.NonMonotonousSequenceException
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,357,* if {@code xval} not sorted in strictly increasing order.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,358,* @throws DimensionMismatchException if {@code xval} and {@code yval} have
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,359,* different sizes.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,360,* @throws NoDataException if {@code xval} or {@code yval} has zero size.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,361,* @throws org.apache.commons.math.exception.NotFiniteNumberException if
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,362,* any of the arguments and values are not finite real numbers.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,363,* @throws NumberIsTooSmallException if the bandwidth is too small to
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,364,* accomodate the size of the input data (i.e. the bandwidth must be
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,365,* larger than 2/n).
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,359,"ublic final double[] smooth(final double[] xval, final double[] yval)"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,360,hrows MathException {
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,367,"public final double[] smooth(final double[] xval, final double[] yval) {"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,362,"hrow new MathException(LocalizedFormats.MISMATCHED_LOESS_ABSCISSA_ORDINATE_ARRAYS,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,363,"val.length, yval.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,369,"throw new DimensionMismatchException(xval.length, yval.length);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,374," points closest to xval[i-1], update the interval so that it embraces"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,375," the same number of points closest to xval[i], ignoring zero weights."
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,380,"* points closest to {@code xval[i-1]}, update the interval so that it"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,381,"* embraces the same number of points closest to {@code xval[i]},"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,382,* ignoring zero weights.
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,377, @param xval arguments array
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,378, @param weights weights array
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,379, @param i the index around which the new interval should be computed
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,380," @param bandwidthInterval a two-element array {left, right} such that: <p/>"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,381, <tt>(left==0 or xval[i] - xval[left-1] > xval[right] - xval[i])</tt>
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,382, <p/> and also <p/>
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,383, <tt>(right==xval.length-1 or xval[right+1] - xval[i] > xval[i] - xval[left])</tt>.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,384,* @param xval Arguments array.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,385,* @param weights Weights array.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,386,* @param i Index around which the new interval should be computed.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,387,"* @param bandwidthInterval a two-element array {left, right} such that:"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,388,* {@code (left==0 or xval[i] - xval[left-1] > xval[right] - xval[i])}
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,389,* and
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,390,* {@code (right==xval.length-1 or xval[right+1] - xval[i] > xval[i] - xval[left])}.
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,403, Returns the smallest index j such that j > i && (j==weights.length || weights[j] != 0)
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,404, @param weights weights array
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,405, @param i the index from which to start search; must be < weights.length
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,406, @return the smallest index j such that j > i && (j==weights.length || weights[j] != 0)
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,410,* Return the smallest index {@code j} such that
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,411,* {@code j > i && (j == weights.length || weights[j] != 0)}.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,413,* @param weights Weights array.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,414,* @param i Index from which to start search.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,415,* @return the smallest compliant index.
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,411,++;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,420,++j;
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,421, @param x the argument
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,422, @return (1-|x|^3)^3
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,430,* @param x Argument.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,431,* @return <code>(1 - |x|<sup>3</sup>)<sup>3</sup></code>.
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,432, @param values the values array
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,433, @param pattern pattern of the error message
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,434, @throws MathException if one of the values is not a finite real number
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,441,* @param values Values array.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,442,* @throws org.apache.commons.math.exception.NotFiniteNumberException
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,443,* if one of the values is not a finite real number.
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,436,"rivate static void checkAllFiniteReal(final double[] values, final Localizable pattern)"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,437,hrows MathException {
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,445,private static void checkAllFiniteReal(final double[] values) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,439,inal double x = values[i];
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,440,f (Double.isInfinite(x) || Double.isNaN(x)) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,441,"hrow new MathException(pattern, i, x);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,447, Check that elements of the abscissae array are in a strictly
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,448, increasing order.
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,450, @param xval the abscissae array
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,451, @throws MathException if the abscissae array
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,452, is not in a strictly increasing order
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,454,rivate static void checkStrictlyIncreasing(final double[] xval)
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,455,hrows MathException {
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,456,or (int i = 0; i < xval.length; ++i) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,457,f (i >= 1 && xval[i - 1] >= xval[i]) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,458,"hrow new MathException(LocalizedFormats.OUT_OF_ORDER_ABSCISSA_ARRAY,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,459," - 1, xval[i - 1], i, xval[i]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,447,MathUtils.checkFinite(values[i]);
False,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,21,mport org.apache.commons.math.MathException;
False,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,48, @throws MathException if arguments are invalid
True,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,47,* @throws org.apache.commons.math.exception.DimensionMismatchException if
True,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,48,* the array lengths are different.
True,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,49,* @throws org.apache.commons.math.exception.NumberIsTooSmallException if
True,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,50,* the number of points is less than 2.
True,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,51,* @throws org.apache.commons.math.exception.NonMonotonousSequenceException
True,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,52,* if two abscissae have the same value.
False,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,50,"ublic PolynomialFunctionLagrangeForm interpolate(double x[], double y[])"
False,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,51,hrows MathException {
True,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,54,"public PolynomialFunctionLagrangeForm interpolate(double x[], double y[]) {"
False,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,21,mport org.apache.commons.math.MathException;
False,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,76,inal double[][] fval)
False,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,77,hrows MathException {
True,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,75,final double[][] fval) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,21,mport org.apache.commons.math.MathException;
False,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,38,inal double[][][] fval)
False,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,39,hrows MathException {
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,37,final double[][][] fval) {
False,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,19,mport org.apache.commons.math.MathException;
False,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,31, Computes an interpolating function for the data set.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,30,* Compute an interpolating function for the dataset.
False,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,42, @throws org.apache.commons.math.exception.NoDataException if any of the arrays has zero length.
False,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,43, @throws org.apache.commons.math.exception.DimensionMismatchException if the array lengths are inconsistent.
False,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,44, @throws MathException if arguments violate assumptions made by the
False,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,45,         interpolation algorithm.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,41,* @throws org.apache.commons.math.exception.NoDataException if any of
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,42,* the arrays has zero length.
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,43,* @throws org.apache.commons.math.exception.DimensionMismatchException
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,44,* if the array lengths are inconsistent.
False,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,47,"rivariateRealFunction interpolate(double[] xval, double[] yval, double[] zval, double[][][] fval)"
False,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,48,hrows MathException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,46,"TrivariateRealFunction interpolate(double[] xval, double[] yval, double[] zval,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java,47,double[][][] fval);
False,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,19,mport org.apache.commons.math.MathException;
False,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,30, Computes an interpolating function for the data set.
False,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,31, @param xval the arguments for the interpolation points
False,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,32, @param yval the values for the interpolation points
False,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,33, @return a function which interpolates the data set
False,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,34, @throws MathException if arguments violate assumptions made by the
False,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,35,         interpolation algorithm
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,28,* Compute an interpolating function for the dataset.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,30,* @param xval Arguments for the interpolation points.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,31,* @param yval Values for the interpolation points.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,32,* @return a function which interpolates the dataset.
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,33,* @throws org.apache.commons.math.exception.MathRuntimeException if the
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,34,* arguments violate assumptions made by the interpolation algorithm.
False,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,37,"nivariateRealFunction interpolate(double xval[], double yval[])"
False,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,38,hrows MathException;
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java,36,"UnivariateRealFunction interpolate(double xval[], double yval[]);"
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,66, @throws IllegalArgumentException if input arrays are not valid
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,66,* @throws DimensionMismatchException if the array lengths are different.
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,67,* @throws NumberIsTooSmallException if the number of points is less than 2.
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,68,* @throws org.apache.commons.math.exception.NonMonotonousSequenceException
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,69,* if two abscissae have the same value.
False,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,39,bject ... arguments) {
False,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,40,"his(null, wrong, arguments);"
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,39,Object ... args) {
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,40,"this(null, wrong, args);"
False,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,52,bject ... arguments) {
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,52,Object ... args) {
False,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,54,"rong, arguments);"
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,54,"wrong, args);"
False,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,50,"ANDWIDTH_OUT_OF_INTERVAL(""bandwidth must be in the interval [0,1], but got {0}""),"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,50,"BANDWIDTH(""bandwidth ({0})""),"
False,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,163,"EGATIVE_ROBUSTNESS_ITERATIONS(""the number of robustness iterations must be non-negative, but got {0}""),"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,163,"ROBUSTNESS_ITERATIONS(""number of robustness iterations ({0})""),"
False,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,288,"OO_SMALL_BANDWIDTH(""the bandwidth must be large enough to accomodate at least 2 points. There are {0}  data points, and bandwidth must be at least {1}  but it is only {2}""),"
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,19,mport org.apache.commons.math.MathException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,20,import org.apache.commons.math.exception.NotPositiveException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,21,import org.apache.commons.math.exception.OutOfRangeException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,22,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,23,import org.apache.commons.math.exception.NoDataException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,24,import org.apache.commons.math.exception.NonMonotonousSequenceException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,25,import org.apache.commons.math.exception.NotFiniteNumberException;
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,26,import org.apache.commons.math.exception.NumberIsTooSmallException;
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,30,ublic void testOnOnePoint() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,37,public void testOnOnePoint() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,39,ublic void testOnTwoPoints() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,46,public void testOnTwoPoints() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,49,ublic void testOnStraightLine() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,56,public void testOnStraightLine() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,61,ublic void testOnDistortedSine() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,68,public void testOnDistortedSine() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,93,ublic void testIncreasingBandwidthIncreasesSmoothness() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,100,public void testIncreasingBandwidthIncreasesSmoothness() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,124,ublic void testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,131,public void testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,156,Test(expected=MathException.class)
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,157,ublic void testUnequalSizeArguments() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,163,@Test(expected=DimensionMismatchException.class)
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,164,public void testUnequalSizeArguments() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,161,Test(expected=MathException.class)
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,162,ublic void testEmptyData() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,168,@Test(expected=NoDataException.class)
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,169,public void testEmptyData() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,166,Test(expected=MathException.class)
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,167,ublic void testNonStrictlyIncreasing1() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,173,@Test(expected=NonMonotonousSequenceException.class)
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,174,public void testNonStrictlyIncreasing1() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,171,Test(expected=MathException.class)
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,172,ublic void testNonStrictlyIncreasing2() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,178,@Test(expected=NonMonotonousSequenceException.class)
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,179,public void testNonStrictlyIncreasing2() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,176,Test(expected=MathException.class)
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,177,ublic void testNotAllFiniteReal1() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,183,@Test(expected=NotFiniteNumberException.class)
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,184,public void testNotAllFiniteReal1() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,181,Test(expected=MathException.class)
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,182,ublic void testNotAllFiniteReal2() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,188,@Test(expected=NotFiniteNumberException.class)
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,189,public void testNotAllFiniteReal2() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,186,Test(expected=MathException.class)
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,187,ublic void testNotAllFiniteReal3() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,193,@Test(expected=NotFiniteNumberException.class)
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,194,public void testNotAllFiniteReal3() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,191,Test(expected=MathException.class)
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,192,ublic void testNotAllFiniteReal4() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,198,@Test(expected=NotFiniteNumberException.class)
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,199,public void testNotAllFiniteReal4() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,196,Test(expected=MathException.class)
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,197,ublic void testNotAllFiniteReal5() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,203,@Test(expected=NotFiniteNumberException.class)
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,204,public void testNotAllFiniteReal5() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,201,Test(expected=MathException.class)
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,202,ublic void testNotAllFiniteReal6() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,208,@Test(expected=NotFiniteNumberException.class)
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,209,public void testNotAllFiniteReal6() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,206,Test(expected=MathException.class)
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,207,ublic void testInsufficientBandwidth() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,213,@Test(expected=NumberIsTooSmallException.class)
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,214,public void testInsufficientBandwidth() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,212,Test(expected=MathException.class)
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,213,ublic void testCompletelyIncorrectBandwidth1() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,219,@Test(expected=OutOfRangeException.class)
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,220,public void testCompletelyIncorrectBandwidth1() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,217,Test(expected=MathException.class)
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,218,ublic void testCompletelyIncorrectBandwidth2() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,224,@Test(expected=OutOfRangeException.class)
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,225,public void testCompletelyIncorrectBandwidth2() {
False,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,223,ublic void testMath296withoutWeights() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,src/test/java/org/apache/commons/math/analysis/interpolation/LoessInterpolatorTest.java,230,public void testMath296withoutWeights() {
