is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,38,rivate long oneL = 1;
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,39,rivate long twoL = 2;
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,40,rivate long threeL = 3;
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,41,rivate int oneI = 1;
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,42,rivate int twoI = 2;
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,43,rivate int threeI=3;
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,44,rivate double tolerance = 10E-15;
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,38,private static final long ONE_LONG = 1L;
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,39,private static final long TWO_LONG = 2L;
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,40,private static final long THREE_LONG = 3L;
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,41,private static final int ONE = 1;
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,42,private static final int TWO = 2;
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,43,private static final int THREEE = 3 ;
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,44,private static final double TOLERANCE = 10E-15d;
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,56,.addValue(oneL);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,57,.addValue(twoL);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,57,f.addValue(ONE_LONG);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,58,f.addValue(TWO_LONG);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,59,.addValue(oneI);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,60,f.addValue(ONE);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,80,"ssert.assertEquals(""Z cumulative pct"", 0.5,  f.getCumPct(""Z""), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,81,"ssert.assertEquals(""z cumulative pct"", 1.0,  f.getCumPct(""z""), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,82,"ssert.assertEquals(""Ot cumulative pct"", 0.25,  f.getCumPct(""Ot""), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,81,"Assert.assertEquals(""Z cumulative pct"", 0.5,  f.getCumPct(""Z""), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,82,"Assert.assertEquals(""z cumulative pct"", 1.0,  f.getCumPct(""z""), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,83,"Assert.assertEquals(""Ot cumulative pct"", 0.25,  f.getCumPct(""Ot""), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,94,"ssert.assertEquals(""0 cum pct"", 0.2, f.getCumPct(0), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,95,"ssert.assertEquals(""1 pct"", 0.6, f.getPct(Integer.valueOf(1)), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,96,"ssert.assertEquals(""-2 cum pct"", 0, f.getCumPct(-2), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,97,"ssert.assertEquals(""10 cum pct"", 1, f.getCumPct(10), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,95,"Assert.assertEquals(""0 cum pct"", 0.2, f.getCumPct(0), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,96,"Assert.assertEquals(""1 pct"", 0.6, f.getPct(Integer.valueOf(1)), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,97,"Assert.assertEquals(""-2 cum pct"", 0, f.getCumPct(-2), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,98,"Assert.assertEquals(""10 cum pct"", 1, f.getCumPct(10), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,106,"ssert.assertEquals(""Z cumulative pct -- case insensitive"", 1 ,  f.getCumPct(""Z""), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,107,"ssert.assertEquals(""z cumulative pct -- case insensitive"", 1 ,  f.getCumPct(""z""), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,107,"Assert.assertEquals(""Z cumulative pct -- case insensitive"", 1 ,  f.getCumPct(""Z""), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,108,"Assert.assertEquals(""z cumulative pct -- case insensitive"", 1 ,  f.getCumPct(""z""), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,129,.addValue(oneL);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,130,.addValue(twoL);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,131,.addValue(oneI);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,132,.addValue(twoI);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,133,.addValue(threeL);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,134,.addValue(threeL);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,130,f.addValue(ONE_LONG);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,131,f.addValue(TWO_LONG);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,132,f.addValue(ONE);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,133,f.addValue(TWO);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,134,f.addValue(THREE_LONG);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,135,f.addValue(THREE_LONG);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,136,.addValue(threeI);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,137,"ssert.assertEquals(""one pct"",0.25,f.getPct(1),tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,138,"ssert.assertEquals(""two pct"",0.25,f.getPct(Long.valueOf(2)),tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,139,"ssert.assertEquals(""three pct"",0.5,f.getPct(threeL),tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,140,"ssert.assertEquals(""five pct"",0,f.getPct(5),tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,141,"ssert.assertEquals(""foo pct"",0,f.getPct(""foo""),tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,142,"ssert.assertEquals(""one cum pct"",0.25,f.getCumPct(1),tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,143,"ssert.assertEquals(""two cum pct"",0.50,f.getCumPct(Long.valueOf(2)),tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,144,"ssert.assertEquals(""Integer argument"",0.50,f.getCumPct(Integer.valueOf(2)),tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,145,"ssert.assertEquals(""three cum pct"",1.0,f.getCumPct(threeL),tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,146,"ssert.assertEquals(""five cum pct"",1.0,f.getCumPct(5),tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,147,"ssert.assertEquals(""zero cum pct"",0.0,f.getCumPct(0),tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,148,"ssert.assertEquals(""foo cum pct"",0,f.getCumPct(""foo""),tolerance);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,137,f.addValue(THREEE);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,138,"Assert.assertEquals(""one pct"",0.25,f.getPct(1),TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,139,"Assert.assertEquals(""two pct"",0.25,f.getPct(Long.valueOf(2)),TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,140,"Assert.assertEquals(""three pct"",0.5,f.getPct(THREE_LONG),TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,141,"Assert.assertEquals(""five pct"",0,f.getPct(5),TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,142,"Assert.assertEquals(""foo pct"",0,f.getPct(""foo""),TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,143,"Assert.assertEquals(""one cum pct"",0.25,f.getCumPct(1),TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,144,"Assert.assertEquals(""two cum pct"",0.50,f.getCumPct(Long.valueOf(2)),TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,145,"Assert.assertEquals(""Integer argument"",0.50,f.getCumPct(Integer.valueOf(2)),TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,146,"Assert.assertEquals(""three cum pct"",1.0,f.getCumPct(THREE_LONG),TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,147,"Assert.assertEquals(""five cum pct"",1.0,f.getCumPct(5),TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,148,"Assert.assertEquals(""zero cum pct"",0.0,f.getCumPct(0),TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,149,"Assert.assertEquals(""foo cum pct"",0,f.getCumPct(""foo""),TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,171,"ssert.assertEquals(""a pct"",0.5,f.getPct(aChar),tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,172,"ssert.assertEquals(""b cum pct"",1.0,f.getCumPct(bChar),tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,173,"ssert.assertEquals(""a string pct"",0.0,f.getPct(aString),tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,174,"ssert.assertEquals(""a string cum pct"",0.0,f.getCumPct(aString),tolerance);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,172,"Assert.assertEquals(""a pct"",0.5,f.getPct(aChar),TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,173,"Assert.assertEquals(""b cum pct"",1.0,f.getCumPct(bChar),TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,174,"Assert.assertEquals(""a string pct"",0.0,f.getPct(aString),TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,175,"Assert.assertEquals(""a string cum pct"",0.0,f.getCumPct(aString),TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,205,.addValue(oneL);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,206,.addValue(twoL);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,207,.addValue(oneI);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,208,.addValue(twoI);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,206,f.addValue(ONE_LONG);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,207,f.addValue(TWO_LONG);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,208,f.addValue(ONE);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,209,f.addValue(TWO);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,239,"ssert.assertEquals(""Integer 1 cumPct"", 0.5, f.getCumPct(1), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,240,"ssert.assertEquals(""Integer 1 cumPct"", 0.5, f.getCumPct(Long.valueOf(1)), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,241,"ssert.assertEquals(""Integer 1 cumPct"", 0.5, f.getCumPct(Integer.valueOf(1)), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,240,"Assert.assertEquals(""Integer 1 cumPct"", 0.5, f.getCumPct(1), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,241,"Assert.assertEquals(""Integer 1 cumPct"", 0.5, f.getCumPct(Long.valueOf(1)), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,242,"Assert.assertEquals(""Integer 1 cumPct"", 0.5, f.getCumPct(Integer.valueOf(1)), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,250,.addValue(oneL);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,251,.addValue(twoL);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,252,.addValue(oneI);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,253,.addValue(twoI);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,251,f.addValue(ONE_LONG);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,252,f.addValue(TWO_LONG);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,253,f.addValue(ONE);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,254,f.addValue(TWO);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,260,.addValue(oneL);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,261,f.addValue(ONE_LONG);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,262,.addValue(oneL);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,263,f.addValue(ONE_LONG);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,264,.addValue(twoI);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,265,f.addValue(TWO);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,271,".incrementValue(oneL, 1);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,272,"ssert.assertEquals(1, f.getCount(oneL));"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,272,"f.incrementValue(ONE_LONG, 1);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,273,"Assert.assertEquals(1, f.getCount(ONE_LONG));"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,274,".incrementValue(oneL, 4);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,275,"ssert.assertEquals(5, f.getCount(oneL));"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,275,"f.incrementValue(ONE_LONG, 4);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,276,"Assert.assertEquals(5, f.getCount(ONE_LONG));"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,277,".incrementValue(oneL, -5);"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,278,"ssert.assertEquals(0, f.getCount(oneL));"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,278,"f.incrementValue(ONE_LONG, -5);"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,279,"Assert.assertEquals(0, f.getCount(ONE_LONG));"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,284,.addValue(oneL);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,285,.addValue(twoL);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,286,.addValue(oneI);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,287,.addValue(twoI);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,285,f.addValue(ONE_LONG);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,286,f.addValue(TWO_LONG);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,287,f.addValue(ONE);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,288,f.addValue(TWO);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,290,"ssert.assertEquals(2, f.getCount(oneI));"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,291,"ssert.assertEquals(2, f.getCount(twoI));"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,291,"Assert.assertEquals(2, f.getCount(ONE));"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,292,"Assert.assertEquals(2, f.getCount(TWO));"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,294,.addValue(oneL);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,295,.addValue(threeL);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,296,.addValue(threeI);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,295,g.addValue(ONE_LONG);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,296,g.addValue(THREE_LONG);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,297,g.addValue(THREEE);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,299,"ssert.assertEquals(1, g.getCount(oneI));"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,300,"ssert.assertEquals(2, g.getCount(threeI));"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,300,"Assert.assertEquals(1, g.getCount(ONE));"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,301,"Assert.assertEquals(2, g.getCount(THREEE));"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,305,"ssert.assertEquals(3, f.getCount(oneI));"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,306,"ssert.assertEquals(2, f.getCount(twoI));"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,307,"ssert.assertEquals(2, f.getCount(threeI));"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,306,"Assert.assertEquals(3, f.getCount(ONE));"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,307,"Assert.assertEquals(2, f.getCount(TWO));"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,308,"Assert.assertEquals(2, f.getCount(THREEE));"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,313,.addValue(oneL);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,314,f.addValue(ONE_LONG);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,316,"ssert.assertEquals(1, f.getCount(oneI));"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,317,"ssert.assertEquals(0, f.getCount(twoI));"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,317,"Assert.assertEquals(1, f.getCount(ONE));"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,318,"Assert.assertEquals(0, f.getCount(TWO));"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,320,.addValue(twoL);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,321,g.addValue(TWO_LONG);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,323,.addValue(threeL);
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,324,h.addValue(THREE_LONG);
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,331,"ssert.assertEquals(1, f.getCount(oneI));"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,332,"ssert.assertEquals(1, f.getCount(twoI));"
False,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,333,"ssert.assertEquals(1, f.getCount(threeI));"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,332,"Assert.assertEquals(1, f.getCount(ONE));"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,333,"Assert.assertEquals(1, f.getCount(TWO));"
True,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,src/test/java/org/apache/commons/math3/stat/FrequencyTest.java,334,"Assert.assertEquals(1, f.getCount(THREEE));"
