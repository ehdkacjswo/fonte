is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,21,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,22,import org.apache.commons.math3.exception.NotPositiveException;
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,23,import org.apache.commons.math3.exception.OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,61, Compute the sum of this and v.
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,64,* Compute the sum of {@code this} and {@code v}.
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,63, @return this + v
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,64, @throws IllegalArgumentException if v is not the same size as this
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,66,* @return {@code this + v}
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,67,* @throws DimensionMismatchException if {@code v} is not the same size as
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,68,* {@code this}
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,66,ieldVector<T> add(FieldVector<T> v)
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,67,hrows IllegalArgumentException;
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,70,FieldVector<T> add(FieldVector<T> v) throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,70, Compute this minus v.
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,73,* Compute {@code this} minus {@code v}.
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,72, @return this + v
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,73, @throws IllegalArgumentException if v is not the same size as this
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,75,* @return {@code this + v}
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,76,* @throws DimensionMismatchException if {@code v} is not the same size as
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,77,* {@code this}
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,75,ieldVector<T> subtract(FieldVector<T> v)
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,76,hrows IllegalArgumentException;
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,79,FieldVector<T> subtract(FieldVector<T> v) throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,81, @return this + d
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,84,* @return {@code this + d}
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,89," @return for convenience, return this"
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,92,"* @return for convenience, return {@code this}"
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,96, @return this - d
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,99,* @return {@code this - d}
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,104," @return for convenience, return this"
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,107,"* @return for convenience, return {@code this}"
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,111, @return this * d
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,114,* @return {@code this * d}
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,119," @return for convenience, return this"
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,122,"* @return for convenience, return {@code this}"
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,126, @return this / d
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,129,* @return {@code this / d}
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,134," @return for convenience, return this"
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,137,"* @return for convenience, return {@code this}"
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,147," @return for convenience, return this"
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,150,"* @return for convenience, return {@code this}"
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,154, @return a vector containing this[i] * v[i] for all i
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,155, @throws IllegalArgumentException if v is not the same size as this
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,157,* @return a vector containing {@code this[i] * v[i]} for all {@code i}
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,158,* @throws DimensionMismatchException if {@code v} is not the same size as
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,159,* {@code this}
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,157,ieldVector<T> ebeMultiply(FieldVector<T> v) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,161,FieldVector<T> ebeMultiply(FieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,162,throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,162, @return a vector containing this[i] / v[i] for all i
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,163, @throws IllegalArgumentException if v is not the same size as this
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,167,* @return a vector containing {@code this[i] / v[i]} for all {@code i}
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,168,* @throws DimensionMismatchException if {@code v} is not the same size as
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,169,* {@code this}
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,165,ieldVector<T> ebeDivide(FieldVector<T> v) throws IllegalArgumentException;
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,171,FieldVector<T> ebeDivide(FieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,172,throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,176, @return the scalar dot product between instance and v
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,177, @exception IllegalArgumentException if v is not the same size as this
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,183,* @return the scalar dot product of {@code this} and {@code v}
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,184,* @throws DimensionMismatchException if {@code v} is not the same size as
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,185,* {@code this}
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,179, dotProduct(FieldVector<T> v)
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,180,hrows IllegalArgumentException;
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,187,T dotProduct(FieldVector<T> v) throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,183, @param v vector onto which instance must be projected
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,184, @return projection of the instance onto v
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,185, @throws IllegalArgumentException if v is not the same size as this
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,190,* @param v vector onto which {@code this} must be projected
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,191,* @return projection of {@code this} onto {@code v}
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,192,* @throws DimensionMismatchException if {@code v} is not the same size as
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,193,* {@code this}
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,187,ieldVector<T> projection(FieldVector<T> v)
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,188,hrows IllegalArgumentException;
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,195,FieldVector<T> projection(FieldVector<T> v) throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,202, @throws org.apache.commons.math3.exception.OutOfRangeException if the
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,203, index is not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,209,* @throws OutOfRangeException if the index is not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,206, getEntry(int index);
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,212,T getEntry(int index) throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,212, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,213, if the index is inconsistent with vector size.
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,218,* @throws OutOfRangeException if the index is not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,216,"oid setEntry(int index, T value);"
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,221,"void setEntry(int index, T value) throws OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,243, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,244, if the index is inconsistent with vector size.
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,248,* @throws OutOfRangeException if the index is not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,249,* @throws NotPositiveException if the number of elements if not positive.
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,246,"ieldVector<T> getSubVector(int index, int n);"
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,251,"FieldVector<T> getSubVector(int index, int n)"
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,252,"throws OutOfRangeException, NotPositiveException;"
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,252, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,253, if the index is inconsistent with vector size.
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,258,* @throws OutOfRangeException if the index is not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,255,"oid setSubVector(int index, FieldVector<T> v);"
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,260,"void setSubVector(int index, FieldVector<T> v) throws OutOfRangeException;"
