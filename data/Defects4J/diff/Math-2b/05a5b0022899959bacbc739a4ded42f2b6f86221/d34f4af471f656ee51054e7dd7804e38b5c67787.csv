is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,102,/** The current estimate of the norm of the residual. */
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,103,private final double rnorm;
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,118,* @param rnorm the norm of the current estimate of the residual
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,116,"ublic ConjugateGradientEvent(final Object source, final int iterations, final RealVector x, final RealVector b, final RealVector r) {"
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,120,"public ConjugateGradientEvent(final Object source, final int iterations,"
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,121,"final RealVector x, final RealVector b, final RealVector r,"
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,122,final double rnorm) {
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,127,this.rnorm = rnorm;
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,130,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,131,@Override
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,132,public double getNormOfResidual() {
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,133,return rnorm;
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,209,inal double r2max = delta * delta * b.dotProduct(b);
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,222,final double rmax = delta * b.getNorm();
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,221,ouble r2 = r.dotProduct(r);
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,234,double rnorm = r.getNorm();
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,229,"vt = new ConjugateGradientEvent(this, manager.getIterations(), x, b, r);"
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,242,"evt = new ConjugateGradientEvent(this, manager.getIterations(), x, b, r, rnorm);"
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,231,f (r2 <= r2max) {
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,244,if (rnorm <= rmax) {
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,238,"vt = new ConjugateGradientEvent(this, manager.getIterations(), x, b, r);"
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,251,"evt = new ConjugateGradientEvent(this, manager.getIterations(), x, b, r, rnorm);"
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,271,2 = r.dotProduct(r);
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,272,"vt = new ConjugateGradientEvent(this, manager.getIterations(), x, b, r);"
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,284,rnorm = r.getNorm();
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,285,"evt = new ConjugateGradientEvent(this, manager.getIterations(), x, b, r, rnorm);"
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,274,f (r2 <= r2max) {
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,287,if (rnorm <= rmax) {
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,57,* Returns the norm of the residual. The returned value is not required to
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,58,"* be <em>exact</em>. Instead, the norm of the so-called <em>updated</em>"
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,59,"* residual (if available) should be returned. For example, the"
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,60,* {@link ConjugateGradient conjugate gradient} method computes a sequence
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,61,"* of residuals, the norm of which is cheap to compute. However, due to"
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,62,"* accumulation of round-off errors, this residual might differ from the"
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,63,* true residual after some iterations. See e.g. A. Greenbaum and
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,64,"* Z. Strakos, <em>Predicting the Behavior of Finite Precision Lanzos and"
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,65,"* Conjugate Gradient Computations</em>, Technical Report 538, Department of"
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,66,"* Computer Science, New York University, 1991 (available"
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,67,"* <a href=""http://www.archive.org/details/predictingbehavi00gree"">here</a>)."
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,69,* @return an estimate of the norm of the residual
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,71,public abstract double getNormOfResidual();
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,667,rivate static final long serialVersionUID = 20120128L;
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,667,private static final long serialVersionUID = 2012012801L;
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,684,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,690,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,691,@Override
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,692,public double getNormOfResidual() {
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,693,"return FastMath.min(state.cgnorm, state.lqnorm);"
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,23,import org.apache.commons.math.util.FastMath;
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,178,ealVector v = ((ProvidesResidual)e).getResidual();
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,179,RealVector v = ((ProvidesResidual) e).getResidual();
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,502,@Test
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,503,public void testUnpreconditionedNormOfResidual() {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,504,final int n = 5;
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,505,final int maxIterations = 100;
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,506,final RealLinearOperator a = new HilbertMatrix(n);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,507,final IterativeLinearSolver solver;
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,508,final IterationListener listener = new IterationListener() {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,510,private void doTestNormOfResidual(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,511,final IterativeLinearSolverEvent evt;
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,512,evt = (IterativeLinearSolverEvent) e;
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,513,final RealVector x = evt.getSolution();
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,514,final RealVector b = evt.getRightHandSideVector();
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,515,final RealVector r = b.subtract(a.operate(x));
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,516,final double rnorm = r.getNorm();
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,517,"Assert.assertEquals(""iteration performed (residual)"","
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,518,"rnorm, evt.getNormOfResidual(),"
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,519,"FastMath.max(1E-5 * rnorm, 1E-10));"
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,522,public void initializationPerformed(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,523,doTestNormOfResidual(e);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,526,public void iterationPerformed(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,527,doTestNormOfResidual(e);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,530,public void iterationStarted(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,531,doTestNormOfResidual(e);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,534,public void terminationPerformed(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,535,doTestNormOfResidual(e);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,538,"solver = new ConjugateGradient(maxIterations, 1E-10, true);"
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,539,solver.getIterationManager().addIterationListener(listener);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,540,final RealVector b = new ArrayRealVector(n);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,541,for (int j = 0; j < n; j++) {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,542,b.set(0.);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,543,"b.setEntry(j, 1.);"
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,544,"solver.solve(a, b);"
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,548,@Test
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,549,public void testPreconditionedNormOfResidual() {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,550,final int n = 5;
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,551,final int maxIterations = 100;
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,552,final RealLinearOperator a = new HilbertMatrix(n);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,553,final InvertibleRealLinearOperator m = JacobiPreconditioner.create(a);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,554,final PreconditionedIterativeLinearSolver solver;
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,555,final IterationListener listener = new IterationListener() {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,557,private void doTestNormOfResidual(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,558,final IterativeLinearSolverEvent evt;
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,559,evt = (IterativeLinearSolverEvent) e;
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,560,final RealVector x = evt.getSolution();
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,561,final RealVector b = evt.getRightHandSideVector();
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,562,final RealVector r = b.subtract(a.operate(x));
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,563,final double rnorm = r.getNorm();
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,564,"Assert.assertEquals(""iteration performed (residual)"","
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,565,"rnorm, evt.getNormOfResidual(),"
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,566,"FastMath.max(1E-5 * rnorm, 1E-10));"
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,569,public void initializationPerformed(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,570,doTestNormOfResidual(e);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,573,public void iterationPerformed(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,574,doTestNormOfResidual(e);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,577,public void iterationStarted(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,578,doTestNormOfResidual(e);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,581,public void terminationPerformed(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,582,doTestNormOfResidual(e);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,585,"solver = new ConjugateGradient(maxIterations, 1E-10, true);"
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,586,solver.getIterationManager().addIterationListener(listener);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,587,final RealVector b = new ArrayRealVector(n);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,588,for (int j = 0; j < n; j++) {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,589,b.set(0.);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,590,"b.setEntry(j, 1.);"
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,591,"solver.solve(a, m, b);"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,628,@Test
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,629,public void testUnpreconditionedNormOfResidual() {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,630,final int n = 5;
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,631,final int maxIterations = 100;
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,632,final RealLinearOperator a = new HilbertMatrix(n);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,633,final IterativeLinearSolver solver;
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,634,final IterationListener listener = new IterationListener() {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,636,private void doTestNormOfResidual(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,637,final IterativeLinearSolverEvent evt;
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,638,evt = (IterativeLinearSolverEvent) e;
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,639,final RealVector x = evt.getSolution();
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,640,final RealVector b = evt.getRightHandSideVector();
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,641,final RealVector r = b.subtract(a.operate(x));
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,642,final double rnorm = r.getNorm();
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,643,"Assert.assertEquals(""iteration performed (residual)"","
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,644,"rnorm, evt.getNormOfResidual(),"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,645,"FastMath.max(1E-5 * rnorm, 1E-10));"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,648,public void initializationPerformed(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,649,doTestNormOfResidual(e);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,652,public void iterationPerformed(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,653,doTestNormOfResidual(e);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,656,public void iterationStarted(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,657,doTestNormOfResidual(e);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,660,public void terminationPerformed(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,661,doTestNormOfResidual(e);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,664,"solver = new ConjugateGradient(maxIterations, 1E-10, true);"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,665,solver.getIterationManager().addIterationListener(listener);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,666,final RealVector b = new ArrayRealVector(n);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,667,for (int j = 0; j < n; j++) {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,668,b.set(0.);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,669,"b.setEntry(j, 1.);"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,670,"solver.solve(a, b);"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,674,@Test
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,675,public void testPreconditionedNormOfResidual() {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,676,final int n = 5;
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,677,final int maxIterations = 100;
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,678,final RealLinearOperator a = new HilbertMatrix(n);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,679,final InvertibleRealLinearOperator m = JacobiPreconditioner.create(a);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,680,final PreconditionedIterativeLinearSolver solver;
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,681,final IterationListener listener = new IterationListener() {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,683,private void doTestNormOfResidual(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,684,final IterativeLinearSolverEvent evt;
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,685,evt = (IterativeLinearSolverEvent) e;
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,686,final RealVector x = evt.getSolution();
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,687,final RealVector b = evt.getRightHandSideVector();
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,688,final RealVector r = b.subtract(a.operate(x));
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,689,final double rnorm = r.getNorm();
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,690,"Assert.assertEquals(""iteration performed (residual)"","
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,691,"rnorm, evt.getNormOfResidual(),"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,692,"FastMath.max(1E-5 * rnorm, 1E-10));"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,695,public void initializationPerformed(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,696,doTestNormOfResidual(e);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,699,public void iterationPerformed(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,700,doTestNormOfResidual(e);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,703,public void iterationStarted(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,704,doTestNormOfResidual(e);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,707,public void terminationPerformed(final IterationEvent e) {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,708,doTestNormOfResidual(e);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,711,"solver = new ConjugateGradient(maxIterations, 1E-10, true);"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,712,solver.getIterationManager().addIterationListener(listener);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,713,final RealVector b = new ArrayRealVector(n);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,714,for (int j = 0; j < n; j++) {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,715,b.set(0.);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,716,"b.setEntry(j, 1.);"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,717,"solver.solve(a, m, b);"
