is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/ArgumentOutsideDomainException.java,src/java/org/apache/commons/math/ArgumentOutsideDomainException.java,21,* Error thrown when a method is called with an out of bounds argument.
True,src/java/org/apache/commons/math/ArgumentOutsideDomainException.java,src/java/org/apache/commons/math/ArgumentOutsideDomainException.java,23,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/MathException.java,src/java/org/apache/commons/math/MathException.java,57,/** Cache for resources bundle. */
True,src/java/org/apache/commons/math/MaxIterationsExceededException.java,src/java/org/apache/commons/math/MaxIterationsExceededException.java,23,* Error thrown when a numerical computation exceeds its allowed
True,src/java/org/apache/commons/math/MaxIterationsExceededException.java,src/java/org/apache/commons/math/MaxIterationsExceededException.java,24,* number of iterations.
True,src/java/org/apache/commons/math/MaxIterationsExceededException.java,src/java/org/apache/commons/math/MaxIterationsExceededException.java,26,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,33,/** Get the non-translated/translated messages arrays from this resource bundle.
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,34,* @return non-translated/translated messages arrays
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,40,/** Non-translated/translated messages arrays. */
True,src/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java,src/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java,36,/** Distribution used to compute normal approximation. */
True,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,26,* Base class for implementing estimators.
True,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,27,* <p>This base class handles the boilerplates methods associated to thresholds
True,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,28,"* settings, jacobian and error estimation.</p>"
True,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,29,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,238,* Solve an estimation problem.
True,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,240,* <p>The method should set the parameters of the problem to several
True,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,241,* trial values until it reaches convergence. If this method returns
True,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,242,"* normally (i.e. without throwing an exception), then the best"
True,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,243,* estimate of the parameters can be retrieved from the problem
True,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,244,"* itself, through the {@link EstimationProblem#getAllParameters"
True,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,245,* EstimationProblem.getAllParameters} method.</p>
True,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,247,* @param problem estimation problem to solve
True,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,248,* @exception EstimationException if the problem cannot be solved
True,src/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/java/org/apache/commons/math/estimation/EstimatedParameter.java,120,/** Serializable version identifier */
True,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,173,/** Threshold for cost steady state detection. */
True,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,176,/** Threshold for cost convergence. */
False,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,176,rivate static final long serialVersionUID = 5485001826076289109L;
True,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,179,/** Serializable version identifier */
True,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,180,private static final long serialVersionUID = 5485001826076289109L;
True,src/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,862,/** Serializable version identifier */
True,src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,52,* Get all the parameters of the problem.
True,src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,53,* @return parameters
True,src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,60,* Get the unbound parameters of the problem.
True,src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,61,* @return unbound parameters
True,src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,80,* Get the measurements of an estimation problem.
True,src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,81,* @return measurements
True,src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,87,/** Add a parameter to the problem.
True,src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,88,* @param p parameter to add
True,src/java/org/apache/commons/math/estimation/WeightedMeasurement.java,src/java/org/apache/commons/math/estimation/WeightedMeasurement.java,157,/** Measurement weight. */
True,src/java/org/apache/commons/math/estimation/WeightedMeasurement.java,src/java/org/apache/commons/math/estimation/WeightedMeasurement.java,160,/** Value of the measurements. */
True,src/java/org/apache/commons/math/estimation/WeightedMeasurement.java,src/java/org/apache/commons/math/estimation/WeightedMeasurement.java,163,/** Ignore measurement indicator. */
True,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,23,* Error thrown when a double value cannot be converted to a fraction
True,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,24,* in the allowed number of iterations.
True,src/java/org/apache/commons/math/fraction/FractionConversionException.java,src/java/org/apache/commons/math/fraction/FractionConversionException.java,26,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,40,/** Serializable version identifier */
True,src/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,41,/** Serializable version identifier */
True,src/java/org/apache/commons/math/geometry/Rotation.java,src/java/org/apache/commons/math/geometry/Rotation.java,1031,/** Serializable version identifier */
True,src/java/org/apache/commons/math/geometry/Vector3D.java,src/java/org/apache/commons/math/geometry/Vector3D.java,357,/** Serializable version identifier */
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1099, @see Object#toString()
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1098,* Get a string representation for this matrix.
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,1099,* @return a string representation for this matrix
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,850, @see java.lang.Object#toString()
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,849,* Get a string representation for this matrix.
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,850,* @return a string representation for this matrix
True,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,357,/** Write the instance to an output channel.
True,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,358,* @param out output channel
True,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,359,* @exception IOException if the instance cannot be written
True,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,364,/** Read the instance from an input channel.
True,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,365,* @param in input channel
True,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java,366,* @exception IOException if the instance cannot be read
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,327,/** Integrate the differential equations up to the given time.
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,328,* <p>This method solves an Initial Value Problem (IVP).</p>
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,329,* <p>Since this method stores some internal state variables made
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,330,* available in its public interface during integration ({@link
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,331,"* #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>"
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,332,* @param equations differential equations to integrate
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,333,* @param t0 initial time
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,334,* @param y0 initial value of the state vector at t0
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,335,* @param t target time for the integration
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,336,* (can be set to a value smaller than <code>t0</code> for backward integration)
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,337,* @param y placeholder where to put the state vector at each successful
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,338,"*  step (and hence at the end of integration), can be the same object as y0"
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,339,* @throws IntegratorException if the integrator cannot perform integration
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,340,* @throws DerivativeException this exception is propagated to the caller if
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,341,* the underlying user function triggers one
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,348,/** Get the current value of the step start time t<sub>i</sub>.
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,349,* <p>This method can be called during integration (typically by
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,350,* the object implementing the {@link FirstOrderDifferentialEquations
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,351,* differential equations} problem) if the value of the current step that
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,352,* is attempted is needed.</p>
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,353,* <p>The result is undefined if the method is called outside of
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,354,* calls to {@link #integrate}</p>
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,355,* @return current value of the step start time t<sub>i</sub>
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,361,/** Get the current signed value of the integration stepsize.
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,362,* <p>This method can be called during integration (typically by
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,363,* the object implementing the {@link FirstOrderDifferentialEquations
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,364,* differential equations} problem) if the signed value of the current stepsize
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,365,* that is tried is needed.</p>
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,366,* <p>The result is undefined if the method is called outside of
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,367,* calls to {@link #integrate}</p>
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,368,* @return current signed value of the stepsize
True,src/java/org/apache/commons/math/ode/ClassicalRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/ClassicalRungeKuttaIntegrator.java,49,/** Integrator method name. */
True,src/java/org/apache/commons/math/ode/ClassicalRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/ClassicalRungeKuttaIntegrator.java,52,/** Time steps Butcher array. */
True,src/java/org/apache/commons/math/ode/ClassicalRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/ClassicalRungeKuttaIntegrator.java,57,/** Internal weights Butcher array. */
True,src/java/org/apache/commons/math/ode/ClassicalRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/ClassicalRungeKuttaIntegrator.java,64,/** Propagation weights Butcher array. */
True,src/java/org/apache/commons/math/ode/ClassicalRungeKuttaStepInterpolator.java,src/java/org/apache/commons/math/ode/ClassicalRungeKuttaStepInterpolator.java,107,/** Serializable version identifier */
True,src/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/java/org/apache/commons/math/ode/ContinuousOutputModel.java,374,/** Serializable version identifier */
True,src/java/org/apache/commons/math/ode/DerivativeException.java,src/java/org/apache/commons/math/ode/DerivativeException.java,47,/** Serializable version identifier */
True,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,49,/** Integrator method name. */
True,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,52,/** Time steps Butcher array. */
True,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,57,/** Internal weights Butcher array. */
True,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,67,/** Propagation weights Butcher array. */
True,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,72,"/** Error array, element 1. */"
True,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,75,"// element 2 is zero, so it is neither stored nor used"
True,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,77,"/** Error array, element 3. */"
True,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,80,"/** Error array, element 4. */"
True,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,83,"/** Error array, element 5. */"
True,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,86,"/** Error array, element 6. */"
True,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java,89,"/** Error array, element 7. */"
False,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,175,"/ last row of the Butcher-array internal weights, note that a71 is null"
True,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,175,"/** Last row of the Butcher-array internal weights, element 0. */"
True,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,178,"// element 1 is zero, so it is neither stored nor used"
True,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,180,"/** Last row of the Butcher-array internal weights, element 2. */"
True,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,183,"/** Last row of the Butcher-array internal weights, element 3. */"
True,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,186,"/** Last row of the Butcher-array internal weights, element 4. */"
True,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,189,"/** Last row of the Butcher-array internal weights, element 5. */"
False,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,182,"/ dense output of Shampine (1986), note that d1 is null"
True,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,192,"/** Shampine (1986) Dense output, element 0. */"
True,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,195,"// element 1 is zero, so it is neither stored nor used"
True,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,197,"/** Shampine (1986) Dense output, element 2. */"
True,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,200,"/** Shampine (1986) Dense output, element 3. */"
True,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,203,"/** Shampine (1986) Dense output, element 4. */"
True,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,206,"/** Shampine (1986) Dense output, element 5. */"
True,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,209,"/** Shampine (1986) Dense output, element 6. */"
True,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java,212,/** Serializable version identifier */
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,57,/** Integrator method name. */
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,59,rivate static final double sqrt6 = Math.sqrt(6.0);
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,60,/** Time steps Butcher array. */
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,62,"12.0 - 2.0 * sqrt6) / 135.0, (6.0 - sqrt6) / 45.0, (6.0 - sqrt6) / 30.0,"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,63,"6.0 + sqrt6) / 30.0, 1.0/3.0, 1.0/4.0, 4.0/13.0, 127.0/195.0, 3.0/5.0,"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,62,"(12.0 - 2.0 * Math.sqrt(6.0)) / 135.0, (6.0 - Math.sqrt(6.0)) / 45.0, (6.0 - Math.sqrt(6.0)) / 30.0,"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,63,"(6.0 + Math.sqrt(6.0)) / 30.0, 1.0/3.0, 1.0/4.0, 4.0/13.0, 127.0/195.0, 3.0/5.0,"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,67,/** Internal weights Butcher array. */
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,70,"(12.0 - 2.0 * sqrt6) / 135.0},"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,71,"{(12.0 - 2.0 * Math.sqrt(6.0)) / 135.0},"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,73,"(6.0 - sqrt6) / 180.0, (6.0 - sqrt6) / 60.0},"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,74,"{(6.0 - Math.sqrt(6.0)) / 180.0, (6.0 - Math.sqrt(6.0)) / 60.0},"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,76,"(6.0 - sqrt6) / 120.0, 0.0, (6.0 - sqrt6) / 40.0},"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,77,"{(6.0 - Math.sqrt(6.0)) / 120.0, 0.0, (6.0 - Math.sqrt(6.0)) / 40.0},"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,79,"(462.0 + 107.0 * sqrt6) / 3000.0, 0.0,"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,80,"-402.0 - 197.0 * sqrt6) / 1000.0, (168.0 + 73.0 * sqrt6) / 375.0},"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,80,"{(462.0 + 107.0 * Math.sqrt(6.0)) / 3000.0, 0.0,"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,81,"(-402.0 - 197.0 * Math.sqrt(6.0)) / 1000.0, (168.0 + 73.0 * Math.sqrt(6.0)) / 375.0},"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,83,"1.0 / 27.0, 0.0, 0.0, (16.0 + sqrt6) / 108.0, (16.0 - sqrt6) / 108.0},"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,84,"{1.0 / 27.0, 0.0, 0.0, (16.0 + Math.sqrt(6.0)) / 108.0, (16.0 - Math.sqrt(6.0)) / 108.0},"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,86,"19.0 / 512.0, 0.0, 0.0, (118.0 + 23.0 * sqrt6) / 1024.0,"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,87,"118.0 - 23.0 * sqrt6) / 1024.0, -9.0 / 512.0},"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,87,"{19.0 / 512.0, 0.0, 0.0, (118.0 + 23.0 * Math.sqrt(6.0)) / 1024.0,"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,88,"(118.0 - 23.0 * Math.sqrt(6.0)) / 1024.0, -9.0 / 512.0},"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,90,"13772.0 / 371293.0, 0.0, 0.0, (51544.0 + 4784.0 * sqrt6) / 371293.0,"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,91,"51544.0 - 4784.0 * sqrt6) / 371293.0, -5688.0 / 371293.0, 3072.0 / 371293.0},"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,91,"{13772.0 / 371293.0, 0.0, 0.0, (51544.0 + 4784.0 * Math.sqrt(6.0)) / 371293.0,"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,92,"(51544.0 - 4784.0 * Math.sqrt(6.0)) / 371293.0, -5688.0 / 371293.0, 3072.0 / 371293.0},"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,95,"-1324889724104.0 - 318801444819.0 * sqrt6) / 626556937500.0,"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,96,"-1324889724104.0 + 318801444819.0 * sqrt6) / 626556937500.0,"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,96,"(-1324889724104.0 - 318801444819.0 * Math.sqrt(6.0)) / 626556937500.0,"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,97,"(-1324889724104.0 + 318801444819.0 * Math.sqrt(6.0)) / 626556937500.0,"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,102,"-4521408.0 - 1137963.0 * sqrt6) / 2937500.0,"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,103,"-4521408.0 + 1137963.0 * sqrt6) / 2937500.0,"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,103,"(-4521408.0 - 1137963.0 * Math.sqrt(6.0)) / 2937500.0,"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,104,"(-4521408.0 + 1137963.0 * Math.sqrt(6.0)) / 2937500.0,"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,109,"354216.0 + 94326.0 * sqrt6) / 112847.0,"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,110,"354216.0 - 94326.0 * sqrt6) / 112847.0,"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,110,"(354216.0 + 94326.0 * Math.sqrt(6.0)) / 112847.0,"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,111,"(354216.0 - 94326.0 * Math.sqrt(6.0)) / 112847.0,"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,117,"-3457480.0 - 960905.0 * sqrt6) / 551636.0,"
False,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,118,"-3457480.0 + 960905.0 * sqrt6) / 551636.0,"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,118,"(-3457480.0 - 960905.0 * Math.sqrt(6.0)) / 551636.0,"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,119,"(-3457480.0 + 960905.0 * Math.sqrt(6.0)) / 551636.0,"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,134,/** Propagation weights Butcher array. */
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,151,"/** First error weights array, element 1. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,154,"// elements 2 to 5 are zero, so they are neither stored nor used"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,156,"/** First error weights array, element 6. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,159,"/** First error weights array, element 7. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,162,"/** First error weights array, element 8. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,165,"/** First error weights array, element 9. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,168,"/** First error weights array, element 10. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,171,"/** First error weights array, element 11. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,174,"/** First error weights array, element 12. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,178,"/** Second error weights array, element 1. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,181,"// elements 2 to 5 are zero, so they are neither stored nor used"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,183,"/** Second error weights array, element 6. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,186,"/** Second error weights array, element 7. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,189,"/** Second error weights array, element 8. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,192,"/** Second error weights array, element 9. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,195,"/** Second error weights array, element 10. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,198,"/** Second error weights array, element 11. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java,201,"/** Second error weights array, element 12. */"
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,313,"/ external weights of the integrator,"
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,314,/ note that b_02 through b_05 are null
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,315,rivate static double b_01 =         104257.0 / 1920240.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,316,rivate static double b_06 =        3399327.0 / 763840.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,317,rivate static double b_07 =       66578432.0 / 35198415.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,318,rivate static double b_08 =    -1674902723.0 / 288716400.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,319,rivate static double b_09 = 54980371265625.0 / 176692375811392.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,320,rivate static double b_10 =        -734375.0 / 4826304.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,321,rivate static double b_11 =      171414593.0 / 851261400.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,322,rivate static double b_12 =         137909.0 / 3084480.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,324,/ k14 for interpolation only
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,325,rivate static double c14    = 1.0 / 10.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,327,rivate static double k14_01 =       13481885573.0 / 240030000000.0      - b_01;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,328,rivate static double k14_06 =                 0.0                       - b_06;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,329,rivate static double k14_07 =      139418837528.0 / 549975234375.0      - b_07;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,330,rivate static double k14_08 =   -11108320068443.0 / 45111937500000.0    - b_08;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,331,rivate static double k14_09 = -1769651421925959.0 / 14249385146080000.0 - b_09;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,332,rivate static double k14_10 =          57799439.0 / 377055000.0         - b_10;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,333,rivate static double k14_11 =      793322643029.0 / 96734250000000.0    - b_11;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,334,rivate static double k14_12 =        1458939311.0 / 192780000000.0      - b_12;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,335,rivate static double k14_13 =             -4149.0 / 500000.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,337,/ k15 for interpolation only
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,338,rivate static double c15    = 1.0 / 5.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,340,rivate static double k15_01 =     1595561272731.0 / 50120273500000.0    - b_01;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,341,rivate static double k15_06 =      975183916491.0 / 34457688031250.0    - b_06;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,342,rivate static double k15_07 =    38492013932672.0 / 718912673015625.0   - b_07;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,343,rivate static double k15_08 = -1114881286517557.0 / 20298710767500000.0 - b_08;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,344,rivate static double k15_09 =                 0.0                       - b_09;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,345,rivate static double k15_10 =                 0.0                       - b_10;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,346,rivate static double k15_11 =    -2538710946863.0 / 23431227861250000.0 - b_11;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,347,rivate static double k15_12 =        8824659001.0 / 23066716781250.0    - b_12;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,348,rivate static double k15_13 =      -11518334563.0 / 33831184612500.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,349,rivate static double k15_14 =        1912306948.0 / 13532473845.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,351,/ k16 for interpolation only
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,352,rivate static double c16    = 7.0 / 9.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,354,rivate static double k16_01 =      -13613986967.0 / 31741908048.0       - b_01;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,355,rivate static double k16_06 =       -4755612631.0 / 1012344804.0        - b_06;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,356,rivate static double k16_07 =    42939257944576.0 / 5588559685701.0     - b_07;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,357,rivate static double k16_08 =    77881972900277.0 / 19140370552944.0    - b_08;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,358,rivate static double k16_09 =    22719829234375.0 / 63689648654052.0    - b_09;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,359,rivate static double k16_10 =                 0.0                       - b_10;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,360,rivate static double k16_11 =                 0.0                       - b_11;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,361,rivate static double k16_12 =                 0.0                       - b_12;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,362,rivate static double k16_13 =       -1199007803.0 / 857031517296.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,363,rivate static double k16_14 =      157882067000.0 / 53564469831.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,364,rivate static double k16_15 =     -290468882375.0 / 31741908048.0;
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,366,/ interpolation weights
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,367,/ (beware that only the non-null values are in the table)
False,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,368,rivate static double[][] d = {
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,313,"/** Propagation weights, element 1. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,314,private static final double b_01 =         104257.0 / 1920240.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,316,"// elements 2 to 5 are zero, so they are neither stored nor used"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,318,"/** Propagation weights, element 6. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,319,private static final double b_06 =        3399327.0 / 763840.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,321,"/** Propagation weights, element 7. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,322,private static final double b_07 =       66578432.0 / 35198415.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,324,"/** Propagation weights, element 8. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,325,private static final double b_08 =    -1674902723.0 / 288716400.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,327,"/** Propagation weights, element 9. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,328,private static final double b_09 = 54980371265625.0 / 176692375811392.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,330,"/** Propagation weights, element 10. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,331,private static final double b_10 =        -734375.0 / 4826304.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,333,"/** Propagation weights, element 11. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,334,private static final double b_11 =      171414593.0 / 851261400.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,336,"/** Propagation weights, element 12. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,337,private static final double b_12 =         137909.0 / 3084480.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,339,/** Time step for stage 14 (interpolation only). */
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,340,private static final double c14    = 1.0 / 10.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,342,"/** Internal weights for stage 14, element 1. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,343,private static final double k14_01 =       13481885573.0 / 240030000000.0      - b_01;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,345,"// elements 2 to 5 are zero, so they are neither stored nor used"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,347,"/** Internal weights for stage 14, element 6. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,348,private static final double k14_06 =                 0.0                       - b_06;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,350,"/** Internal weights for stage 14, element 7. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,351,private static final double k14_07 =      139418837528.0 / 549975234375.0      - b_07;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,353,"/** Internal weights for stage 14, element 8. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,354,private static final double k14_08 =   -11108320068443.0 / 45111937500000.0    - b_08;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,356,"/** Internal weights for stage 14, element 9. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,357,private static final double k14_09 = -1769651421925959.0 / 14249385146080000.0 - b_09;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,359,"/** Internal weights for stage 14, element 10. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,360,private static final double k14_10 =          57799439.0 / 377055000.0         - b_10;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,362,"/** Internal weights for stage 14, element 11. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,363,private static final double k14_11 =      793322643029.0 / 96734250000000.0    - b_11;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,365,"/** Internal weights for stage 14, element 12. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,366,private static final double k14_12 =        1458939311.0 / 192780000000.0      - b_12;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,368,"/** Internal weights for stage 14, element 13. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,369,private static final double k14_13 =             -4149.0 / 500000.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,371,/** Time step for stage 15 (interpolation only). */
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,372,private static final double c15    = 1.0 / 5.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,375,"/** Internal weights for stage 15, element 1. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,376,private static final double k15_01 =     1595561272731.0 / 50120273500000.0    - b_01;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,378,"// elements 2 to 5 are zero, so they are neither stored nor used"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,380,"/** Internal weights for stage 15, element 6. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,381,private static final double k15_06 =      975183916491.0 / 34457688031250.0    - b_06;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,383,"/** Internal weights for stage 15, element 7. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,384,private static final double k15_07 =    38492013932672.0 / 718912673015625.0   - b_07;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,386,"/** Internal weights for stage 15, element 8. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,387,private static final double k15_08 = -1114881286517557.0 / 20298710767500000.0 - b_08;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,389,"/** Internal weights for stage 15, element 9. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,390,private static final double k15_09 =                 0.0                       - b_09;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,392,"/** Internal weights for stage 15, element 10. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,393,private static final double k15_10 =                 0.0                       - b_10;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,395,"/** Internal weights for stage 15, element 11. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,396,private static final double k15_11 =    -2538710946863.0 / 23431227861250000.0 - b_11;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,398,"/** Internal weights for stage 15, element 12. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,399,private static final double k15_12 =        8824659001.0 / 23066716781250.0    - b_12;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,401,"/** Internal weights for stage 15, element 13. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,402,private static final double k15_13 =      -11518334563.0 / 33831184612500.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,404,"/** Internal weights for stage 15, element 14. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,405,private static final double k15_14 =        1912306948.0 / 13532473845.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,407,/** Time step for stage 16 (interpolation only). */
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,408,private static final double c16    = 7.0 / 9.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,411,"/** Internal weights for stage 16, element 1. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,412,private static final double k16_01 =      -13613986967.0 / 31741908048.0       - b_01;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,414,"// elements 2 to 5 are zero, so they are neither stored nor used"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,416,"/** Internal weights for stage 16, element 6. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,417,private static final double k16_06 =       -4755612631.0 / 1012344804.0        - b_06;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,419,"/** Internal weights for stage 16, element 7. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,420,private static final double k16_07 =    42939257944576.0 / 5588559685701.0     - b_07;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,422,"/** Internal weights for stage 16, element 8. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,423,private static final double k16_08 =    77881972900277.0 / 19140370552944.0    - b_08;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,425,"/** Internal weights for stage 16, element 9. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,426,private static final double k16_09 =    22719829234375.0 / 63689648654052.0    - b_09;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,428,"/** Internal weights for stage 16, element 10. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,429,private static final double k16_10 =                 0.0                       - b_10;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,431,"/** Internal weights for stage 16, element 11. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,432,private static final double k16_11 =                 0.0                       - b_11;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,434,"/** Internal weights for stage 16, element 12. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,435,private static final double k16_12 =                 0.0                       - b_12;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,437,"/** Internal weights for stage 16, element 13. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,438,private static final double k16_13 =       -1199007803.0 / 857031517296.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,440,"/** Internal weights for stage 16, element 14. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,441,private static final double k16_14 =      157882067000.0 / 53564469831.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,443,"/** Internal weights for stage 16, element 15. */"
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,444,private static final double k16_15 =     -290468882375.0 / 31741908048.0;
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,446,/** Interpolation weights.
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,447,* (beware that only the non-null values are in the table)
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,449,private static final double[][] d = {
True,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java,481,/** Serializable version identifier */
True,src/java/org/apache/commons/math/ode/DummyStepHandler.java,src/java/org/apache/commons/math/ode/DummyStepHandler.java,90,/** Serializable version identifier */
True,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,95,/** Write the instance to an output channel.
True,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,96,* @param out output channel
True,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,97,* @exception IOException if the instance cannot be written
True,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,105,/** Read the instance from an input channel.
True,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,106,* @param in input channel
True,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,107,* @exception IOException if the instance cannot be read
True,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,src/java/org/apache/commons/math/ode/DummyStepInterpolator.java,124,/** Serializable version identifier */
False,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,64, @param b external weights for the high order method from Butcher array
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,64,* @param b propagation weights for the high order method from Butcher array
False,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,101, @param b external weights for the high order method from Butcher array
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,101,* @param b propagation weights for the high order method from Butcher array
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,158,/** Integrate the differential equations up to the given time.
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,159,* <p>This method solves an Initial Value Problem (IVP).</p>
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,160,* <p>Since this method stores some internal state variables made
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,161,* available in its public interface during integration ({@link
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,162,"* #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>"
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,163,* @param equations differential equations to integrate
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,164,* @param t0 initial time
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,165,* @param y0 initial value of the state vector at t0
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,166,* @param t target time for the integration
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,167,* (can be set to a value smaller than <code>t0</code> for backward integration)
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,168,* @param y placeholder where to put the state vector at each successful
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,169,"*  step (and hence at the end of integration), can be the same object as y0"
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,170,* @throws IntegratorException if the integrator cannot perform integration
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,171,* @throws DerivativeException this exception is propagated to the caller if
True,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java,172,* the underlying user function triggers one
True,src/java/org/apache/commons/math/ode/EulerIntegrator.java,src/java/org/apache/commons/math/ode/EulerIntegrator.java,52,/** Integrator method name. */
True,src/java/org/apache/commons/math/ode/EulerIntegrator.java,src/java/org/apache/commons/math/ode/EulerIntegrator.java,55,/** Time steps Butcher array. */
True,src/java/org/apache/commons/math/ode/EulerIntegrator.java,src/java/org/apache/commons/math/ode/EulerIntegrator.java,59,/** Internal weights Butcher array. */
True,src/java/org/apache/commons/math/ode/EulerIntegrator.java,src/java/org/apache/commons/math/ode/EulerIntegrator.java,63,/** Propagation weights Butcher array. */
True,src/java/org/apache/commons/math/ode/EulerStepInterpolator.java,src/java/org/apache/commons/math/ode/EulerStepInterpolator.java,92,/** Serializable version identifier */
True,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,72,/** Get the dimension of the problem.
True,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,73,* <p>The dimension of the first order problem is twice the
True,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,74,* dimension of the underlying second order problem.</p>
True,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,75,* @return dimension of the problem
True,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,81,/** Get the current time derivative of the state vector.
True,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,82,* @param t current value of the independent <I>time</I> variable
True,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,83,* @param y array containing the current value of the state vector
True,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,84,* @param yDot placeholder array where to put the time derivative of the state vector
True,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,85,* @throws DerivativeException this exception is propagated to the caller if the
True,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/java/org/apache/commons/math/ode/FirstOrderConverter.java,86,* underlying user function triggers one
True,src/java/org/apache/commons/math/ode/GillIntegrator.java,src/java/org/apache/commons/math/ode/GillIntegrator.java,48,/** Integrator method name. */
False,src/java/org/apache/commons/math/ode/GillIntegrator.java,src/java/org/apache/commons/math/ode/GillIntegrator.java,50,rivate static final double sqrt2 = Math.sqrt(2.0);
True,src/java/org/apache/commons/math/ode/GillIntegrator.java,src/java/org/apache/commons/math/ode/GillIntegrator.java,51,/** Time steps Butcher array. */
True,src/java/org/apache/commons/math/ode/GillIntegrator.java,src/java/org/apache/commons/math/ode/GillIntegrator.java,56,/** Internal weights Butcher array. */
False,src/java/org/apache/commons/math/ode/GillIntegrator.java,src/java/org/apache/commons/math/ode/GillIntegrator.java,58," (sqrt2 - 1.0) / 2.0, (2.0 - sqrt2) / 2.0 },"
False,src/java/org/apache/commons/math/ode/GillIntegrator.java,src/java/org/apache/commons/math/ode/GillIntegrator.java,59," 0.0, -sqrt2 / 2.0, (2.0 + sqrt2) / 2.0 }"
True,src/java/org/apache/commons/math/ode/GillIntegrator.java,src/java/org/apache/commons/math/ode/GillIntegrator.java,59,"{ (Math.sqrt(2.0) - 1.0) / 2.0, (2.0 - Math.sqrt(2.0)) / 2.0 },"
True,src/java/org/apache/commons/math/ode/GillIntegrator.java,src/java/org/apache/commons/math/ode/GillIntegrator.java,60,"{ 0.0, -Math.sqrt(2.0) / 2.0, (2.0 + Math.sqrt(2.0)) / 2.0 }"
True,src/java/org/apache/commons/math/ode/GillIntegrator.java,src/java/org/apache/commons/math/ode/GillIntegrator.java,63,/** Propagation weights Butcher array. */
False,src/java/org/apache/commons/math/ode/GillIntegrator.java,src/java/org/apache/commons/math/ode/GillIntegrator.java,63,".0 / 6.0, (2.0 - sqrt2) / 6.0, (2.0 + sqrt2) / 6.0, 1.0 / 6.0"
True,src/java/org/apache/commons/math/ode/GillIntegrator.java,src/java/org/apache/commons/math/ode/GillIntegrator.java,65,"1.0 / 6.0, (2.0 - Math.sqrt(2.0)) / 6.0, (2.0 + Math.sqrt(2.0)) / 6.0, 1.0 / 6.0"
True,src/java/org/apache/commons/math/ode/GillStepInterpolator.java,src/java/org/apache/commons/math/ode/GillStepInterpolator.java,114,/** Serializable version identifier */
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,90,/** Integrator method name. */
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,507,/** Integrate the differential equations up to the given time.
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,508,* <p>This method solves an Initial Value Problem (IVP).</p>
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,509,* <p>Since this method stores some internal state variables made
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,510,* available in its public interface during integration ({@link
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,511,"* #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>"
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,512,* @param equations differential equations to integrate
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,513,* @param t0 initial time
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,514,* @param y0 initial value of the state vector at t0
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,515,* @param t target time for the integration
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,516,* (can be set to a value smaller than <code>t0</code> for backward integration)
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,517,* @param y placeholder where to put the state vector at each successful
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,518,"*  step (and hence at the end of integration), can be the same object as y0"
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,519,* @throws IntegratorException if the integrator cannot perform integration
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,520,* @throws DerivativeException this exception is propagated to the caller if
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java,521,* the underlying user function triggers one
True,src/java/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolator.java,src/java/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolator.java,396,/** Serializable version identifier */
True,src/java/org/apache/commons/math/ode/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/HighamHall54Integrator.java,37,/** Integrator method name. */
True,src/java/org/apache/commons/math/ode/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/HighamHall54Integrator.java,40,/** Time steps Butcher array. */
True,src/java/org/apache/commons/math/ode/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/HighamHall54Integrator.java,45,/** Internal weights Butcher array. */
True,src/java/org/apache/commons/math/ode/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/HighamHall54Integrator.java,55,/** Propagation weights Butcher array. */
True,src/java/org/apache/commons/math/ode/HighamHall54Integrator.java,src/java/org/apache/commons/math/ode/HighamHall54Integrator.java,60,/** Error weights Butcher array. */
True,src/java/org/apache/commons/math/ode/HighamHall54StepInterpolator.java,src/java/org/apache/commons/math/ode/HighamHall54StepInterpolator.java,91,/** Serializable version identifier */
True,src/java/org/apache/commons/math/ode/IntegratorException.java,src/java/org/apache/commons/math/ode/IntegratorException.java,47,/** Serializable version identifier */
True,src/java/org/apache/commons/math/ode/MidpointIntegrator.java,src/java/org/apache/commons/math/ode/MidpointIntegrator.java,45,/** Integrator method name. */
True,src/java/org/apache/commons/math/ode/MidpointIntegrator.java,src/java/org/apache/commons/math/ode/MidpointIntegrator.java,48,/** Time steps Butcher array. */
True,src/java/org/apache/commons/math/ode/MidpointIntegrator.java,src/java/org/apache/commons/math/ode/MidpointIntegrator.java,53,/** Internal weights Butcher array. */
True,src/java/org/apache/commons/math/ode/MidpointIntegrator.java,src/java/org/apache/commons/math/ode/MidpointIntegrator.java,58,/** Propagation weights Butcher array. */
True,src/java/org/apache/commons/math/ode/MidpointStepInterpolator.java,src/java/org/apache/commons/math/ode/MidpointStepInterpolator.java,98,/** Serializable version identifier */
False,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,54, @param b external weights for the high order method from Butcher array
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,54,* @param b propagation weights for the high order method from Butcher array
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,141,/** Integrate the differential equations up to the given time.
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,142,* <p>This method solves an Initial Value Problem (IVP).</p>
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,143,* <p>Since this method stores some internal state variables made
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,144,* available in its public interface during integration ({@link
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,145,"* #getCurrentSignedStepsize()}), it is <em>not</em> thread-safe.</p>"
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,146,* @param equations differential equations to integrate
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,147,* @param t0 initial time
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,148,* @param y0 initial value of the state vector at t0
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,149,* @param t target time for the integration
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,150,* (can be set to a value smaller than <code>t0</code> for backward integration)
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,151,* @param y placeholder where to put the state vector at each successful
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,152,"*  step (and hence at the end of integration), can be the same object as y0"
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,153,* @throws IntegratorException if the integrator cannot perform integration
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,154,* @throws DerivativeException this exception is propagated to the caller if
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,155,* the underlying user function triggers one
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,273,/** Get the current value of the step start time t<sub>i</sub>.
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,274,* <p>This method can be called during integration (typically by
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,275,* the object implementing the {@link FirstOrderDifferentialEquations
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,276,* differential equations} problem) if the value of the current step that
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,277,* is attempted is needed.</p>
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,278,* <p>The result is undefined if the method is called outside of
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,279,* calls to {@link #integrate}</p>
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,280,* @return current value of the step start time t<sub>i</sub>
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,286,/** Get the current signed value of the integration stepsize.
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,287,* <p>This method can be called during integration (typically by
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,288,* the object implementing the {@link FirstOrderDifferentialEquations
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,289,* differential equations} problem) if the signed value of the current stepsize
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,290,* that is tried is needed.</p>
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,291,* <p>The result is undefined if the method is called outside of
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,292,* calls to {@link #integrate}</p>
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,293,* @return current signed value of the stepsize
True,src/java/org/apache/commons/math/ode/ThreeEighthesIntegrator.java,src/java/org/apache/commons/math/ode/ThreeEighthesIntegrator.java,48,/** Integrator method name. */
True,src/java/org/apache/commons/math/ode/ThreeEighthesIntegrator.java,src/java/org/apache/commons/math/ode/ThreeEighthesIntegrator.java,51,/** Time steps Butcher array. */
True,src/java/org/apache/commons/math/ode/ThreeEighthesIntegrator.java,src/java/org/apache/commons/math/ode/ThreeEighthesIntegrator.java,56,/** Internal weights Butcher array. */
True,src/java/org/apache/commons/math/ode/ThreeEighthesIntegrator.java,src/java/org/apache/commons/math/ode/ThreeEighthesIntegrator.java,63,/** Propagation weights Butcher array. */
True,src/java/org/apache/commons/math/ode/ThreeEighthesStepInterpolator.java,src/java/org/apache/commons/math/ode/ThreeEighthesStepInterpolator.java,108,/** Serializable version identifier */
False,src/java/org/apache/commons/math/random/UniformRandomGenerator.java,src/java/org/apache/commons/math/random/UniformRandomGenerator.java,27, @version $Revision:$ $Date$
True,src/java/org/apache/commons/math/random/UniformRandomGenerator.java,src/java/org/apache/commons/math/random/UniformRandomGenerator.java,27,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/random/UniformRandomGenerator.java,src/java/org/apache/commons/math/random/UniformRandomGenerator.java,51,/** Square root of three. */
True,src/java/org/apache/commons/math/stat/Frequency.java,src/java/org/apache/commons/math/stat/Frequency.java,440,/** Serializable version identifier */
False,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,69,/ UnivariateStatistic stats implementations - can be reset by setters
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,69,/** Mean statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,72,/** Geometric mean statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,75,/** Kurtosis statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,78,/** Maximum statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,81,/** Minimum statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,84,/** Percentile statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,87,/** Skewness statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,90,/** Variance statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,93,/** Sum of squares statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,96,/** Sum statistic implementation - can be reset by setter. */
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,131,/  Statistics implementations - can be reset by setters
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,131,/** Sum statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,134,/** Sum of squares statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,137,/** Minimum statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,140,/** Maximum statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,143,/** Sum of log statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,146,/** Geometric mean statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,149,/** Mean statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,152,/** Variance statistic implementation - can be reset by setter. */
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatisticsImpl.java,39,/** Resets all statistics and storage. */
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,135,* @param o the Object to be transformed.
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,136,* @return the double value of the Object.
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,137,* @throws MathException if the Object can not be transformed into a Double.
