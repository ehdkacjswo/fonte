is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,645,ealMatrix product;
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,645,final int m = this.getDimension();
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,646,final int n = v.getDimension();
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,647,final RealMatrix product;
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,647,"roduct = new OpenMapRealMatrix(this.getDimension(),"
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,648,.getDimension());
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,649,"product = new OpenMapRealMatrix(m, n);"
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,650,"roduct = new Array2DRowRealMatrix(this.getDimension(),"
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,651,.getDimension());
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,651,"product = new Array2DRowRealMatrix(m, n);"
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,653,terator<Entry> thisIt = sparseIterator();
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,654,hile (thisIt.hasNext()) {
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,655,inal Entry thisE = thisIt.next();
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,656,terator<Entry> otherIt = v.sparseIterator();
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,657,hile (otherIt.hasNext()) {
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,658,inal Entry otherE = otherIt.next();
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,659,"roduct.setEntry(thisE.getIndex(), otherE.getIndex(),"
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,660,hisE.getValue() * otherE.getValue());
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,653,for (int i = 0; i < m; i++) {
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,654,for (int j = 0; j < n; j++) {
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,655,"product.setEntry(i, j, this.getEntry(i) * v.getEntry(j));"
