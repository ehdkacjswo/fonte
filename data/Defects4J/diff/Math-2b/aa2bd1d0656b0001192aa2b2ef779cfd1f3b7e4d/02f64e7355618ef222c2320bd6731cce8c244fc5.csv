is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java,src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java,183,"eturn FastMath.pow(2 * FastMath.PI, -dim / 2) *"
True,src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java,src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java,183,"return FastMath.pow(2 * FastMath.PI, -0.5 * dim) *"
True,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,23,import java.util.Random;
True,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,136,* Test the accuracy of the distribution when calculating densities.
True,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,138,@Test
True,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,139,public void testUnivariateDistribution() {
True,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,140,final double[] mu = { -1.5 };
True,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,141,final double[][] sigma = { { 1 } };
True,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,143,"final MultivariateNormalDistribution multi = new MultivariateNormalDistribution(mu, sigma);"
True,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,145,"final NormalDistribution uni = new NormalDistribution(mu[0], sigma[0][0]);"
True,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,146,final Random rng = new Random();
True,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,147,final int numCases = 100;
True,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,148,final double tol = Math.ulp(1d);
True,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,149,for (int i = 0; i < numCases; i++) {
True,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,150,final double v = rng.nextDouble() * 10 - 5;
True,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalDistributionTest.java,151,"Assert.assertEquals(uni.density(v), multi.density(new double[] { v }), tol);"
