is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,259,nt ret = 0;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,261,f (this != object) {
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,262,ouble first = doubleValue();
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,263,ouble second = object.doubleValue();
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,265,f (first < second) {
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,266,et = -1;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,267, else if (first > second) {
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,268,et = 1;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,272,eturn ret;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,259,long nOd = ((long) numerator) * object.denominator;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,260,long dOn = ((long) denominator) * object.numerator;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,261,return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,173,// these two values are different approximations of PI
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,174,// the first  one is approximately PI - 3.07e-18
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,175,// the second one is approximately PI + 1.936e-17
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,176,"Fraction pi1 = new Fraction(1068966896, 340262731);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,177,"Fraction pi2 = new Fraction( 411557987, 131002976);"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,178,"assertEquals(-1, pi1.compareTo(pi2));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,179,"assertEquals( 1, pi2.compareTo(pi1));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,180,"assertEquals(0.0, pi1.doubleValue() - pi2.doubleValue(), 1.0e-20);"
