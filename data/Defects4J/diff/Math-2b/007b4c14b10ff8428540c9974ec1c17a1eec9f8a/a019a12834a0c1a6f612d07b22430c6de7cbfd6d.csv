is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,65,ouble normSq;
False,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,66,o {
False,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,67,ormSq = 0;
False,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,68,or (int i = 0; i < dimension; i++) {
False,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,69,inal double comp = 2 * rand.nextDouble() - 1;
False,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,70,[i] = comp;
False,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,71,ormSq += comp * comp;
False,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,73, while (normSq > 1);
True,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,64,// See http://mathworld.wolfram.com/SpherePointPicking.html for example.
True,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,65,"// Pick a point by choosing a standard Gaussian for each element, and then"
True,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,66,// normalizing to unit length.
True,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,67,double normSq = 0;
True,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,68,for (int i = 0; i < dimension; i++) {
True,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,69,final double comp = rand.nextGaussian();
True,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,70,v[i] = comp;
True,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,src/main/java/org/apache/commons/math3/random/UnitSphereRandomVectorGenerator.java,71,normSq += comp * comp;
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,17,package org.apache.commons.math3.random;
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,19,import org.apache.commons.math3.util.FastMath;
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,20,import org.junit.Assert;
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,21,import org.junit.Test;
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,23,public class UnitSphereRandomVectorGeneratorTest {
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,25,* Test the distribution of points from {@link UnitSphereRandomVectorGenerator#nextVector()}
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,26,* in two dimensions.
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,28,@Test
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,29,public void test2DDistribution() {
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,31,RandomGenerator rg = new JDKRandomGenerator();
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,32,rg.setSeed(17399225432l);
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,33,"UnitSphereRandomVectorGenerator generator = new UnitSphereRandomVectorGenerator(2, rg);"
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,35,"// In 2D, angles with a given vector should be uniformly distributed"
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,36,int[] angleBuckets = new int[100];
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,37,int steps = 1000000;
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,38,for (int i = 0; i < steps; ++i) {
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,39,final double[] v = generator.nextVector();
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,40,"Assert.assertEquals(2, v.length);"
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,41,"Assert.assertEquals(1, length(v), 1e-10);"
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,42,"// Compute angle formed with vector (1,0)"
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,43,"// Cosine of angle is their dot product, because both are unit length"
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,44,// Dot product here is just the first element of the vector by construction
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,45,final double angle = FastMath.acos(v[0]);
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,46,final int bucket = (int) (angleBuckets.length * (angle / FastMath.PI));
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,47,++angleBuckets[bucket];
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,50,// Simplistic test for roughly even distribution
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,51,final int expectedBucketSize = steps / angleBuckets.length;
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,52,for (int bucket : angleBuckets) {
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,53,"Assert.assertTrue(""Bucket count "" + bucket + "" vs expected "" + expectedBucketSize,"
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,54,FastMath.abs(expectedBucketSize - bucket) < 350);
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,59,* @return length (L2 norm) of given vector
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,61,private static double length(double[] vector) {
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,62,double total = 0;
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,63,for (double d : vector) {
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,64,total += d * d;
True,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,src/test/java/org/apache/commons/math3/random/UnitSphereRandomVectorGeneratorTest.java,66,return FastMath.sqrt(total);
