is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,76, {@link #computeJacobian(double[])} instead.
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,76,* {@link #computeWeightedJacobian(double[])} instead.
False,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,146, @deprecated As of 3.1. Please use {@link #computeJacobian(double[])}
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,146,* @deprecated As of 3.1. Please use {@link #computeWeightedJacobian(double[])}
False,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,151,omputeJacobian(point);
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,151,computeWeightedJacobian(point);
False,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,163,rotected RealMatrix computeJacobian(double[] params) {
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,163,protected RealMatrix computeWeightedJacobian(double[] params) {
False,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,272,ublic void setCost(double cost) {
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,272,protected void setCost(double cost) {
False,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,332,inal RealMatrix j = computeJacobian(params);
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,332,final RealMatrix j = computeWeightedJacobian(params);
False,src/main/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizer.java,135,inal RealMatrix weightedJacobian = computeJacobian(currentPoint);
True,src/main/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizer.java,135,final RealMatrix weightedJacobian = computeWeightedJacobian(currentPoint);
False,src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java,321,rDecomposition(computeJacobian(currentPoint));
True,src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java,321,qrDecomposition(computeWeightedJacobian(currentPoint));
