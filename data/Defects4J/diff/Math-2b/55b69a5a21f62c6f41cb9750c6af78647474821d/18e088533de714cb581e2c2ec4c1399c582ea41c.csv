is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,119,inal double max = getMax();
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,120,final double diff = getMax() - min;
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,123,inal double midPoint = 0.5 * (max - min);
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,124,eturn (max - min) * computeObjectiveValue(midPoint);
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,123,final double midPoint = 0.5 * diff;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,124,return diff * computeObjectiveValue(midPoint);
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,129,inal double spacing = (max - min) / np;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,129,final double spacing = diff / np;
