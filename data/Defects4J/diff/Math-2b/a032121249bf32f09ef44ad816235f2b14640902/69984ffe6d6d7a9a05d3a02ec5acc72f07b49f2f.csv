is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,17,package org.apache.commons.math3.random;
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,19,import static org.junit.Assert.*;
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,21,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,22,import org.apache.commons.math3.exception.NullArgumentException;
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,23,import org.apache.commons.math3.exception.OutOfRangeException;
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,24,import org.junit.Before;
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,25,import org.junit.Test;
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,27,public class HaltonSequenceGeneratorTest {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,29,private double[][] referenceValues = {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,30,"{ 0.0,    0.0,    0.0  },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,31,"{ 0.5,    0.6667, 0.6  },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,32,"{ 0.25,   0.3333, 0.2  },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,33,"{ 0.75,   0.2223, 0.8  },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,34,"{ 0.125,  0.8888, 0.4  },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,35,"{ 0.625,  0.5555, 0.12 },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,36,"{ 0.375,  0.1111, 0.72 },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,37,"{ 0.875,  0.7777, 0.32 },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,38,"{ 0.0625, 0.4444, 0.92 },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,39,"{ 0.5625, 0.0740, 0.52 }"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,42,private double[][] referenceValuesUnscrambled = {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,43,"{ 0.0,    0.0    },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,44,"{ 0.5,    0.3333 },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,45,"{ 0.25,   0.6666 },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,46,"{ 0.75,   0.1111 },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,47,"{ 0.125,  0.4444 },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,48,"{ 0.625,  0.7777 },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,49,"{ 0.375,  0.2222 },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,50,"{ 0.875,  0.5555 },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,51,"{ 0.0625, 0.8888 },"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,52,"{ 0.5625, 0.0370 }"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,55,private HaltonSequenceGenerator generator;
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,57,@Before
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,58,public void setUp() {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,59,generator = new HaltonSequenceGenerator(3);
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,62,@Test
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,63,public void test3DReference() {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,64,for (int i = 0; i < referenceValues.length; i++) {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,65,double[] result = generator.nextVector();
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,66,"assertArrayEquals(referenceValues[i], result, 1e-3);"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,67,"assertEquals(i + 1, generator.getNextIndex());"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,71,@Test
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,72,public void test2DUnscrambledReference() {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,73,"generator = new HaltonSequenceGenerator(2, new int[] {2, 3}, null);"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,74,for (int i = 0; i < referenceValuesUnscrambled.length; i++) {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,75,double[] result = generator.nextVector();
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,76,"assertArrayEquals(referenceValuesUnscrambled[i], result, 1e-3);"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,77,"assertEquals(i + 1, generator.getNextIndex());"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,81,@Test
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,82,public void testConstructor() {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,83,try {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,84,new HaltonSequenceGenerator(0);
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,85,fail();
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,86,} catch (OutOfRangeException e) {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,87,// expected
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,90,try {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,91,new HaltonSequenceGenerator(41);
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,92,fail();
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,93,} catch (OutOfRangeException e) {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,94,// expected
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,98,@Test
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,99,public void testConstructor2() throws Exception{
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,100,try {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,101,"new HaltonSequenceGenerator(2, new int[] { 1 }, null);"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,102,fail();
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,103,} catch (OutOfRangeException e) {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,104,// expected
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,107,try {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,108,"new HaltonSequenceGenerator(2, null, null);"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,109,fail();
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,110,} catch (NullArgumentException e) {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,111,// expected
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,114,try {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,115,"new HaltonSequenceGenerator(2, new int[] { 1, 1 }, new int[] { 1 });"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,116,fail();
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,117,} catch (DimensionMismatchException e) {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,118,// expected
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,122,@Test
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,123,public void testSkip() {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,124,double[] result = generator.skipTo(5);
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,125,"assertArrayEquals(referenceValues[5], result, 1e-3);"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,126,"assertEquals(6, generator.getNextIndex());"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,128,for (int i = 6; i < referenceValues.length; i++) {
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,129,result = generator.nextVector();
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,130,"assertArrayEquals(referenceValues[i], result, 1e-3);"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,131,"assertEquals(i + 1, generator.getNextIndex());"
