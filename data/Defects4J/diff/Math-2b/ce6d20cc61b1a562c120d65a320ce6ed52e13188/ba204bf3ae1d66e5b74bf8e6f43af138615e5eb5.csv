is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,28,import org.apache.commons.math3.geometry.partitioning.AbstractRegion;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,33,import org.apache.commons.math3.geometry.partitioning.Side;
False,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,33,mport org.apache.commons.math3.geometry.partitioning.AbstractRegion;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,102,/** Build a polygon from a simple list of vertices.
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,103,* <p>The boundary is provided as a list of points considering to
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,104,* represent the vertices of a simple loop. The interior part of the
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,105,* region is on the left side of this path and the exterior is on its
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,106,* right side.</p>
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,107,* <p>This constructor does not handle polygons with a boundary
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,108,* forming several disconnected paths (such as polygons with holes).</p>
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,109,"* <p>For cases where this simple constructor applies, it is expected to"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,110,* be numerically more robust than the {@link #PolygonsSet(Collection) general
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,111,* constructor} using {@link SubHyperplane subhyperplanes}.</p>
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,112,"* <p>If the list is empty, the region will represent the whole"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,113,* space.</p>
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,114,* @param hyperplaneThickness tolerance below which points are considered to
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,115,* belong to the hyperplane (which is therefore more a slab)
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,116,* @param vertices vertices of the simple loop boundary
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,118,"public PolygonsSet(final double hyperplaneThickness, final Vector2D ... vertices) {"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,119,"super(verticesToTree(hyperplaneThickness, vertices));"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,143,/** Build the BSP tree of a polygons set from a simple list of vertices.
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,144,* <p>The boundary is provided as a list of points considering to
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,145,* represent the vertices of a simple loop. The interior part of the
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,146,* region is on the left side of this path and the exterior is on its
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,147,* right side.</p>
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,148,* <p>This constructor does not handle polygons with a boundary
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,149,* forming several disconnected paths (such as polygons with holes).</p>
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,150,"* <p>For cases where this simple constructor applies, it is expected to"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,151,* be numerically more robust than the {@link #PolygonsSet(Collection) general
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,152,* constructor} using {@link SubHyperplane subhyperplanes}.</p>
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,153,* @param hyperplaneThickness tolerance below which points are consider to
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,154,* belong to the hyperplane (which is therefore more a slab)
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,155,* @param vertices vertices of the simple loop boundary
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,157,"private static BSPTree<Euclidean2D> verticesToTree(final double hyperplaneThickness,"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,158,final Vector2D ... vertices) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,160,if (vertices.length == 0) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,161,// the tree represents the whole space
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,162,return new BSPTree<Euclidean2D>(Boolean.TRUE);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,165,"// at start, none of the edges have been processed"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,166,final BSPTree<Euclidean2D> tree = new BSPTree<Euclidean2D>();
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,167,List<Vertex> list = new ArrayList<PolygonsSet.Vertex>(vertices.length);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,168,for (final Vector2D vertex : vertices) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,169,list.add(new Vertex(vertex));
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,172,// build the tree top-down
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,173,"insertVertices(hyperplaneThickness, tree, list);"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,175,return tree;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,179,/** Recursively build a tree by inserting cut sub-hyperplanes.
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,180,* @param hyperplaneThickness tolerance below which points are consider to
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,181,* belong to the hyperplane (which is therefore more a slab)
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,182,* @param node current tree node (it is a leaf node at the beginning
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,183,* of the call)
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,184,* @param vertices list of vertices belonging to the boundary of the
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,185,* cell defined by the node
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,187,"private static void insertVertices(final double hyperplaneThickness,"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,188,"final BSPTree<Euclidean2D> node,"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,189,final List<Vertex> vertices) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,191,Vertex current = vertices.get(vertices.size() - 1);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,192,int index = 0;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,193,Line inserted = null;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,194,while (inserted == null && index < vertices.size()) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,195,final Vertex previous = current;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,196,current = vertices.get(index++);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,197,if (previous.outgoingNeedsProcessing() && current.incomingNeedsProcessing()) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,199,if (previous.shareNodeWith(current)) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,200,"// both vertices are already handled by an existing node,"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,201,"// closer to the tree root, they were probably created"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,202,// when split points were introduced
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,203,inserted = null;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,204,} else {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,206,"inserted = new Line(previous.getLocation(), current.getLocation());"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,208,if (node.insertCut(inserted)) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,209,previous.addNode(node);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,210,previous.outgoingProcessed();
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,211,current.addNode(node);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,212,current.incomingProcessed();
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,213,} else {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,214,inserted = null;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,222,if (node.getCut() == null) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,223,final BSPTree<Euclidean2D> parent = node.getParent();
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,224,if (parent == null || node == parent.getMinus()) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,225,node.setAttribute(Boolean.TRUE);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,226,} else {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,227,node.setAttribute(Boolean.FALSE);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,229,return;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,232,// distribute the remaining vertices in the two sub-trees
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,233,Side currentSide = Side.HYPER;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,234,final List<Vertex> plusList  = new ArrayList<Vertex>();
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,235,plusList.add(current);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,236,int plusCount = 0;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,237,final List<Vertex> minusList = new ArrayList<Vertex>();
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,238,minusList.add(current);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,239,int minusCount = 0;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,240,while (index < vertices.size()) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,241,final Vertex previous = current;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,242,final Side previousSide = currentSide;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,243,current = vertices.get(index++);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,244,final double currentOffset = inserted.getOffset(current.getLocation());
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,245,currentSide = (FastMath.abs(currentOffset) <= hyperplaneThickness) ?
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,246,Side.HYPER :
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,247,((currentOffset < 0) ? Side.MINUS : Side.PLUS);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,248,switch (currentSide) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,249,case PLUS:
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,250,if (previousSide == Side.MINUS) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,251,// we need to insert a split point on the hyperplane
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,252,"final Line line = new Line(previous.getLocation(), current.getLocation());"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,253,final Vertex splitPoint = new Vertex(inserted.intersection(line));
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,254,splitPoint.addNode(node);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,255,minusList.add(splitPoint);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,256,plusList.add(splitPoint);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,258,plusList.add(current);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,259,if (current.incomingNeedsProcessing() || current.outgoingNeedsProcessing()) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,260,++plusCount;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,262,break;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,263,case MINUS:
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,264,if (previousSide == Side.PLUS) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,265,// we need to insert a split point on the hyperplane
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,266,"final Line line = new Line(previous.getLocation(), current.getLocation());"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,267,final Vertex splitPoint = new Vertex(inserted.intersection(line));
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,268,splitPoint.addNode(node);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,269,minusList.add(splitPoint);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,270,plusList.add(splitPoint);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,272,minusList.add(current);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,273,if (current.incomingNeedsProcessing() || current.outgoingNeedsProcessing()) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,274,++minusCount;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,276,break;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,277,default:
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,278,current.addNode(node);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,279,plusList.add(current);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,280,minusList.add(current);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,281,break;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,285,// recurse through lower levels
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,286,if (plusCount > 0) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,287,"insertVertices(hyperplaneThickness, node.getPlus(),  plusList);"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,288,} else {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,289,node.getPlus().setAttribute(Boolean.FALSE);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,291,if (minusCount > 0) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,292,"insertVertices(hyperplaneThickness, node.getMinus(), minusList);"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,293,} else {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,294,node.getMinus().setAttribute(Boolean.TRUE);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,299,/** Internal class for holding vertices while they are processed to build a BSP tree. */
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,300,private static class Vertex {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,302,/** Vertex location. */
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,303,private final Vector2D location;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,305,/** Nodes associated with the hyperplane containing this vertex. */
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,306,private final List<BSPTree<Euclidean2D>> nodes;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,308,/** Indicator for incoming edges that still need processing. */
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,309,private boolean incomingNeedsProcessing;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,311,/** Indicator for outgoing edges that still need processing. */
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,312,private boolean outgoingNeedsProcessing;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,314,/** Build a non-processed vertex not owned by any node yet.
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,315,* @param location vertex location
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,317,public Vertex(final Vector2D location) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,318,this.location                = location;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,319,this.nodes                   = new ArrayList<BSPTree<Euclidean2D>>();
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,320,this.incomingNeedsProcessing = true;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,321,this.outgoingNeedsProcessing = true;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,324,/** Get Vertex location.
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,325,* @return vertex location
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,327,public Vector2D getLocation() {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,328,return location;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,331,/** Check if the instance and another vertex share a node.
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,332,* <p>
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,333,"* When two vertices share a node, this means they are already handled"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,334,"* by the hyperplane of this node, so there is no need to create a cut"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,335,* hyperplane for them.
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,336,* </p>
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,337,* @param vertex other vertex to check instance against
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,338,* @return true if the instance and another vertex share a node
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,340,public boolean shareNodeWith(final Vertex vertex) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,341,for (final BSPTree<Euclidean2D> node1 : nodes) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,342,for (final BSPTree<Euclidean2D> node2 : vertex.nodes) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,343,if (node1 == node2) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,344,return true;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,348,return false;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,351,/** Add a node whose hyperplane contains this vertex.
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,352,* @param node node whose hyperplane contains this vertex
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,354,public void addNode(final BSPTree<Euclidean2D> node) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,355,nodes.add(node);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,358,/** Check incoming edge processed indicator.
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,359,* @return true if incoming edge needs processing
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,361,public boolean incomingNeedsProcessing() {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,362,return incomingNeedsProcessing;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,365,/** Check outgoing edge processed indicator.
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,366,* @return true if outgoing edge needs processing
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,368,public boolean outgoingNeedsProcessing() {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,369,return outgoingNeedsProcessing;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,372,/** Mark the incoming edge as processed.
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,374,public void incomingProcessed() {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,375,incomingNeedsProcessing = false;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,378,/** Mark the outgoing edge as processed.
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,380,public void outgoingProcessed() {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java,381,outgoingNeedsProcessing = false;
False,src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java,src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java,156,f (chopped.isEmpty()) {
True,src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java,src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java,156,if (chopped == null || chopped.isEmpty()) {
False,src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java,src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java,288," @return a new sub-hyperplane, gueranteed to have no part outside"
True,src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java,src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java,288,"* @return a new sub-hyperplane, guaranteed to have no part outside"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,19,import java.io.FileNotFoundException;
False,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,25,mport org.apache.commons.math3.geometry.euclidean.twod.Line;
False,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,26,mport org.apache.commons.math3.geometry.euclidean.twod.Vector2D;
False,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,27,mport org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet;
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,28,import org.apache.commons.math3.geometry.partitioning.Region.Location;
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,804,@Test
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,805,public void testIssue880Simplified() {
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,807,Vector2D[] vertices1 = new Vector2D[] {
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,808,"new Vector2D( 90.13595870833188,  38.33604606376991),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,809,"new Vector2D( 90.14047850603913,  38.34600084496253),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,810,"new Vector2D( 90.11045289492762,  38.36801537312368),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,811,"new Vector2D( 90.10871471476526,  38.36878044144294),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,812,"new Vector2D( 90.10424901707671,  38.374300101757),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,813,"new Vector2D( 90.0979455456843,   38.373578376172475),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,814,"new Vector2D( 90.09081227075944,  38.37526295920463),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,815,"new Vector2D( 90.09081378927135,  38.375193883266434)"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,817,"PolygonsSet set1 = new PolygonsSet(1.0e-10, vertices1);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,818,"Assert.assertEquals(Location.OUTSIDE, set1.checkPoint(new Vector2D(90.12,  38.32)));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,819,"Assert.assertEquals(Location.OUTSIDE, set1.checkPoint(new Vector2D(90.135, 38.355)));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,823,@Test
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,824,public void testIssue880Complete() throws FileNotFoundException {
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,825,Vector2D[] vertices1 = new Vector2D[] {
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,826,"new Vector2D( 90.08714908223715,  38.370299337260235),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,827,"new Vector2D( 90.08709517675004,  38.3702895991413),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,828,"new Vector2D( 90.08401538704919,  38.368849330127944),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,829,"new Vector2D( 90.08258210430711,  38.367634558585564),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,830,"new Vector2D( 90.08251455106665,  38.36763409247078),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,831,"new Vector2D( 90.08106599752608,  38.36761621664249),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,832,"new Vector2D( 90.08249585300035,  38.36753627557965),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,833,"new Vector2D( 90.09075743352184,  38.35914647644972),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,834,"new Vector2D( 90.09099945896571,  38.35896264724079),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,835,"new Vector2D( 90.09269383800086,  38.34595756121246),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,836,"new Vector2D( 90.09638631543191,  38.3457988093121),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,837,"new Vector2D( 90.09666417351019,  38.34523360999418),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,838,"new Vector2D( 90.1297082145872,  38.337670454923625),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,839,"new Vector2D( 90.12971687748956,  38.337669827794684),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,840,"new Vector2D( 90.1240820219179,  38.34328502001131),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,841,"new Vector2D( 90.13084259656404,  38.34017811765017),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,842,"new Vector2D( 90.13378567942857,  38.33860579180606),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,843,"new Vector2D( 90.13519557833206,  38.33621054663689),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,844,"new Vector2D( 90.13545616732307,  38.33614965452864),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,845,"new Vector2D( 90.13553111202748,  38.33613962818305),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,846,"new Vector2D( 90.1356903436448,  38.33610227127048),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,847,"new Vector2D( 90.13576283227428,  38.33609255422783),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,848,"new Vector2D( 90.13595870833188,  38.33604606376991),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,849,"new Vector2D( 90.1361556630693,  38.3360024198866),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,850,"new Vector2D( 90.13622408795709,  38.335987048115726),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,851,"new Vector2D( 90.13696189099994,  38.33581914328681),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,852,"new Vector2D( 90.13746655304897,  38.33616706665265),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,853,"new Vector2D( 90.13845973716064,  38.33650776167099),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,854,"new Vector2D( 90.13950901827667,  38.3368469456463),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,855,"new Vector2D( 90.14393814424852,  38.337591835857495),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,856,"new Vector2D( 90.14483839716831,  38.337076122362475),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,857,"new Vector2D( 90.14565474433601,  38.33769000964429),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,858,"new Vector2D( 90.14569421179482,  38.3377117256905),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,859,"new Vector2D( 90.14577067124333,  38.33770883625908),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,860,"new Vector2D( 90.14600350631684,  38.337714326520995),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,861,"new Vector2D( 90.14600355139731,  38.33771435193319),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,862,"new Vector2D( 90.14600369112401,  38.33771443882085),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,863,"new Vector2D( 90.14600382486884,  38.33771453466096),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,864,"new Vector2D( 90.14600395205912,  38.33771463904344),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,865,"new Vector2D( 90.14600407214999,  38.337714751520764),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,866,"new Vector2D( 90.14600418462749,  38.337714871611695),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,867,"new Vector2D( 90.14600422249327,  38.337714915811034),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,868,"new Vector2D( 90.14867838361471,  38.34113888210675),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,869,"new Vector2D( 90.14923750157374,  38.341582537502575),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,870,"new Vector2D( 90.14877083250991,  38.34160685841391),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,871,"new Vector2D( 90.14816667319519,  38.34244232585684),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,872,"new Vector2D( 90.14797696744586,  38.34248455284745),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,873,"new Vector2D( 90.14484318014337,  38.34385573215269),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,874,"new Vector2D( 90.14477919958296,  38.3453797747614),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,875,"new Vector2D( 90.14202393306448,  38.34464324839456),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,876,"new Vector2D( 90.14198920640195,  38.344651155237216),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,877,"new Vector2D( 90.14155207025175,  38.34486424263724),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,878,"new Vector2D( 90.1415196143314,  38.344871730519),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,879,"new Vector2D( 90.14128611910814,  38.34500196593859),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,880,"new Vector2D( 90.14047850603913,  38.34600084496253),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,881,"new Vector2D( 90.14045907000337,  38.34601860032171),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,882,"new Vector2D( 90.14039496493928,  38.346223030432384),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,883,"new Vector2D( 90.14037626063737,  38.346240203360026),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,884,"new Vector2D( 90.14030005823724,  38.34646920000705),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,885,"new Vector2D( 90.13799164754806,  38.34903093011013),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,886,"new Vector2D( 90.11045289492762,  38.36801537312368),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,887,"new Vector2D( 90.10871471476526,  38.36878044144294),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,888,"new Vector2D( 90.10424901707671,  38.374300101757),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,889,"new Vector2D( 90.10263482039932,  38.37310041316073),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,890,"new Vector2D( 90.09834601753448,  38.373615053823414),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,891,"new Vector2D( 90.0979455456843,  38.373578376172475),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,892,"new Vector2D( 90.09086514328669,  38.37527884194668),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,893,"new Vector2D( 90.09084931407364,  38.37590801712463),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,894,"new Vector2D( 90.09081227075944,  38.37526295920463),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,895,"new Vector2D( 90.09081378927135,  38.375193883266434)"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,897,"PolygonsSet set1 = new PolygonsSet(1.0e-10, vertices1);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,898,"Assert.assertEquals(Location.OUTSIDE, set1.checkPoint(new Vector2D(90.0905, 38.3755)));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,899,"Assert.assertEquals(Location.INSIDE,  set1.checkPoint(new Vector2D(90.09084, 38.3755)));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,900,// TODO: the following assertion fails and should not
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,901,// this is due to a small spurious triangle being included in the polygon
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,902,"// Assert.assertEquals(Location.OUTSIDE, set1.checkPoint(new Vector2D(90.0913, 38.3755)));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,904,Vector2D[] vertices2 = new Vector2D[] {
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,905,"new Vector2D( 90.13067558880044,  38.36977255037573),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,906,"new Vector2D( 90.12907570488,  38.36817308242706),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,907,"new Vector2D( 90.1342774136516,  38.356886880294724),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,908,"new Vector2D( 90.13090330629757,  38.34664392676211),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,909,"new Vector2D( 90.13078571364593,  38.344904617518466),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,910,"new Vector2D( 90.1315602208914,  38.3447185040846),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,911,"new Vector2D( 90.1316336226821,  38.34470643148342),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,912,"new Vector2D( 90.134020944832,  38.340936644972885),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,913,"new Vector2D( 90.13912536387306,  38.335497255122334),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,914,"new Vector2D( 90.1396178806582,  38.334878075552126),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,915,"new Vector2D( 90.14083049696671,  38.33316530644106),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,916,"new Vector2D( 90.14145252901329,  38.33152722916191),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,917,"new Vector2D( 90.1404779335565,  38.32863516047786),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,918,"new Vector2D( 90.14282712131586,  38.327504432532066),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,919,"new Vector2D( 90.14616669875488,  38.3237354115015),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,920,"new Vector2D( 90.14860976050608,  38.315714862457924),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,921,"new Vector2D( 90.14999277782437,  38.3164932507504),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,922,"new Vector2D( 90.15005207194997,  38.316534677663356),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,923,"new Vector2D( 90.15508513859612,  38.31878731691609),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,924,"new Vector2D( 90.15919938519221,  38.31852743183782),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,925,"new Vector2D( 90.16093758658837,  38.31880662005153),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,926,"new Vector2D( 90.16099420184912,  38.318825953291594),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,927,"new Vector2D( 90.1665411125756,  38.31859497874757),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,928,"new Vector2D( 90.16999653861313,  38.32505772048029),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,929,"new Vector2D( 90.17475243391698,  38.32594398441148),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,930,"new Vector2D( 90.17940844844992,  38.327427213761325),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,931,"new Vector2D( 90.20951909541378,  38.330616833491774),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,932,"new Vector2D( 90.2155400467941,  38.331746223670336),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,933,"new Vector2D( 90.21559881391778,  38.33175551425302),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,934,"new Vector2D( 90.21916646426041,  38.332584299620805),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,935,"new Vector2D( 90.23863749852285,  38.34778978875795),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,936,"new Vector2D( 90.25459855175802,  38.357790570608984),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,937,"new Vector2D( 90.25964298227257,  38.356918010203174),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,938,"new Vector2D( 90.26024593994703,  38.361692743151366),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,939,"new Vector2D( 90.26146187570015,  38.36311080550837),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,940,"new Vector2D( 90.26614159359622,  38.36510808579902),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,941,"new Vector2D( 90.26621342936448,  38.36507942500333),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,942,"new Vector2D( 90.26652190211962,  38.36494042196722),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,943,"new Vector2D( 90.26621240678867,  38.365113172030874),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,944,"new Vector2D( 90.26614057102057,  38.365141832826794),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,945,"new Vector2D( 90.26380080055299,  38.3660381760273),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,946,"new Vector2D( 90.26315345241,  38.36670658276421),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,947,"new Vector2D( 90.26251574942881,  38.367490323488084),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,948,"new Vector2D( 90.26247873448426,  38.36755266444749),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,949,"new Vector2D( 90.26234628016698,  38.36787989125406),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,950,"new Vector2D( 90.26214559424784,  38.36945909356126),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,951,"new Vector2D( 90.25861728442555,  38.37200753430875),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,952,"new Vector2D( 90.23905557537864,  38.375405314295904),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,953,"new Vector2D( 90.22517251874075,  38.38984691662256),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,954,"new Vector2D( 90.22549955153215,  38.3911564273979),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,955,"new Vector2D( 90.22434386063355,  38.391476432092134),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,956,"new Vector2D( 90.22147729457276,  38.39134652252034),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,957,"new Vector2D( 90.22142070120117,  38.391349167741964),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,958,"new Vector2D( 90.20665060751588,  38.39475580900313),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,959,"new Vector2D( 90.20042268367109,  38.39842558622888),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,960,"new Vector2D( 90.17423771242085,  38.402727751805344),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,961,"new Vector2D( 90.16756796257476,  38.40913898597597),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,962,"new Vector2D( 90.16728283954308,  38.411255399912875),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,963,"new Vector2D( 90.16703538220418,  38.41136059866693),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,964,"new Vector2D( 90.16725865657685,  38.41013618805954),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,965,"new Vector2D( 90.16746107640665,  38.40902614307544),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,966,"new Vector2D( 90.16122795307462,  38.39773101873203)"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,968,"PolygonsSet set2 = new PolygonsSet(1.0e-10, vertices2);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,969,PolygonsSet set  = (PolygonsSet) new
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,970,"RegionFactory<Euclidean2D>().difference(set1.copySelf(),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,971,set2.copySelf());
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,973,Vector2D[][] vertices = set.getVertices();
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,974,Assert.assertTrue(vertices[0][0] != null);
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,975,// TODO: the resulting polygon has two boundaries but should have only one
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,976,// this is because for an unknown reason the boundary has two infinitely close
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,977,// parallel paths near the top left of the polygon
True,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,978,"Assert.assertEquals(2, vertices.length);"
