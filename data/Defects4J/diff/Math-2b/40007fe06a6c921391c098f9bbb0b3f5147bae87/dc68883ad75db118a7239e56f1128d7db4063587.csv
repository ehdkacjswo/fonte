is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,108, @throws IllegalArgumentException if <code>v</code> is not comparable with previous entries
True,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,108,* @throws MathIllegalArgumentException if <code>v</code> is not comparable with previous entries
False,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,110,ublic void addValue(Comparable<?> v){
True,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,110,public void addValue(Comparable<?> v) throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,19,import org.apache.commons.math3.exception.MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,90, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,91,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,92,ublic static double sum(final double[] values) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,93,public static double sum(final double[] values)
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,94,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,107, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,109,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,111,inal int length) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,113,final int length) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,124, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,126,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,126,ublic static double sumSq(final double[] values) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,128,public static double sumSq(final double[] values) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,141, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,143,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,145,inal int length) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,147,final int length) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,157, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,159,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,159,ublic static double product(final double[] values) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,161,public static double product(final double[] values)
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,162,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,174, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,177,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,178,inal int length) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,181,final int length) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,194, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,197,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,196,ublic static double sumLog(final double[] values) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,199,public static double sumLog(final double[] values)
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,200,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,215, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,219,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,219,inal int length) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,223,final int length) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,234, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,238,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,236,ublic static double mean(final double[] values) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,240,public static double mean(final double[] values)
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,241,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,254, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,259,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,258,inal int length) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,263,final int length) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,273, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,278,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,275,ublic static double geometricMean(final double[] values) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,280,public static double geometricMean(final double[] values)
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,281,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,293, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,299,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,297,inal int length) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,303,final int length) throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,20,import org.apache.commons.math3.exception.MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,52," If the array is null, an IllegalArgumentException is thrown.</p>"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,53,"* If the array is null, a MathIllegalArgumentException is thrown.</p>"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,56,* @throws MathIllegalArgumentException if values is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,58,ublic double evaluate(final double[] values) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,60,public double evaluate(final double[] values) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,79, IllegalArgumentException is thrown.</p>
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,81,* MathIllegalArgumentException is thrown.</p>
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,86,* @throws MathIllegalArgumentException if the array is null or the indices are not valid
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,87,"ublic double evaluate(final double[] values, final int begin, final int length) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,90,"public double evaluate(final double[] values, final int begin,"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,91,final int length) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,123, @throws IllegalArgumentException if values is null
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,127,* @throws MathIllegalArgumentException if values is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,126,ublic void incrementAll(double[] values) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,130,public void incrementAll(double[] values) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,142, @throws IllegalArgumentException if values is null
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,146,* @throws MathIllegalArgumentException if values is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,145,"ublic void incrementAll(double[] values, int begin, int length) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java,149,"public void incrementAll(double[] values, int begin, int length) throws MathIllegalArgumentException {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,48," The stored value is a copy of the parameter array, not the array itself"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,48,"* The stored value is a copy of the parameter array, not the array itself."
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,74, Set the data array.
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,74,"* Set the data array.  The input array is copied, not referenced."
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,79,* @throws MathIllegalArgumentException if values is null or the indices
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,80,* are not valid
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,80,"ublic void setData(final double[] values, final int begin, final int length) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,83,"public void setData(final double[] values, final int begin, final int length)"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,84,throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,85,if (values == null) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,86,throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,89,if (begin < 0) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,90,"throw new NotPositiveException(LocalizedFormats.START_POSITION, begin);"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,93,if (length < 0) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,94,"throw new NotPositiveException(LocalizedFormats.LENGTH, length);"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,97,if (begin + length > values.length) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,98,"throw new NumberIsTooLargeException(LocalizedFormats.SUBARRAY_ENDS_AFTER_ARRAY_END,"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,99,"begin + length, values.length, true);"
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,88, The stored array is the one which was set by previous calls to
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,108,* The stored array is the one which was set by previous calls to {@link #setData(double[])}.
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,111,* @throws MathIllegalArgumentException if the stored data array is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,92,ublic double evaluate() {
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,113,public double evaluate() throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,99,ublic double evaluate(final double[] values) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,120,public double evaluate(final double[] values) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,107,"ublic abstract double evaluate(final double[] values, final int begin, final int length);"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,128,"public abstract double evaluate(final double[] values, final int begin, final int length)"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,129,throws MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,121, <li>throws <code>IllegalArgumentException</code> if the array is null or
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,143,* <li>throws <code>MathIllegalArgumentException</code> if the array is null or
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,131, @throws IllegalArgumentException if the indices are invalid or the array is null
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,153,* @throws MathIllegalArgumentException if the indices are invalid or the array is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,136,inal int length) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,158,final int length) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,158, @throws IllegalArgumentException if the indices are invalid or the array is null
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,180,* @throws MathIllegalArgumentException if the indices are invalid or the array is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,161,"rotected boolean test(final double[] values, final int begin, final int length, final boolean allowEmpty){"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,183,"protected boolean test(final double[] values, final int begin,"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,184,"final int length, final boolean allowEmpty) throws MathIllegalArgumentException {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,214, @throws IllegalArgumentException if the indices are invalid or the array is null
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,237,* @throws MathIllegalArgumentException if the indices are invalid or the array is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,221,inal int length) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,244,final int length) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,233, <li>throws <code>IllegalArgumentException</code> if any of the following are true:
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,256,* <li>throws <code>MathIllegalArgumentException</code> if any of the following are true:
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,252, @throws IllegalArgumentException if the indices are invalid or the array
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,253, is {@code null}.
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,275,* @throws NullArgumentException if either of the arrays are null
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,276,"* @throws MathIllegalArgumentException if the array indices are not valid,"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,277,"* the weights array contains NaN, infinite or negative elements, or there"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,278,* are no positive weights.
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,256,"rotected boolean test(final double[] values, final double[] weights, final int begin, final int length, final boolean allowEmpty){"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,281,"protected boolean test(final double[] values, final double[] weights,"
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,282,"final int begin, final int length, final boolean allowEmpty) throws MathIllegalArgumentException {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,258,f (weights == null) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java,284,if (weights == null || values == null) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java,24,import org.apache.commons.math3.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java,78,// No try-catch or throws NAE because arg is guaranteed non-null
True,src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java,96,* @throws NullArgumentException if prototypeStatistics is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java,95,ublic AggregateSummaryStatistics(SummaryStatistics prototypeStatistics) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java,99,public AggregateSummaryStatistics(SummaryStatistics prototypeStatistics) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatistics.java,288,// No try - catch or advertising NAE because neither argument will ever be null
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,124,* @throws MathIllegalArgumentException if window size is less than 1 but
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,125,* not equal to {@link #INFINITE_WINDOW}
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,125,ublic DescriptiveStatistics(int window) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,127,public DescriptiveStatistics(int window) throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,150,* @throws NullArgumentException if original is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,149,ublic DescriptiveStatistics(DescriptiveStatistics original) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,152,public DescriptiveStatistics(DescriptiveStatistics original) throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,332, WindowSize controls the number of values which contribute
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,333," to the reported statistics.  For example, if"
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,334," windowSize is set to 3 and the values {1,2,3,4,5}"
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,335, have been added <strong> in that order</strong>
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,336," then the <i>available values</i> are {3,4,5} and all"
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,337, reported statistics will be based on these values
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,335,* WindowSize controls the number of values that contribute to the
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,336,"* reported statistics.  For example, if windowSize is set to 3 and the"
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,337,"* values {1,2,3,4,5} have been added <strong> in that order</strong> then"
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,338,"* the <i>available values</i> are {3,4,5} and all reported statistics will"
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,339,* be based on these values. If {@code windowSize} is decreased as a result
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,340,* of this call and there are more than the new value of elements in the
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,341,"* current dataset, values from the front of the array are discarded to"
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,342,* reduce the dataset to {@code windowSize} elements.
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,345,* @throws MathIllegalArgumentException if window size is less than 1 but
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,346,* not equal to {@link #INFINITE_WINDOW}
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,340,ublic void setWindowSize(int windowSize) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,348,public void setWindowSize(int windowSize) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,409, @throws IllegalStateException if percentile implementation has been
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,417,* @throws MathIllegalStateException if percentile implementation has been
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,412,ublic double getPercentile(double p) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,420,public double getPercentile(double p) throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,453,"utBuffer.append(""median: "").append(getPercentile(50)).append(endl);"
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,461,try {
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,462,"outBuffer.append(""median: "").append(getPercentile(50)).append(endl);"
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,463,} catch (MathIllegalStateException ex) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,464,"outBuffer.append(""median: unavailable"").append(endl);"
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,477,// No try-catch or advertised exception here because arguments are guaranteed valid
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,593, @throws IllegalArgumentException if the supplied implementation does not
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,606,* @throws MathIllegalArgumentException if the supplied implementation does not
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,597,ublic synchronized void setPercentileImpl(
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,598,nivariateStatistic percentileImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,610,public synchronized void setPercentileImpl(UnivariateStatistic percentileImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,611,throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,723,// No try-catch or advertised exception because parms are guaranteed valid
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,148,ublic void addValue(double[] value) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,148,public void addValue(double[] value) throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,415, @throws IllegalStateException if data has already been added
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,416,  (i.e if n > 0)
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,415,* @throws MathIllegalStateException if data has already been added
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,416,* (i.e. if n > 0)
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,419,torelessUnivariateStatistic[] oldImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,419,"StorelessUnivariateStatistic[] oldImpl) throws MathIllegalStateException,"
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,420,DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,444, @throws IllegalStateException if data has already been added
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,445,* @throws MathIllegalStateException if data has already been added
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,447,ublic void setSumImpl(StorelessUnivariateStatistic[] sumImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,448,public void setSumImpl(StorelessUnivariateStatistic[] sumImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,449,"throws MathIllegalStateException, DimensionMismatchException {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,470, @throws IllegalStateException if data has already been added
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,472,* @throws MathIllegalStateException if data has already been added
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,473,ublic void setSumsqImpl(StorelessUnivariateStatistic[] sumsqImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,475,public void setSumsqImpl(StorelessUnivariateStatistic[] sumsqImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,476,"throws MathIllegalStateException, DimensionMismatchException {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,496, @throws IllegalStateException if data has already been added
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,499,* @throws MathIllegalStateException if data has already been added
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,499,ublic void setMinImpl(StorelessUnivariateStatistic[] minImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,502,public void setMinImpl(StorelessUnivariateStatistic[] minImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,503,"throws MathIllegalStateException, DimensionMismatchException {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,522, @throws IllegalStateException if data has already been added
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,526,* @throws MathIllegalStateException if data has already been added
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,525,ublic void setMaxImpl(StorelessUnivariateStatistic[] maxImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,529,public void setMaxImpl(StorelessUnivariateStatistic[] maxImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,530,"throws MathIllegalStateException, DimensionMismatchException{"
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,548, @throws IllegalStateException if data has already been added
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,553,* @throws MathIllegalStateException if data has already been added
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,551,ublic void setSumLogImpl(StorelessUnivariateStatistic[] sumLogImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,556,public void setSumLogImpl(StorelessUnivariateStatistic[] sumLogImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,557,"throws MathIllegalStateException, DimensionMismatchException{"
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,574, @throws IllegalStateException if data has already been added
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,580,* @throws MathIllegalStateException if data has already been added
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,577,ublic void setGeoMeanImpl(StorelessUnivariateStatistic[] geoMeanImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,583,public void setGeoMeanImpl(StorelessUnivariateStatistic[] geoMeanImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,584,"throws MathIllegalStateException, DimensionMismatchException {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,600, @throws IllegalStateException if data has already been added
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,607,* @throws MathIllegalStateException if data has already been added
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,603,ublic void setMeanImpl(StorelessUnivariateStatistic[] meanImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,610,public void setMeanImpl(StorelessUnivariateStatistic[] meanImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,611,"throws MathIllegalStateException, DimensionMismatchException{"
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,611,rivate void checkEmpty() {
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,619,private void checkEmpty() throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,623,rivate void checkDimension(int dimension) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/MultivariateSummaryStatistics.java,631,private void checkDimension(int dimension) throws DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,19,import org.apache.commons.math3.exception.MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,44, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,46,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,46,oid incrementAll(double[] values);
True,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,48,void incrementAll(double[] values) throws MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,57, @throws IllegalArgumentException if the array is null or the index
True,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,59,* @throws MathIllegalArgumentException if the array is null or the index
False,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,59,"oid incrementAll(double[] values, int start, int length);"
True,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic.java,61,"void incrementAll(double[] values, int start, int length) throws MathIllegalArgumentException;"
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,130,* @throws NullArgumentException if original is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,131,ublic SummaryStatistics(SummaryStatistics original) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,132,public SummaryStatistics(SummaryStatistics original) throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,426, @throws IllegalStateException if data has already been added (i.e if n >
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,427,         0)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,427,* @throws MathIllegalStateException if data has already been added (i.e if n >0)
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,430,ublic void setSumImpl(StorelessUnivariateStatistic sumImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,430,public void setSumImpl(StorelessUnivariateStatistic sumImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,431,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,455, @throws IllegalStateException if data has already been added (i.e if n >
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,456,         0)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,456,* @throws MathIllegalStateException if data has already been added (i.e if n > 0)
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,459,ublic void setSumsqImpl(StorelessUnivariateStatistic sumsqImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,459,public void setSumsqImpl(StorelessUnivariateStatistic sumsqImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,460,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,484, @throws IllegalStateException if data has already been added (i.e if n >
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,485,         0)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,485,* @throws MathIllegalStateException if data has already been added (i.e if n > 0)
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,488,ublic void setMinImpl(StorelessUnivariateStatistic minImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,488,public void setMinImpl(StorelessUnivariateStatistic minImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,489,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,513, @throws IllegalStateException if data has already been added (i.e if n >
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,514,         0)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,514,* @throws MathIllegalStateException if data has already been added (i.e if n > 0)
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,517,ublic void setMaxImpl(StorelessUnivariateStatistic maxImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,517,public void setMaxImpl(StorelessUnivariateStatistic maxImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,518,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,542, @throws IllegalStateException if data has already been added (i.e if n >
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,543,         0)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,543,* @throws MathIllegalStateException if data has already been added (i.e if n > 0)
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,546,ublic void setSumLogImpl(StorelessUnivariateStatistic sumLogImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,546,public void setSumLogImpl(StorelessUnivariateStatistic sumLogImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,547,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,572, @throws IllegalStateException if data has already been added (i.e if n >
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,573,         0)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,573,* @throws MathIllegalStateException if data has already been added (i.e if n > 0)
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,576,ublic void setGeoMeanImpl(StorelessUnivariateStatistic geoMeanImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,576,public void setGeoMeanImpl(StorelessUnivariateStatistic geoMeanImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,577,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,601, @throws IllegalStateException if data has already been added (i.e if n >
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,602,         0)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,602,* @throws MathIllegalStateException if data has already been added (i.e if n > 0)
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,605,ublic void setMeanImpl(StorelessUnivariateStatistic meanImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,605,public void setMeanImpl(StorelessUnivariateStatistic meanImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,606,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,630, @throws IllegalStateException if data has already been added (i.e if n >
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,631,         0)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,631,* @throws MathIllegalStateException if data has already been added (i.e if n > 0)
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,634,ublic void setVarianceImpl(StorelessUnivariateStatistic varianceImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,634,public void setVarianceImpl(StorelessUnivariateStatistic varianceImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,635,throws MathIllegalStateException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,642,* @throws MathIllegalStateException if data has been added
False,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,642,rivate void checkEmpty() {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,644,private void checkEmpty() throws MathIllegalStateException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SummaryStatistics.java,658,// No try-catch or advertised exception because arguments are guaranteed non-null
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,19,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,45,// no try-catch or advertized IAE because arg is valid
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,52,* @throws MathIllegalArgumentException if window size is less than 1 but
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,53,* not equal to {@link #INFINITE_WINDOW}
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,51,ublic SynchronizedDescriptiveStatistics(int window) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,55,public SynchronizedDescriptiveStatistics(int window) throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,63,* @throws NullArgumentException if original is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,60,ublic SynchronizedDescriptiveStatistics(SynchronizedDescriptiveStatistics original) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,65,public SynchronizedDescriptiveStatistics(SynchronizedDescriptiveStatistics original)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,66,throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,132,ublic synchronized void setWindowSize(int windowSize) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,138,public synchronized void setWindowSize(int windowSize) throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics.java,160,// No try-catch or advertised exception because arguments are guaranteed non-null
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,19,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,20,import org.apache.commons.math3.exception.MathIllegalStateException;
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,54,ublic synchronized void addValue(double[] value) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,56,public synchronized void addValue(double[] value) throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,190,ublic synchronized void setSumImpl(StorelessUnivariateStatistic[] sumImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,192,public synchronized void setSumImpl(StorelessUnivariateStatistic[] sumImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,193,"throws DimensionMismatchException, MathIllegalStateException {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,206,ublic synchronized void setSumsqImpl(StorelessUnivariateStatistic[] sumsqImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,209,public synchronized void setSumsqImpl(StorelessUnivariateStatistic[] sumsqImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,210,"throws DimensionMismatchException, MathIllegalStateException {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,222,ublic synchronized void setMinImpl(StorelessUnivariateStatistic[] minImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,226,public synchronized void setMinImpl(StorelessUnivariateStatistic[] minImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,227,"throws DimensionMismatchException, MathIllegalStateException {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,238,ublic synchronized void setMaxImpl(StorelessUnivariateStatistic[] maxImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,243,public synchronized void setMaxImpl(StorelessUnivariateStatistic[] maxImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,244,"throws DimensionMismatchException, MathIllegalStateException{"
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,254,ublic synchronized void setSumLogImpl(StorelessUnivariateStatistic[] sumLogImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,260,public synchronized void setSumLogImpl(StorelessUnivariateStatistic[] sumLogImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,261,"throws DimensionMismatchException, MathIllegalStateException {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,270,ublic synchronized void setGeoMeanImpl(StorelessUnivariateStatistic[] geoMeanImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,277,public synchronized void setGeoMeanImpl(StorelessUnivariateStatistic[] geoMeanImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,278,"throws DimensionMismatchException, MathIllegalStateException {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,286,ublic synchronized void setMeanImpl(StorelessUnivariateStatistic[] meanImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,294,public synchronized void setMeanImpl(StorelessUnivariateStatistic[] meanImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java,295,"throws DimensionMismatchException, MathIllegalStateException {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,19,import org.apache.commons.math3.exception.MathIllegalStateException;
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,52,* @throws NullArgumentException if original is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,52,ublic SynchronizedSummaryStatistics(SynchronizedSummaryStatistics original) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,54,public SynchronizedSummaryStatistics(SynchronizedSummaryStatistics original)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,55,throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,196,ublic synchronized void setSumImpl(StorelessUnivariateStatistic sumImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,199,public synchronized void setSumImpl(StorelessUnivariateStatistic sumImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,200,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,212,ublic synchronized void setSumsqImpl(StorelessUnivariateStatistic sumsqImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,216,public synchronized void setSumsqImpl(StorelessUnivariateStatistic sumsqImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,217,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,228,ublic synchronized void setMinImpl(StorelessUnivariateStatistic minImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,233,public synchronized void setMinImpl(StorelessUnivariateStatistic minImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,234,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,244,ublic synchronized void setMaxImpl(StorelessUnivariateStatistic maxImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,250,public synchronized void setMaxImpl(StorelessUnivariateStatistic maxImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,251,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,260,ublic synchronized void setSumLogImpl(StorelessUnivariateStatistic sumLogImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,267,public synchronized void setSumLogImpl(StorelessUnivariateStatistic sumLogImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,268,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,276,ublic synchronized void setGeoMeanImpl(StorelessUnivariateStatistic geoMeanImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,284,public synchronized void setGeoMeanImpl(StorelessUnivariateStatistic geoMeanImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,285,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,292,ublic synchronized void setMeanImpl(StorelessUnivariateStatistic meanImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,301,public synchronized void setMeanImpl(StorelessUnivariateStatistic meanImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,302,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,308,ublic synchronized void setVarianceImpl(StorelessUnivariateStatistic varianceImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,318,public synchronized void setVarianceImpl(StorelessUnivariateStatistic varianceImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,319,throws MathIllegalStateException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics.java,333,// No try-catch or advertised exception because arguments are guaranteed non-null
True,src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java,19,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java,34,* @throws MathIllegalArgumentException  if values is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java,33,ouble evaluate(double[] values);
True,src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java,36,double evaluate(double[] values) throws MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java,46,* @throws MathIllegalArgumentException if values is null or the indices are invalid
False,src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java,44,"ouble evaluate(double[] values, int begin, int length);"
True,src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java,src/main/java/org/apache/commons/math3/stat/descriptive/UnivariateStatistic.java,48,"double evaluate(double[] values, int begin, int length) throws MathIllegalArgumentException;"
True,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,19,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,36,"* @throws MathIllegalArgumentException if either array is null, lengths"
True,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,37,"* do not match, weights contain NaN, negative or infinite values, or"
True,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,38,* weights does not include at least on positive value
False,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,35,"ouble evaluate(double[] values, double[] weights);"
True,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,40,"double evaluate(double[] values, double[] weights) throws MathIllegalArgumentException;"
True,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,51,"* @throws MathIllegalArgumentException if either array is null, lengths"
True,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,52,"* do not match, indices are invalid, weights contain NaN, negative or"
True,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,53,"* infinite values, or weights does not include at least on positive value"
False,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,47,"ouble evaluate(double[] values, double[] weights, int begin, int length);"
True,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,55,"double evaluate(double[] values, double[] weights, int begin, int length)"
True,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,src/main/java/org/apache/commons/math3/stat/descriptive/WeightedEvaluation.java,56,throws MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/FirstMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/FirstMoment.java,91,* @throws NullArgumentException if original is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/FirstMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/FirstMoment.java,92,ublic FirstMoment(FirstMoment original) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/FirstMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/FirstMoment.java,93,public FirstMoment(FirstMoment original) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/FirstMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/FirstMoment.java,145,// No try-catch or advertised exception because args are guaranteed non-null
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/FourthMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/FourthMoment.java,77,* @throws NullArgumentException if original is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/FourthMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/FourthMoment.java,78,ublic FourthMoment(FourthMoment original) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/FourthMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/FourthMoment.java,79,public FourthMoment(FourthMoment original) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/FourthMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/FourthMoment.java,130,// No try-catch or advertised exception because args are guaranteed non-null
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,21,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,75,* @throws NullArgumentException if original is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,75,ublic GeometricMean(GeometricMean original) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,77,public GeometricMean(GeometricMean original) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,96,// no try-catch or advertised exception because args guaranteed non-null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,139, @throws IllegalArgumentException if the input array is null or the array
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,142,* @throws MathIllegalArgumentException if the input array is null or the array
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,144,"inal double[] values, final int begin, final int length) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,147,"final double[] values, final int begin, final int length)"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,148,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,164, @throws IllegalStateException if data has already been added
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,168,* @throws MathIllegalStateException if data has already been added
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,167,ublic void setSumLogImpl(
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,168,torelessUnivariateStatistic sumLogImpl) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,171,public void setSumLogImpl(StorelessUnivariateStatistic sumLogImpl)
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,172,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,200, Throws IllegalStateException if n > 0.
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,204,* Throws MathIllegalStateException if n > 0.
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,205,* @throws MathIllegalStateException if data has been added to this statistic
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,202,rivate void checkEmpty() {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/GeometricMean.java,207,private void checkEmpty() throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,21,mport org.apache.commons.math3.exception.MathIllegalStateException;
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,21,import org.apache.commons.math3.exception.MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,23,mport org.apache.commons.math3.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,87,* @throws NullArgumentException if original is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,89,ublic Kurtosis(Kurtosis original) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,89,public Kurtosis(Kurtosis original) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,95,* <p>Note that when {@link #Kurtosis(FourthMoment)} is used to
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,96,"* create a Variance, this method does nothing. In that case, the"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,97,* FourthMoment should be incremented directly.</p>
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,100,  else  {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,101,hrow new MathIllegalStateException(LocalizedFormats.CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS);
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,133, else  {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,134,hrow new MathIllegalStateException(LocalizedFormats.CANNOT_CLEAR_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS);
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,158, @return the kurtosis of the values or Double.NaN if length is less than
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,159, 4
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,160, @throws IllegalArgumentException if the input array is null or the array
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,157,* @return the kurtosis of the values or Double.NaN if length is less than 4
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,158,* @throws MathIllegalArgumentException if the input array is null or the array
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,164,"ublic double evaluate(final double[] values,final int begin, final int length) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,162,"public double evaluate(final double[] values,final int begin, final int length)"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,163,throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Kurtosis.java,203,// No try-catch because args are guaranteed non-null
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,21,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,100,* @throws NullArgumentException if original is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,100,ublic Mean(Mean original) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,102,public Mean(Mean original) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,108,* <p>Note that when {@link #Mean(FirstMoment)} is used to
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,109,"* create a Mean, this method does nothing. In that case, the"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,110,* FirstMoment should be incremented directly.</p>
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,152, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,157,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,156,"ublic double evaluate(final double[] values,final int begin, final int length) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,161,"public double evaluate(final double[] values,final int begin, final int length)"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,162,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,200, @throws IllegalArgumentException if the parameters are not valid
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,206,* @throws MathIllegalArgumentException if the parameters are not valid
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,204,"inal int begin, final int length) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,210,"final int begin, final int length) throws MathIllegalArgumentException {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,225, Throws <code>IllegalArgumentException</code> if either array is null.</p>
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,231,* Throws <code>MathIllegalArgumentException</code> if either array is null.</p>
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,231, Throws <code>IllegalArgumentException</code> if any of the following are true:
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,237,* Throws <code>MathIllegalArgumentException</code> if any of the following are true:
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,243, @throws IllegalArgumentException if the parameters are not valid
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,249,* @throws MathIllegalArgumentException if the parameters are not valid
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,246,"ublic double evaluate(final double[] values, final double[] weights) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,252,"public double evaluate(final double[] values, final double[] weights)"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,253,throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Mean.java,263,// No try-catch or advertised exception because args are guaranteed non-null
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java,69,* @throws NullArgumentException if original is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java,70,ublic SecondMoment(SecondMoment original) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java,71,public SecondMoment(SecondMoment original)
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java,72,throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SecondMoment.java,112,// no try-catch or advertised NAE because args are guaranteed non-null
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,22,import org.apache.commons.math3.exception.MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,22,mport org.apache.commons.math3.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,137,* @throws NullArgumentException  if original is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,137,ublic SemiVariance(final SemiVariance original) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,139,public SemiVariance(final SemiVariance original) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,150,// No try-catch or advertised exception because args are guaranteed non-null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,172," This method calculates {@link SemiVariance} for the entire array against the mean, using"
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,173, instance properties varianceDirection and biasCorrection.
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,175, @param values the input array
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,176, @return the SemiVariance
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,177, @throws IllegalArgumentException if values is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,180,Override
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,181,ublic double evaluate(final double[] values) {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,182,f (values == null) {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,183,hrow new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,185,"eturn evaluate(values, 0, values.length);"
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,200, @throws IllegalArgumentException if the parameters are not valid
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,184,* @throws MathIllegalArgumentException if the parameters are not valid
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,204,"ublic double evaluate(final double[] values, final int start, final int length) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,188,"public double evaluate(final double[] values, final int start, final int length)"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,189,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,217, @throws IllegalArgumentException if values is null
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,202,* @throws MathIllegalArgumentException if values is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,220,"ublic double evaluate(final double[] values, Direction direction) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,205,"public double evaluate(final double[] values, Direction direction)"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,206,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,273, @throws IllegalArgumentException if the parameters are not valid
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,259,* @throws MathIllegalArgumentException if the parameters are not valid
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,277,"inal boolean corrected, final int start, final int length) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/SemiVariance.java,263,"final boolean corrected, final int start, final int length) throws MathIllegalArgumentException {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,21,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,82,* @throws NullArgumentException if original is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,82,ublic Skewness(Skewness original) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,84,public Skewness(Skewness original) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,90,* <p>Note that when {@link #Skewness(ThirdMoment)} is used to
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,91,"* create a Skewness, this method does nothing. In that case, the"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,92,* ThirdMoment should be incremented directly.</p>
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,149, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,154,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,154,inal int length) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,159,final int length) throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Skewness.java,203,// No try-catch or advertised exception because args are guaranteed non-null
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,21,import org.apache.commons.math3.exception.MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,145, Throws <code>IllegalArgumentException</code> if the array is null.</p>
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,146,* Throws <code>MathIllegalArgumentException</code> if the array is null.</p>
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,151, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,152,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,154,ublic double evaluate(final double[] values)  {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,155,public double evaluate(final double[] values) throws MathIllegalArgumentException  {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,165, Throws <code>IllegalArgumentException</code> if the array is null.</p>
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,166,* Throws <code>MathIllegalArgumentException</code> if the array is null.</p>
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,173, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,174,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,177,"ublic double evaluate(final double[] values, final int begin, final int length)  {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,178,"public double evaluate(final double[] values, final int begin, final int length)"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,179,throws MathIllegalArgumentException  {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,202, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,204,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,206,"inal int begin, final int length)  {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,208,"final int begin, final int length) throws MathIllegalArgumentException  {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,222, Throws <code>IllegalArgumentException</code> if the array is null.</p>
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,224,* Throws <code>MathIllegalArgumentException</code> if the array is null.</p>
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,229, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,231,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,231,"ublic double evaluate(final double[] values, final double mean)  {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,233,"public double evaluate(final double[] values, final double mean)"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,234,throws MathIllegalArgumentException  {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/StandardDeviation.java,258,// No try-catch or advertised exception because args are guaranteed non-null
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java,79,* @throws NullArgumentException if orginal is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java,80,ublic ThirdMoment(ThirdMoment original) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java,81,public ThirdMoment(ThirdMoment original) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/ThirdMoment.java,125,// No try-catch or advertised exception because args are guaranteed non-null
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,21,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,150,* @throws NullArgumentException if original is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,150,ublic Variance(Variance original) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,152,public Variance(Variance original) throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,217, Throws <code>IllegalArgumentException</code> if the array is null.</p>
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,219,* Throws <code>MathIllegalArgumentException</code> if the array is null.</p>
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,223, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,225,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,226,ublic double evaluate(final double[] values) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,228,public double evaluate(final double[] values) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,244, Throws <code>IllegalArgumentException</code> if the array is null.</p>
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,246,* Throws <code>MathIllegalArgumentException</code> if the array is null.</p>
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,250, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,252,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,254,"ublic double evaluate(final double[] values, final int begin, final int length) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,256,"public double evaluate(final double[] values, final int begin, final int length)"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,257,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,303, Throws <code>IllegalArgumentException</code> if either array is null.</p>
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,306,* Throws <code>MathIllegalArgumentException</code> if either array is null.</p>
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,310, @throws IllegalArgumentException if the parameters are not valid
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,313,* @throws MathIllegalArgumentException if the parameters are not valid
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,314,"inal int begin, final int length) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,317,"final int begin, final int length) throws MathIllegalArgumentException {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,350, Throws <code>IllegalArgumentException</code> if any of the following are true:
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,353,* Throws <code>MathIllegalArgumentException</code> if any of the following are true:
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,361, Throws <code>IllegalArgumentException</code> if either array is null.</p>
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,364,* Throws <code>MathIllegalArgumentException</code> if either array is null.</p>
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,366, @throws IllegalArgumentException if the parameters are not valid
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,369,* @throws MathIllegalArgumentException if the parameters are not valid
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,369,"ublic double evaluate(final double[] values, final double[] weights) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,372,"public double evaluate(final double[] values, final double[] weights)"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,373,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,387, Throws <code>IllegalArgumentException</code> if the array is null.</p>
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,391,* Throws <code>MathIllegalArgumentException</code> if the array is null.</p>
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,396, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,400,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,400,"inal int begin, final int length) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,404,"final int begin, final int length) throws MathIllegalArgumentException {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,443, Throws <code>IllegalArgumentException</code> if the array is null.</p>
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,447,* Throws <code>MathIllegalArgumentException</code> if the array is null.</p>
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,450, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,454,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,452,"ublic double evaluate(final double[] values, final double mean) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,456,"public double evaluate(final double[] values, final double mean) throws MathIllegalArgumentException {"
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,480, Throws <code>IllegalArgumentException</code> if any of the following are true:
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,484,* Throws <code>MathIllegalArgumentException</code> if any of the following are true:
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,498, @throws IllegalArgumentException if the parameters are not valid
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,502,* @throws MathIllegalArgumentException if the parameters are not valid
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,502,"inal double mean, final int begin, final int length) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,506,"final double mean, final int begin, final int length)"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,507,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,557, Throws <code>IllegalArgumentException</code> if any of the following are true:
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,562,* Throws <code>MathIllegalArgumentException</code> if any of the following are true:
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,572, @throws IllegalArgumentException if the parameters are not valid
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,577,* @throws MathIllegalArgumentException if the parameters are not valid
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,575,"ublic double evaluate(final double[] values, final double[] weights, final double mean) {"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,580,"public double evaluate(final double[] values, final double[] weights, final double mean)"
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,581,throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/Variance.java,605,// No try-catch or advertised exception because parameters are guaranteed non-null
False,src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialMean.java,52,ublic void increment(double[] v) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialMean.java,src/main/java/org/apache/commons/math3/stat/descriptive/moment/VectorialMean.java,52,public void increment(double[] v) throws DimensionMismatchException {
