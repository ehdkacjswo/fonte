is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java,src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java,19,mport java.lang.reflect.Array;
False,src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java,src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java,181,ublic T[] sample(int sampleSize) throws NotStrictlyPositiveException {
True,src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java,src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java,181,public Object[] sample(int sampleSize) throws NotStrictlyPositiveException {
False,src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java,src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java,186,"SuppressWarnings(""unchecked"")"
False,src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java,src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java,187,"inal T[]out = (T[]) Array.newInstance(singletons.get(0).getClass(), sampleSize);"
True,src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java,src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java,187,final Object[] out = new Object[sampleSize];
True,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,19,import java.util.ArrayList;
True,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,20,import java.util.List;
True,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,27,import org.apache.commons.math3.util.Pair;
True,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,207,@Test
True,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,208,public void testIssue942() {
True,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,209,"List<Pair<Object,Double>> list = new ArrayList<Pair<Object, Double>>();"
True,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,210,"list.add(new Pair<Object, Double>(new Object() {}, new Double(0)));"
True,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,211,"list.add(new Pair<Object, Double>(new Object() {}, new Double(1)));"
True,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/DiscreteRealDistributionTest.java,212,"Assert.assertEquals(1, new DiscreteDistribution<Object>(list).sample(1).length);"
