is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,21,mport org.apache.commons.math3.exception.OutOfRangeException;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,24,import org.apache.commons.math3.exception.OutOfRangeException;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,160,* Appends data from another regression calculation to this one.
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,162,* <p>The mean update formulae are based on a paper written by Philippe
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,163,* P&eacute;bay:
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,164,* <a
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,165,"* href=""http://prod.sandia.gov/techlib/access-control.cgi/2008/086212.pdf"">"
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,166,"* Formulas for Robust, One-Pass Parallel Computation of Covariances and"
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,167,"* Arbitrary-Order Statistical Moments</a>, 2008, Technical Report"
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,168,"* SAND2008-6212, Sandia National Laboratories.</p>"
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,170,* @param reg model to append data from
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,172,public void append(SimpleRegression reg) {
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,173,if (n == 0) {
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,174,xbar = reg.xbar;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,175,ybar = reg.ybar;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,176,sumXX = reg.sumXX;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,177,sumYY = reg.sumYY;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,178,sumXY = reg.sumXY;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,179,} else {
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,180,if (hasIntercept) {
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,181,final double fact1 = reg.n / (double) (reg.n + n);
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,182,final double fact2 = n * reg.n / (double) (reg.n + n);
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,183,final double dx = reg.xbar - xbar;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,184,final double dy = reg.ybar - ybar;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,185,sumXX += reg.sumXX + dx * dx * fact2;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,186,sumYY += reg.sumYY + dy * dy * fact2;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,187,sumXY += reg.sumXY + dx * dy * fact2;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,188,xbar += dx * fact1;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,189,ybar += dy * fact1;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,190,}else{
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,191,sumXX += reg.sumXX;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,192,sumYY += reg.sumYY;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,193,sumXY += reg.sumXY;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,196,sumX += reg.sumX;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,197,sumY += reg.sumY;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,198,n += reg.n;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,23,import org.apache.commons.math3.random.ISAACRandom;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,115,* Test that the SimpleRegression objects generated from combining two
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,116,* SimpleRegression objects created from subsets of data are identical to
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,117,* SimpleRegression objects created from the combined data.
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,119,@Test
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,120,public void testAppend() {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,121,check(false);
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,122,check(true);
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,126,* Checks that adding data to a single model gives the same result
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,127,"* as adding ""parts"" of the dataset to smaller models and using append"
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,128,* to aggregate the smaller models.
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,130,* @param includeIntercept
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,132,private void check(boolean includeIntercept) {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,133,final int sets = 2;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,134,final ISAACRandom rand = new ISAACRandom(10L);// Seed can be changed
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,135,final SimpleRegression whole = new SimpleRegression(includeIntercept);// regression of the whole set
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,136,final SimpleRegression parts = new SimpleRegression(includeIntercept);// regression with parts.
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,138,for (int s = 0; s < sets; s++) {// loop through each subset of data.
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,139,final double coef = rand.nextDouble();
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,140,final SimpleRegression sub = new SimpleRegression(includeIntercept);// sub regression
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,141,for (int i = 0; i < 5; i++) { // loop through individual samlpes.
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,142,final double x = rand.nextDouble();
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,143,final double y = x * coef + rand.nextDouble();// some noise
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,144,"sub.addData(x, y);"
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,145,"whole.addData(x, y);"
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,147,parts.append(sub);
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,148,"Assert.assertTrue(equals(parts, whole, 1E-6));"
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,153,* Returns true iff the statistics reported by model1 are all within tol of
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,154,* those reported by model2.
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,156,* @param model1 first model
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,157,* @param model2 second model
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,158,* @param tol tolerance
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,159,* @return true if the two models report the same regression stats
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,161,"private boolean equals(SimpleRegression model1, SimpleRegression model2, double tol) {"
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,162,if (model1.getN() != model2.getN()) {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,163,return false;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,165,if (Math.abs(model1.getIntercept() - model2.getIntercept()) > tol) {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,166,return false;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,168,if (Math.abs(model1.getInterceptStdErr() - model2.getInterceptStdErr()) > tol) {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,169,return false;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,171,if (Math.abs(model1.getMeanSquareError() - model2.getMeanSquareError()) > tol) {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,172,return false;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,174,if (Math.abs(model1.getR() - model2.getR()) > tol) {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,175,return false;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,177,if (Math.abs(model1.getRegressionSumSquares() - model2.getRegressionSumSquares()) > tol) {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,178,return false;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,180,if (Math.abs(model1.getRSquare() - model2.getRSquare()) > tol) {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,181,return false;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,183,if (Math.abs(model1.getSignificance() - model2.getSignificance()) > tol) {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,184,return false;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,186,if (Math.abs(model1.getSlope() - model2.getSlope()) > tol) {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,187,return false;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,189,if (Math.abs(model1.getSlopeConfidenceInterval() - model2.getSlopeConfidenceInterval()) > tol) {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,190,return false;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,192,if (Math.abs(model1.getSlopeStdErr() - model2.getSlopeStdErr()) > tol) {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,193,return false;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,195,if (Math.abs(model1.getSumOfCrossProducts() - model2.getSumOfCrossProducts()) > tol) {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,196,return false;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,198,if (Math.abs(model1.getSumSquaredErrors() - model2.getSumSquaredErrors()) > tol) {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,199,return false;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,201,if (Math.abs(model1.getTotalSumSquares() - model2.getTotalSumSquares()) > tol) {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,202,return false;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,204,if (Math.abs(model1.getXSumSquares() - model2.getXSumSquares()) > tol) {
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,205,return false;
True,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,207,return true;
