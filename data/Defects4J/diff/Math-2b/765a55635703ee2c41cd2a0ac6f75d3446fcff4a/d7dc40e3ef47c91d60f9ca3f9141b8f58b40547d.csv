is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,21,mport org.apache.commons.math.MathException;
False,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,35,ublic void testSinFunction() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,34,public void testSinFunction() {
False,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,54,ublic void testQuinticFunction() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,53,public void testQuinticFunction() {
False,src/test/java/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,19,mport org.apache.commons.math.MathException;
False,src/test/java/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,45,ublic void testSinFunction() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,44,public void testSinFunction() {
False,src/test/java/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,69,ublic void testQuinticFunction() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java,68,public void testQuinticFunction() {
False,src/test/java/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,19,mport org.apache.commons.math.MathException;
False,src/test/java/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,44,ublic void testSinFunction() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,43,public void testSinFunction() {
False,src/test/java/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,68,ublic void testQuinticFunction() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java,67,public void testQuinticFunction() {
False,src/test/java/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,19,mport org.apache.commons.math.MathException;
False,src/test/java/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,44,ublic void testSinFunction() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,43,public void testSinFunction() {
False,src/test/java/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,68,ublic void testQuinticFunction() throws MathException {
True,src/test/java/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java,67,public void testQuinticFunction() {
False,src/test/java/org/apache/commons/math/distribution/BetaDistributionTest.java,src/test/java/org/apache/commons/math/distribution/BetaDistributionTest.java,19,mport org.apache.commons.math.MathException;
False,src/test/java/org/apache/commons/math/distribution/BetaDistributionTest.java,src/test/java/org/apache/commons/math/distribution/BetaDistributionTest.java,25,ublic void testCumulative() throws MathException {
True,src/test/java/org/apache/commons/math/distribution/BetaDistributionTest.java,src/test/java/org/apache/commons/math/distribution/BetaDistributionTest.java,24,public void testCumulative() {
False,src/test/java/org/apache/commons/math/distribution/BetaDistributionTest.java,src/test/java/org/apache/commons/math/distribution/BetaDistributionTest.java,144,"rivate void checkCumulative(double alpha, double beta, double[] x, double[] cumes) throws MathException {"
True,src/test/java/org/apache/commons/math/distribution/BetaDistributionTest.java,src/test/java/org/apache/commons/math/distribution/BetaDistributionTest.java,143,"private void checkCumulative(double alpha, double beta, double[] x, double[] cumes) {"
False,src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java,src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java,20,mport org.apache.commons.math.MathException;
False,src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java,src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java,183,ublic void testMath280() throws MathException {
True,src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java,src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java,182,public void testMath280() {
False,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,22,mport org.apache.commons.math.MathException;
False,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,147,ublic void nistData() throws MathException{
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,146,public void nistData(){
False,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,159,"rivate double[] makeNistResults(double[] args, int df) throws MathException{"
True,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,158,"private double[] makeNistResults(double[] args, int df){"
False,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,23,mport java.text.ParseException;
False,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,272,ublic void testParseBig() throws ParseException {
True,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,271,public void testParseBig() {
False,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,21,mport org.apache.commons.math.MathException;
False,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,236,ublic void testFilippelli() throws MathException {
True,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,235,public void testFilippelli() {
False,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,388,ublic void testWampler1() throws MathException {
True,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,387,public void testWampler1() {
False,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,448,ublic void testWampler2() throws MathException {
True,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,447,public void testWampler2() {
False,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,507,ublic void testWampler3() throws MathException {
True,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,506,public void testWampler3() {
False,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,564,ublic void testWampler4() throws MathException {
True,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,563,public void testWampler4() {
False,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,762,ublic void testOneRedundantColumn() throws MathException {
True,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,761,public void testOneRedundantColumn() {
False,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,825,ublic void testThreeRedundantColumn() throws MathException {
True,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,824,public void testThreeRedundantColumn() {
False,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,1064,ublic void testSubsetRegression() throws MathException {
True,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java,1063,public void testSubsetRegression() {
