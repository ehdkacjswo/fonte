is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,226,"et = Gamma.logGamma(a, epsilon, maxIterations) + Gamma.logGamma(b, epsilon, maxIterations)"
False,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,227," Gamma.logGamma(a + b, epsilon, maxIterations);"
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,226,ret = Gamma.logGamma(a) + Gamma.logGamma(b)
True,src/java/org/apache/commons/math/special/Beta.java,src/java/org/apache/commons/math/special/Beta.java,227,- Gamma.logGamma(a + b);
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,68,/** Lanczos coefficients */
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,69,private static double[] lanczos =
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,71,"0.99999999999999709182,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,72,"57.156235665862923517,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,73,"-59.597960355475491248,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,74,"14.136097974741747174,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,75,"-0.49191381609762019978,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,76,".33994649984811888699e-4,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,77,".46523628927048575665e-4,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,78,"-.98374475304879564677e-4,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,79,".15808870322491248884e-3,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,80,"-.21026444172410488319e-3,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,81,".21743961811521264320e-3,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,82,"-.16431810653676389022e-3,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,83,".84418223983852743293e-4,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,84,"-.26190838401581408670e-4,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,85,".36899182659531622704e-5,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,132,* @param epsilon When the absolute value of the nth item in the
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,133,*                series is less than epsilon the approximation ceases
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,134,*                to calculate further elements in the series.
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,135,"* @param maxIterations Maximum number of ""iterations"" to complete."
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,113,"ublic static double regularizedGammaP(double a, double x, double epsilon, int maxIterations) {"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,138,"public static double regularizedGammaP(double a,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,139,"double x,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,140,"double epsilon,"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,141,int maxIterations) {
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,137,"et = Math.exp(-x + (a * Math.log(x)) - logGamma(a, epsilon, maxIterations)) * sum;"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,165,ret = Math.exp(-x +
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,166,(a * Math.log(x)) -
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,167,logGamma(a))
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,168,* sum;
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,165,"ublic static double logGamma(double x, double epsilon, int maxIterations) {"
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,196,public static double logGamma(double x) {
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,173,/ Lanczos coefficients
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,174,ouble[] c =
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,176,".99999999999999709182,"
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,177,"7.156235665862923517,"
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,178,"59.597960355475491248,"
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,179,"4.136097974741747174,"
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,180,"0.49191381609762019978,"
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,181,"33994649984811888699e-4,"
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,182,"46523628927048575665e-4,"
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,183,".98374475304879564677e-4,"
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,184,"15808870322491248884e-3,"
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,185,".21026444172410488319e-3,"
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,186,"21743961811521264320e-3,"
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,187,".16431810653676389022e-3,"
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,188,"84418223983852743293e-4,"
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,189,".26190838401581408670e-4,"
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,190,"36899182659531622704e-5,"
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,194,or (int i = 1; i < c.length; ++i) {
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,195,um = sum + (c[i] / (x + i));
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,205,for (int i = 1; i < lanczos.length; ++i) {
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,206,sum = sum + (lanczos[i] / (x + i));
False,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,197,um = sum + c[0];
True,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,208,sum = sum + lanczos[0];
False,src/test/org/apache/commons/math/special/GammaTest.java,src/test/org/apache/commons/math/special/GammaTest.java,78,"ouble actual = Gamma.logGamma(x, 10e-5, Integer.MAX_VALUE);"
True,src/test/org/apache/commons/math/special/GammaTest.java,src/test/org/apache/commons/math/special/GammaTest.java,78,double actual = Gamma.logGamma(x);
