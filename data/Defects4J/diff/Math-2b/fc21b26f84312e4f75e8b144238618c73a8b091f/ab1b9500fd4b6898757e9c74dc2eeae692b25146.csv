is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,239,* The sum is computed using the computational formula
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,240,* <p>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,241,* <code>SSE = SYY - (SXY * SXY / SXX)</code>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,242,* <p>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,243,* where <code>SYY</code> is the sum of the squared deviations of the y
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,244,"* values about their mean, <code>SXX</code> is similarly defined and"
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,245,* <code>SXY</code> is the sum of the products of x and y mean deviations.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,246,* <p>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,247,* The sums are accumulated using the updating algorithm referenced in
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,248,* {@link #addData}.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,249,* <p>
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,250,"* The return value is constrained to be non-negative - i.e., if due to"
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,251,"* rounding errors the computational formula returns a negative result,"
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,252,* 0 is returned.
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,253,* <p>
False,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,249,eturn sumYY - sumXY * sumXY / sumXX;
True,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/java/org/apache/commons/math/stat/regression/SimpleRegression.java,264,"return Math.max(0d, sumYY - sumXY * sumXY / sumXX);"
True,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,240,assertTrue(regression.getSumSquaredErrors() >= 0.0);
True,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,267,// Jira MATH-85 = Bugzilla 39432
True,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,268,public void testSSENonNegative() {
True,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,269,"double[] y = { 8915.102, 8919.302, 8923.502 };"
True,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,270,"double[] x = { 1.107178495E2, 1.107264895E2, 1.107351295E2 };"
True,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,271,SimpleRegression reg = new SimpleRegression();
True,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,272,for (int i = 0; i < x.length; i++) {
True,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,273,"reg.addData(x[i], y[i]);"
True,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,275,assertTrue(reg.getSumSquaredErrors() >= 0.0);
