is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,19,import java.io.Serializable;
False,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,28,ublic abstract class BitsStreamGenerator implements RandomGenerator {
True,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,29,public abstract class BitsStreamGenerator
True,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,30,"implements RandomGenerator,"
True,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,31,Serializable {
True,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,32,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,33,private static final long serialVersionUID = 20130104L;
False,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,33,** Creates a new random number generator.
True,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java,38,* Creates a new random number generator.
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,22,import java.io.ByteArrayInputStream;
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,23,import java.io.ByteArrayOutputStream;
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,24,import java.io.IOException;
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,25,import java.io.ObjectInputStream;
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,26,import java.io.ObjectOutputStream;
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,379,@Test
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,380,public void testDistributionClone()
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,381,"throws IOException,"
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,382,ClassNotFoundException {
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,383,// Construct a distribution and initialize its internal random
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,384,"// generator, using a fixed seed for deterministic results."
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,385,distribution.reseedRandomGenerator(123);
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,386,distribution.sample();
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,388,// Clone the distribution.
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,389,final RealDistribution cloned = deepClone();
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,391,// Make sure they still produce the same samples.
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,392,final double s1 = distribution.sample();
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,393,final double s2 = cloned.sample();
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,394,"Assert.assertEquals(s1, s2, 0d);"
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,491,* Serialization and deserialization loop of the {@link #distribution}.
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,493,private RealDistribution deepClone()
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,494,"throws IOException,"
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,495,ClassNotFoundException {
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,496,// Serialize to byte array.
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,497,final ByteArrayOutputStream bOut = new ByteArrayOutputStream();
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,498,final ObjectOutputStream oOut = new ObjectOutputStream(bOut);
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,499,oOut.writeObject(distribution);
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,500,final byte[] data = bOut.toByteArray();
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,502,// Deserialize from byte array.
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,503,final ByteArrayInputStream bIn = new ByteArrayInputStream(data);
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,504,final ObjectInputStream oIn = new ObjectInputStream(bIn);
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,505,final Object clone = oIn.readObject();
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,506,oIn.close();
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,508,return (RealDistribution) clone;
