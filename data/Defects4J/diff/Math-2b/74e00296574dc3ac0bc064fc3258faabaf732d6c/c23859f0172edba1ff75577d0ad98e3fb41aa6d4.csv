is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,250,if (forward) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,251,if (stepStart + stepSize >= t) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,252,stepSize = t - stepStart;
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,254,} else {
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,255,if (stepStart + stepSize <= t) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,256,stepSize = t - stepStart;
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,179,@Test
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,180,public void testTooLargeFirstStep() {
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,182,AdaptiveStepsizeIntegrator integ =
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,183,"new DormandPrince853Integrator(0, Double.POSITIVE_INFINITY, Double.NaN, Double.NaN);"
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,184,final double start = 0.0;
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,185,final double end   = 0.001;
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,186,FirstOrderDifferentialEquations equations = new FirstOrderDifferentialEquations() {
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,188,public int getDimension() {
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,189,return 1;
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,192,"public void computeDerivatives(double t, double[] y, double[] yDot) {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,193,"Assert.assertTrue(t >= FastMath.nextAfter(start, Double.NEGATIVE_INFINITY));"
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,194,"Assert.assertTrue(t <= FastMath.nextAfter(end,   Double.POSITIVE_INFINITY));"
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,195,yDot[0] = -100.0 * y[0];
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,200,"integ.setStepSizeControl(0, 1.0, 1.0e-6, 1.0e-8);"
True,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java,201,"integ.integrate(equations, start, new double[] { 1.0 }, end, new double[1]);"
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,258,@Test
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,259,public void testTooLargeFirstStep() {
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,261,AdaptiveStepsizeIntegrator integ =
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,262,"new GraggBulirschStoerIntegrator(0, Double.POSITIVE_INFINITY, Double.NaN, Double.NaN);"
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,263,final double start = 0.0;
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,264,final double end   = 0.001;
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,265,FirstOrderDifferentialEquations equations = new FirstOrderDifferentialEquations() {
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,267,public int getDimension() {
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,268,return 1;
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,271,"public void computeDerivatives(double t, double[] y, double[] yDot) {"
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,272,"Assert.assertTrue(t >= FastMath.nextAfter(start, Double.NEGATIVE_INFINITY));"
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,273,"Assert.assertTrue(t <= FastMath.nextAfter(end,   Double.POSITIVE_INFINITY));"
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,274,yDot[0] = -100.0 * y[0];
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,279,"integ.setStepSizeControl(0, 1.0, 1.0e-6, 1.0e-8);"
True,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java,280,"integ.integrate(equations, start, new double[] { 1.0 }, end, new double[1]);"
