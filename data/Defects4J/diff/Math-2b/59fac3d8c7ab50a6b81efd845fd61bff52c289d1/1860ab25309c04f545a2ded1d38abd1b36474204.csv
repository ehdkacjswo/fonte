is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,188,"OT_POSITIVE_DEFINITE_MATRIX(""not positive definite matrix""),"
False,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,189,"ON_POSITIVE_DEFINITE_MATRIX(""not positive definite matrix: diagonal element at ({1},{1}) is smaller than {2} ({0})""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,188,"NOT_POSITIVE_DEFINITE_MATRIX(""not positive definite matrix""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,189,"NON_POSITIVE_DEFINITE_MATRIX(""not positive definite matrix: diagonal element at ({1},{1}) is smaller than {2} ({0})""),"
False,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,128,f (ltI[i] < absolutePositivityThreshold) {
True,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,128,if (ltI[i] <= absolutePositivityThreshold) {
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,19,mport org.apache.commons.math.exception.MathIllegalNumberException;
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,19,import org.apache.commons.math.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,21,import org.apache.commons.math.exception.util.ExceptionContext;
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,28,ublic class NonPositiveDefiniteMatrixException extends MathIllegalNumberException {
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,29,public class NonPositiveDefiniteMatrixException extends NumberIsTooSmallException {
False,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,46,"uper(LocalizedFormats.NON_POSITIVE_DEFINITE_MATRIX, wrong, index, threshold);"
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,47,"super(wrong, threshold, false);"
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,51,final ExceptionContext context = getContext();
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,52,context.addMessage(LocalizedFormats.NOT_POSITIVE_DEFINITE_MATRIX);
True,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java,53,"context.addMessage(LocalizedFormats.ARRAY_ELEMENT, wrong, index);"
