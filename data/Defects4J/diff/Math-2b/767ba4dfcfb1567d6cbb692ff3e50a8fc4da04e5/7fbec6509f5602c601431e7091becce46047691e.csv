is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,21,import org.apache.commons.math3.exception.NotPositiveException;
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,22,import org.apache.commons.math3.exception.NotStrictlyPositiveException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,35, Create a new RealMatrix of the same type as the instance with the supplied
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,38,* Create a new RealMatrix of the same type as the instance with the
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,39,* supplied
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,38, @param rowDimension  the number of rows in the new matrix
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,39, @param columnDimension  the number of columns in the new matrix
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,42,* @param rowDimension the number of rows in the new matrix
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,43,* @param columnDimension the number of columns in the new matrix
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,41, @throws org.apache.commons.math3.exception.NotStrictlyPositiveException
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,42, if row or column dimension is not positive.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,45,* @throws NotStrictlyPositiveException if row or column dimension is not
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,46,* positive.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,45,"ealMatrix createMatrix(final int rowDimension, final int columnDimension);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,49,"RealMatrix createMatrix(int rowDimension, int columnDimension)"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,50,throws NotStrictlyPositiveException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,55, Compute the sum of this and m.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,60,* Returns the sum of {@code this} and {@code m}.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,57, @param m    matrix to be added
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,58, @return     this + m
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,59, @throws  IllegalArgumentException if m is not the same size as this
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,62,* @param m matrix to be added
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,63,* @return {@code this + m}
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,64,* @throws MatrixDimensionMismatchException if {@code m} is not the same
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,65,* size as {@code this}.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,61,ealMatrix add(RealMatrix m);
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,67,RealMatrix add(RealMatrix m)
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,68,throws MatrixDimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,64, Compute this minus m.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,71,* Computes {@code this} minus {@code m}.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,66, @param m    matrix to be subtracted
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,67, @return     this - m
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,68, @throws  IllegalArgumentException if m is not the same size as this
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,73,* @param m matrix to be subtracted
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,74,* @return {@code this - m}
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,75,* @throws MatrixDimensionMismatchException if {@code m} is not the same
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,76,* size as {@code this}.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,70,ealMatrix subtract(RealMatrix m);
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,78,RealMatrix subtract(RealMatrix m)
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,79,throws MatrixDimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,73, Returns the result of adding d to each entry of this.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,82,* Returns the result of adding {@code d} to each entry of {@code this}.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,75, @param d    value to be added to each entry
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,76, @return     d + this
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,84,* @param d value to be added to each entry
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,85,* @return {@code d + this}
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,81, Returns the result multiplying each entry of this by d.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,90,* Returns the result of multiplying each entry of {@code this} by
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,91,* {@code d}.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,83, @param d    value to multiply all entries by
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,84, @return     d * this
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,93,* @param d value to multiply all entries by
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,94,* @return {@code d * this}
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,89, Returns the result of postmultiplying this by m.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,99,* Returns the result of postmultiplying {@code this} by {@code m}.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,91, @param m    matrix to postmultiply by
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,92, @return     this * m
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,93, @throws     IllegalArgumentException
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,94,             if columnDimension(this) != rowDimension(m)
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,101,* @param m matrix to postmultiply by
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,102,* @return {@code this * m}
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,103,* @throws DimensionMismatchException if
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,104,* {@code columnDimension(this) != rowDimension(m)}
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,96,ealMatrix multiply(RealMatrix m);
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,106,RealMatrix multiply(RealMatrix m)
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,107,throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,99, Returns the result premultiplying this by <code>m</code>.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,100, @param m    matrix to premultiply by
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,101, @return     m * this
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,102, @throws     IllegalArgumentException
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,103,             if rowDimension(this) != columnDimension(m)
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,110,* Returns the result of premultiplying {@code this} by {@code m}.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,112,* @param m matrix to premultiply by
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,113,* @return {@code m * this}
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,114,* @throws DimensionMismatchException if
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,115,* {@code rowDimension(this) != columnDimension(m)}
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,105,ealMatrix preMultiply(RealMatrix m);
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,117,RealMatrix preMultiply(RealMatrix m)
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,118,throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,108, Returns the result multiplying this with itself <code>p</code> times.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,109," Depending on the underlying storage, instability for high powers might occur."
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,110, @param      p raise this to power p
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,111, @return     this^p
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,112, @throws     IllegalArgumentException if p < 0
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,113,             NonSquareMatrixException if the matrix is not square
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,121,* Returns the result of multiplying {@code this} with itself {@code p}
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,122,"* times. Depending on the underlying storage, instability for high powers"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,123,* might occur.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,125,* @param p raise {@code this} to power {@code p}
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,126,* @return {@code this^p}
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,127,* @throws NotPositiveException if {@code p < 0}
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,128,* @throws NonSquareMatrixException if the matrix is not square
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,115,ealMatrix power(final int p);
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,130,RealMatrix power(final int p)
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,131,"throws NotPositiveException, NonSquareMatrixException;"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,120, @return    2-dimensional array of entries
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,136,* @return 2-dimensional array of entries
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,149,         specified rows and columns
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,150, @throws org.apache.commons.math3.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,151, the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,165,* specified rows and columns.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,166,* @throws OutOfRangeException if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,153,"ealMatrix getSubMatrix(int startRow, int endRow, int startColumn, int endColumn);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,168,"RealMatrix getSubMatrix(int startRow, int endRow, int startColumn,"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,169,int endColumn)
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,170,throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,156, Gets a submatrix. Rows and columns are indicated
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,157, counting from 0 to n-1.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,159, @param selectedRows Array of row indices.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,160, @param selectedColumns Array of column indices.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,161, @return The subMatrix containing the data in the
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,162,         specified rows and columns
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,163, @throws org.apache.commons.math3.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,164, the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,166,"ealMatrix getSubMatrix(int[] selectedRows, int[] selectedColumns);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,173,* Gets a submatrix. Rows and columns are indicated
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,174,* counting from 0 to n-1.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,176,* @param selectedRows Array of row indices.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,177,* @param selectedColumns Array of column indices.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,178,* @return The subMatrix containing the data in the
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,179,* specified rows and columns
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,180,* @throws OutOfRangeException if the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,182,"RealMatrix getSubMatrix(int[] selectedRows, int[] selectedColumns)"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,183,throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,169, Copy a submatrix. Rows and columns are indicated
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,170, counting from 0 to n-1.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,186,* Copy a submatrix. Rows and columns are indicated counting from 0 to n-1.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,178, @throws org.apache.commons.math3.exception.OutOfRangeException if the
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,179, indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,180, @exception IllegalArgumentException if the destination array is too small
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,194,* @throws OutOfRangeException if the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,195,* @throws MatrixDimensionMismatchException if the destination array is too
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,196,* small.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,182,"oid copySubMatrix(int startRow, int endRow, int startColumn, int endColumn,"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,183,ouble[][] destination);
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,198,"void copySubMatrix(int startRow, int endRow, int startColumn,"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,199,"int endColumn, double[][] destination)"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,200,"throws OutOfRangeException, MatrixDimensionMismatchException;"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,192, @throws org.apache.commons.math3.exception.OutOfRangeException if the
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,193, indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,194, @exception IllegalArgumentException if the destination array is too small
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,210,* @throws OutOfRangeException if the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,211,* @throws MatrixDimensionMismatchException if the destination array is too
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,212,* small.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,196,"oid copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,214,"void copySubMatrix(int[] selectedRows, int[] selectedColumns,"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,215,double[][] destination)
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,216,"throws OutOfRangeException, MatrixDimensionMismatchException;"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,199," Replace the submatrix starting at <code>row, column</code> using data in"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,200, the input <code>subMatrix</code> array. Indexes are 0-based.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,219,"* Replace the submatrix starting at {@code row, column} using data in the"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,220,* input {@code subMatrix} array. Indexes are 0-based.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,209," <code>setSubMatrix(subMatrix,1,1))</code> will result in <pre>"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,229,"* {@code setSubMatrix(subMatrix,1,1))} will result in <pre>"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,230, Geet the entries at the given row index
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,231, as a row matrix.  Row indices start at 0.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,250,* Get the entries at the given row index as a row matrix.  Row indices start
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,251,* at 0.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,235, @throws org.apache.commons.math3.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,236, the specified row index is invalid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,255,* @throws OutOfRangeException if the specified row index is invalid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,238,ealMatrix getRowMatrix(int row);
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,257,RealMatrix getRowMatrix(int row) throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,241, Set the entries at the given row index
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,242, as a row matrix.  Row indices start at 0.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,244, @param row Row to be set.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,245, @param matrix Row matrix (must have one row and the same number of
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,246, columns as the instance).
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,247, @throws org.apache.commons.math3.exception.OutOfRangeException if the
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,248, specified row index is invalid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,249, @throws MatrixDimensionMismatchException
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,250, if the matrix dimensions do not match one instance row.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,252,"oid setRowMatrix(int row, RealMatrix matrix);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,260,* Sets the specified {@code row} of {@code this} matrix to the entries of
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,261,* the specified row {@code matrix}. Row indices start at 0.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,263,* @param row Row to be set.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,264,* @param matrix Row matrix to be copied (must have one row and the same
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,265,* number of columns as the instance).
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,266,* @throws OutOfRangeException if the specified row index is invalid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,267,* @throws MatrixDimensionMismatchException if the row dimension of the
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,268,"* {@code matrix} is not {@code 1}, or the column dimensions of {@code this}"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,269,* and {@code matrix} do not match.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,271,"void setRowMatrix(int row, RealMatrix matrix)"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,272,"throws OutOfRangeException, MatrixDimensionMismatchException;"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,255, Get the entries at the given column index
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,256, as a column matrix.  Column indices start at 0.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,258, @param column Column to be fetched.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,259, @return column Matrix.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,260, @throws org.apache.commons.math3.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,261, the specified column index is invalid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,263,ealMatrix getColumnMatrix(int column);
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,275,* Get the entries at the given column index as a column matrix. Column
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,276,* indices start at 0.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,278,* @param column Column to be fetched.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,279,* @return column Matrix.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,280,* @throws OutOfRangeException if the specified column index is invalid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,282,RealMatrix getColumnMatrix(int column)
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,283,throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,266, Set the entries at the given column index
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,267, as a column matrix.  Column indices start at 0.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,269, @param column Column to be set.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,270, @param matrix Column matrix (must have one column and the same number
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,271, of rows as the instance).
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,272, @throws org.apache.commons.math3.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,273, the specified column index is invalid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,274, @throws MatrixDimensionMismatchException
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,275, if the {@code matrix} dimensions do not match one instance column.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,277,"oid setColumnMatrix(int column, RealMatrix matrix);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,286,* Sets the specified {@code column} of {@code this} matrix to the entries
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,287,* of the specified column {@code matrix}. Column indices start at 0.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,289,* @param column Column to be set.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,290,* @param matrix Column matrix to be copied (must have one column and the
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,291,* same number of rows as the instance).
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,292,* @throws OutOfRangeException if the specified column index is invalid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,293,* @throws MatrixDimensionMismatchException if the column dimension of the
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,294,"* {@code matrix} is not {@code 1}, or the row dimensions of {@code this}"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,295,* and {@code matrix} do not match.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,297,"void setColumnMatrix(int column, RealMatrix matrix)"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,298,"throws OutOfRangeException, MatrixDimensionMismatchException;"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,280, Returns the entries in row number <code>row</code>
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,281, as a vector.  Row indices start at 0.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,283, @param row Row to be fetched.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,284, @return a row vector.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,285, @throws org.apache.commons.math3.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,286, the specified row index is invalid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,288,ealVector getRowVector(int row);
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,301,* Returns the entries in row number {@code row} as a vector. Row indices
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,302,* start at 0.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,304,* @param row Row to be fetched.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,305,* @return a row vector.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,306,* @throws OutOfRangeException if the specified row index is invalid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,308,RealVector getRowVector(int row)
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,309,throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,291, Set the entries at the given row index.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,292, as a vector.  Row indices start at 0.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,294, @param row Row to be set.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,295, @param vector row vector (must have the same number of columns
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,296, as the instance).
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,297, @throws org.apache.commons.math3.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,298, the specified row index is invalid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,299, @throws MatrixDimensionMismatchException
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,300, if the vector dimension does not match one instance row.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,302,"oid setRowVector(int row, RealVector vector);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,312,* Sets the specified {@code row} of {@code this} matrix to the entries of
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,313,* the specified {@code vector}. Row indices start at 0.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,315,* @param row Row to be set.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,316,* @param vector row vector to be copied (must have the same number of
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,317,* column as the instance).
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,318,* @throws OutOfRangeException if the specified row index is invalid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,319,* @throws MatrixDimensionMismatchException if the {@code vector} dimension
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,320,* does not match the column dimension of {@code this} matrix.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,322,"void setRowVector(int row, RealVector vector)"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,323,"throws OutOfRangeException, MatrixDimensionMismatchException;"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,305, Get the entries at the given column index
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,306, as a vector.  Column indices start at 0.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,308, @param column Column to be fetched.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,309, @return a column vector.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,310, @throws org.apache.commons.math3.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,311, the specified column index is invalid
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,313,ealVector getColumnVector(int column);
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,326,* Get the entries at the given column index as a vector. Column indices
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,327,* start at 0.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,329,* @param column Column to be fetched.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,330,* @return a column vector.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,331,* @throws OutOfRangeException if the specified column index is invalid
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,333,RealVector getColumnVector(int column)
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,334,throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,316, Set the entries at the given column index
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,317, as a vector.  Column indices start at 0.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,319, @param column Column to be set.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,320, @param vector column vector (must have the same number of rows as
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,321, the instance).
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,322, @throws org.apache.commons.math3.exception.OutOfRangeException if the
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,323, specified column index is invalid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,324, @throws MatrixDimensionMismatchException
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,325, if the vector dimension does not match one instance column.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,327,"oid setColumnVector(int column, RealVector vector);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,337,* Sets the specified {@code column} of {@code this} matrix to the entries
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,338,* of the specified {@code vector}. Column indices start at 0.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,340,* @param column Column to be set.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,341,* @param vector column vector to be copied (must have the same number of
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,342,* rows as the instance).
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,343,* @throws OutOfRangeException if the specified column index is invalid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,344,* @throws MatrixDimensionMismatchException if the {@code vector} dimension
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,345,* does not match the row dimension of {@code this} matrix.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,347,"void setColumnVector(int column, RealVector vector)"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,348,"throws OutOfRangeException, MatrixDimensionMismatchException;"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,330, Get the entries at the given row index.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,331, Row indices start at 0.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,351,* Get the entries at the given row index. Row indices start at 0.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,335, @throws org.apache.commons.math3.exception.OutOfRangeException if the
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,336, specified row index is not valid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,355,* @throws OutOfRangeException if the specified row index is not valid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,338,ouble[] getRow(int row);
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,357,double[] getRow(int row) throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,341, Set the entries at the given row index
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,342, as a row matrix.  Row indices start at 0.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,360,* Sets the specified {@code row} of {@code this} matrix to the entries
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,361,* of the specified {@code array}. Row indices start at 0.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,345, @param array Row matrix (must have the same number of columns as
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,346, the instance)
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,347, @throws org.apache.commons.math3.exception.OutOfRangeException if the
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,348, specified row index is invalid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,349, @throws MatrixDimensionMismatchException
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,350, if the array size does not match one instance row.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,364,* @param array Row matrix to be copied (must have the same number of
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,365,* columns as the instance)
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,366,* @throws OutOfRangeException if the specified row index is invalid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,367,* @throws MatrixDimensionMismatchException if the {@code array} length does
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,368,* not match the column dimension of {@code this} matrix.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,352,"oid setRow(int row, double[] array);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,370,"void setRow(int row, double[] array)"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,371,"throws OutOfRangeException, MatrixDimensionMismatchException;"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,355, Get the entries at the given column index as an array.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,356, Column indices start at 0.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,374,* Get the entries at the given column index as an array. Column indices
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,375,* start at 0.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,360, @throws org.apache.commons.math3.exception.OutOfRangeException if the
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,361, specified column index is not valid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,379,* @throws OutOfRangeException if the specified column index is not valid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,363,ouble[] getColumn(int column);
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,381,double[] getColumn(int column) throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,366, Set the entries at the given column index
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,367, as a column matrix array.  Column indices start at 0.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,384,* Sets the specified {@code column} of {@code this} matrix to the entries
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,385,* of the specified {@code array}. Column indices start at 0.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,370, @param array Column array (must have the same number of rows as
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,371, the instance).
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,372, @throws org.apache.commons.math3.exception.OutOfRangeException if the
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,373, specified column index is invalid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,374, @throws MatrixDimensionMismatchException
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,375, if the array size does not match one instance column.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,388,* @param array Column array to be copied (must have the same number of
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,389,* rows as the instance).
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,390,* @throws OutOfRangeException if the specified column index is invalid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,391,* @throws MatrixDimensionMismatchException if the {@code array} length does
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,392,* not match the row dimension of {@code this} matrix.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,377,"oid setColumn(int column, double[] array);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,394,"void setColumn(int column, double[] array)"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,395,"throws OutOfRangeException, MatrixDimensionMismatchException;"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,380, Get the entry in the specified row and column.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,381, Row and column indices start at 0.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,398,* Get the entry in the specified row and column. Row and column indices
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,399,* start at 0.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,383, @param row Row location of entry to be fetched.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,384, @param column Column location of entry to be fetched.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,401,* @param row Row index of entry to be fetched.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,402,* @param column Column index of entry to be fetched.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,386, @throws org.apache.commons.math3.exception.OutOfRangeException if the
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,387, row or column index is not valid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,404,* @throws OutOfRangeException if the row or column index is not valid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,389,"ouble getEntry(int row, int column);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,406,"double getEntry(int row, int column) throws OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,392, Set the entry in the specified row and column.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,393, Row and column indices start at 0.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,409,* Set the entry in the specified row and column. Row and column indices
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,410,* start at 0.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,395, @param row Row location of entry to be set.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,396, @param column Column location of entry to be set.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,397, @param value matrix entry to be set.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,398, @throws org.apache.commons.math3.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,399, the row or column index is not valid
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,412,* @param row Row index of entry to be set.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,413,* @param column Column index of entry to be set.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,414,* @param value the new value of the entry.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,415,* @throws OutOfRangeException if the row or column index is not valid
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,402,"oid setEntry(int row, int column, double value);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,418,"void setEntry(int row, int column, double value) throws OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,405, Change an entry in the specified row and column.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,406, Row and column indices start at 0.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,421,* Adds (in place) the specified value to the specified entry of
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,422,* {@code this} matrix. Row and column indices start at 0.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,408, @param row Row location of entry to be set.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,409, @param column Column location of entry to be set.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,424,* @param row Row index of the entry to be modified.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,425,* @param column Column index of the entry to be modified.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,411, @throws org.apache.commons.math3.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,412, the row or column index is not valid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,427,* @throws OutOfRangeException if the row or column index is not valid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,415,"oid addToEntry(int row, int column, double increment);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,430,"void addToEntry(int row, int column, double increment) throws OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,418, Change an entry in the specified row and column.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,419, Row and column indices start at 0.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,433,* Multiplies (in place) the specified entry of {@code this} matrix by the
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,434,* specified value. Row and column indices start at 0.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,421, @param row Row location of entry to be set.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,422, @param column Column location of entry to be set.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,436,* @param row Row index of the entry to be modified.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,437,* @param column Column index of the entry to be modified.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,424, @throws org.apache.commons.math3.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,425, the row or column index is not valid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,439,* @throws OutOfRangeException if the row or column index is not valid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,428,"oid multiplyEntry(int row, int column, double factor);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,442,"void multiplyEntry(int row, int column, double factor) throws OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,442, @throws NonSquareMatrixException
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,443, if the matrix is not square.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,456,* @throws NonSquareMatrixException if the matrix is not square.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,445,ouble getTrace();
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,458,double getTrace() throws NonSquareMatrixException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,448, Returns the result of multiplying this by the vector <code>v</code>.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,461,* Returns the result of multiplying this by the vector {@code v}.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,451, @return this*v
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,452, @throws IllegalArgumentException if columnDimension != v.size()
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,464,* @return {@code this * v}
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,465,* @throws DimensionMismatchException if the length of {@code v} does not
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,466,* match the column dimension of {@code this}.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,454,ouble[] operate(double[] v);
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,468,double[] operate(double[] v) throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,457, Returns the result of multiplying this by the vector <code>v</code>.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,471,* Returns the result of multiplying this by the vector {@code v}.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,460, @return this*v
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,461, @throws IllegalArgumentException if columnDimension != v.size()
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,474,* @return {@code this * v}
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,475,* @throws DimensionMismatchException if the dimension of {@code v} does not
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,476,* match the column dimension of {@code this}.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,463,ealVector operate(RealVector v);
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,478,RealVector operate(RealVector v) throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,466, Returns the (row) vector result of premultiplying this by the vector <code>v</code>.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,481,* Returns the (row) vector result of premultiplying this by the vector {@code v}.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,469, @return v*this
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,470, @throws IllegalArgumentException if rowDimension != v.size()
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,484,* @return {@code v * this}
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,485,* @throws DimensionMismatchException if the length of {@code v} does not
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,486,* match the row dimension of {@code this}.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,472,ouble[] preMultiply(double[] v);
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,488,double[] preMultiply(double[] v) throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,475, Returns the (row) vector result of premultiplying this by the vector <code>v</code>.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,491,* Returns the (row) vector result of premultiplying this by the vector {@code v}.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,478, @return v*this
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,479, @throws IllegalArgumentException if rowDimension != v.size()
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,494,* @return {@code v * this}
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,495,* @throws DimensionMismatchException if the dimension of {@code v} does not
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,496,* match the row dimension of {@code this}.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,481,ealVector preMultiply(RealVector v);
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,498,RealVector preMultiply(RealVector v) throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,537, @throws org.apache.commons.math3.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,538, the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,554,* @throws OutOfRangeException if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,553,"ouble walkInRowOrder(RealMatrixChangingVisitor visitor,"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,554,"nt startRow, int endRow, int startColumn, int endColumn);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,569,"double walkInRowOrder(RealMatrixChangingVisitor visitor, int startRow,"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,570,"int endRow, int startColumn, int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,571,throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,566, @throws org.apache.commons.math3.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,567, the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,583,* @throws OutOfRangeException if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,582,"ouble walkInRowOrder(RealMatrixPreservingVisitor visitor,"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,583,"nt startRow, int endRow, int startColumn, int endColumn);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,598,"double walkInRowOrder(RealMatrixPreservingVisitor visitor, int startRow,"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,599,"int endRow, int startColumn, int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,600,throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,639, @throws org.apache.commons.math3.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,640, the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,656,* @throws OutOfRangeException if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,655,"ouble walkInColumnOrder(RealMatrixChangingVisitor visitor,"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,656,"nt startRow, int endRow, int startColumn, int endColumn);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,671,"double walkInColumnOrder(RealMatrixChangingVisitor visitor, int startRow,"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,672,"int endRow, int startColumn, int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,673,throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,668, @throws org.apache.commons.math3.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,669, the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,685,* @throws OutOfRangeException if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,684,"ouble walkInColumnOrder(RealMatrixPreservingVisitor visitor,"
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,685,"nt startRow, int endRow, int startColumn, int endColumn);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,700,"double walkInColumnOrder(RealMatrixPreservingVisitor visitor, int startRow,"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,701,"int endRow, int startColumn, int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,702,throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,738, @throws org.apache.commons.math3.exception.OutOfRangeException if
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,739, the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,755,* @throws OutOfRangeException if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,755,"nt startRow, int endRow, int startColumn, int endColumn);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,771,"int startRow, int endRow, int startColumn, int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,772,throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,766, @throws org.apache.commons.math3.exception.OutOfRangeException if the
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,767, indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,783,* @throws OutOfRangeException if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,783,"nt startRow, int endRow, int startColumn, int endColumn);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,799,"int startRow, int endRow, int startColumn, int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,src/main/java/org/apache/commons/math3/linear/RealMatrix.java,800,throws OutOfRangeException;
