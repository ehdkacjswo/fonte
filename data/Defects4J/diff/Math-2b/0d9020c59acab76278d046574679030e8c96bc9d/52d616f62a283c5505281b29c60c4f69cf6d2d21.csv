is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,19,import org.apache.commons.math3.geometry.partitioning.Region.Location;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,72,/** Check a point with respect to the interval.
True,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,73,* @param point point to check
True,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,74,* @param tolerance tolerance below which points are considered to
True,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,75,* belong to the boundary
True,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,76,* @return a code representing the point status: either {@link
True,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,77,"* Location#INSIDE}, {@link Location#OUTSIDE} or {@link Location#BOUNDARY}"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,79,"public Location checkPoint(final double point, final double tolerance) {"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,80,if (point < lower - tolerance || point > upper + tolerance) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,81,return Location.OUTSIDE;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,82,} else if (point > lower + tolerance && point < upper - tolerance) {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,83,return Location.INSIDE;
True,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,84,} else {
True,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java,85,return Location.BOUNDARY;
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,17,package org.apache.commons.math3.geometry.euclidean.oned;
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,19,import org.apache.commons.math3.geometry.partitioning.Region;
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,20,import org.apache.commons.math3.util.FastMath;
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,21,import org.apache.commons.math3.util.Precision;
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,22,import org.junit.Assert;
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,23,import org.junit.Test;
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,25,public class IntervalTest {
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,27,@Test
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,28,public void testInterval() {
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,29,"Interval interval = new Interval(2.3, 5.7);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,30,"Assert.assertEquals(3.4, interval.getLength(), 1.0e-10);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,31,"Assert.assertEquals(4.0, interval.getMidPoint(), 1.0e-10);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,32,"Assert.assertEquals(Region.Location.BOUNDARY, interval.checkPoint(2.3, 1.0e-10));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,33,"Assert.assertEquals(Region.Location.BOUNDARY, interval.checkPoint(5.7, 1.0e-10));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,34,"Assert.assertEquals(Region.Location.OUTSIDE,  interval.checkPoint(1.2, 1.0e-10));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,35,"Assert.assertEquals(Region.Location.OUTSIDE,  interval.checkPoint(8.7, 1.0e-10));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,36,"Assert.assertEquals(Region.Location.INSIDE,   interval.checkPoint(3.0, 1.0e-10));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,37,"Assert.assertEquals(2.3, interval.getLower(), 1.0e-10);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,38,"Assert.assertEquals(5.7, interval.getUpper(), 1.0e-10);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,41,@Test
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,42,public void testTolerance() {
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,43,"Interval interval = new Interval(2.3, 5.7);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,44,"Assert.assertEquals(Region.Location.OUTSIDE,  interval.checkPoint(1.2, 1.0));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,45,"Assert.assertEquals(Region.Location.BOUNDARY, interval.checkPoint(1.2, 1.2));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,46,"Assert.assertEquals(Region.Location.OUTSIDE,  interval.checkPoint(8.7, 2.9));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,47,"Assert.assertEquals(Region.Location.BOUNDARY, interval.checkPoint(8.7, 3.1));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,48,"Assert.assertEquals(Region.Location.INSIDE,   interval.checkPoint(3.0, 0.6));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,49,"Assert.assertEquals(Region.Location.BOUNDARY, interval.checkPoint(3.0, 0.8));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,52,@Test
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,53,public void testInfinite() {
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,54,"Interval interval = new Interval(9.0, Double.POSITIVE_INFINITY);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,55,"Assert.assertEquals(Region.Location.BOUNDARY, interval.checkPoint(9.0, 1.0e-10));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,56,"Assert.assertEquals(Region.Location.OUTSIDE,  interval.checkPoint(8.4, 1.0e-10));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,57,for (double e = 1.0; e <= 6.0; e += 1.0) {
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,58,"Assert.assertEquals(Region.Location.INSIDE,"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,59,"interval.checkPoint(FastMath.pow(10.0, e), 1.0e-10));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,61,Assert.assertTrue(Double.isInfinite(interval.getLength()));
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,62,"Assert.assertEquals(9.0, interval.getLower(), 1.0e-10);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,63,Assert.assertTrue(Double.isInfinite(interval.getUpper()));
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,67,@Test
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,68,public void testSinglePoint() {
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,69,"Interval interval = new Interval(1.0, 1.0);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,70,"Assert.assertEquals(0.0, interval.getLength(), Precision.SAFE_MIN);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalTest.java,71,"Assert.assertEquals(1.0, interval.getMidPoint(), Precision.EPSILON);"
