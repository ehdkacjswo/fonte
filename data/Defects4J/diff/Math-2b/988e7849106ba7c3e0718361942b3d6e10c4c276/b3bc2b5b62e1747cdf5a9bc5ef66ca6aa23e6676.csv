is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,18,package org.apache.commons.math.analysis.function;
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,21,import org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,22,import org.apache.commons.math.analysis.ParametricUnivariateRealFunction;
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,23,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,24,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,25,import org.apache.commons.math.exception.OutOfRangeException;
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,26,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,29,"* <a href=""http://en.wikipedia.org/wiki/Logit"">"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,30,*  logit</a> function.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,31,* It is the inverse of the {@link Sigmoid sigmoid} function.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,33,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,34,* @since 3.0
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,36,public class Logit implements DifferentiableUnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,37,/** Lower bound. */
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,38,private final double lo;
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,39,/** Higher bound. */
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,40,private final double hi;
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,43,"* Usual logit function, where the lower bound is 0 and the higher"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,44,* bound is 1.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,46,public Logit() {
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,47,"this(0, 1);"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,51,* Logit function.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,53,* @param lo Lower bound of the function domain.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,54,* @param hi Higher bound of the function domain.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,56,"public Logit(double lo,"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,57,double hi) {
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,58,this.lo = lo;
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,59,this.hi = hi;
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,62,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,63,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,64,"return value(x, lo, hi);"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,67,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,68,public UnivariateRealFunction derivative() {
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,69,return new UnivariateRealFunction() {
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,70,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,71,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,72,return (hi - lo) / ((x - lo) * (hi - x));
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,78,* Parametric function where the input array contains the parameters of
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,79,"* the logit function, ordered as follows:"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,80,* <ul>
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,81,*  <li>Lower bound</li>
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,82,*  <li>Higher bound</li>
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,83,* </ul>
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,85,public static class Parametric implements ParametricUnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,87,* Computes the value of the logit at {@code x}.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,89,* @param x Value for which the function must be computed.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,90,* @param param Values of lower bound and higher bounds.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,91,* @return the value of the function.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,92,* @throws NullArgumentException if {@code param} is {@code null}.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,93,* @throws DimensionMismatchException if the size of {@code param} is
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,94,* not 2.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,96,"public double value(double x,"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,97,double[] param) {
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,98,validateParameters(param);
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,99,"return Logit.value(x, param[0], param[1]);"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,103,* Computes the value of the gradient at {@code x}.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,104,* The components of the gradient vector are the partial
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,105,* derivatives of the function with respect to each of the
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,106,* <em>parameters</em> (lower bound and higher bound).
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,108,* @param x Value at which the gradient must be computed.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,109,* @param param Values for lower and higher bounds.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,110,* @return the gradient vector at {@code x}.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,111,* @throws NullArgumentException if {@code param} is {@code null}.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,112,* @throws DimensionMismatchException if the size of {@code param} is
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,113,* not 2.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,115,"public double[] gradient(double x, double[] param) {"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,116,validateParameters(param);
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,118,final double lo = param[0];
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,119,final double hi = param[1];
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,121,"return new double[] { 1 / (lo - x), 1 / (hi - x) };"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,125,* Validates parameters to ensure they are appropriate for the evaluation of
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,126,"* the {@link #value(double,double[])} and {@link #gradient(double,double[])}"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,127,* methods.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,129,* @param param Values for lower and higher bounds.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,130,* @throws NullArgumentException if {@code param} is {@code null}.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,131,* @throws DimensionMismatchException if the size of {@code param} is
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,132,* not 2.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,134,private void validateParameters(double[] param) {
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,135,if (param == null) {
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,136,throw new NullArgumentException();
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,138,if (param.length != 2) {
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,139,"throw new DimensionMismatchException(param.length, 2);"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,145,* @param x Value at which to compute the logit.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,146,* @param lo Lower bound.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,147,* @param hi Higher bound.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,148,* @return the value of the logit function at {@code x}.
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,150,"private static double value(double x,"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,151,"double lo,"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,152,double hi) {
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,153,if (x < lo || x > hi) {
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,154,"throw new OutOfRangeException(x, lo, hi);"
True,src/main/java/org/apache/commons/math/analysis/function/Logit.java,src/main/java/org/apache/commons/math/analysis/function/Logit.java,156,return FastMath.log((x - lo) / (hi - x));
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,18,package org.apache.commons.math.analysis.function;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,20,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,21,import org.apache.commons.math.analysis.FunctionUtils;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,22,import org.apache.commons.math.exception.NullArgumentException;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,23,import org.apache.commons.math.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,24,import org.apache.commons.math.exception.OutOfRangeException;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,26,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,27,import org.junit.Test;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,30,* Test for class {@link Logit}.
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,32,public class LogitTest {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,33,private final double EPS = Math.ulp(1d);
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,35,@Test(expected=OutOfRangeException.class)
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,36,public void testPreconditions1() {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,37,final double lo = -1;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,38,final double hi = 2;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,39,"final UnivariateRealFunction f = new Logit(lo, hi);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,41,f.value(lo - 1);
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,43,@Test(expected=OutOfRangeException.class)
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,44,public void testPreconditions2() {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,45,final double lo = -1;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,46,final double hi = 2;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,47,"final UnivariateRealFunction f = new Logit(lo, hi);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,49,f.value(hi + 1);
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,52,@Test
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,53,public void testSomeValues() {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,54,final double lo = 1;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,55,final double hi = 2;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,56,"final UnivariateRealFunction f = new Logit(lo, hi);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,58,"Assert.assertEquals(Double.NEGATIVE_INFINITY, f.value(1), EPS);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,59,"Assert.assertEquals(Double.POSITIVE_INFINITY, f.value(2), EPS);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,60,"Assert.assertEquals(0, f.value(1.5), EPS);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,63,@Test
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,64,public void testDerivative() {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,65,final double lo = 1;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,66,final double hi = 2;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,67,"final Logit f = new Logit(lo, hi);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,68,final UnivariateRealFunction dfdx = f.derivative();
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,70,"Assert.assertEquals(4, dfdx.value(1.5), EPS);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,73,@Test
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,74,public void testDerivativeLargeArguments() {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,75,"final Logit f = new Logit(1, 2);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,76,final UnivariateRealFunction dfdx = f.derivative();
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,78,"Assert.assertEquals(0, dfdx.value(Double.NEGATIVE_INFINITY), 0);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,79,"Assert.assertEquals(0, dfdx.value(-Double.MAX_VALUE), 0);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,80,"Assert.assertEquals(0, dfdx.value(-1e155), 0);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,81,"Assert.assertEquals(0, dfdx.value(1e155), 0);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,82,"Assert.assertEquals(0, dfdx.value(Double.MAX_VALUE), 0);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,83,"Assert.assertEquals(0, dfdx.value(Double.POSITIVE_INFINITY), 0);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,86,@Test(expected=NullArgumentException.class)
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,87,public void testParametricUsage1() {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,88,final Logit.Parametric g = new Logit.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,89,"g.value(0, null);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,92,@Test(expected=DimensionMismatchException.class)
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,93,public void testParametricUsage2() {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,94,final Logit.Parametric g = new Logit.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,95,"g.value(0, new double[] {0});"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,98,@Test(expected=NullArgumentException.class)
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,99,public void testParametricUsage3() {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,100,final Logit.Parametric g = new Logit.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,101,"g.gradient(0, null);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,104,@Test(expected=DimensionMismatchException.class)
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,105,public void testParametricUsage4() {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,106,final Logit.Parametric g = new Logit.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,107,"g.gradient(0, new double[] {0});"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,110,@Test(expected=OutOfRangeException.class)
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,111,public void testParametricUsage5() {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,112,final Logit.Parametric g = new Logit.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,113,"g.value(-1, new double[] {0, 1});"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,116,@Test(expected=OutOfRangeException.class)
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,117,public void testParametricUsage6() {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,118,final Logit.Parametric g = new Logit.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,119,"g.value(2, new double[] {0, 1});"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,122,@Test
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,123,public void testParametricValue() {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,124,final double lo = 2;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,125,final double hi = 3;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,126,"final Logit f = new Logit(lo, hi);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,128,final Logit.Parametric g = new Logit.Parametric();
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,129,"Assert.assertEquals(f.value(2), g.value(2, new double[] {lo, hi}), 0);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,130,"Assert.assertEquals(f.value(2.34567), g.value(2.34567, new double[] {lo, hi}), 0);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,131,"Assert.assertEquals(f.value(3), g.value(3, new double[] {lo, hi}), 0);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,134,@Test
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,135,public void testValueWithInverseFunction() {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,136,final double lo = 2;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,137,final double hi = 3;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,138,"final Logit f = new Logit(lo, hi);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,139,"final Sigmoid g = new Sigmoid(lo, hi);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,140,"final UnivariateRealFunction id = FunctionUtils.compose(g, f);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,142,for (int i = 0; i < 10; i++) {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,143,final double x = lo + Math.random() * (hi - lo);
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,144,"Assert.assertEquals(x, id.value(x), EPS);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,147,"Assert.assertEquals(lo, id.value(lo), EPS);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,148,"Assert.assertEquals(hi, id.value(hi), EPS);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,151,@Test
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,152,public void testDerivativeWithInverseFunction() {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,153,final double lo = 2;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,154,final double hi = 3;
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,155,"final Logit f = new Logit(lo, hi);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,156,final UnivariateRealFunction dfdx = f.derivative();
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,157,"final Sigmoid g = new Sigmoid(lo, hi);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,158,final UnivariateRealFunction dgdx = g.derivative();
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,159,final UnivariateRealFunction chain
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,160,"= FunctionUtils.compose(new Inverse(), FunctionUtils.compose(dgdx, f));"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,162,for (int i = 0; i < 10; i++) {
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,163,final double x = lo + Math.random() * (hi - lo);
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,164,"Assert.assertEquals(dfdx.value(x), chain.value(x), 1e-13);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,167,"Assert.assertEquals(dfdx.value(lo), chain.value(lo), EPS);"
True,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,src/test/java/org/apache/commons/math/analysis/function/LogitTest.java,168,"Assert.assertEquals(dfdx.value(hi), chain.value(hi), EPS);"
