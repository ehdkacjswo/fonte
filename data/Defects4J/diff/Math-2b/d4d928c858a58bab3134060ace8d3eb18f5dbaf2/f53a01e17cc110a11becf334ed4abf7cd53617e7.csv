is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,319,@Test
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,320,public void testMath798() {
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,321,final GaussianFitter fitter = new GaussianFitter(new LevenbergMarquardtOptimizer());
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,323,"// When the data points are not commented out below, the fit stalls."
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,324,"// This is expected however, since the whole dataset hardly looks like"
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,325,// a Gaussian.
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,326,"// When commented out, the fit proceeds fine."
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,328,"fitter.addObservedPoint(0.23, 395.0);"
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,329,"//fitter.addObservedPoint(0.68, 0.0);"
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,330,"fitter.addObservedPoint(1.14, 376.0);"
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,331,"//fitter.addObservedPoint(1.59, 0.0);"
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,332,"fitter.addObservedPoint(2.05, 163.0);"
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,333,"//fitter.addObservedPoint(2.50, 0.0);"
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,334,"fitter.addObservedPoint(2.95, 49.0);"
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,335,"//fitter.addObservedPoint(3.41, 0.0);"
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,336,"fitter.addObservedPoint(3.86, 16.0);"
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,337,"//fitter.addObservedPoint(4.32, 0.0);"
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,338,"fitter.addObservedPoint(4.77, 1.0);"
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,340,final double[] p = fitter.fit();
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,342,// Values are copied from a previous run of this test.
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,343,"Assert.assertEquals(420.8397296167364, p[0], 1e-12);"
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,344,"Assert.assertEquals(0.603770729862231, p[1], 1e-15);"
True,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,src/test/java/org/apache/commons/math3/optimization/fitting/GaussianFitterTest.java,345,"Assert.assertEquals(1.0786447936766612, p[2], 1e-14);"
