is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,82,rivate ResizableDoubleArray eDA = new ResizableDoubleArray();
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,82,private StatArray eDA = new StatArray();
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,141,DA = new ResizableDoubleArray(initialDoubleArray);
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,141,eDA = new StatArray(initialDoubleArray);
False,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,487,"eturn stat.evaluate(eDA.getInternalValues(), eDA.start(), eDA.getNumElements());"
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,487,return eDA.compute(stat);
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,767,* Provides a method to compute a statistics on the contents of the
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,768,* array.
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,770,private static class StatArray extends ResizableDoubleArray {
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,771,/** Default constructor. */
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,772,public StatArray() {}
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,775,* Builds an instance with the same contents as the given array.
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,777,* @param initialArray Data.
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,779,public StatArray(double[] initialArray) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,780,super(initialArray);
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,784,* Builds a copy of the given instance.
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,786,* @param other Array.
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,787,* @throws NullArgumentException if the argument is {@code null}.
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,789,public StatArray(StatArray other)
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,790,throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,791,super(other);
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,795,* Computes the given statistics from the contents of this array.
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,797,* @param stat Statistics.
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,798,* @return the result of evaluating the statistics on the current
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,799,* contents of this array.
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,801,public double compute(UnivariateStatistic stat) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,802,"return stat.evaluate(getArrayRef(),"
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,803,"getStartIndex(),"
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,804,getNumElements());
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,808,* Creates a copy of this instance.
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,810,* @return a copy of this instance.
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,812,public StatArray copy() {
True,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java,813,return new StatArray(this);
