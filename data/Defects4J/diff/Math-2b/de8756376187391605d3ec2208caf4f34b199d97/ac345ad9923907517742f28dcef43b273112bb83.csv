is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,17,ackage org.apache.commons.math;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,19,mport java.io.PrintStream;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,20,mport java.io.PrintWriter;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,21,mport java.text.MessageFormat;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,22,mport java.util.Locale;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,23,mport java.util.Set;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,25,mport org.apache.commons.math.exception.util.Localizable;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,26,mport org.apache.commons.math.exception.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,30, Base class for commons-math checked exceptions.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,31, <p>
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,32," Supports nesting, emulating JDK 1.4 behavior if necessary.</p>"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,33, <p>
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,34," Adapted from <a href=""http://commons.apache.org/collections/api-release/org/apache/commons/collections/FunctorException.html""/>.</p>"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,36, @version $Id$
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,37, @deprecated To be removed before 3.0.  Please do not use in any new code.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,39,Deprecated
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,40,ublic class MathException extends Exception {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,42,** Serializable version identifier. */
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,43,rivate static final long serialVersionUID = 7428019509644517071L;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,45,** Deprecation message. */
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,46,"rivate static final String DEPRECATION_MESSAGE = ""This class is deprecated; calling this method is a bug."";"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,49, Pattern used to build the message.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,51,rivate final Localizable pattern;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,54, Arguments used to build the message.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,56,rivate final Object[] arguments;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,59, Constructs a new <code>MathException</code> with no
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,60, detail message.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,62,ublic MathException() {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,63,his.pattern   = LocalizedFormats.SIMPLE_MESSAGE;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,64,"his.arguments = new Object[] { """" };"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,68, Constructs a new <code>MathException</code> with specified
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,69, formatted detail message.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,70, Message formatting is delegated to {@link java.text.MessageFormat}.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,71, @param pattern format specifier
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,72, @param arguments format arguments
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,73, @since 2.2
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,75,"ublic MathException(Localizable pattern, Object ... arguments) {"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,76,his.pattern   = pattern;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,77,his.arguments = (arguments == null) ? new Object[0] : arguments.clone();
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,81, Constructs a new <code>MathException</code> with specified
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,82, nested <code>Throwable</code> root cause.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,84, @param rootCause  the exception or error that caused this exception
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,85,                   to be thrown.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,87,ublic MathException(Throwable rootCause) {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,88,uper(rootCause);
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,89,his.pattern   = LocalizedFormats.SIMPLE_MESSAGE;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,90,"his.arguments = new Object[] { (rootCause == null) ? """" : rootCause.getMessage() };"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,94, Constructs a new <code>MathException</code> with specified
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,95, formatted detail message and nested <code>Throwable</code> root cause.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,96, Message formatting is delegated to {@link java.text.MessageFormat}.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,97, @param rootCause the exception or error that caused this exception
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,98, to be thrown.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,99, @param pattern format specifier
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,100, @param arguments format arguments
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,101, @since 2.2
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,103,"ublic MathException(Throwable rootCause, Localizable pattern, Object ... arguments) {"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,104,uper(rootCause);
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,105,his.pattern   = pattern;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,106,his.arguments = (arguments == null) ? new Object[0] : arguments.clone();
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,110, Sets a message.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,112, @param pat Message pattern.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,113, @param args Values for replacing the placeholders in the message
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,114, pattern.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,116,"ublic void addMessage(Localizable pat,"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,117,bject ... args) {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,118,hrow new UnsupportedOperationException(DEPRECATION_MESSAGE);
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,122," Sets the context (key, value) pair."
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,123, Keys are assumed to be unique within an instance. If the same key is
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,124," assigned a new value, the previous one will be lost."
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,126, @param key Context key (not null).
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,127, @param value Context value.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,129,"ublic void setContext(String key, Object value) {"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,130,hrow new UnsupportedOperationException(DEPRECATION_MESSAGE);
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,134, Gets the value associated to the given context key.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,136, @param key Context key.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,137, @return the context value or {@code null} if the key does not exist.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,139,ublic Object getContext(String key) {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,140,hrow new UnsupportedOperationException(DEPRECATION_MESSAGE);
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,144, Gets all the keys stored in the exception
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,146, @return the set of keys.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,148,ublic Set<String> getContextKeys() {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,149,hrow new UnsupportedOperationException(DEPRECATION_MESSAGE);
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,152,** Gets the message in a specified locale.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,154, @param locale Locale in which the message should be translated
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,156, @return localized message
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,157, @since 1.2
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,159,ublic String getMessage(final Locale locale) {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,160,f (pattern != null) {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,161,"eturn new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,163,"eturn """";"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,167, Gets the message in a conventional US locale.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,169, @return localized message
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,171,Override
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,172,ublic String getMessage() {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,173,eturn getMessage(Locale.US);
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,177, Gets the message in the system default locale.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,179, @return localized message
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,181,Override
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,182,ublic String getLocalizedMessage() {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,183,eturn getMessage(Locale.getDefault());
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,187, Prints the stack trace of this exception to the standard error stream.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,189,Override
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,190,ublic void printStackTrace() {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,191,rintStackTrace(System.err);
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,195, Prints the stack trace of this exception to the specified stream.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,197, @param out  the <code>PrintStream</code> to use for output
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,199,Override
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,200,ublic void printStackTrace(PrintStream out) {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,201,ynchronized (out) {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,202,"rintWriter pw = new PrintWriter(out, false);"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,203,rintStackTrace(pw);
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,204,/ Flush the PrintWriter before it's GC'ed.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,205,w.flush();
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,15, limitations under the License.
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,18,ackage org.apache.commons.math;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,21,mport java.io.ByteArrayOutputStream;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,22,mport java.io.PrintStream;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,23,mport java.io.PrintWriter;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,24,mport java.util.Locale;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,26,mport org.apache.commons.math.exception.MathIllegalStateException;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,27,mport org.apache.commons.math.exception.util.DummyLocalizable;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,28,mport org.apache.commons.math.exception.util.Localizable;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,29,mport org.apache.commons.math.exception.util.LocalizedFormats;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,30,mport org.junit.Assert;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,31,mport org.junit.Test;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,34, @version $Id$
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,36,ublic class MathExceptionTest {
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,38,Test
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,39,ublic void testConstructor(){
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,40,athException ex = new MathException();
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,41,ssert.assertNull(ex.getCause());
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,42,"ssert.assertEquals("""", ex.getMessage());"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,43,"ssert.assertEquals("""", ex.getMessage(Locale.FRENCH));"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,46,Test
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,47,ublic void testConstructorCause(){
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,48,"tring inMsg = ""inner message"";"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,49,xception cause = new Exception(inMsg);
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,50,athException ex = new MathException(cause);
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,51,"ssert.assertEquals(cause, ex.getCause());"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,55, Tests the printStackTrace() operation.
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,57,Test
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,58,ublic void testPrintStackTrace() {
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,59,"ocalizable outMsg = new DummyLocalizable(""outer message"");"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,60,"ocalizable inMsg = new DummyLocalizable(""inner message"");"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,61,"athIllegalStateException cause = new MathIllegalStateException(LocalizedFormats.SIMPLE_MESSAGE, inMsg);"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,62,"athException ex = new MathException(cause, outMsg);"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,63,yteArrayOutputStream baos = new ByteArrayOutputStream();
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,64,rintStream ps = new PrintStream(baos);
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,65,x.printStackTrace(ps);
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,66,tring stack = baos.toString();
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,67,"tring outerMsg = ""org.apache.commons.math.MathException: outer message"";"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,68,"tring innerMsg = ""Caused by: "" +"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,69,"org.apache.commons.math.exception.MathIllegalStateException: inner message"";"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,70,ssert.assertTrue(stack.startsWith(outerMsg));
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,71,ssert.assertTrue(stack.indexOf(innerMsg) > 0);
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,73,"rintWriter pw = new PrintWriter(ps, true);"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,74,x.printStackTrace(pw);
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,75,tack = baos.toString();
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,76,ssert.assertTrue(stack.startsWith(outerMsg));
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,77,ssert.assertTrue(stack.indexOf(innerMsg) > 0);
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,81, Test serialization
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,83,Test
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,84,ublic void testSerialization() {
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,85,"ocalizable outMsg = new DummyLocalizable(""outer message"");"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,86,"ocalizable inMsg = new DummyLocalizable(""inner message"");"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,87,"athIllegalStateException cause = new MathIllegalStateException(LocalizedFormats.SIMPLE_MESSAGE, inMsg);"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,88,"athException ex = new MathException(cause, outMsg);"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,89,athException image = (MathException) TestUtils.serializeAndRecover(ex);
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,91,yteArrayOutputStream baos = new ByteArrayOutputStream();
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,92,rintStream ps = new PrintStream(baos);
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,93,x.printStackTrace(ps);
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,94,tring stack = baos.toString();
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,96,yteArrayOutputStream baos2 = new ByteArrayOutputStream();
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,97,rintStream ps2 = new PrintStream(baos2);
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,98,mage.printStackTrace(ps2);
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,99,tring stack2 = baos2.toString();
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,101,"/ See if JDK supports nested exceptions.  If not, stack trace of"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,102,/ inner exception will not be serialized
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,103,oolean jdkSupportsNesting = false;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,104,ry {
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,105,"hrowable.class.getDeclaredMethod(""getCause"", new Class[0]);"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,106,dkSupportsNesting = true;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,107, catch (NoSuchMethodException e) {
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,108,dkSupportsNesting = false;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,111,f (jdkSupportsNesting) {
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,112,"ssert.assertEquals(stack, stack2);"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,113, else {
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,114,ssert.assertTrue(stack2.indexOf(inMsg.getSourceString()) != -1);
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,115,"ssert.assertTrue(stack2.indexOf(""MathConfigurationException"") != -1);"
