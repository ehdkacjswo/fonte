is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,25, @version $Revision: 1.24 $ $Date: 2004/10/09 22:39:22 $
True,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,25,* @version $Revision: 1.25 $ $Date: 2004/10/12 06:19:50 $
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,97, Overwrites the underlying data for the matrix with
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,98, a fresh copy of <code>data</code>.
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,100, @param  data  2-dimensional array of entries
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,102,oid setData(double[][] data);
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,202, Sets the entry in the specified row and column to the specified value.
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,203, <p>
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,204, Row and column indices start at 0 and must satisfy
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,205, <ul>
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,206, <li><code>0 <= row < rowDimension</code></li>
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,207, <li><code> 0 <= column < columnDimension</code></li>
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,208, </ul>
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,209, otherwise a <code>MatrixIndexException</code> is thrown.
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,211, @param row    row location of entry to be set
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,212, @param column    column location of entry to be set
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,213, @param value  value to set
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,214, @throws MatrixIndexException if the row or column index is not valid
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,216,"oid setEntry(int row, int column, double value)"
False,src/java/org/apache/commons/math/linear/RealMatrix.java,src/java/org/apache/commons/math/linear/RealMatrix.java,217,hrows MatrixIndexException;
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,24, Implementation for RealMatrix using a double[][] array to store entries
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,25," and <a href=""http://www.math.gatech.edu/~bourbaki/math2601/Web-notes/2num.pdf"">"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,24,* Implementation for RealMatrix using a double[][] array to store entries and
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,25,"* <a href=""http://www.math.gatech.edu/~bourbaki/math2601/Web-notes/2num.pdf"">"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,37, The LU decomposition is stored and reused on subsequent calls.  If matrix
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,38," data are modified using any of the public setXxx methods, the saved"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,39, decomposition is discarded.  If data are modified via references to the
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,40," underlying array obtained using <code>getDataRef()</code>, then the stored"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,41," LU decomposition will not be discarded.  In this case, you need to"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,42, explicitly invoke <code>LUDecompose()</code> to recompute the decomposition
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,37,* The LU decomposition is cached and reused on subsequent calls.
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,38,* If data are modified via references to the underlying array obtained using
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,39,"* <code>getDataRef()</code>, then the stored LU decomposition will not be"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,40,"* discarded.  In this case, you need to explicitly invoke"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,41,* <code>LUDecompose()</code> to recompute the decomposition
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,49, @version $Revision: 1.32 $ $Date: 2004/10/10 18:00:33 $
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,48,* @version $Revision: 1.33 $ $Date: 2004/10/12 06:19:50 $
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,283, Overwrites the underlying data for the matrix
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,284, with a fresh copy of <code>inData</code>.
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,286, @param  inData 2-dimensional array of entries
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,288,ublic void setData(double[][] inData) {
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,289,opyIn(inData);
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,290,u = null;
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,305, Overwrites the underlying data for the matrix
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,306, with a reference to <code>inData</code>.
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,307, <p>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,308, Does not make a fresh copy of <code>data</code>.
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,310, @param  inData 2-dimensional array of entries
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,312,ublic void setDataRef(double[][] inData) {
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,313,his.data = inData;
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,314,u = null;
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,501, Sets the entry in the specified row and column to the specified value.
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,502, <p>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,503, Row and column indices start at 0 and must satisfy
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,504, <ul>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,505, <li><code>0 <= row < rowDimension</code></li>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,506, <li><code> 0 <= column < columnDimension</code></li>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,507, </ul>
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,508, otherwise a <code>MatrixIndexException</code> is thrown.
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,510, @param row    row location of entry to be set
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,511, @param column    column location of entry to be set
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,512, @param value  value to set
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,513, @throws MatrixIndexException if the row or column index is not valid
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,515,"ublic void setEntry(int row, int column, double value)"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,516,hrows MatrixIndexException {
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,517,"f (!isValidCoordinate(row,column)) {"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,518,"hrow new MatrixIndexException(""matrix entry does not exist"");"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,520,ata[row][column] = value;
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,521,u = null;
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,25, @version $Revision: 1.19 $ $Date: 2004/10/10 18:01:16 $
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,25,* @version $Revision: 1.20 $ $Date: 2004/10/12 06:19:50 $
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,114,ealMatrixImpl m3 = new RealMatrixImpl();
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,115,3.setData(testData);
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,121,ealMatrixImpl m2 = new RealMatrixImpl(testData2);
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,122,2.setData(m.getData());
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,123,"ssertClose(""getData"",m2,m,entryTolerance);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,124,/ no dangling reference...
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,125,"2.setEntry(1,1,2000d);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,126,ealMatrixImpl m3 = new RealMatrixImpl(testData);
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,127,"ssertClose(""no getData side effect"",m,m3,entryTolerance);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,128,3 = (RealMatrixImpl) m.copy();
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,129,"ouble[][] stompMe = {{1d,2d,3d}};"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,130,3.setDataRef(stompMe);
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,131,"ssertClose(""no copy side effect"",m,new RealMatrixImpl(testData),"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,132,ntryTolerance);
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,119,RealMatrixImpl m2 = new RealMatrixImpl(m.getData());
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,120,"assertEquals(m2,m);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,421,ublic void testEntryMutators() {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,409,public void testGetEntry() {
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,424,".setEntry(1,2,100d);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,425,"ssertEquals(""get entry"",m.getEntry(1,2),100d,entryTolerance);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,426,ry {
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,427,"ouble x = m.getEntry(-1,2);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,428,"ail(""expecting MatrixIndexException"");"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,429, catch (MatrixIndexException ex) {
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,433,".setEntry(1,4,200d);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,434,"ail(""expecting MatrixIndexException"");"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,413,"m.getEntry(10, 4);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,414,"fail (""Expecting MatrixIndexException"");"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,416,// expected
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,478,ealMatrix n = new RealMatrixImpl();
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,479,.setData(matrixData2);
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,458,RealMatrix n = new RealMatrixImpl(matrixData2);
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,655,"rotected void splitLU(RealMatrix lu, RealMatrix lower, RealMatrix upper) throws InvalidMatrixException {"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,656,f (!lu.isSquare() || !lower.isSquare() || !upper.isSquare() ||
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,657,ower.getRowDimension() != upper.getRowDimension()
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,658,| lower.getRowDimension() != lu.getRowDimension()) {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,634,"protected void splitLU(RealMatrix lu, double[][] lowerData, double[][] upperData) throws InvalidMatrixException {"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,635,if (!lu.isSquare() || lowerData.length != lowerData[0].length || upperData.length != upperData[0].length ||
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,636,lowerData.length != upperData.length
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,637,|| lowerData.length != lu.getRowDimension()) {
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,665,"ower.setEntry(i, j, lu.getEntry(i, j));"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,666,"pper.setEntry(i, j, 0d);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,644,"lowerData[i][j] = lu.getEntry(i, j);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,645,upperData[i][j] = 0d;
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,668,"ower.setEntry(i, j, 1d);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,669,"pper.setEntry(i, j, lu.getEntry(i, j));"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,647,lowerData[i][j] = 1d;
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,648,"upperData[i][j] = lu.getEntry(i, j);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,671,"ower.setEntry(i, j, 0d);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,672,"pper.setEntry(i, j, lu.getEntry(i, j));"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,650,lowerData[i][j] = 0d;
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,651,"upperData[i][j] = lu.getEntry(i, j);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,684,"ealMatrix out = new RealMatrixImpl(n, n);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,663,int m = matrix.getColumnDimension();
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,664,double out[][] = new double[m][n];
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,686,or (int j = 0; j < n; j++) {
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,687,"ut.setEntry(i, j, matrix.getEntry(permutation[i], j));"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,666,for (int j = 0; j < m; j++) {
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,667,"out[i][j] = matrix.getEntry(permutation[i], j);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,690,eturn out;
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,670,return new RealMatrixImpl(out);
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,696,"ealMatrix lower = new RealMatrixImpl(n, n);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,697,"ealMatrix upper = new RealMatrixImpl(n, n);"
False,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,698,"plitLU(lu, lower, upper);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,676,double[][] lowerData = new double[n][n];
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,677,double[][] upperData = new double[n][n];
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,678,"splitLU(lu, lowerData, upperData);"
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,679,RealMatrix lower =new RealMatrixImpl(lowerData);
True,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,src/test/org/apache/commons/math/linear/RealMatrixImplTest.java,680,RealMatrix upper = new RealMatrixImpl(upperData);
