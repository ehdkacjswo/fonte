is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,17,package org.apache.commons.math3.linear;
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,19,import java.io.Serializable;
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,20,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,21,import org.apache.commons.math3.exception.NotStrictlyPositiveException;
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,22,import org.apache.commons.math3.exception.OutOfRangeException;
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,23,import org.apache.commons.math3.exception.MathUnsupportedOperationException;
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,26,* Implementation of a diagonal matrix.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,27,* <br/>
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,28,* Caveat: This implementation is minimal; it is currently solely aimed
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,29,* at solving issue MATH-924. In particular many methods just throw
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,30,* {@code MathUnsupportedOperationException}.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,32,* @version $Id$
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,34,public class DiagonalMatrix extends AbstractRealMatrix
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,35,implements Serializable {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,36,/** Serializable version identifier. */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,37,private static final long serialVersionUID = 20121229L;
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,38,/** Entries of the diagonal. */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,39,private double[] data;
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,42,* Creates a matrix with no data.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,44,public DiagonalMatrix() {}
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,47,* Creates a matrix with the supplied dimension.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,49,* @param dimension Number of rows and columns in the new matrix.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,50,* @param columnDimension Number of columns in the new matrix.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,51,* @throws NotStrictlyPositiveException if the dimension is
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,52,* not positive.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,54,public DiagonalMatrix(final int dimension)
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,55,throws NotStrictlyPositiveException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,56,"super(dimension, dimension);"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,57,data = new double[dimension];
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,61,* Creates a matrix using the input array as the underlying data.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,62,* <br/>
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,63,"* The input array is copied, not referenced."
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,65,* @param d Data for the new matrix.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,67,public DiagonalMatrix(final double[] d) {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,68,data = d.clone();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,72,* Creates a matrix using the input array as the underlying data.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,73,* <br/>
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,74,* If an array is built specially in order to be embedded in a
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,75,"* RealMatrix and not used directly, the {@code copyArray} may be"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,76,* set to {@code false}. This will prevent the copying and improve
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,77,* performance as no new array will be built and no data will be copied.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,79,* @param d Data for new matrix.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,80,"* @param copyArray if {@code true}, the input array will be copied,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,81,* otherwise it will be referenced.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,83,"public DiagonalMatrix(final double[] d, final boolean copyArray) {"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,84,data = copyArray ? d.clone() : d;
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,88,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,90,* @throws DimensionMismatchException if the requested dimensions are not equal.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,92,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,93,"public RealMatrix createMatrix(final int rowDimension,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,94,final int columnDimension)
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,95,"throws NotStrictlyPositiveException,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,96,DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,97,if (rowDimension != columnDimension) {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,98,"throw new DimensionMismatchException(rowDimension, columnDimension);"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,101,return new DiagonalMatrix(rowDimension);
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,104,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,105,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,106,public RealMatrix copy() {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,107,return new DiagonalMatrix(data);
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,111,* Compute the sum of {@code this} and {@code m}.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,113,* @param m Matrix to be added.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,114,* @return {@code this + m}.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,115,* @throws MatrixDimensionMismatchException if {@code m} is not the same
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,116,* size as {@code this}.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,118,public DiagonalMatrix add(final DiagonalMatrix m)
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,119,throws MatrixDimensionMismatchException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,120,// Safety check.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,121,"MatrixUtils.checkAdditionCompatible(this, m);"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,123,final int dim = getRowDimension();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,124,final double[] outData = new double[dim];
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,125,for (int i = 0; i < dim; i++) {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,126,outData[i] = data[i] + m.data[i];
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,129,"return new DiagonalMatrix(outData, false);"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,133,* Returns {@code this} minus {@code m}.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,135,* @param m Matrix to be subtracted.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,136,* @return {@code this - m}
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,137,* @throws MatrixDimensionMismatchException if {@code m} is not the same
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,138,* size as {@code this}.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,140,public DiagonalMatrix subtract(final DiagonalMatrix m)
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,141,throws MatrixDimensionMismatchException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,142,"MatrixUtils.checkSubtractionCompatible(this, m);"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,144,final int dim = getRowDimension();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,145,final double[] outData = new double[dim];
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,146,for (int i = 0; i < dim; i++) {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,147,outData[i] = data[i] - m.data[i];
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,150,"return new DiagonalMatrix(outData, false);"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,154,* Returns the result of postmultiplying {@code this} by {@code m}.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,156,* @param m matrix to postmultiply by
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,157,* @return {@code this * m}
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,158,* @throws DimensionMismatchException if
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,159,* {@code columnDimension(this) != rowDimension(m)}
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,161,public DiagonalMatrix multiply(final DiagonalMatrix m)
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,162,throws DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,163,"MatrixUtils.checkMultiplicationCompatible(this, m);"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,165,final int dim = getRowDimension();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,166,final double[] outData = new double[dim];
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,167,for (int i = 0; i < dim; i++) {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,168,outData[i] = data[i] * m.data[i];
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,171,"return new DiagonalMatrix(outData, false);"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,175,* Returns the result of postmultiplying {@code this} by {@code m}.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,177,* @param m matrix to postmultiply by
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,178,* @return {@code this * m}
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,179,* @throws DimensionMismatchException if
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,180,* {@code columnDimension(this) != rowDimension(m)}
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,182,public RealMatrix multiply(final RealMatrix m)
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,183,throws DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,184,if (m instanceof DiagonalMatrix) {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,185,return multiply((DiagonalMatrix) m);
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,186,} else {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,187,"MatrixUtils.checkMultiplicationCompatible(this, m);"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,188,final int nRows = m.getRowDimension();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,189,final int nCols = m.getColumnDimension();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,190,final double[][] product = new double[nRows][nCols];
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,191,for (int r = 0; r < nRows; r++) {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,192,for (int c = 0; c < nCols; c++) {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,193,"product[r][c] = data[r] * m.getEntry(r, c);"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,196,"return new Array2DRowRealMatrix(product, false);"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,200,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,201,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,202,public double[][] getData() {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,203,final int dim = getRowDimension();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,204,final double[][] out = new double[dim][dim];
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,206,for (int i = 0; i < dim; i++) {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,207,out[i][i] = data[i];
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,210,return out;
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,214,* Gets a reference to the underlying data array.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,216,* @return 1-dimensional array of entries.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,218,public double[] getDataRef() {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,219,return data;
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,223,* @throws MathUnsupportedOperationException
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,225,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,226,"public void setSubMatrix(final double[][] subMatrix,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,227,"final int row,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,228,final int column)
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,229,throws MathUnsupportedOperationException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,230,throw new MathUnsupportedOperationException();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,233,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,234,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,235,"public double getEntry(final int row, final int column)"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,236,throws OutOfRangeException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,237,"MatrixUtils.checkMatrixIndex(this, row, column);"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,238,return row == column ? data[row] : 0;
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,241,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,242,* @throws MathUnsupportedOperationException if {@code row != column}.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,244,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,245,"public void setEntry(final int row, final int column, final double value)"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,246,"throws OutOfRangeException,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,247,MathUnsupportedOperationException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,248,if (row != column) {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,249,throw new MathUnsupportedOperationException();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,251,"MatrixUtils.checkMatrixIndex(this, row, column);"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,252,data[row] = value;
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,255,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,256,* @throws MathUnsupportedOperationException if {@code row != column}.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,258,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,259,"public void addToEntry(final int row,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,260,"final int column,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,261,final double increment)
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,262,"throws OutOfRangeException,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,263,MathUnsupportedOperationException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,264,if (row != column) {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,265,throw new MathUnsupportedOperationException();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,267,"MatrixUtils.checkMatrixIndex(this, row, column);"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,268,data[row] += increment;
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,271,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,272,* @throws MathUnsupportedOperationException if {@code row != column}.
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,274,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,275,"public void multiplyEntry(final int row,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,276,"final int column,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,277,final double factor)
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,278,"throws OutOfRangeException,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,279,MathUnsupportedOperationException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,280,if (row != column) {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,281,throw new MathUnsupportedOperationException();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,283,"MatrixUtils.checkMatrixIndex(this, row, column);"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,284,data[row] *= factor;
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,287,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,288,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,289,public int getRowDimension() {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,290,return data == null ? 0 : data.length;
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,293,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,294,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,295,public int getColumnDimension() {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,296,return getRowDimension();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,299,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,300,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,301,public double[] operate(final double[] v)
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,302,throws DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,303,"return multiply(new DiagonalMatrix(v, false)).getDataRef();"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,306,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,307,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,308,public double[] preMultiply(final double[] v)
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,309,throws DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,310,return operate(v);
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,313,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,314,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,315,public double walkInRowOrder(final RealMatrixChangingVisitor visitor)
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,316,throws MathUnsupportedOperationException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,317,throw new MathUnsupportedOperationException();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,320,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,321,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,322,public double walkInRowOrder(final RealMatrixPreservingVisitor visitor)
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,323,throws MathUnsupportedOperationException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,324,throw new MathUnsupportedOperationException();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,327,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,328,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,329,"public double walkInRowOrder(final RealMatrixChangingVisitor visitor,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,330,"final int startRow, final int endRow,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,331,"final int startColumn, final int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,332,throws MathUnsupportedOperationException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,333,throw new MathUnsupportedOperationException();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,336,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,337,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,338,"public double walkInRowOrder(final RealMatrixPreservingVisitor visitor,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,339,"final int startRow, final int endRow,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,340,"final int startColumn, final int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,341,throws MathUnsupportedOperationException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,342,throw new MathUnsupportedOperationException();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,345,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,346,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,347,public double walkInColumnOrder(final RealMatrixChangingVisitor visitor)
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,348,throws MathUnsupportedOperationException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,349,throw new MathUnsupportedOperationException();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,352,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,353,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,354,public double walkInColumnOrder(final RealMatrixPreservingVisitor visitor)
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,355,throws MathUnsupportedOperationException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,356,throw new MathUnsupportedOperationException();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,359,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,360,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,361,"public double walkInColumnOrder(final RealMatrixChangingVisitor visitor,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,362,"final int startRow, final int endRow,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,363,"final int startColumn, final int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,364,throws MathUnsupportedOperationException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,365,throw new MathUnsupportedOperationException();
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,368,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,369,@Override
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,370,"public double walkInColumnOrder(final RealMatrixPreservingVisitor visitor,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,371,"final int startRow, final int endRow,"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,372,"final int startColumn, final int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,373,throws MathUnsupportedOperationException {
True,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java,374,throw new MathUnsupportedOperationException();
