is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,17,package org.apache.commons.math.util;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,19,import java.util.ArrayList;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,21,import org.apache.commons.math.exception.MathArithmeticException;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,22,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,23,import org.apache.commons.math.random.RandomDataImpl;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,24,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,25,import org.junit.Test;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,28,* Test cases for the {@link ArithmeticsUtils} class.
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,30,* @version $Id$
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,32,public class ArithmeticsUtilsTest {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,34,* Exact direct multiplication implementation to test against
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,36,private long factorial(int n) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,37,long result = 1;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,38,for (int i = 2; i <= n; i++) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,39,result *= i;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,41,return result;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,44,@Test
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,45,public void testAddAndCheck() {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,46,int big = Integer.MAX_VALUE;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,47,int bigNeg = Integer.MIN_VALUE;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,48,"Assert.assertEquals(big, ArithmeticsUtils.addAndCheck(big, 0));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,49,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,50,"ArithmeticsUtils.addAndCheck(big, 1);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,51,"Assert.fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,52,} catch (MathArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,54,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,55,"ArithmeticsUtils.addAndCheck(bigNeg, -1);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,56,"Assert.fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,57,} catch (MathArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,62,@Test
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,63,public void testAddAndCheckLong() {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,64,long max = Long.MAX_VALUE;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,65,long min = Long.MIN_VALUE;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,66,"Assert.assertEquals(max, ArithmeticsUtils.addAndCheck(max, 0L));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,67,"Assert.assertEquals(min, ArithmeticsUtils.addAndCheck(min, 0L));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,68,"Assert.assertEquals(max, ArithmeticsUtils.addAndCheck(0L, max));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,69,"Assert.assertEquals(min, ArithmeticsUtils.addAndCheck(0L, min));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,70,"Assert.assertEquals(1, ArithmeticsUtils.addAndCheck(-1L, 2L));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,71,"Assert.assertEquals(1, ArithmeticsUtils.addAndCheck(2L, -1L));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,72,"Assert.assertEquals(-3, ArithmeticsUtils.addAndCheck(-2L, -1L));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,73,"Assert.assertEquals(min, ArithmeticsUtils.addAndCheck(min + 1, -1L));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,74,"testAddAndCheckLongFailure(max, 1L);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,75,"testAddAndCheckLongFailure(min, -1L);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,76,"testAddAndCheckLongFailure(1L, max);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,77,"testAddAndCheckLongFailure(-1L, min);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,80,"private void testAddAndCheckLongFailure(long a, long b) {"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,81,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,82,"ArithmeticsUtils.addAndCheck(a, b);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,83,"Assert.fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,84,} catch (MathArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,85,// success
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,89,@Test
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,90,public void testSubAndCheck() {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,91,int big = Integer.MAX_VALUE;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,92,int bigNeg = Integer.MIN_VALUE;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,93,"Assert.assertEquals(big, ArithmeticsUtils.subAndCheck(big, 0));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,94,"Assert.assertEquals(bigNeg + 1, ArithmeticsUtils.subAndCheck(bigNeg, -1));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,95,"Assert.assertEquals(-1, ArithmeticsUtils.subAndCheck(bigNeg, -big));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,96,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,97,"ArithmeticsUtils.subAndCheck(big, -1);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,98,"Assert.fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,99,} catch (MathArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,101,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,102,"ArithmeticsUtils.subAndCheck(bigNeg, 1);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,103,"Assert.fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,104,} catch (MathArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,108,@Test
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,109,public void testSubAndCheckErrorMessage() {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,110,int big = Integer.MAX_VALUE;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,111,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,112,"ArithmeticsUtils.subAndCheck(big, -1);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,113,"Assert.fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,114,} catch (MathArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,115,Assert.assertTrue(ex.getMessage().length() > 1);
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,119,@Test
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,120,public void testSubAndCheckLong() {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,121,long max = Long.MAX_VALUE;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,122,long min = Long.MIN_VALUE;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,123,"Assert.assertEquals(max, ArithmeticsUtils.subAndCheck(max, 0));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,124,"Assert.assertEquals(min, ArithmeticsUtils.subAndCheck(min, 0));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,125,"Assert.assertEquals(-max, ArithmeticsUtils.subAndCheck(0, max));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,126,"Assert.assertEquals(min + 1, ArithmeticsUtils.subAndCheck(min, -1));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,127,// min == -1-max
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,128,"Assert.assertEquals(-1, ArithmeticsUtils.subAndCheck(-max - 1, -max));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,129,"Assert.assertEquals(max, ArithmeticsUtils.subAndCheck(-1, -1 - max));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,130,"testSubAndCheckLongFailure(0L, min);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,131,"testSubAndCheckLongFailure(max, -1L);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,132,"testSubAndCheckLongFailure(min, 1L);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,135,"private void testSubAndCheckLongFailure(long a, long b) {"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,136,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,137,"ArithmeticsUtils.subAndCheck(a, b);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,138,"Assert.fail(""Expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,139,} catch (MathArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,140,// success
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,145,@Test
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,146,public void testFactorial() {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,147,for (int i = 1; i < 21; i++) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,148,"Assert.assertEquals(i + ""! "", factorial(i), ArithmeticsUtils.factorial(i));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,149,"Assert.assertEquals(i + ""! "", factorial(i), ArithmeticsUtils.factorialDouble(i), Double.MIN_VALUE);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,150,"Assert.assertEquals(i + ""! "", FastMath.log(factorial(i)), ArithmeticsUtils.factorialLog(i), 10E-12);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,153,"Assert.assertEquals(""0"", 1, ArithmeticsUtils.factorial(0));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,154,"Assert.assertEquals(""0"", 1.0d, ArithmeticsUtils.factorialDouble(0), 1E-14);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,155,"Assert.assertEquals(""0"", 0.0d, ArithmeticsUtils.factorialLog(0), 1E-14);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,158,@Test
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,159,public void testFactorialFail() {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,160,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,161,ArithmeticsUtils.factorial(-1);
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,162,"Assert.fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,163,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,164,// ignored
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,166,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,167,ArithmeticsUtils.factorialDouble(-1);
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,168,"Assert.fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,169,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,170,// ignored
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,172,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,173,ArithmeticsUtils.factorialLog(-1);
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,174,"Assert.fail(""expecting MathIllegalArgumentException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,175,} catch (MathIllegalArgumentException ex) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,176,// ignored
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,178,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,179,ArithmeticsUtils.factorial(21);
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,180,"Assert.fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,181,} catch (MathArithmeticException ex) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,182,// ignored
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,184,"Assert.assertTrue(""expecting infinite factorial value"", Double.isInfinite(ArithmeticsUtils.factorialDouble(171)));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,188,@Test
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,189,public void testGcd() {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,190,int a = 30;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,191,int b = 50;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,192,int c = 77;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,194,"Assert.assertEquals(0, ArithmeticsUtils.gcd(0, 0));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,196,"Assert.assertEquals(b, ArithmeticsUtils.gcd(0, b));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,197,"Assert.assertEquals(a, ArithmeticsUtils.gcd(a, 0));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,198,"Assert.assertEquals(b, ArithmeticsUtils.gcd(0, -b));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,199,"Assert.assertEquals(a, ArithmeticsUtils.gcd(-a, 0));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,201,"Assert.assertEquals(10, ArithmeticsUtils.gcd(a, b));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,202,"Assert.assertEquals(10, ArithmeticsUtils.gcd(-a, b));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,203,"Assert.assertEquals(10, ArithmeticsUtils.gcd(a, -b));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,204,"Assert.assertEquals(10, ArithmeticsUtils.gcd(-a, -b));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,206,"Assert.assertEquals(1, ArithmeticsUtils.gcd(a, c));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,207,"Assert.assertEquals(1, ArithmeticsUtils.gcd(-a, c));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,208,"Assert.assertEquals(1, ArithmeticsUtils.gcd(a, -c));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,209,"Assert.assertEquals(1, ArithmeticsUtils.gcd(-a, -c));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,211,"Assert.assertEquals(3 * (1<<15), ArithmeticsUtils.gcd(3 * (1<<20), 9 * (1<<15)));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,213,"Assert.assertEquals(Integer.MAX_VALUE, ArithmeticsUtils.gcd(Integer.MAX_VALUE, 0));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,214,"Assert.assertEquals(Integer.MAX_VALUE, ArithmeticsUtils.gcd(-Integer.MAX_VALUE, 0));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,215,"Assert.assertEquals(1<<30, ArithmeticsUtils.gcd(1<<30, -Integer.MIN_VALUE));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,216,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,217,"// gcd(Integer.MIN_VALUE, 0) > Integer.MAX_VALUE"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,218,"ArithmeticsUtils.gcd(Integer.MIN_VALUE, 0);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,219,"Assert.fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,220,} catch (MathArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,221,// expected
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,223,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,224,"// gcd(0, Integer.MIN_VALUE) > Integer.MAX_VALUE"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,225,"ArithmeticsUtils.gcd(0, Integer.MIN_VALUE);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,226,"Assert.fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,227,} catch (MathArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,228,// expected
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,230,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,231,"// gcd(Integer.MIN_VALUE, Integer.MIN_VALUE) > Integer.MAX_VALUE"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,232,"ArithmeticsUtils.gcd(Integer.MIN_VALUE, Integer.MIN_VALUE);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,233,"Assert.fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,234,} catch (MathArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,235,// expected
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,239,@Test
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,240,public void  testGcdLong(){
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,241,long a = 30;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,242,long b = 50;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,243,long c = 77;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,245,"Assert.assertEquals(0, ArithmeticsUtils.gcd(0L, 0));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,247,"Assert.assertEquals(b, ArithmeticsUtils.gcd(0, b));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,248,"Assert.assertEquals(a, ArithmeticsUtils.gcd(a, 0));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,249,"Assert.assertEquals(b, ArithmeticsUtils.gcd(0, -b));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,250,"Assert.assertEquals(a, ArithmeticsUtils.gcd(-a, 0));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,252,"Assert.assertEquals(10, ArithmeticsUtils.gcd(a, b));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,253,"Assert.assertEquals(10, ArithmeticsUtils.gcd(-a, b));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,254,"Assert.assertEquals(10, ArithmeticsUtils.gcd(a, -b));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,255,"Assert.assertEquals(10, ArithmeticsUtils.gcd(-a, -b));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,257,"Assert.assertEquals(1, ArithmeticsUtils.gcd(a, c));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,258,"Assert.assertEquals(1, ArithmeticsUtils.gcd(-a, c));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,259,"Assert.assertEquals(1, ArithmeticsUtils.gcd(a, -c));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,260,"Assert.assertEquals(1, ArithmeticsUtils.gcd(-a, -c));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,262,"Assert.assertEquals(3L * (1L<<45), ArithmeticsUtils.gcd(3L * (1L<<50), 9L * (1L<<45)));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,264,"Assert.assertEquals(1L<<45, ArithmeticsUtils.gcd(1L<<45, Long.MIN_VALUE));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,266,"Assert.assertEquals(Long.MAX_VALUE, ArithmeticsUtils.gcd(Long.MAX_VALUE, 0L));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,267,"Assert.assertEquals(Long.MAX_VALUE, ArithmeticsUtils.gcd(-Long.MAX_VALUE, 0L));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,268,"Assert.assertEquals(1, ArithmeticsUtils.gcd(60247241209L, 153092023L));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,269,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,270,"// gcd(Long.MIN_VALUE, 0) > Long.MAX_VALUE"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,271,"ArithmeticsUtils.gcd(Long.MIN_VALUE, 0);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,272,"Assert.fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,273,} catch (MathArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,274,// expected
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,276,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,277,"// gcd(0, Long.MIN_VALUE) > Long.MAX_VALUE"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,278,"ArithmeticsUtils.gcd(0, Long.MIN_VALUE);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,279,"Assert.fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,280,} catch (MathArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,281,// expected
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,283,try {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,284,"// gcd(Long.MIN_VALUE, Long.MIN_VALUE) > Long.MAX_VALUE"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,285,"ArithmeticsUtils.gcd(Long.MIN_VALUE, Long.MIN_VALUE);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,286,"Assert.fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,287,} catch (MathArithmeticException expected) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,288,// expected
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,292,@Test
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,293,public void testGcdConsistency() {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,294,"int[] primeList = {19, 23, 53, 67, 73, 79, 101, 103, 111, 131};"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,295,ArrayList<Integer> primes = new ArrayList<Integer>();
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,296,for (int i = 0; i < primeList.length; i++) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,297,primes.add(Integer.valueOf(primeList[i]));
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,299,RandomDataImpl randomData = new RandomDataImpl();
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,300,for (int i = 0; i < 20; i++) {
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,301,"Object[] sample = randomData.nextSample(primes, 4);"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,302,int p1 = ((Integer) sample[0]).intValue();
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,303,int p2 = ((Integer) sample[1]).intValue();
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,304,int p3 = ((Integer) sample[2]).intValue();
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,305,int p4 = ((Integer) sample[3]).intValue();
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,306,int i1 = p1 * p2 * p3;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,307,int i2 = p1 * p2 * p4;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,308,int gcd = p1 * p2;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,309,"Assert.assertEquals(gcd, ArithmeticsUtils.gcd(i1, i2));"
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,310,long l1 = i1;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,311,long l2 = i2;
True,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticsUtilsTest.java,312,"Assert.assertEquals(gcd, ArithmeticsUtils.gcd(l1, l2));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,68,"esult = MathUtils.addAndCheck(binomialCoefficient(n - 1, k - 1),"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,68,"result = ArithmeticsUtils.addAndCheck(binomialCoefficient(n - 1, k - 1),"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,82, Exact direct multiplication implementation to test against
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,84,rivate long factorial(int n) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,85,ong result = 1;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,86,or (int i = 2; i <= n; i++) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,87,esult *= i;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,89,eturn result;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,100,Test
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,101,ublic void testAddAndCheck() {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,102,nt big = Integer.MAX_VALUE;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,103,nt bigNeg = Integer.MIN_VALUE;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,104,"ssert.assertEquals(big, MathUtils.addAndCheck(big, 0));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,105,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,106,"athUtils.addAndCheck(big, 1);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,107,"ssert.fail(""Expecting MathArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,108, catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,110,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,111,"athUtils.addAndCheck(bigNeg, -1);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,112,"ssert.fail(""Expecting MathArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,113, catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,117,Test
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,118,ublic void testAddAndCheckLong() {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,119,ong max = Long.MAX_VALUE;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,120,ong min = Long.MIN_VALUE;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,121,"ssert.assertEquals(max, MathUtils.addAndCheck(max, 0L));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,122,"ssert.assertEquals(min, MathUtils.addAndCheck(min, 0L));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,123,"ssert.assertEquals(max, MathUtils.addAndCheck(0L, max));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,124,"ssert.assertEquals(min, MathUtils.addAndCheck(0L, min));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,125,"ssert.assertEquals(1, MathUtils.addAndCheck(-1L, 2L));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,126,"ssert.assertEquals(1, MathUtils.addAndCheck(2L, -1L));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,127,"ssert.assertEquals(-3, MathUtils.addAndCheck(-2L, -1L));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,128,"ssert.assertEquals(min, MathUtils.addAndCheck(min + 1, -1L));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,129,"estAddAndCheckLongFailure(max, 1L);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,130,"estAddAndCheckLongFailure(min, -1L);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,131,"estAddAndCheckLongFailure(1L, max);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,132,"estAddAndCheckLongFailure(-1L, min);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,135,"rivate void testAddAndCheckLongFailure(long a, long b) {"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,136,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,137,"athUtils.addAndCheck(a, b);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,138,"ssert.fail(""Expecting MathArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,139, catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,140,/ success
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,321,Test
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,322,ublic void testFactorial() {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,323,or (int i = 1; i < 21; i++) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,324,"ssert.assertEquals(i + ""! "", factorial(i), MathUtils.factorial(i));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,325,"ssert.assertEquals(i + ""! "", factorial(i), MathUtils.factorialDouble(i), Double.MIN_VALUE);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,326,"ssert.assertEquals(i + ""! "", FastMath.log(factorial(i)), MathUtils.factorialLog(i), 10E-12);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,329,"ssert.assertEquals(""0"", 1, MathUtils.factorial(0));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,330,"ssert.assertEquals(""0"", 1.0d, MathUtils.factorialDouble(0), 1E-14);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,331,"ssert.assertEquals(""0"", 0.0d, MathUtils.factorialLog(0), 1E-14);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,334,Test
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,335,ublic void testFactorialFail() {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,336,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,337,athUtils.factorial(-1);
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,338,"ssert.fail(""expecting MathIllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,339, catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,340,/ ignored
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,342,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,343,athUtils.factorialDouble(-1);
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,344,"ssert.fail(""expecting MathIllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,345, catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,346,/ ignored
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,348,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,349,athUtils.factorialLog(-1);
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,350,"ssert.fail(""expecting MathIllegalArgumentException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,351, catch (MathIllegalArgumentException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,352,/ ignored
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,354,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,355,athUtils.factorial(21);
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,356,"ssert.fail(""expecting MathArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,357, catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,358,/ ignored
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,360,"ssert.assertTrue(""expecting infinite factorial value"", Double.isInfinite(MathUtils.factorialDouble(171)));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,363,Test
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,364,ublic void testGcd() {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,365,nt a = 30;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,366,nt b = 50;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,367,nt c = 77;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,369,"ssert.assertEquals(0, MathUtils.gcd(0, 0));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,371,"ssert.assertEquals(b, MathUtils.gcd(0, b));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,372,"ssert.assertEquals(a, MathUtils.gcd(a, 0));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,373,"ssert.assertEquals(b, MathUtils.gcd(0, -b));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,374,"ssert.assertEquals(a, MathUtils.gcd(-a, 0));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,376,"ssert.assertEquals(10, MathUtils.gcd(a, b));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,377,"ssert.assertEquals(10, MathUtils.gcd(-a, b));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,378,"ssert.assertEquals(10, MathUtils.gcd(a, -b));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,379,"ssert.assertEquals(10, MathUtils.gcd(-a, -b));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,381,"ssert.assertEquals(1, MathUtils.gcd(a, c));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,382,"ssert.assertEquals(1, MathUtils.gcd(-a, c));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,383,"ssert.assertEquals(1, MathUtils.gcd(a, -c));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,384,"ssert.assertEquals(1, MathUtils.gcd(-a, -c));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,386,"ssert.assertEquals(3 * (1<<15), MathUtils.gcd(3 * (1<<20), 9 * (1<<15)));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,388,"ssert.assertEquals(Integer.MAX_VALUE, MathUtils.gcd(Integer.MAX_VALUE, 0));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,389,"ssert.assertEquals(Integer.MAX_VALUE, MathUtils.gcd(-Integer.MAX_VALUE, 0));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,390,"ssert.assertEquals(1<<30, MathUtils.gcd(1<<30, -Integer.MIN_VALUE));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,391,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,392,"/ gcd(Integer.MIN_VALUE, 0) > Integer.MAX_VALUE"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,393,"athUtils.gcd(Integer.MIN_VALUE, 0);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,394,"ssert.fail(""expecting MathArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,395, catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,396,/ expected
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,398,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,399,"/ gcd(0, Integer.MIN_VALUE) > Integer.MAX_VALUE"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,400,"athUtils.gcd(0, Integer.MIN_VALUE);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,401,"ssert.fail(""expecting MathArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,402, catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,403,/ expected
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,405,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,406,"/ gcd(Integer.MIN_VALUE, Integer.MIN_VALUE) > Integer.MAX_VALUE"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,407,"athUtils.gcd(Integer.MIN_VALUE, Integer.MIN_VALUE);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,408,"ssert.fail(""expecting MathArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,409, catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,410,/ expected
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,414,Test
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,415,ublic void  testGcdLong(){
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,416,ong a = 30;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,417,ong b = 50;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,418,ong c = 77;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,420,"ssert.assertEquals(0, MathUtils.gcd(0L, 0));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,422,"ssert.assertEquals(b, MathUtils.gcd(0, b));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,423,"ssert.assertEquals(a, MathUtils.gcd(a, 0));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,424,"ssert.assertEquals(b, MathUtils.gcd(0, -b));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,425,"ssert.assertEquals(a, MathUtils.gcd(-a, 0));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,427,"ssert.assertEquals(10, MathUtils.gcd(a, b));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,428,"ssert.assertEquals(10, MathUtils.gcd(-a, b));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,429,"ssert.assertEquals(10, MathUtils.gcd(a, -b));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,430,"ssert.assertEquals(10, MathUtils.gcd(-a, -b));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,432,"ssert.assertEquals(1, MathUtils.gcd(a, c));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,433,"ssert.assertEquals(1, MathUtils.gcd(-a, c));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,434,"ssert.assertEquals(1, MathUtils.gcd(a, -c));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,435,"ssert.assertEquals(1, MathUtils.gcd(-a, -c));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,437,"ssert.assertEquals(3L * (1L<<45), MathUtils.gcd(3L * (1L<<50), 9L * (1L<<45)));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,439,"ssert.assertEquals(1L<<45, MathUtils.gcd(1L<<45, Long.MIN_VALUE));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,441,"ssert.assertEquals(Long.MAX_VALUE, MathUtils.gcd(Long.MAX_VALUE, 0L));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,442,"ssert.assertEquals(Long.MAX_VALUE, MathUtils.gcd(-Long.MAX_VALUE, 0L));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,443,"ssert.assertEquals(1, MathUtils.gcd(60247241209L, 153092023L));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,444,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,445,"/ gcd(Long.MIN_VALUE, 0) > Long.MAX_VALUE"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,446,"athUtils.gcd(Long.MIN_VALUE, 0);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,447,"ssert.fail(""expecting MathArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,448, catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,449,/ expected
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,451,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,452,"/ gcd(0, Long.MIN_VALUE) > Long.MAX_VALUE"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,453,"athUtils.gcd(0, Long.MIN_VALUE);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,454,"ssert.fail(""expecting MathArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,455, catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,456,/ expected
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,458,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,459,"/ gcd(Long.MIN_VALUE, Long.MIN_VALUE) > Long.MAX_VALUE"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,460,"athUtils.gcd(Long.MIN_VALUE, Long.MIN_VALUE);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,461,"ssert.fail(""expecting MathArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,462, catch (MathArithmeticException expected) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,463,/ expected
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,467,Test
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,468,ublic void testGcdConsistency() {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,469,"nt[] primeList = {19, 23, 53, 67, 73, 79, 101, 103, 111, 131};"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,470,rrayList<Integer> primes = new ArrayList<Integer>();
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,471,or (int i = 0; i < primeList.length; i++) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,472,rimes.add(Integer.valueOf(primeList[i]));
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,474,andomDataImpl randomData = new RandomDataImpl();
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,475,or (int i = 0; i < 20; i++) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,476,"bject[] sample = randomData.nextSample(primes, 4);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,477,nt p1 = ((Integer) sample[0]).intValue();
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,478,nt p2 = ((Integer) sample[1]).intValue();
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,479,nt p3 = ((Integer) sample[2]).intValue();
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,480,nt p4 = ((Integer) sample[3]).intValue();
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,481,nt i1 = p1 * p2 * p3;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,482,nt i2 = p1 * p2 * p4;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,483,nt gcd = p1 * p2;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,484,"ssert.assertEquals(gcd, MathUtils.gcd(i1, i2));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,485,ong l1 = i1;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,486,ong l2 = i2;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,487,"ssert.assertEquals(gcd, MathUtils.gcd(l1, l2));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1109,Test
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1110,ublic void testSubAndCheck() {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1111,nt big = Integer.MAX_VALUE;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1112,nt bigNeg = Integer.MIN_VALUE;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1113,"ssert.assertEquals(big, MathUtils.subAndCheck(big, 0));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1114,"ssert.assertEquals(bigNeg + 1, MathUtils.subAndCheck(bigNeg, -1));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1115,"ssert.assertEquals(-1, MathUtils.subAndCheck(bigNeg, -big));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1116,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1117,"athUtils.subAndCheck(big, -1);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1118,"ssert.fail(""Expecting MathArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1119, catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1121,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1122,"athUtils.subAndCheck(bigNeg, 1);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1123,"ssert.fail(""Expecting MathArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1124, catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1128,Test
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1129,ublic void testSubAndCheckErrorMessage() {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1130,nt big = Integer.MAX_VALUE;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1131,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1132,"athUtils.subAndCheck(big, -1);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1133,"ssert.fail(""Expecting MathArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1134, catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1135,ssert.assertTrue(ex.getMessage().length() > 1);
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1139,Test
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1140,ublic void testSubAndCheckLong() {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1141,ong max = Long.MAX_VALUE;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1142,ong min = Long.MIN_VALUE;
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1143,"ssert.assertEquals(max, MathUtils.subAndCheck(max, 0));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1144,"ssert.assertEquals(min, MathUtils.subAndCheck(min, 0));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1145,"ssert.assertEquals(-max, MathUtils.subAndCheck(0, max));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1146,"ssert.assertEquals(min + 1, MathUtils.subAndCheck(min, -1));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1147,/ min == -1-max
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1148,"ssert.assertEquals(-1, MathUtils.subAndCheck(-max - 1, -max));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1149,"ssert.assertEquals(max, MathUtils.subAndCheck(-1, -1 - max));"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1150,"estSubAndCheckLongFailure(0L, min);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1151,"estSubAndCheckLongFailure(max, -1L);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1152,"estSubAndCheckLongFailure(min, 1L);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1155,"rivate void testSubAndCheckLongFailure(long a, long b) {"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1156,ry {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1157,"athUtils.subAndCheck(a, b);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1158,"ssert.fail(""Expecting MathArithmeticException"");"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1159, catch (MathArithmeticException ex) {
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1160,/ success
