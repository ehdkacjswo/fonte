is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,28,import org.apache.commons.math3.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,30,import org.apache.commons.math3.util.MathUtils;
True,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,504,* @throws NullArgumentException if {@code other} is null
False,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,504,ublic void merge(Frequency other) {
False,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,505,"or (Iterator<Map.Entry<Comparable<?>, Long>> iter = other.entrySetIterator(); iter.hasNext();) {"
False,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,506,"ap.Entry<Comparable<?>, Long> entry = iter.next();"
True,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,507,public void merge(final Frequency other) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,508,"MathUtils.checkNotNull(other, LocalizedFormats.NULL_NOT_ALLOWED);"
True,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,510,"final Iterator<Map.Entry<Comparable<?>, Long>> iter = other.entrySetIterator();"
True,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,511,while (iter.hasNext()) {
True,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,512,"final Map.Entry<Comparable<?>, Long> entry = iter.next();"
True,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,523,* @throws NullArgumentException if the collection is null
False,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,519,ublic void merge(Collection<Frequency> others) {
False,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,520,or (Iterator<Frequency> iter = others.iterator(); iter.hasNext();) {
False,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,521,erge(iter.next());
True,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,526,public void merge(final Collection<Frequency> others) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,527,"MathUtils.checkNotNull(others, LocalizedFormats.NULL_NOT_ALLOWED);"
True,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,529,for (final Frequency freq : others) {
True,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math3/stat/Frequency.java,530,merge(freq);
