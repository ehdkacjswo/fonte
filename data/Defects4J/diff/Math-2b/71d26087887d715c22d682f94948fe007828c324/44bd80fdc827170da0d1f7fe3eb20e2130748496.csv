is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,37,*   <li>Cut-Off value: 1e-12</li>
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,40,"* The cut-off value has been introduced to zero out very small numbers in the Simplex tableau,"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,41,* as these may lead to numerical instabilities due to the nature of the Simplex algorithm
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,42,"* (the pivot element is used as a denominator). If the problem definition is very tight, the"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,43,"* default cut-off value may be too small, thus it is advised to increase it to a larger value,"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,44,* in accordance with the chosen epsilon.
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,45,* <p>
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,56,/** Default amount of error to accept in floating point comparisons (as ulps). */
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,57,static final int DEFAULT_ULPS = 10;
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,59,/** Default cut-off value. */
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,60,static final double DEFAULT_CUT_OFF = 1e-12;
False,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,52,** Default amount of error to accept in floating point comparisons (as ulps). */
False,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,53,rivate static final int DEFAULT_ULPS = 10;
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,72,* Cut-off value for entries in the tableau: values smaller than the cut-off
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,73,* are treated as zero to improve numerical stability.
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,75,private final double cutOff;
False,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,65,"his(DEFAULT_EPSILON, DEFAULT_ULPS);"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,81,"this(DEFAULT_EPSILON, DEFAULT_ULPS, DEFAULT_CUT_OFF);"
False,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,74,"his(epsilon, DEFAULT_ULPS);"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,90,"this(epsilon, DEFAULT_ULPS, DEFAULT_CUT_OFF);"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,94,* Builds a simplex solver with a specified accepted amount of error.
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,96,* @param epsilon Amount of error to accept for algorithm convergence.
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,97,* @param maxUlps Amount of error to accept in floating point comparisons.
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,99,"public SimplexSolver(final double epsilon, final int maxUlps) {"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,100,"this(epsilon, maxUlps, DEFAULT_CUT_OFF);"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,108,* @param cutOff Values smaller than the cutOff are treated as zero.
False,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,83,"ublic SimplexSolver(final double epsilon,"
False,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,84,inal int maxUlps) {
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,110,"public SimplexSolver(final double epsilon, final int maxUlps, final double cutOff) {"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,113,this.cutOff = cutOff;
False,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,261,axUlps);
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,288,"maxUlps,"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java,289,cutOff);
False,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,69,** Default amount of error to accept in floating point comparisons (as ulps). */
False,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,70,rivate static final int DEFAULT_ULPS = 10;
False,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,72,** The cut-off threshold to zero-out entries. */
False,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,73,rivate static final double CUTOFF_THRESHOLD = 1e-12;
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,102,/** Cut-off value for entries in the tableau. */
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,103,private final double cutOff;
False,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,123,"his(f, constraints, goalType, restrictToNonNegative, epsilon, DEFAULT_ULPS);"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,120,"this(f, constraints, goalType, restrictToNonNegative, epsilon,"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,121,"SimplexSolver.DEFAULT_ULPS, SimplexSolver.DEFAULT_CUT_OFF);"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,139,"this(f, constraints, goalType, restrictToNonNegative, epsilon, maxUlps, SimplexSolver.DEFAULT_CUT_OFF);"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,143,* Build a tableau for a linear problem.
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,144,* @param f linear objective function
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,145,* @param constraints linear constraints
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,146,* @param goalType type of optimization goal: either {@link GoalType#MAXIMIZE} or {@link GoalType#MINIMIZE}
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,147,* @param restrictToNonNegative whether to restrict the variables to non-negative values
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,148,* @param epsilon amount of error to accept when checking for optimality
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,149,* @param maxUlps amount of error to accept in floating point comparisons
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,150,* @param cutOff the cut-off value for tableau entries
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,152,"SimplexTableau(final LinearObjectiveFunction f,"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,153,"final Collection<LinearConstraint> constraints,"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,154,"final GoalType goalType,"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,155,"final boolean restrictToNonNegative,"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,156,"final double epsilon,"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,157,"final int maxUlps,"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,158,final double cutOff) {
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,164,this.cutOff                 = cutOff;
False,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,465,"/ cut-off values smaller than the CUTOFF_THRESHOLD, otherwise may lead to numerical instabilities"
False,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,466,f (FastMath.abs(result) < CUTOFF_THRESHOLD) {
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,484,"// cut-off values smaller than the cut-off threshold, otherwise may lead to numerical instabilities"
True,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optim/linear/SimplexTableau.java,485,if (FastMath.abs(result) < cutOff) {
False,src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java,423,"implexSolver solver = new SimplexSolver(1e-4, 10);"
True,src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java,423,"SimplexSolver solver = new SimplexSolver(1e-4, 10, 1e-6);"
False,src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java,427,"ssert.assertEquals(0.3752298, solution.getValue(), 1e-6);"
True,src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math3/optim/linear/SimplexSolverTest.java,427,"Assert.assertEquals(0.3752298, solution.getValue(), 1e-4);"
