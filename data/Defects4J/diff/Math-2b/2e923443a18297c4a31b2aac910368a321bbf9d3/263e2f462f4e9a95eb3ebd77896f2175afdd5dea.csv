is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,29,import org.apache.commons.math3.util.FastMath;
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,162,@Test
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,163,public void testMath832() {
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,164,final UnivariateFunction f = new UnivariateFunction() {
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,165,public double value(double x) {
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,166,final double sqrtX = FastMath.sqrt(x);
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,167,final double a = 1e2 * sqrtX;
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,168,final double b = 1e6 / x;
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,169,final double c = 1e4 / sqrtX;
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,171,return a + b + c;
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,175,"UnivariateOptimizer optimizer = new BrentOptimizer(1e-10, 1e-8);"
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,176,"final double result = optimizer.optimize(1483,"
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,177,"f,"
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,178,"GoalType.MINIMIZE,"
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,179,"Double.MIN_VALUE,"
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,180,Double.MAX_VALUE).getPoint();
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,182,"Assert.assertEquals(804.9355825, result, 1e-6);"
