is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/primes/PollardRho.java,src/main/java/org/apache/commons/math3/primes/PollardRho.java,66, rho implementations. It also batch several gcd computation into 1.
True,src/main/java/org/apache/commons/math3/primes/PollardRho.java,src/main/java/org/apache/commons/math3/primes/PollardRho.java,66,* rho implementations. It also batches several gcd computation into 1.
False,src/main/java/org/apache/commons/math3/primes/PollardRho.java,src/main/java/org/apache/commons/math3/primes/PollardRho.java,68, The backtracking is not implemented as we deal only with semi-prime.
True,src/main/java/org/apache/commons/math3/primes/PollardRho.java,src/main/java/org/apache/commons/math3/primes/PollardRho.java,68,* The backtracking is not implemented as we deal only with semi-primes.
False,src/main/java/org/apache/commons/math3/primes/Primes.java,src/main/java/org/apache/commons/math3/primes/Primes.java,47, It uses the Miller-Rabin probabilistic test in such a way that result is always guaranteed:
True,src/main/java/org/apache/commons/math3/primes/Primes.java,src/main/java/org/apache/commons/math3/primes/Primes.java,47,* It uses the Miller-Rabin probabilistic test in such a way that a result is guaranteed:
False,src/main/java/org/apache/commons/math3/primes/Primes.java,src/main/java/org/apache/commons/math3/primes/Primes.java,68, Return the smallest prime superior or equal to n.
True,src/main/java/org/apache/commons/math3/primes/Primes.java,src/main/java/org/apache/commons/math3/primes/Primes.java,68,* Return the smallest prime greater than or equal to n.
False,src/main/java/org/apache/commons/math3/primes/Primes.java,src/main/java/org/apache/commons/math3/primes/Primes.java,71, @return the smallest prime superior or equal to n.
True,src/main/java/org/apache/commons/math3/primes/Primes.java,src/main/java/org/apache/commons/math3/primes/Primes.java,71,* @return the smallest prime greater than or equal to n.
False,src/main/java/org/apache/commons/math3/primes/SmallPrimes.java,src/main/java/org/apache/commons/math3/primes/SmallPrimes.java,34, The 512 firsts prime numbers.
True,src/main/java/org/apache/commons/math3/primes/SmallPrimes.java,src/main/java/org/apache/commons/math3/primes/SmallPrimes.java,34,* The first 512 prime numbers.
False,src/main/java/org/apache/commons/math3/primes/SmallPrimes.java,src/main/java/org/apache/commons/math3/primes/SmallPrimes.java,96," @param maxFactor the upper bound of trial division: if it is reach, the methods gives up and return n."
True,src/main/java/org/apache/commons/math3/primes/SmallPrimes.java,src/main/java/org/apache/commons/math3/primes/SmallPrimes.java,96,"* @param maxFactor the upper bound of trial division: if it is reached, the method gives up and returns n."
False,src/main/java/org/apache/commons/math3/primes/SmallPrimes.java,src/main/java/org/apache/commons/math3/primes/SmallPrimes.java,125, @param n the number to factorize
True,src/main/java/org/apache/commons/math3/primes/SmallPrimes.java,src/main/java/org/apache/commons/math3/primes/SmallPrimes.java,125,* @param n the number to factor
False,src/main/java/org/apache/commons/math3/primes/SmallPrimes.java,src/main/java/org/apache/commons/math3/primes/SmallPrimes.java,141," Miller-Rabin probabilistic primality test for int type, used in such a way that result is always guaranteed."
True,src/main/java/org/apache/commons/math3/primes/SmallPrimes.java,src/main/java/org/apache/commons/math3/primes/SmallPrimes.java,141,"* Miller-Rabin probabilistic primality test for int type, used in such a way that a result is always guaranteed."
