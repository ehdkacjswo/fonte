is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/math3/PerfTestUtils.java,src/test/java/org/apache/commons/math3/PerfTestUtils.java,118,esult[i] = r.call();
True,src/test/java/org/apache/commons/math3/PerfTestUtils.java,src/test/java/org/apache/commons/math3/PerfTestUtils.java,118,result[i] = r.call().doubleValue();
True,src/test/java/org/apache/commons/math3/PerfTestUtils.java,src/test/java/org/apache/commons/math3/PerfTestUtils.java,161,"@SuppressWarnings(""boxing"")"
True,src/test/java/org/apache/commons/math3/analysis/integration/gauss/HermiteParametricTest.java,src/test/java/org/apache/commons/math3/analysis/integration/gauss/HermiteParametricTest.java,71,"@SuppressWarnings(""boxing"") // OK here"
True,src/test/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionParametricTest.java,src/test/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionParametricTest.java,69,"@SuppressWarnings(""boxing"") // OK here"
True,src/test/java/org/apache/commons/math3/analysis/integration/gauss/LegendreParametricTest.java,src/test/java/org/apache/commons/math3/analysis/integration/gauss/LegendreParametricTest.java,69,"@SuppressWarnings(""boxing"") // OK here"
True,src/test/java/org/apache/commons/math3/complex/RootsOfUnityTest.java,src/test/java/org/apache/commons/math3/complex/RootsOfUnityTest.java,96,"@SuppressWarnings(""boxing"")"
True,src/test/java/org/apache/commons/math3/distribution/BetaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/BetaDistributionTest.java,285,"@SuppressWarnings(""boxing"")"
False,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalMixtureModelDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalMixtureModelDistributionTest.java,48,"ssert.assertEquals(1d / 3, comp.get(0).getFirst(), Math.ulp(1d));"
False,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalMixtureModelDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalMixtureModelDistributionTest.java,49,"ssert.assertEquals(2d / 3, comp.get(1).getFirst(), Math.ulp(1d));"
True,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalMixtureModelDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalMixtureModelDistributionTest.java,48,"Assert.assertEquals(1d / 3, comp.get(0).getFirst().doubleValue(), Math.ulp(1d));"
True,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalMixtureModelDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/MultivariateNormalMixtureModelDistributionTest.java,49,"Assert.assertEquals(2d / 3, comp.get(1).getFirst().doubleValue(), Math.ulp(1d));"
True,src/test/java/org/apache/commons/math3/genetics/RandomKeyTest.java,src/test/java/org/apache/commons/math3/genetics/RandomKeyTest.java,27,"@SuppressWarnings(""boxing"")"
True,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,35,"@SuppressWarnings(""boxing"")"
False,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,86,"ssert.assertEquals(1.0 - ratio, Double.valueOf((double) from1 / LEN), 0.1);"
False,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,87,"ssert.assertEquals(ratio, Double.valueOf((double) from2 / LEN), 0.1);"
True,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,87,"Assert.assertEquals(1.0 - ratio, (double) from1 / LEN, 0.1);"
True,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,88,"Assert.assertEquals(ratio, (double) from2 / LEN, 0.1);"
False,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,101,"ssert.assertEquals(ratio, Double.valueOf((double) from1 / LEN), 0.1);"
False,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,102,"ssert.assertEquals(1.0 - ratio, Double.valueOf((double) from2 / LEN), 0.1);"
True,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,102,"Assert.assertEquals(ratio, (double) from1 / LEN, 0.1);"
True,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,103,"Assert.assertEquals(1.0 - ratio, (double) from2 / LEN, 0.1);"
True,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,109,"@SuppressWarnings(""boxing"")"
True,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,111,"@SuppressWarnings(""boxing"")"
True,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,123,"@SuppressWarnings(""boxing"")"
True,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,src/test/java/org/apache/commons/math3/genetics/UniformCrossoverTest.java,139,"@SuppressWarnings(""boxing"")"
False,src/test/java/org/apache/commons/math3/util/MultidimensionalCounterTest.java,src/test/java/org/apache/commons/math3/util/MultidimensionalCounterTest.java,159,inal int uniDimIndex = iter.next();
True,src/test/java/org/apache/commons/math3/util/MultidimensionalCounterTest.java,src/test/java/org/apache/commons/math3/util/MultidimensionalCounterTest.java,159,final int uniDimIndex = iter.next().intValue();
True,src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java,src/test/java/org/apache/commons/math3/util/OpenIntToDoubleHashMapTest.java,35,"@SuppressWarnings(""boxing"")"
False,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,29,"ssert.assertEquals(new Double(2), p.getValue(), Math.ulp(1d));"
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,29,"Assert.assertEquals(2, p.getValue().doubleValue(), Math.ulp(1d));"
