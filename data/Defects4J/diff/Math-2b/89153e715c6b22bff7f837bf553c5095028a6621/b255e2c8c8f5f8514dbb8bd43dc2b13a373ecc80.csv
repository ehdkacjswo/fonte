is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java,25,import org.apache.commons.math.util.ArithmeticUtils;
False,src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java,241,f (!FastFourierTransformer.isPowerOf2(n)) {
True,src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java,242,if (!ArithmeticUtils.isPowerOfTwo(n)) {
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,32,import org.apache.commons.math.util.ArithmeticUtils;
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,469, Returns true if the argument is a power of 2.
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,471, @param n the number to test
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,472, @return true if the argument is a power of 2
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,474,ublic static boolean isPowerOf2(long n) {
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,475,eturn (n > 0) && ((n & (n - 1)) == 0);
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,487,f (!isPowerOf2(d.length)) {
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,478,if (!ArithmeticUtils.isPowerOfTwo(d.length)) {
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,503,f (!isPowerOf2(o.length)) {
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,494,if (!ArithmeticUtils.isPowerOfTwo(o.length)) {
True,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,24,import org.apache.commons.math.util.ArithmeticUtils;
False,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,262,f (!FastFourierTransformer.isPowerOf2(n)) {
True,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,263,if (!ArithmeticUtils.isPowerOfTwo(n)) {
False,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,314,f (!FastFourierTransformer.isPowerOf2(n)) {
True,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,315,if (!ArithmeticUtils.isPowerOfTwo(n)) {
False,src/main/java/org/apache/commons/math/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math/util/ArithmeticUtils.java,21,mport org.apache.commons.math.exception.MathIllegalNumberException;
True,src/main/java/org/apache/commons/math/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math/util/ArithmeticUtils.java,947,* Returns true if the argument is a power of two.
True,src/main/java/org/apache/commons/math/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math/util/ArithmeticUtils.java,949,* @param n the number to test
True,src/main/java/org/apache/commons/math/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math/util/ArithmeticUtils.java,950,* @return true if the argument is a power of two
True,src/main/java/org/apache/commons/math/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math/util/ArithmeticUtils.java,952,public static boolean isPowerOfTwo(long n) {
True,src/main/java/org/apache/commons/math/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math/util/ArithmeticUtils.java,953,return (n > 0) && ((n & (n - 1)) == 0);
True,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,20,import java.util.Arrays;
True,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,682,@Test
True,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,683,public void testIsPowerOfTwo() {
True,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,684,final int n = 1025;
True,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,685,final boolean[] expected = new boolean[n];
True,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,686,"Arrays.fill(expected, false);"
True,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,687,for (int i = 1; i < expected.length; i *= 2) {
True,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,688,expected[i] = true;
True,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,690,for (int i = 0; i < expected.length; i++) {
True,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,691,final boolean actual = ArithmeticUtils.isPowerOfTwo(i);
True,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math/util/ArithmeticUtilsTest.java,692,"Assert.assertTrue(Integer.toString(i), actual == expected[i]);"
