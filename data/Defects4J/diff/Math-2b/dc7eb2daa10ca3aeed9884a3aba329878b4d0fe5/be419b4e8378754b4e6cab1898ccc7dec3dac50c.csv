is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,25, @version $Revision$ $Date$
True,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,25,* @version $Revision: 1.13 $ $Date$
False,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,40, Creates normal distribution with the mean equal to zero and standard
False,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,41, deviation equal to one.
True,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,40,* Creates cauchy distribution with the medain equal to zero and scale
True,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,41,* equal to one.
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,35,* <li>Weibull</li>
False,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,178, @return a new normal distribution.
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,179,* @return a new poisson distribution.
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,185,* Create a new Weibull distribution with the given shape and scale
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,186,* parameters.
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,188,* @param alpha the shape parameter.
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,189,* @param beta the scale parameter.
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,190,* @return a new Weibull distribution.
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,192,public WeibullDistribution createWeibullDistribution(
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,193,"double alpha, double beta)"
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,195,"return new WeibullDistributionImpl(alpha, beta);"
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,14,* limitations under the License.
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,17,package org.apache.commons.math.distribution;
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,20,* Weibull Distribution.  This interface defines the two parameter form of the
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,21,* distribution as defined by
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,22,"* <a href=""http://mathworld.wolfram.com/WeibullDistribution.html"">"
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,23,"* Weibull Distribution</a>, equations (1) and (2)."
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,25,* Instances of WeibullDistribution objects should be created using
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,26,"* {@link DistributionFactory#createWeibullDistribution(double, double)}"
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,28,* <p>
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,29,* References:
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,30,* <ul>
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,31,"* <li><a href=""http://mathworld.wolfram.com/WeibullDistribution.html"">"
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,32,* Weibull Distribution</a></li>
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,33,* </ul>
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,34,* </p>
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,36,"* @version $Revision: 1.12 $ $Date: 2004-06-23 11:26:18 -0500 (Wed, 23 Jun 2004) $"
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,38,public interface WeibullDistribution extends ContinuousDistribution {
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,41,* Access the shape parameter.
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,42,* @return the shape parameter.
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,44,double getShape();
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,47,* Access the scale parameter.
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,48,* @return the scale parameter.
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,50,double getScale();
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,53,* Modify the shape parameter.
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,54,* @param alpha The new shape parameter value.
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,56,void setShape(double alpha);
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,59,* Modify the scale parameter.
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,60,* @param beta The new scale parameter value.
True,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,src/java/org/apache/commons/math/distribution/WeibullDistribution.java,62,void setScale(double beta);
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,14,* limitations under the License.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,17,package org.apache.commons.math.distribution;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,19,import java.io.Serializable;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,22,* Default implementation of
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,23,* {@link org.apache.commons.math.distribution.WeibullDistribution}.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,25,"* @version $Revision: 1.13 $ $Date: 2004-07-24 16:41:37 -0500 (Sat, 24 Jul 2004) $"
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,27,public class WeibullDistributionImpl extends AbstractContinuousDistribution
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,28,"implements WeibullDistribution, Serializable {"
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,30,/** Serializable version identifier */
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,31,static final long serialVersionUID = 8589540077390120676L;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,33,/** The shape parameter. */
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,34,private double alpha;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,36,/** The scale parameter. */
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,37,private double beta;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,40,* Creates weibull distribution with the given shape and scale and a
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,41,* location equal to zero.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,42,* @param alpha the shape parameter.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,43,* @param beta the scale parameter.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,45,"public WeibullDistributionImpl(double alpha, double beta){"
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,46,super();
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,47,setShape(alpha);
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,48,setScale(beta);
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,52,"* For this disbution, X, this method returns P(X &lt; <code>x</code>)."
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,53,* @param x the value at which the CDF is evaluated.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,54,* @return CDF evaluted at <code>x</code>.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,56,public double cumulativeProbability(double x) {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,57,double ret;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,58,if (x <= 0.0) {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,59,ret = 0.0;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,60,} else {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,61,"ret = 1.0 - Math.exp(-Math.pow(x / getScale(), getShape()));"
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,63,return ret;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,67,* Access alpha.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,68,* @return the alpha.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,70,public double getShape() {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,71,return alpha;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,75,* Access beta.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,76,* @return the beta.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,78,public double getScale() {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,79,return beta;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,83,"* For this distribution, X, this method returns the critical point x, such"
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,84,* that P(X &lt; x) = <code>p</code>.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,85,* <p>
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,86,* Returns <code>Double.NEGATIVE_INFINITY</code> for p=0 and
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,87,* <code>Double.POSITIVE_INFINITY</code> for p=1.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,89,* @param p the desired probability
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,90,"* @return x, such that P(X &lt; x) = <code>p</code>"
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,91,* @throws IllegalArgumentException if <code>p</code> is not a valid
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,92,*         probability.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,94,public double inverseCumulativeProbability(double p) {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,95,double ret;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,96,if (p < 0.0 || p > 1.0) {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,97,throw new IllegalArgumentException
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,98,"(""probability argument must be between 0 and 1 (inclusive)"");"
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,99,} else if (p == 0) {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,100,ret = 0.0;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,101,} else  if (p == 1) {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,102,ret = Double.POSITIVE_INFINITY;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,103,} else {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,104,"ret = getScale() * Math.pow(-Math.log(1.0 - p), 1.0 / getShape());"
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,106,return ret;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,110,* Modify alpha.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,111,* @param alpha The new alpha value.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,113,public void setShape(double alpha) {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,114,if (alpha <= 0.0) {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,115,throw new IllegalArgumentException(
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,116,"""Shape must be positive."");"
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,118,this.alpha = alpha;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,122,* Modify beta.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,123,* @param beta The new beta value.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,125,public void setScale(double beta) {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,126,if (beta <= 0.0) {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,127,throw new IllegalArgumentException(
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,128,"""Scale must be positive."");"
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,130,this.beta = beta;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,134,"* Access the domain value lower bound, based on <code>p</code>, used to"
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,135,* bracket a CDF root.  This method is used by
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,136,* {@link #inverseCumulativeProbability(double)} to find critical values.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,138,* @param p the desired probability for the critical value
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,139,"* @return domain value lower bound, i.e."
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,140,*         P(X &lt; <i>lower bound</i>) &lt; <code>p</code>
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,142,protected double getDomainLowerBound(double p) {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,143,return 0.0;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,147,"* Access the domain value upper bound, based on <code>p</code>, used to"
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,148,* bracket a CDF root.  This method is used by
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,149,* {@link #inverseCumulativeProbability(double)} to find critical values.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,151,* @param p the desired probability for the critical value
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,152,"* @return domain value upper bound, i.e."
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,153,*         P(X &lt; <i>upper bound</i>) &gt; <code>p</code>
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,155,protected double getDomainUpperBound(double p) {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,156,return Double.MAX_VALUE;
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,160,"* Access the initial domain value, based on <code>p</code>, used to"
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,161,* bracket a CDF root.  This method is used by
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,162,* {@link #inverseCumulativeProbability(double)} to find critical values.
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,164,* @param p the desired probability for the critical value
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,165,* @return initial domain value
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,167,protected double getInitialDomain(double p) {
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,168,// use median
True,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,169,"return Math.pow(getScale() * Math.log(2.0), 1.0 / getShape());"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,329,public void testCauchyDistributionNegative() {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,330,try {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,331,"factory.createCauchyDistribution(0.0, -1.0);"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,332,"fail(""invalid scale. IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,333,} catch(IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,337,public void testCauchyDistributionZero() {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,338,try {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,339,"factory.createCauchyDistribution(0.0, 0.0);"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,340,"fail(""invalid scale. IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,341,} catch(IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,345,public void testWeibullDistributionNegativePositive() {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,346,try {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,347,"factory.createWeibullDistribution(-1.0, 1.0);"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,348,"fail(""invalid shape. IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,349,} catch(IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,353,public void testWeibullDistributionZeroPositive() {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,354,try {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,355,"factory.createWeibullDistribution(0.0, 1.0);"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,356,"fail(""invalid shape. IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,357,} catch(IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,361,public void testWeibullDistributionPositiveNegative() {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,362,try {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,363,"factory.createWeibullDistribution(1.0, -1.0);"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,364,"fail(""invalid scale. IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,365,} catch(IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,369,public void testWeibullDistributionPositiveZero() {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,370,try {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,371,"factory.createWeibullDistribution(1.0, 0.0);"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,372,"fail(""invalid scale. IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,373,} catch(IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,17,package org.apache.commons.math.distribution;
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,20,* Test cases for WeibullDistribution.
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,21,* Extends ContinuousDistributionAbstractTest.  See class javadoc for
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,22,* ContinuousDistributionAbstractTest for details.
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,24,"* @version $Revision: 1.8 $ $Date: 2004-07-24 16:41:37 -0500 (Sat, 24 Jul 2004) $"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,26,public class WeibullDistributionTest extends ContinuousDistributionAbstractTest  {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,29,* Constructor for CauchyDistributionTest.
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,30,* @param arg0
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,32,public WeibullDistributionTest(String arg0) {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,33,super(arg0);
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,36,//-------------- Implementations for abstract methods -----------------------
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,38,/** Creates the default continuous distribution instance to use in tests. */
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,39,public ContinuousDistribution makeDistribution() {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,40,"return DistributionFactory.newInstance().createWeibullDistribution(1.2, 2.1);"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,43,/** Creates the default cumulative probability distribution test input values */
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,44,public double[] makeCumulativeTestPoints() {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,45,// quantiles computed using Mathematica
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,46,"return new double[] {0.00664355181d, 0.04543282833d, 0.09811627374d,"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,47,"0.1767135246d, 0.3219468654d, 4.207902826d, 5.23968437d,"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,48,"6.232056007d, 7.497630467d, 10.51154969d};"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,51,/** Creates the default cumulative probability density test expected values */
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,52,public double[] makeCumulativeTestValues() {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,53,"return new double[] {0.001d, 0.01d, 0.025d, 0.05d, 0.1d, 0.900d, 0.950d,"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,54,"0.975d, 0.990d, 0.999d};"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,57,//---------------------------- Additional test cases -------------------------
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,59,public void testInverseCumulativeProbabilityExtremes() throws Exception {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,60,"setInverseCumulativeTestPoints(new double[] {0.0, 1.0});"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,61,setInverseCumulativeTestValues(
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,62,"new double[] {0.0, Double.POSITIVE_INFINITY});"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,63,verifyInverseCumulativeProbabilities();
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,66,public void testAlpha() {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,67,WeibullDistribution distribution = (WeibullDistribution) getDistribution();
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,68,double expected = Math.random();
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,69,distribution.setShape(expected);
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,70,"assertEquals(expected, distribution.getShape(), 0.0);"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,73,public void testBeta() {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,74,WeibullDistribution distribution = (WeibullDistribution) getDistribution();
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,75,double expected = Math.random();
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,76,distribution.setScale(expected);
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,77,"assertEquals(expected, distribution.getScale(), 0.0);"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,80,public void testSetAlpha() {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,81,WeibullDistribution distribution = (WeibullDistribution) getDistribution();
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,82,try {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,83,distribution.setShape(0.0);
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,84,"fail(""Can not have 0.0 alpha."");"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,85,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,86,// success
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,89,try {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,90,distribution.setShape(-1.0);
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,91,"fail(""Can not have negative alpha."");"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,92,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,93,// success
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,97,public void testSetBeta() {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,98,WeibullDistribution distribution = (WeibullDistribution) getDistribution();
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,99,try {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,100,distribution.setScale(0.0);
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,101,"fail(""Can not have 0.0 beta."");"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,102,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,103,// success
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,106,try {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,107,distribution.setScale(-1.0);
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,108,"fail(""Can not have negative beta."");"
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,109,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java,110,// success
