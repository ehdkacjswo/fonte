is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,310,/** Mask used to clear the non-sign part of an int. */
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,311,private static final int MASK_NON_SIGN_INT = 0x7fffffff;
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,313,/** Mask used to clear the non-sign part of a long. */
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,314,private static final long MASK_NON_SIGN_LONG = 0x7fffffffffffffffl;
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,3014,eturn Float.intBitsToFloat(Integer.MAX_VALUE & Float.floatToRawIntBits(x));
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,3020,return Float.intBitsToFloat(MASK_NON_SIGN_INT & Float.floatToRawIntBits(x));
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,3023,eturn Double.longBitsToDouble(Long.MAX_VALUE & Double.doubleToRawLongBits(x));
True,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,3029,return Double.longBitsToDouble(MASK_NON_SIGN_LONG & Double.doubleToRawLongBits(x));
