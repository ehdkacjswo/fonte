is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,67,rivate int currentChar = -1;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,136,etupBlock();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,174,or (int b; (destOffs < hi) && ((b = read0()) >= 0);) {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,171,int b;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,172,while (destOffs < hi && ((b = read0()) >= 0)) {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,174,count(1);
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,179,ount(c);
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,199,inal int retChar = this.currentChar;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,201,witch (this.currentState) {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,197,switch (currentState) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,206,hrow new IllegalStateException();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,202,return setupBlock();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,212,etupRandPartB();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,213,reak;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,208,return setupRandPartB();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,216,etupRandPartC();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,217,reak;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,211,return setupRandPartC();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,223,etupNoRandPartB();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,224,reak;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,217,return setupNoRandPartB();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,227,etupNoRandPartC();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,228,reak;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,220,return setupNoRandPartC();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,234,eturn retChar;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,803,rivate void setupBlock() throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,804,f (this.data == null) {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,805,eturn;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,793,private int setupBlock() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,794,if (currentState == EOF || this.data == null) {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,795,return -1;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,835,etupRandPartA();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,836, else {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,837,etupNoRandPartA();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,825,return setupRandPartA();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,827,return setupNoRandPartA();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,841,rivate void setupRandPartA() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,830,private int setupRandPartA() throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,856,his.currentChar = su_ch2Shadow;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,847,return su_ch2Shadow;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,862,etupBlock();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,851,return setupBlock();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,866,rivate void setupNoRandPartA() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,855,private int setupNoRandPartA() throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,873,his.currentChar = su_ch2Shadow;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,864,return su_ch2Shadow;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,880,etupBlock();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,869,return setupBlock();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,884,rivate void setupRandPartB() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,873,private int setupRandPartB() throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,888,etupRandPartA();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,877,return setupRandPartA();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,905,etupRandPartC();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,894,return setupRandPartC();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,908,etupRandPartA();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,897,return setupRandPartA();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,912,rivate void setupRandPartC() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,901,private int setupRandPartC() throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,914,his.currentChar = this.su_ch2;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,905,return this.su_ch2;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,921,etupRandPartA();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,910,return setupRandPartA();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,925,rivate void setupNoRandPartB() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,914,private int setupNoRandPartB() throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,928,etupNoRandPartA();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,917,return setupNoRandPartA();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,933,etupNoRandPartC();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,922,return setupNoRandPartC();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,935,etupNoRandPartA();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,924,return setupNoRandPartA();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,939,rivate void setupNoRandPartC() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,928,private int setupNoRandPartC() throws IOException {
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,942,his.currentChar = su_ch2Shadow;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,934,return su_ch2Shadow;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,949,etupNoRandPartA();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,938,return setupNoRandPartA();
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,19,package org.apache.commons.compress.compressors.bzip2;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,21,import static org.junit.Assert.assertArrayEquals;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,23,import java.io.BufferedInputStream;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,24,import java.io.ByteArrayInputStream;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,25,import java.io.ByteArrayOutputStream;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,26,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,27,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,28,import java.nio.ByteBuffer;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,29,import java.nio.channels.Channels;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,30,import java.nio.channels.ReadableByteChannel;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,31,import java.util.Arrays;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,33,import org.junit.After;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,34,import org.junit.Assert;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,35,import org.junit.Before;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,36,import org.junit.BeforeClass;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,37,import org.junit.Test;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,40,* Testcase porting a test from Python's testsuite.
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,41,"* @see ""https://issues.apache.org/jira/browse/COMPRESS-253"""
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,43,public class PythonTruncatedBzip2Test {
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,45,"private static String TEXT = ""root:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:\ndaemon:x:2:2:daemon:/sbin:\nadm:x:3:4:adm:/var/adm:\nlp:x:4:7:lp:/var/spool/lpd:\nsync:x:5:0:sync:/sbin:/bin/sync\nshutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\nhalt:x:7:0:halt:/sbin:/sbin/halt\nmail:x:8:12:mail:/var/spool/mail:\nnews:x:9:13:news:/var/spool/news:\nuucp:x:10:14:uucp:/var/spool/uucp:\noperator:x:11:0:operator:/root:\ngames:x:12:100:games:/usr/games:\ngopher:x:13:30:gopher:/usr/lib/gopher-data:\nftp:x:14:50:FTP User:/var/ftp:/bin/bash\nnobody:x:65534:65534:Nobody:/home:\npostfix:x:100:101:postfix:/var/spool/postfix:\nniemeyer:x:500:500::/home/niemeyer:/bin/bash\npostgres:x:101:102:PostgreSQL Server:/var/lib/pgsql:/bin/bash\nmysql:x:102:103:MySQL server:/var/lib/mysql:/bin/bash\nwww:x:103:104::/var/www:/bin/false\n"";"
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,47,private static byte[] DATA;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,48,private static byte[] TRUNCATED_DATA;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,49,private ReadableByteChannel bz2Channel;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,51,@BeforeClass
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,52,public static void initializeTestData() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,53,ByteArrayOutputStream out = new ByteArrayOutputStream();
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,54,BZip2CompressorOutputStream bz2out = new BZip2CompressorOutputStream(out);
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,55,"bz2out.write(TEXT.getBytes(), 0, TEXT.getBytes().length);"
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,56,bz2out.close();
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,57,DATA = out.toByteArray();
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,59,// Drop the eos_magic field (6 bytes) and CRC (4 bytes).
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,60,"TRUNCATED_DATA = Arrays.copyOfRange(DATA, 0, DATA.length - 10);"
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,63,@Before
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,64,public void initializeChannel() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,65,InputStream source = new ByteArrayInputStream(TRUNCATED_DATA);
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,66,this.bz2Channel = makeBZ2C(source);
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,69,@After
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,70,public void closeChannel() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,71,bz2Channel.close();
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,72,bz2Channel = null;
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,75,@Test(expected = IOException.class)
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,76,public void testTruncatedData() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,77,//with BZ2File(self.filename) as f:
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,78,"//    self.assertRaises(EOFError, f.read)"
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,79,"System.out.println(""Attempt to read the whole thing in, should throw ..."");"
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,80,ByteBuffer buffer = ByteBuffer.allocate(8192);
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,81,bz2Channel.read(buffer);
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,84,@Test
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,85,public void testPartialReadTruncatedData() throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,86,//with BZ2File(self.filename) as f:
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,87,"//    self.assertEqual(f.read(len(self.TEXT)), self.TEXT)"
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,88,"//    self.assertRaises(EOFError, f.read, 1)"
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,90,final int length = TEXT.length();
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,91,ByteBuffer buffer = ByteBuffer.allocate(length);
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,92,bz2Channel.read(buffer);
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,94,"assertArrayEquals(Arrays.copyOfRange(TEXT.getBytes(), 0, length),"
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,95,buffer.array());
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,97,// subsequent read should throw
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,98,buffer = ByteBuffer.allocate(1);
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,99,try {
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,100,bz2Channel.read(buffer);
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,101,"Assert.fail(""The read should have thrown."");"
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,102,} catch (IOException e) {
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,103,// pass
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,107,private static ReadableByteChannel makeBZ2C(InputStream source) throws IOException {
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,108,BufferedInputStream bin = new BufferedInputStream(source);
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,109,"BZip2CompressorInputStream bZin = new BZip2CompressorInputStream(bin, true);"
True,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java,111,return Channels.newChannel(bZin);
