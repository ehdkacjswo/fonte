is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,28, This class represents an entry in a Tar archive. It consists of the entry's
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,29," header, as well as the entry's File. Entries can be instantiated in one of"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,30," three ways, depending on how they are to be used. <p>"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,28,* This class represents an entry in a Tar archive. It consists
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,29,"* of the entry's header, as well as the entry's File. Entries"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,30,"* can be instantiated in one of three ways, depending on how"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,31,* they are to be used.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,32,* <p>
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,33,* TarEntries that are created from the header bytes read from
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,34,* an archive are instantiated with the TarEntry( byte[] )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,35,* constructor. These entries will be used when extracting from
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,36,* or listing the contents of an archive. These entries have their
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,37,* header filled in using the header bytes. They also set the File
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,38,"* to null, since they reference an archive entry not a file."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,39,* <p>
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,40,* TarEntries that are created from Files that are to be written
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,41,* into an archive are instantiated with the TarEntry( File )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,42,* constructor. These entries have their header filled in using
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,43,* the File's information. They also keep a reference to the File
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,44,* for convenience when writing entries.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,45,* <p>
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,46,"* Finally, TarEntries can be constructed from nothing but a name."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,47,"* This allows the programmer to construct the entry by hand, for"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,48,* instance when only an InputStream is available for writing to
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,49,"* the archive, and the header information is constructed from"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,50,* other information. In this case the header fields are set to
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,51,* defaults and the File is set to null.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,32, TarEntries that are created from the header bytes read from an archive are
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,33, instantiated with the TarEntry( byte[] ) constructor. These entries will be
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,34, used when extracting from or listing the contents of an archive. These
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,35, entries have their header filled in using the header bytes. They also set the
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,36," File to null, since they reference an archive entry not a file. <p>"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,38, TarEntries that are created from Files that are to be written into an archive
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,39, are instantiated with the TarEntry( File ) constructor. These entries have
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,40, their header filled in using the File's information. They also keep a
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,41, reference to the File for convenience when writing entries. <p>
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,43," Finally, TarEntries can be constructed from nothing but a name. This allows"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,44," the programmer to construct the entry by hand, for instance when only an"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,45," InputStream is available for writing to the archive, and the header"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,46, information is constructed from other information. In this case the header
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,47, fields are set to defaults and the File is set to null. <p>
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,49, The C structure for a Tar Entry's header is: <pre>
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,53,* <p>
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,54,* The C structure for a Tar Entry's header is:
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,55,* <pre>
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,68,ublic class TarArchiveEntry implements ArchiveEntry {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,70, The length of the name field in a header buffer.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,72,ublic static final int NAMELEN = 99;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,75, The entry's modification time.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,77,rivate int m_checkSum;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,76,"public class TarArchiveEntry implements TarConstants, ArchiveEntry {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,77,/** The entry's name. */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,78,private StringBuffer name;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,80, The entry's group name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,82,rivate int m_devMajor;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,80,/** The entry's permission mode. */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,81,private int mode;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,85, The entry's major device number.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,87,rivate int m_devMinor;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,83,/** The entry's user id. */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,84,private int userId;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,90, The entry's minor device number.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,92,rivate File m_file;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,86,/** The entry's group id. */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,87,private int groupId;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,95, The entry's user id.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,97,rivate int m_groupID;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,89,/** The entry's size. */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,90,private long size;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,100, The entry's user name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,102,rivate StringBuffer m_groupName;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,92,/** The entry's modification time. */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,93,private long modTime;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,105, The entry's checksum.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,107,rivate byte m_linkFlag;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,95,/** The entry's link flag. */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,96,private byte linkFlag;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,110, The entry's link flag.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,112,rivate StringBuffer m_linkName;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,98,/** The entry's link name. */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,99,private StringBuffer linkName;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,115, The entry's link name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,117,rivate StringBuffer m_magic;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,101,/** The entry's magic tag. */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,102,private StringBuffer magic;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,120, The entry's size.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,122,rivate long m_modTime;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,104,/** The entry's user name. */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,105,private StringBuffer userName;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,125, The entry's name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,127,rivate int m_mode;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,107,/** The entry's group name. */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,108,private StringBuffer groupName;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,129,rivate StringBuffer m_name;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,110,/** The entry's major device number. */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,111,private int devMajor;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,132, The entry's group id.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,134,rivate long m_size;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,113,/** The entry's minor device number. */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,114,private int devMinor;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,137, The entry's permission mode.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,139,rivate int m_userID;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,116,/** The entry's file reference */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,117,private File file;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,119,/** Maximum length of a user's name in the tar file */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,120,public static final int MAX_NAMELEN = 31;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,122,/** Default permissions bits for directories */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,123,public static final int DEFAULT_DIR_MODE = 040755;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,125,/** Default permissions bits for files */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,126,public static final int DEFAULT_FILE_MODE = 0100644;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,128,/** Convert millis to seconds */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,129,public static final int MILLIS_PER_SECOND = 1000;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,142, The entry's magic tag.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,132,* Construct an empty entry and prepares the header values.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,144,rivate StringBuffer m_userName;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,134,private TarArchiveEntry () {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,135,this.magic = new StringBuffer(TMAGIC);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,136,this.name = new StringBuffer();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,137,this.linkName = new StringBuffer();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,139,"String user = System.getProperty(""user.name"", """");"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,141,if (user.length() > MAX_NAMELEN) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,142,"user = user.substring(0, MAX_NAMELEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,145,this.userId = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,146,this.groupId = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,147,this.userName = new StringBuffer(user);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,148,"this.groupName = new StringBuffer("""");"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,149,this.file = null;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,147, Construct an entry with only a name. This allows the programmer to
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,148," construct the entry's header ""by hand"". File is set to null."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,153,* Construct an entry with only a name. This allows the programmer
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,154,"* to construct the entry's header ""by hand"". File is set to null."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,150, @param name the name of the entry
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,156,* @param name the entry name
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,152,ublic TarArchiveEntry( final String name )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,158,public TarArchiveEntry(String name) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,156,"inal boolean isDir = name.endsWith( ""/"" );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,161,"boolean isDir = name.endsWith(""/"");"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,163,this.devMajor = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,164,this.devMinor = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,165,this.name = new StringBuffer(name);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,166,this.mode = isDir ? DEFAULT_DIR_MODE : DEFAULT_FILE_MODE;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,167,this.linkFlag = isDir ? LF_DIR : LF_NORMAL;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,168,this.userId = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,169,this.groupId = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,170,this.size = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,171,this.modTime = (new Date()).getTime() / MILLIS_PER_SECOND;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,172,"this.linkName = new StringBuffer("""");"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,173,"this.userName = new StringBuffer("""");"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,174,"this.groupName = new StringBuffer("""");"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,175,this.devMajor = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,176,this.devMinor = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,158,_name = new StringBuffer( name );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,159,_mode = isDir ? 040755 : 0100644;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,160,_linkFlag = isDir ? TarConstants.LF_DIR : TarConstants.LF_NORMAL;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,161,_modTime = ( new Date() ).getTime() / 1000;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,162,"_linkName = new StringBuffer( """" );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,163,"_userName = new StringBuffer( """" );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,164,"_groupName = new StringBuffer( """" );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,168, Construct an entry with a name an a link flag.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,181,* Construct an entry with a name and a link flag.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,170, @param name Description of Parameter
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,171, @param linkFlag Description of Parameter
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,183,* @param name the entry name
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,184,* @param linkFlag the entry link flag.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,173,"ublic TarArchiveEntry( final String name, final byte linkFlag )"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,175,his( name );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,176,_linkFlag = linkFlag;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,186,"public TarArchiveEntry(String name, byte linkFlag) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,187,this(name);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,188,this.linkFlag = linkFlag;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,180," Construct an entry for a file. File is set to file, and the header is"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,181, constructed from information from the file.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,192,"* Construct an entry for a file. File is set to file, and the"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,193,* header is constructed from information from the file.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,185,ublic TarArchiveEntry( final File file )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,197,public TarArchiveEntry(File file) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,189,_file = file;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,191,tring name = file.getPath();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,193,/ Strip off drive letters!
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,194,inal String osName =
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,195,"ystem.getProperty( ""os.name"" ).toLowerCase( Locale.US );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,196,"f( -1 != osName.indexOf( ""netware"" ) )"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,198,f( name.length() > 2 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,200,inal char ch1 = name.charAt( 0 );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,201,inal char ch2 = name.charAt( 1 );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,203,f( ch2 == ':' &&
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,204, ( ch1 >= 'a' && ch1 <= 'z' ) ||
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,205, ch1 >= 'A' && ch1 <= 'Z' ) ) )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,207,ame = name.substring( 2 );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,200,this.file = file;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,202,String fileName = file.getPath();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,203,"String osname = System.getProperty(""os.name"").toLowerCase(Locale.US);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,205,if (osname != null) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,207,// Strip off drive letters!
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,208,"// REVIEW Would a better check be ""(File.separator == '\')""?"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,210,"if (osname.startsWith(""windows"")) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,211,if (fileName.length() > 2) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,212,char ch1 = fileName.charAt(0);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,213,char ch2 = fileName.charAt(1);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,215,if (ch2 == ':'
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,216,&& ((ch1 >= 'a' && ch1 <= 'z')
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,217,|| (ch1 >= 'A' && ch1 <= 'Z'))) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,218,fileName = fileName.substring(2);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,221,"} else if (osname.indexOf(""netware"") > -1) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,222,int colon = fileName.indexOf(':');
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,223,if (colon != -1) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,224,fileName = fileName.substring(colon + 1);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,211,"lse if( -1 != osName.indexOf( ""netware"" ) )"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,213,inal int colon = name.indexOf( ':' );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,214,f( colon != -1 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,216,ame = name.substring( colon + 1 );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,220,"ame = name.replace( File.separatorChar, '/' );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,229,"fileName = fileName.replace(File.separatorChar, '/');"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,225,"hile( name.startsWith( ""/"" ) )"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,227,ame = name.substring( 1 );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,234,"while (fileName.startsWith(""/"")) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,235,fileName = fileName.substring(1);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,230,"_linkName = new StringBuffer( """" );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,231,_name = new StringBuffer( name );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,238,"this.linkName = new StringBuffer("""");"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,239,this.name = new StringBuffer(fileName);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,233,f( file.isDirectory() )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,235,_mode = 040755;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,236,_linkFlag = TarConstants.LF_DIR;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,241,if (file.isDirectory()) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,242,this.mode = DEFAULT_DIR_MODE;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,243,this.linkFlag = LF_DIR;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,238,f( m_name.charAt( m_name.length() - 1 ) != '/' )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,240,"_name.append( ""/"" );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,245,if (this.name.charAt(this.name.length() - 1) != '/') {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,246,"this.name.append(""/"");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,243,lse
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,245,_mode = 0100644;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,246,_linkFlag = TarConstants.LF_NORMAL;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,248,} else {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,249,this.mode = DEFAULT_FILE_MODE;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,250,this.linkFlag = LF_NORMAL;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,249,_size = file.length();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,250,_modTime = file.lastModified() / 1000;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,251,_checkSum = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,252,_devMajor = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,253,_devMinor = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,253,this.size = file.length();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,254,this.modTime = file.lastModified() / MILLIS_PER_SECOND;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,255,this.devMajor = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,256,this.devMinor = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,257, Construct an entry from an archive's header bytes. File is set to null.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,260,* Construct an entry from an archive's header bytes. File is set
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,261,* to null.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,259, @param header The header bytes from a tar archive entry.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,263,* @param headerBuf The header bytes from a tar archive entry.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,261,ublic TarArchiveEntry( final byte[] header )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,265,public TarArchiveEntry(byte[] headerBuf) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,264,arseTarHeader( header );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,267,parseTarHeader(headerBuf);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,268, Construct an empty entry and prepares the header values.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,271,* Determine if the two entries are equal. Equality is determined
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,272,* by the header names being equal.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,274,* @param it Entry to be checked for equality.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,275,* @return True if the entries are equal.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,270,rivate TarArchiveEntry()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,272,_magic = new StringBuffer( TarConstants.TMAGIC );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,273,_name = new StringBuffer();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,274,_linkName = new StringBuffer();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,276,"tring user = System.getProperty( ""user.name"", """" );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,277,f( user.length() > 31 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,279,"ser = user.substring( 0, 31 );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,282,_userName = new StringBuffer( user );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,283,"_groupName = new StringBuffer( """" );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,277,public boolean equals(TarArchiveEntry it) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,278,return getName().equals(it.getName());
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,287, Set this entry's group id.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,282,* Determine if the two entries are equal. Equality is determined
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,283,* by the header names being equal.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,289, @param groupId This entry's new group id.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,285,* @param it Entry to be checked for equality.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,286,* @return True if the entries are equal.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,291,ublic void setGroupID( final int groupId )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,293,_groupID = groupId;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,288,public boolean equals(Object it) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,289,if (it == null || getClass() != it.getClass()) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,290,return false;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,292,return equals((TarArchiveEntry) it);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,297, Set this entry's group id.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,296,* Hashcodes are based on entry names.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,299, @param groupId This entry's new group id.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,300, @deprecated Use setGroupID() instead
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,301, @see #setGroupID(int)
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,298,* @return the entry hashcode
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,303,ublic void setGroupId( final int groupId )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,305,_groupID = groupId;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,300,public int hashCode() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,301,return getName().hashCode();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,309, Set this entry's group name.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,305,* Determine if the given entry is a descendant of this entry.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,306,* Descendancy is determined by the name of the descendant
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,307,* starting with this entry's name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,311, @param groupName This entry's new group name.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,309,* @param desc Entry to be checked as a descendent of this.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,310,* @return True if entry is a descendant of this.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,313,ublic void setGroupName( final String groupName )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,315,_groupName = new StringBuffer( groupName );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,312,public boolean isDescendent(TarArchiveEntry desc) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,313,return desc.getName().startsWith(getName());
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,319, Set this entry's modification time. The parameter passed to this method
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,320," is in ""Java time""."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,317,* Get this entry's name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,322, @param time This entry's new modification time.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,319,* @return This entry's name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,324,ublic void setModTime( final long time )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,326,_modTime = time / 1000;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,321,public String getName() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,322,return name.toString();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,330, Set this entry's modification time.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,326,* Set this entry's name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,332, @param time This entry's new modification time.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,328,* @param name This entry's new name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,334,ublic void setModTime( final Date time )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,336,_modTime = time.getTime() / 1000;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,330,public void setName(String name) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,331,this.name = new StringBuffer(name);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,342, @param mode The new Mode value
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,337,* @param mode the mode for this entry
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,344,ublic void setMode( final int mode )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,346,_mode = mode;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,339,public void setMode(int mode) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,340,this.mode = mode;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,350, Set this entry's name.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,344,* Get this entry's link name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,352, @param name This entry's new name.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,346,* @return This entry's link name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,354,ublic void setName( final String name )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,356,_name = new StringBuffer( name );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,348,public String getLinkName() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,349,return linkName.toString();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,360, Set this entry's file size.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,353,* Get this entry's user id.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,362, @param size This entry's new file size.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,355,* @return This entry's user id.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,364,ublic void setSize( final long size )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,366,_size = size;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,357,public int getUserId() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,358,return userId;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,374,ublic void setUserID( final int userId )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,376,_userID = userId;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,366,public void setUserId(int userId) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,367,this.userId = userId;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,380, Set this entry's user id.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,371,* Get this entry's group id.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,382, @param userId This entry's new user id.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,383, @deprecated Use setUserID() instead
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,384, @see #setUserID(int)
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,373,* @return This entry's group id.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,386,ublic void setUserId( final int userId )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,388,_userID = userId;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,375,public int getGroupId() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,376,return groupId;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,392, Set this entry's user name.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,380,* Set this entry's group id.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,394, @param userName This entry's new user name.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,382,* @param groupId This entry's new group id.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,396,ublic void setUserName( final String userName )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,398,_userName = new StringBuffer( userName );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,384,public void setGroupId(int groupId) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,385,this.groupId = groupId;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,402," If this entry represents a file, and the file is a directory, return an"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,403, array of TarEntries for this entry's children.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,389,* Get this entry's user name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,405, @return An array of TarEntry's for this entry's children.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,391,* @return This entry's user name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,407,ublic TarArchiveEntry[] getDirectoryEntries()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,409,f( null == m_file || !m_file.isDirectory() )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,411,eturn new TarArchiveEntry[ 0 ];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,414,inal String[] list = m_file.list();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,415,inal TarArchiveEntry[] result = new TarArchiveEntry[ list.length ];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,417,or( int i = 0; i < list.length; ++i )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,419,"esult[ i ] = new TarArchiveEntry( new File( m_file, list[ i ] ) );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,422,eturn result;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,393,public String getUserName() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,394,return userName.toString();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,426, Get this entry's file.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,398,* Set this entry's user name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,428, @return This entry's file.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,400,* @param userName This entry's new user name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,430,ublic File getFile()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,432,eturn m_file;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,402,public void setUserName(String userName) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,403,this.userName = new StringBuffer(userName);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,436, Get this entry's group id.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,407,* Get this entry's group name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,438, @return This entry's group id.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,439, @deprecated Use getGroupID() instead
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,440, @see #getGroupID()
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,409,* @return This entry's group name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,442,ublic int getGroupId()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,444,eturn m_groupID;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,411,public String getGroupName() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,412,return groupName.toString();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,448, Get this entry's group id.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,416,* Set this entry's group name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,450, @return This entry's group id.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,418,* @param groupName This entry's new group name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,452,ublic int getGroupID()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,454,eturn m_groupID;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,420,public void setGroupName(String groupName) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,421,this.groupName = new StringBuffer(groupName);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,458, Get this entry's group name.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,425,* Convenience method to set this entry's group and user ids.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,460, @return This entry's group name.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,427,* @param userId This entry's new user id.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,428,* @param groupId This entry's new group id.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,462,ublic String getGroupName()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,464,eturn m_groupName.toString();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,430,"public void setIds(int userId, int groupId) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,431,setUserId(userId);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,432,setGroupId(groupId);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,468, Set this entry's modification time.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,436,* Convenience method to set this entry's group and user names.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,470, @return The ModTime value
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,438,* @param userName This entry's new user name.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,439,* @param groupName This entry's new group name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,472,ublic Date getModTime()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,474,eturn new Date( m_modTime * 1000 );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,441,"public void setNames(String userName, String groupName) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,442,setUserName(userName);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,443,setGroupName(groupName);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,478, Get this entry's mode.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,447,* Set this entry's modification time. The parameter passed
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,448,"* to this method is in ""Java time""."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,480, @return This entry's mode.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,450,* @param time This entry's new modification time.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,482,ublic int getMode()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,484,eturn m_mode;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,452,public void setModTime(long time) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,453,modTime = time / MILLIS_PER_SECOND;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,488, Get this entry's name.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,457,* Set this entry's modification time.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,490, @return This entry's name.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,459,* @param time This entry's new modification time.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,492,ublic String getName()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,494,eturn m_name.toString();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,461,public void setModTime(Date time) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,462,modTime = time.getTime() / MILLIS_PER_SECOND;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,498, Get this entry's file size.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,466,* Set this entry's modification time.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,500, @return This entry's file size.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,468,* @return time This entry's new modification time.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,502,ublic long getSize()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,504,eturn m_size;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,470,public Date getModTime() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,471,return new Date(modTime * MILLIS_PER_SECOND);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,508, Get this entry's checksum.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,475,* Get this entry's file.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,510, @return This entry's checksum.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,477,* @return This entry's file.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,512,ublic int getCheckSum()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,514,eturn m_checkSum;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,479,public File getFile() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,480,return file;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,518, Get this entry's user id.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,484,* Get this entry's mode.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,520, @return This entry's user id.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,521, @deprecated Use getUserID() instead
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,522, @see #getUserID()
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,486,* @return This entry's mode.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,524,ublic int getUserId()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,526,eturn m_userID;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,488,public int getMode() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,489,return mode;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,530, Get this entry's user id.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,493,* Get this entry's file size.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,532, @return This entry's user id.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,495,* @return This entry's file size.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,534,ublic int getUserID()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,536,eturn m_userID;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,497,public long getSize() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,498,return size;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,540, Get this entry's user name.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,502,* Set this entry's file size.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,542, @return This entry's user name.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,504,* @param size This entry's new file size.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,544,ublic String getUserName()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,546,eturn m_userName.toString();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,506,public void setSize(long size) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,507,this.size = size;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,550, Determine if the given entry is a descendant of this entry. Descendancy
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,551, is determined by the name of the descendant starting with this entry's
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,552, name.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,512,* Indicate if this entry is a GNU long name block
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,554, @param desc Entry to be checked as a descendent of
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,555, @return True if entry is a descendant of
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,514,* @return true if this is a long name extension provided by GNU tar
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,557,ublic boolean isDescendent( final TarArchiveEntry desc )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,559,eturn desc.getName().startsWith( getName() );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,516,public boolean isGNULongNameEntry() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,517,return linkFlag == LF_GNUTYPE_LONGNAME
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,518,&& name.toString().equals(GNU_LONGLINK);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,567,ublic boolean isDirectory()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,569,f( m_file != null )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,571,eturn m_file.isDirectory();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,526,public boolean isDirectory() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,527,if (file != null) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,528,return file.isDirectory();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,574,f( m_linkFlag == TarConstants.LF_DIR )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,531,if (linkFlag == LF_DIR) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,579,"f( getName().endsWith( ""/"" ) )"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,535,"if (getName().endsWith(""/"")) {"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,588, Indicate if this entry is a GNU long name block
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,543,"* If this entry represents a file, and the file is a directory, return"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,544,* an array of TarEntries for this entry's children.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,590, @return true if this is a long name extension provided by GNU tar
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,546,* @return An array of TarEntry's for this entry's children.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,592,ublic boolean isGNULongNameEntry()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,594,eturn m_linkFlag == TarConstants.LF_GNUTYPE_LONGNAME &&
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,595,_name.toString().equals( TarConstants.GNU_LONGLINK );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,548,public TarArchiveEntry[] getDirectoryEntries() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,549,if (file == null || !file.isDirectory()) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,550,return new TarArchiveEntry[0];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,553,String[]   list = file.list();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,554,TarArchiveEntry[] result = new TarArchiveEntry[list.length];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,556,for (int i = 0; i < list.length; ++i) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,557,"result[i] = new TarArchiveEntry(new File(file, list[i]));"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,560,return result;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,599, Determine if the two entries are equal. Equality is determined by the
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,600, header names being equal.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,564,* Write an entry's header information to a header buffer.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,602, @param other Entry to be checked for equality.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,603, @return True if the entries are equal.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,566,* @param outbuf The tar entry header buffer to fill in.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,605,ublic boolean equals( final TarArchiveEntry other )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,607,eturn getName().equals( other.getName() );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,568,public void writeEntryHeader(byte[] outbuf) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,569,int offset = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,571,"offset = TarUtils.getNameBytes(name, outbuf, offset, NAMELEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,572,"offset = TarUtils.getOctalBytes(mode, outbuf, offset, MODELEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,573,"offset = TarUtils.getOctalBytes(userId, outbuf, offset, UIDLEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,574,"offset = TarUtils.getOctalBytes(groupId, outbuf, offset, GIDLEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,575,"offset = TarUtils.getLongOctalBytes(size, outbuf, offset, SIZELEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,576,"offset = TarUtils.getLongOctalBytes(modTime, outbuf, offset, MODTIMELEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,578,int csOffset = offset;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,580,for (int c = 0; c < CHKSUMLEN; ++c) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,581,outbuf[offset++] = (byte) ' ';
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,584,outbuf[offset++] = linkFlag;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,585,"offset = TarUtils.getNameBytes(linkName, outbuf, offset, NAMELEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,586,"offset = TarUtils.getNameBytes(magic, outbuf, offset, MAGICLEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,587,"offset = TarUtils.getNameBytes(userName, outbuf, offset, UNAMELEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,588,"offset = TarUtils.getNameBytes(groupName, outbuf, offset, GNAMELEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,589,"offset = TarUtils.getOctalBytes(devMajor, outbuf, offset, DEVLEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,590,"offset = TarUtils.getOctalBytes(devMinor, outbuf, offset, DEVLEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,592,while (offset < outbuf.length) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,593,outbuf[offset++] = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,596,long chk = TarUtils.computeCheckSum(outbuf);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,598,"TarUtils.getCheckSumOctalBytes(chk, outbuf, csOffset, CHKSUMLEN);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,615,rivate void parseTarHeader( final byte[] header )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,606,public void parseTarHeader(byte[] header) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,619,"_name = TarUtils.parseName( header, offset, NAMELEN );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,609,"name = TarUtils.parseName(header, offset, NAMELEN);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,621,"_mode = (int)TarUtils.parseOctal( header, offset, TarConstants.MODELEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,622,ffset += TarConstants.MODELEN;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,623,"_userID = (int)TarUtils.parseOctal( header, offset, TarConstants.UIDLEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,624,ffset += TarConstants.UIDLEN;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,625,"_groupID = (int)TarUtils.parseOctal( header, offset, TarConstants.GIDLEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,626,ffset += TarConstants.GIDLEN;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,627,"_size = TarUtils.parseOctal( header, offset, TarConstants.SIZELEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,628,ffset += TarConstants.SIZELEN;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,629,"_modTime = TarUtils.parseOctal( header, offset, TarConstants.MODTIMELEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,630,ffset += TarConstants.MODTIMELEN;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,631,"_checkSum = (int)TarUtils.parseOctal( header, offset, TarConstants.CHKSUMLEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,632,ffset += TarConstants.CHKSUMLEN;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,633,_linkFlag = header[ offset++ ];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,634,"_linkName = TarUtils.parseName( header, offset, NAMELEN );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,611,"mode = (int) TarUtils.parseOctal(header, offset, MODELEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,612,offset += MODELEN;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,613,"userId = (int) TarUtils.parseOctal(header, offset, UIDLEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,614,offset += UIDLEN;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,615,"groupId = (int) TarUtils.parseOctal(header, offset, GIDLEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,616,offset += GIDLEN;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,617,"size = TarUtils.parseOctal(header, offset, SIZELEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,618,offset += SIZELEN;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,619,"modTime = TarUtils.parseOctal(header, offset, MODTIMELEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,620,offset += MODTIMELEN;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,621,offset += CHKSUMLEN;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,622,linkFlag = header[offset++];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,623,"linkName = TarUtils.parseName(header, offset, NAMELEN);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,636,"_magic = TarUtils.parseName( header, offset, TarConstants.MAGICLEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,637,ffset += TarConstants.MAGICLEN;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,638,"_userName = TarUtils.parseName( header, offset, TarConstants.UNAMELEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,639,ffset += TarConstants.UNAMELEN;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,640,"_groupName = TarUtils.parseName( header, offset, TarConstants.GNAMELEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,641,ffset += TarConstants.GNAMELEN;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,642,"_devMajor = (int)TarUtils.parseOctal( header, offset, TarConstants.DEVLEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,643,ffset += TarConstants.DEVLEN;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,644,"_devMinor = (int)TarUtils.parseOctal( header, offset, TarConstants.DEVLEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,648, Write an entry's header information to a header buffer.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,650, @param buffer The tar entry header buffer to fill in.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,652,ublic void writeEntryHeader( final byte[] buffer )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,654,nt offset = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,656,"ffset = TarUtils.getNameBytes( m_name, buffer, offset, NAMELEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,657,"ffset = TarUtils.getOctalBytes( m_mode, buffer, offset, TarConstants.MODELEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,658,"ffset = TarUtils.getOctalBytes( m_userID, buffer, offset, TarConstants.UIDLEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,659,"ffset = TarUtils.getOctalBytes( m_groupID, buffer, offset, TarConstants.GIDLEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,660,"ffset = TarUtils.getLongOctalBytes( m_size, buffer, offset, TarConstants.SIZELEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,661,"ffset = TarUtils.getLongOctalBytes( m_modTime, buffer, offset, TarConstants.MODTIMELEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,663,inal int checkSumOffset = offset;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,664,or( int i = 0; i < TarConstants.CHKSUMLEN; ++i )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,666,uffer[ offset++ ] = (byte)' ';
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,669,uffer[ offset++ ] = m_linkFlag;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,670,"ffset = TarUtils.getNameBytes( m_linkName, buffer, offset, NAMELEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,671,"ffset = TarUtils.getNameBytes( m_magic, buffer, offset, TarConstants.MAGICLEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,672,"ffset = TarUtils.getNameBytes( m_userName, buffer, offset, TarConstants.UNAMELEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,673,"ffset = TarUtils.getNameBytes( m_groupName, buffer, offset, TarConstants.GNAMELEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,674,"ffset = TarUtils.getOctalBytes( m_devMajor, buffer, offset, TarConstants.DEVLEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,675,"ffset = TarUtils.getOctalBytes( m_devMinor, buffer, offset, TarConstants.DEVLEN );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,677,hile( offset < buffer.length )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,679,uffer[ offset++ ] = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,682,inal long checkSum = TarUtils.computeCheckSum( buffer );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,683,"arUtils.getCheckSumOctalBytes( checkSum, buffer, checkSumOffset, TarConstants.CHKSUMLEN );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,625,"magic = TarUtils.parseName(header, offset, MAGICLEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,626,offset += MAGICLEN;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,627,"userName = TarUtils.parseName(header, offset, UNAMELEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,628,offset += UNAMELEN;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,629,"groupName = TarUtils.parseName(header, offset, GNAMELEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,630,offset += GNAMELEN;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,631,"devMajor = (int) TarUtils.parseOctal(header, offset, DEVLEN);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,632,offset += DEVLEN;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,633,"devMinor = (int) TarUtils.parseOctal(header, offset, DEVLEN);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,27, The TarBuffer class implements the tar archive concept of a buffered input
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,28, stream. This concept goes back to the days of blocked tape drives and special
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,29," io devices. In the Java universe, the only real function that this class"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,30," performs is to ensure that files have the correct ""block"" size, or other tars"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,31, will complain. <p>
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,27,* The TarBuffer class implements the tar archive concept
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,28,* of a buffered input stream. This concept goes back to the
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,29,* days of blocked tape drives and special io devices. In the
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,30,"* Java universe, the only real function that this class"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,31,"* performs is to ensure that files have the correct ""block"""
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,32,"* size, or other tars will complain."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,33,* <p>
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,34,* You should never have a need to access this class directly.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,35,* TarBuffers are created by Tar IO Streams.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,33, You should never have a need to access this class directly. TarBuffers are
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,34, created by Tar IO Streams.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,36,lass TarBuffer
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,38,ublic static final int DEFAULT_RECORDSIZE = ( 512 );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,39,ublic static final int DEFAULT_BLOCKSIZE = ( DEFAULT_RECORDSIZE * 20 );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,41,rivate byte[] m_blockBuffer;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,42,rivate int m_blockSize;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,43,rivate int m_currBlkIdx;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,44,rivate int m_currRecIdx;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,45,rivate boolean m_debug;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,47,rivate InputStream m_input;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,48,rivate OutputStream m_output;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,49,rivate int m_recordSize;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,50,rivate int m_recsPerBlock;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,52,ublic TarBuffer( final InputStream input )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,54,"his( input, TarBuffer.DEFAULT_BLOCKSIZE );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,57,"ublic TarBuffer( final InputStream input, final int blockSize )"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,59,"his( input, blockSize, TarBuffer.DEFAULT_RECORDSIZE );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,39,public class TarBuffer {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,41,/** Default record size */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,42,public static final int DEFAULT_RCDSIZE = (512);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,44,/** Default block size */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,45,public static final int DEFAULT_BLKSIZE = (DEFAULT_RCDSIZE * 20);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,47,private InputStream     inStream;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,48,private OutputStream    outStream;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,49,private byte[]          blockBuffer;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,50,private int             currBlkIdx;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,51,private int             currRecIdx;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,52,private int             blockSize;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,53,private int             recordSize;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,54,private int             recsPerBlock;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,55,private boolean         debug;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,62,"ublic TarBuffer( final InputStream input,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,63,"inal int blockSize,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,64,inal int recordSize )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,66,_input = input;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,67,"nitialize( blockSize, recordSize );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,58,* Constructor for a TarBuffer on an input stream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,59,* @param inStream the input stream to use
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,61,public TarBuffer(InputStream inStream) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,62,"this(inStream, TarBuffer.DEFAULT_BLKSIZE);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,70,ublic TarBuffer( final OutputStream output )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,72,"his( output, TarBuffer.DEFAULT_BLOCKSIZE );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,66,* Constructor for a TarBuffer on an input stream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,67,* @param inStream the input stream to use
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,68,* @param blockSize the block size to use
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,70,"public TarBuffer(InputStream inStream, int blockSize) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,71,"this(inStream, blockSize, TarBuffer.DEFAULT_RCDSIZE);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,75,"ublic TarBuffer( final OutputStream output, final int blockSize )"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,77,"his( output, blockSize, TarBuffer.DEFAULT_RECORDSIZE );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,75,* Constructor for a TarBuffer on an input stream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,76,* @param inStream the input stream to use
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,77,* @param blockSize the block size to use
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,78,* @param recordSize the record size to use
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,80,"public TarBuffer(InputStream inStream, int blockSize, int recordSize) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,81,this.inStream = inStream;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,82,this.outStream = null;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,84,"this.initialize(blockSize, recordSize);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,80,"ublic TarBuffer( final OutputStream output,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,81,"inal int blockSize,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,82,inal int recordSize )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,84,_output = output;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,85,"nitialize( blockSize, recordSize );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,88,* Constructor for a TarBuffer on an output stream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,89,* @param outStream the output stream to use
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,91,public TarBuffer(OutputStream outStream) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,92,"this(outStream, TarBuffer.DEFAULT_BLKSIZE);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,89, Set the debugging flag for the buffer.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,91," @param debug If true, print debugging output."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,96,* Constructor for a TarBuffer on an output stream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,97,* @param outStream the output stream to use
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,98,* @param blockSize the block size to use
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,93,ublic void setDebug( final boolean debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,95,_debug = debug;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,100,"public TarBuffer(OutputStream outStream, int blockSize) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,101,"this(outStream, blockSize, TarBuffer.DEFAULT_RCDSIZE);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,99, Get the TAR Buffer's block size. Blocks consist of multiple records.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,101, @return The BlockSize value
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,105,* Constructor for a TarBuffer on an output stream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,106,* @param outStream the output stream to use
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,107,* @param blockSize the block size to use
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,108,* @param recordSize the record size to use
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,103,ublic int getBlockSize()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,105,eturn m_blockSize;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,110,"public TarBuffer(OutputStream outStream, int blockSize, int recordSize) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,111,this.inStream = null;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,112,this.outStream = outStream;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,114,"this.initialize(blockSize, recordSize);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,109," Get the current block number, zero based."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,111, @return The current zero based block number.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,118,* Initialization common to all constructors.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,113,ublic int getCurrentBlockNum()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,115,eturn m_currBlkIdx;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,120,"private void initialize(int blockSize, int recordSize) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,121,this.debug = false;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,122,this.blockSize = blockSize;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,123,this.recordSize = recordSize;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,124,this.recsPerBlock = (this.blockSize / this.recordSize);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,125,this.blockBuffer = new byte[this.blockSize];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,127,if (this.inStream != null) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,128,this.currBlkIdx = -1;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,129,this.currRecIdx = this.recsPerBlock;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,130,} else {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,131,this.currBlkIdx = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,132,this.currRecIdx = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,119," Get the current record number, within the current block, zero based."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,120," Thus, current offset = (currentBlockNum * recsPerBlk) + currentRecNum."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,122, @return The current zero based record number.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,137,* Get the TAR Buffer's block size. Blocks consist of multiple records.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,138,* @return the block size
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,124,ublic int getCurrentRecordNum()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,126,eturn m_currRecIdx - 1;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,140,public int getBlockSize() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,141,return this.blockSize;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,146,* @return the record size
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,148,public int getRecordSize() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,149,return this.recordSize;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,153,* Set the debugging flag for the buffer.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,132, @return The RecordSize value
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,155,"* @param debug If true, print debugging output."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,134,ublic int getRecordSize()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,136,eturn m_recordSize;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,157,public void setDebug(boolean debug) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,158,this.debug = debug;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,140, Determine if an archive record indicate End of Archive. End of archive is
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,141, indicated by a record that consists entirely of null bytes.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,162,* Determine if an archive record indicate End of Archive. End of
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,163,* archive is indicated by a record that consists entirely of null bytes.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,144, @return The EOFRecord value
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,166,* @return true if the record data is an End of Archive
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,146,ublic boolean isEOFRecord( final byte[] record )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,148,inal int size = getRecordSize();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,149,or( int i = 0; i < size; ++i )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,151,f( record[ i ] != 0 )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,168,public boolean isEOFRecord(byte[] record) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,169,"for (int i = 0, sz = getRecordSize(); i < sz; ++i) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,170,if (record[i] != 0) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,161," Close the TarBuffer. If this is an output buffer, also flush the current"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,162, block before closing.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,179,* Skip over a record on the input stream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,180,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,164,ublic void close()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,165,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,167,f( m_debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,169,"ebug( ""TarBuffer.closeBuffer()."" );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,182,public void skipRecord() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,183,if (debug) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,184,"System.err.println(""SkipRecord: recIdx = "" + currRecIdx"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,185,"+ "" blkIdx = "" + currBlkIdx);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,172,f( null != m_output )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,174,lushBlock();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,176,f( m_output != System.out && m_output != System.err )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,178,_output.close();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,179,_output = null;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,188,if (inStream == null) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,189,"throw new IOException(""reading (via skip) from an output buffer"");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,182,lse if( m_input != null )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,184,f( m_input != System.in )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,186,_input.close();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,187,_input = null;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,192,if (currRecIdx >= recsPerBlock) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,193,if (!readBlock()) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,194,return;    // UNDONE
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,198,currRecIdx++;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,196, @exception IOException Description of Exception
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,205,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,198,ublic byte[] readRecord()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,199,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,201,f( m_debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,203,"inal String message = ""ReadRecord: recIdx = "" + m_currRecIdx +"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,204," blkIdx = "" + m_currBlkIdx;"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,205,ebug( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,207,public byte[] readRecord() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,208,if (debug) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,209,"System.err.println(""ReadRecord: recIdx = "" + currRecIdx"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,210,"+ "" blkIdx = "" + currBlkIdx);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,208,f( null == m_input )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,210,"inal String message = ""reading from an output buffer"";"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,211,hrow new IOException( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,213,if (inStream == null) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,214,"throw new IOException(""reading from an output buffer"");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,214,f( m_currRecIdx >= m_recsPerBlock )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,216,f( !readBlock() )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,217,if (currRecIdx >= recsPerBlock) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,218,if (!readBlock()) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,222,inal byte[] result = new byte[ m_recordSize ];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,223,"ystem.arraycopy( m_blockBuffer,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,224," m_currRecIdx * m_recordSize ),"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,225,"esult,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,226,","
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,227,_recordSize );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,223,byte[] result = new byte[recordSize];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,225,"System.arraycopy(blockBuffer,"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,226,"(currRecIdx * recordSize), result, 0,"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,227,recordSize);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,229,_currRecIdx++;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,229,currRecIdx++;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,235, Skip over a record on the input stream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,235,"* @return false if End-Of-File, else true"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,237,ublic void skipRecord()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,238,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,240,f( m_debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,242,"inal String message = ""SkipRecord: recIdx = "" + m_currRecIdx +"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,243," blkIdx = "" + m_currBlkIdx;"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,244,ebug( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,237,private boolean readBlock() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,238,if (debug) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,239,"System.err.println(""ReadBlock: blkIdx = "" + currBlkIdx);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,247,f( null == m_input )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,249,"inal String message = ""reading (via skip) from an output buffer"";"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,250,hrow new IOException( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,242,if (inStream == null) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,243,"throw new IOException(""reading from an output buffer"");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,253,f( m_currRecIdx >= m_recsPerBlock )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,255,f( !readBlock() )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,257,eturn;// UNDONE
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,246,currRecIdx = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,248,int offset = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,249,int bytesNeeded = blockSize;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,251,while (bytesNeeded > 0) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,252,"long numBytes = inStream.read(blockBuffer, offset,"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,253,bytesNeeded);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,256,// NOTE
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,257,"// We have fit EOF, and the block is not full!"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,259,// This is a broken archive. It does not follow the standard
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,260,"// blocking algorithm. However, because we are generous, and"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,261,"// it requires little effort, we will simply ignore the error"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,262,// and continue as if the entire block were read. This does
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,263,// not appear to break anything upstream. We used to return
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,264,// false in this case.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,266,// Thanks to 'Yohann.Roussel@alcatel.fr' for this fix.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,268,if (numBytes == -1) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,269,if (offset == 0) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,270,// Ensure that we do not read gigabytes of zeros
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,271,// for a corrupt tar file.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,272,// See http://issues.apache.org/bugzilla/show_bug.cgi?id=39924
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,273,return false;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,275,"// However, just leaving the unread portion of the buffer dirty does"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,276,// cause problems in some cases.  This problem is described in
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,277,// http://issues.apache.org/bugzilla/show_bug.cgi?id=29877
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,279,// The solution is to fill the unused portion of the buffer with zeros.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,281,"Arrays.fill(blockBuffer, offset, offset + bytesNeeded, (byte) 0);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,283,break;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,286,offset += numBytes;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,287,bytesNeeded -= numBytes;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,289,if (numBytes != blockSize) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,290,if (debug) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,291,"System.err.println(""ReadBlock: INCOMPLETE READ """
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,292,"+ numBytes + "" of "" + blockSize"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,293,"+ "" bytes read."");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,261,_currRecIdx++;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,298,currBlkIdx++;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,300,return true;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,304,"* Get the current block number, zero based."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,306,* @return The current zero based block number.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,308,public int getCurrentBlockNum() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,309,return currBlkIdx;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,313,"* Get the current record number, within the current block, zero based."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,314,"* Thus, current offset = (currentBlockNum * recsPerBlk) + currentRecNum."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,316,* @return The current zero based record number.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,318,public int getCurrentRecordNum() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,319,return currRecIdx - 1;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,326,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,269,ublic void writeRecord( final byte[] record )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,270,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,272,f( m_debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,274,"inal String message = ""WriteRecord: recIdx = "" + m_currRecIdx +"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,275," blkIdx = "" + m_currBlkIdx;"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,276,ebug( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,328,public void writeRecord(byte[] record) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,329,if (debug) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,330,"System.err.println(""WriteRecord: recIdx = "" + currRecIdx"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,331,"+ "" blkIdx = "" + currBlkIdx);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,279,f( null == m_output )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,281,"inal String message = ""writing to an input buffer"";"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,282,hrow new IOException( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,334,if (outStream == null) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,335,"throw new IOException(""writing to an input buffer"");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,285,f( record.length != m_recordSize )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,287,"inal String message = ""record to write has length '"" +"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,288,"ecord.length + ""' which is not the record size of '"" +"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,289,"_recordSize + ""'"";"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,290,hrow new IOException( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,338,if (record.length != recordSize) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,339,"throw new IOException(""record to write has length '"""
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,340,+ record.length
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,341,"+ ""' which is not the record size of '"""
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,342,"+ recordSize + ""'"");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,293,f( m_currRecIdx >= m_recsPerBlock )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,345,if (currRecIdx >= recsPerBlock) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,298,"ystem.arraycopy( record,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,299,","
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,300,"_blockBuffer,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,301," m_currRecIdx * m_recordSize ),"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,302,_recordSize );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,349,"System.arraycopy(record, 0, blockBuffer,"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,350,"(currRecIdx * recordSize),"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,351,recordSize);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,304,_currRecIdx++;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,353,currRecIdx++;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,308," Write an archive record to the archive, where the record may be inside of"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,309," a larger array buffer. The buffer must be ""offset plus record size"" long."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,357,"* Write an archive record to the archive, where the record may be"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,358,"* inside of a larger array buffer. The buffer must be ""offset plus"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,359,"* record size"" long."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,311, @param buffer The buffer containing the record data to write.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,361,* @param buf The buffer containing the record data to write.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,363,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,314,"ublic void writeRecord( final byte[] buffer, final int offset )"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,315,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,317,f( m_debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,319,"inal String message = ""WriteRecord: recIdx = "" + m_currRecIdx +"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,320," blkIdx = "" + m_currBlkIdx;"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,321,ebug( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,365,"public void writeRecord(byte[] buf, int offset) throws IOException {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,366,if (debug) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,367,"System.err.println(""WriteRecord: recIdx = "" + currRecIdx"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,368,"+ "" blkIdx = "" + currBlkIdx);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,324,f( null == m_output )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,326,"inal String message = ""writing to an input buffer"";"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,327,hrow new IOException( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,371,if (outStream == null) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,372,"throw new IOException(""writing to an input buffer"");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,330,f( ( offset + m_recordSize ) > buffer.length )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,332,"inal String message = ""record has length '"" + buffer.length +"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,333,"' with offset '"" + offset + ""' which is less than the record size of '"" +"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,334,"_recordSize + ""'"";"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,335,hrow new IOException( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,375,if ((offset + recordSize) > buf.length) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,376,"throw new IOException(""record has length '"" + buf.length"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,377,"+ ""' with offset '"" + offset"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,378,"+ ""' which is less than the record size of '"""
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,379,"+ recordSize + ""'"");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,338,f( m_currRecIdx >= m_recsPerBlock )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,382,if (currRecIdx >= recsPerBlock) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,343,"ystem.arraycopy( buffer,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,344,"ffset,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,345,"_blockBuffer,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,346," m_currRecIdx * m_recordSize ),"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,347,_recordSize );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,386,"System.arraycopy(buf, offset, blockBuffer,"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,387,"(currRecIdx * recordSize),"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,388,recordSize);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,349,_currRecIdx++;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,390,currRecIdx++;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,353, Flush the current data block if it has any data in it.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,394,* Write a TarBuffer block to the archive.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,355,rivate void flushBlock()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,356,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,358,f( m_debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,360,"inal String message = ""TarBuffer.flushBlock() called."";"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,361,ebug( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,396,private void writeBlock() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,397,if (debug) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,398,"System.err.println(""WriteBlock: blkIdx = "" + currBlkIdx);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,364,f( m_output == null )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,366,"inal String message = ""writing to an input buffer"";"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,367,hrow new IOException( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,401,if (outStream == null) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,402,"throw new IOException(""writing to an input buffer"");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,370,f( m_currRecIdx > 0 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,372,riteBlock();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,405,"outStream.write(blockBuffer, 0, blockSize);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,406,outStream.flush();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,377, Initialization common to all constructors.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,379,"rivate void initialize( final int blockSize, final int recordSize )"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,381,_debug = false;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,382,_blockSize = blockSize;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,383,_recordSize = recordSize;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,384,_recsPerBlock = ( m_blockSize / m_recordSize );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,385,_blockBuffer = new byte[ m_blockSize ];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,387,f( null != m_input )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,389,_currBlkIdx = -1;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,390,_currRecIdx = m_recsPerBlock;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,392,lse
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,394,_currBlkIdx = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,395,_currRecIdx = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,408,currRecIdx = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,409,currBlkIdx++;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,400," @return false if End-Of-File, else true"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,413,* Flush the current data block if it has any data in it.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,402,rivate boolean readBlock()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,403,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,405,f( m_debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,407,"inal String message = ""ReadBlock: blkIdx = "" + m_currBlkIdx;"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,408,ebug( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,415,private void flushBlock() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,416,if (debug) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,417,"System.err.println(""TarBuffer.flushBlock() called."");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,411,f( null == m_input )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,413,"inal String message = ""reading from an output buffer"";"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,414,hrow new IOException( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,420,if (outStream == null) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,421,"throw new IOException(""writing to an input buffer"");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,417,_currRecIdx = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,419,nt offset = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,420,nt bytesNeeded = m_blockSize;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,422,hile( bytesNeeded > 0 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,424,"inal long numBytes = m_input.read( m_blockBuffer, offset, bytesNeeded );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,427,/ NOTE
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,428,"/ We have fit EOF, and the block is not full!"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,430,/ This is a broken archive. It does not follow the standard
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,431,"/ blocking algorithm. However, because we are generous, and"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,432,"/ it requires little effort, we will simply ignore the error"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,433,/ and continue as if the entire block were read. This does
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,434,/ not appear to break anything upstream. We used to return
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,435,/ false in this case.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,437,/ Thanks to 'Yohann.Roussel@alcatel.fr' for this fix.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,439,f( numBytes == -1 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,441,"/ However, just leaving the unread portion of the buffer dirty does"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,442,/ cause problems in some cases.  This problem is described in
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,443,/ http://issues.apache.org/bugzilla/show_bug.cgi?id=29877
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,445,/ The solution is to fill the unused portion of the buffer with zeros.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,447,"rrays.fill(m_blockBuffer, offset, offset + bytesNeeded, (byte) 0);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,449,reak;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,452,ffset += numBytes;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,453,ytesNeeded -= numBytes;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,455,f( numBytes != m_blockSize )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,457,f( m_debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,459,"ystem.err.println( ""ReadBlock: INCOMPLETE READ """
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,460," numBytes + "" of "" + m_blockSize"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,461," "" bytes read."" );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,424,if (currRecIdx > 0) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,425,writeBlock();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,466,_currBlkIdx++;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,468,eturn true;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,472, Write a TarBuffer block to the archive.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,474, @exception IOException Description of Exception
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,430,"* Close the TarBuffer. If this is an output buffer, also flush the"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,431,* current block before closing.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,432,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,476,rivate void writeBlock()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,477,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,479,f( m_debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,481,"inal String message = ""WriteBlock: blkIdx = "" + m_currBlkIdx;"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,482,ebug( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,434,public void close() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,435,if (debug) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,436,"System.err.println(""TarBuffer.closeBuffer()."");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,485,f( null == m_output )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,487,"inal String message = ""writing to an input buffer"";"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,488,hrow new IOException( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,439,if (outStream != null) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,440,flushBlock();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,491,"_output.write( m_blockBuffer, 0, m_blockSize );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,492,_output.flush();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,442,if (outStream != System.out
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,443,&& outStream != System.err) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,444,outStream.close();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,494,_currRecIdx = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,495,_currBlkIdx++;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,446,outStream = null;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,448,} else if (inStream != null) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,449,if (inStream != System.in) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,450,inStream.close();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,498,rotected void debug( final String message )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,500,f( m_debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,502,ystem.err.println( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java,452,inStream = null;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,24,nterface TarConstants
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,25,// CheckStyle:InterfaceIsTypeCheck OFF (bc)
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,26,public interface TarConstants {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,29,* The length of the name field in a header buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,31,int    NAMELEN = 100;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,29,nt MODELEN = 8;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,36,int    MODELEN = 8;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,34,nt UIDLEN = 8;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,41,int    UIDLEN = 8;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,39,nt GIDLEN = 8;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,46,int    GIDLEN = 8;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,44,nt CHKSUMLEN = 8;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,51,int    CHKSUMLEN = 8;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,49,nt SIZELEN = 12;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,56,int    SIZELEN = 12;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,59,"* The maximum size of a file in a tar archive (That's 11 sevens, octal)."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,61,long   MAXSIZE = 077777777777L;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,54,nt MAGICLEN = 8;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,66,int    MAGICLEN = 8;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,59,nt MODTIMELEN = 12;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,71,int    MODTIMELEN = 12;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,64,nt UNAMELEN = 32;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,76,int    UNAMELEN = 32;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,69,nt GNAMELEN = 32;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,81,int    GNAMELEN = 32;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,74,nt DEVLEN = 8;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,86,int    DEVLEN = 8;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,80,yte LF_OLDNORM = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,92,byte   LF_OLDNORM = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,85,yte LF_NORMAL = (byte)'0';
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,97,byte   LF_NORMAL = (byte) '0';
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,90,yte LF_LINK = (byte)'1';
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,102,byte   LF_LINK = (byte) '1';
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,95,yte LF_SYMLINK = (byte)'2';
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,107,byte   LF_SYMLINK = (byte) '2';
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,100,yte LF_CHR = (byte)'3';
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,112,byte   LF_CHR = (byte) '3';
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,105,yte LF_BLK = (byte)'4';
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,117,byte   LF_BLK = (byte) '4';
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,110,yte LF_DIR = (byte)'5';
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,122,byte   LF_DIR = (byte) '5';
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,115,yte LF_FIFO = (byte)'6';
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,127,byte   LF_FIFO = (byte) '6';
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,120,yte LF_CONTIG = (byte)'7';
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,132,byte   LF_CONTIG = (byte) '7';
False,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,140,yte LF_GNUTYPE_LONGNAME = (byte)'L';
True,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java,152,byte LF_GNUTYPE_LONGNAME = (byte) 'L';
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,3, or more contributor license agreements.  See the NOTICE file
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,4, distributed with this work for additional information
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,6," to you under the Apache License, Version 2.0 (the"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,7," ""License""); you may not use this file except in compliance"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,8, with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,4,*  this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,7,*  the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,10, http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,14,*  See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,15,*  limitations under the License.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,12," Unless required by applicable law or agreed to in writing,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,13, software distributed under the License is distributed on an
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,15," KIND, either express or implied.  See the License for the"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,16, specific language governing permissions and limitations
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,17, under the License.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,20,* This package is based on the work done by Timothy Gerard Endres
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,21,* (time@ice.com) to whom the Ant project is very grateful for his great code.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,27, The TarInputStream reads a UNIX tar archive as an InputStream. methods are
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,28," provided to position at each successive entry in the archive, and the read"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,29, each entry as a normal input stream using read().
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,32,* The TarInputStream reads a UNIX tar archive as an InputStream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,33,* methods are provided to position at each successive entry in
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,34,"* the archive, and the read each entry as a normal input stream"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,35,* using read().
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,31,ublic class TarInputStream
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,32,xtends FilterInputStream
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,34,rivate TarBuffer m_buffer;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,35,rivate TarArchiveEntry m_currEntry;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,36,rivate boolean m_debug;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,37,rivate int m_entryOffset;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,38,rivate int m_entrySize;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,39,rivate boolean m_hasHitEOF;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,40,rivate byte[] m_oneBuf;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,41,rivate byte[] m_readBuf;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,38,public class TarInputStream extends FilterInputStream {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,39,private static final int SMALL_BUFFER_SIZE = 256;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,40,private static final int BUFFER_SIZE = 8 * 1024;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,41,private static final int LARGE_BUFFER_SIZE = 32 * 1024;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,42,private static final int BYTE_MASK = 0xFF;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,44,// CheckStyle:VisibilityModifier OFF - bc
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,45,protected boolean debug;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,46,protected boolean hasHitEOF;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,47,protected long entrySize;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,48,protected long entryOffset;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,49,protected byte[] readBuf;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,50,protected TarBuffer buffer;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,51,protected TarArchiveEntry currEntry;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,44, Construct a TarInputStream using specified input
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,45, stream and default block and record sizes.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,47, @param input stream to create TarInputStream from
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,48, @see TarBuffer#DEFAULT_BLOCKSIZE
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,49, @see TarBuffer#DEFAULT_RECORDSIZE
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,54,"* This contents of this array is not used at all in this class,"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,55,* it is only here to avoid repreated object creation during calls
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,56,* to the no-arg read method.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,51,ublic TarInputStream( final InputStream input )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,53,"his( input, TarBuffer.DEFAULT_BLOCKSIZE, TarBuffer.DEFAULT_RECORDSIZE );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,58,protected byte[] oneBuf;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,60,// CheckStyle:VisibilityModifier ON
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,63,* Constructor for TarInputStream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,64,* @param is the input stream to use
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,66,public TarInputStream(InputStream is) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,67,"this(is, TarBuffer.DEFAULT_BLKSIZE, TarBuffer.DEFAULT_RCDSIZE);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,57, Construct a TarInputStream using specified input
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,58," stream, block size and default record sizes."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,60, @param input stream to create TarInputStream from
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,71,* Constructor for TarInputStream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,72,* @param is the input stream to use
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,62, @see TarBuffer#DEFAULT_RECORDSIZE
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,64,"ublic TarInputStream( final InputStream input,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,65,inal int blockSize )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,67,"his( input, blockSize, TarBuffer.DEFAULT_RECORDSIZE );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,75,"public TarInputStream(InputStream is, int blockSize) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,76,"this(is, blockSize, TarBuffer.DEFAULT_RCDSIZE);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,71, Construct a TarInputStream using specified input
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,72," stream, block size and record sizes."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,74, @param input stream to create TarInputStream from
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,80,* Constructor for TarInputStream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,81,* @param is the input stream to use
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,78,"ublic TarInputStream( final InputStream input,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,79,"inal int blockSize,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,80,inal int recordSize )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,82,uper( input );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,84,"_buffer = new TarBuffer( input, blockSize, recordSize );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,85,_oneBuf = new byte[ 1 ];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,85,"public TarInputStream(InputStream is, int blockSize, int recordSize) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,86,super(is);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,88,"this.buffer = new TarBuffer(is, blockSize, recordSize);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,89,this.readBuf = null;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,90,this.oneBuf = new byte[1];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,91,this.debug = false;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,92,this.hasHitEOF = false;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,91, @param debug The new Debug value
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,98,* @param debug True to turn on debugging.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,93,ublic void setDebug( final boolean debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,95,_debug = debug;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,96,_buffer.setDebug( debug );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,100,public void setDebug(boolean debug) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,101,this.debug = debug;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,102,buffer.setDebug(debug);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,100, Get the next entry in this tar archive. This will skip over any remaining
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,101," data in the current entry, if there is one, and place the input stream at"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,102," the header of the next entry, and read the header and instantiate a new"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,103, TarEntry from the header bytes and return that entry. If there are no
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,104," more entries in the archive, null will be returned to indicate that the"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,105, end of the archive has been reached.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,107," @return The next TarEntry in the archive, or null."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,108, @exception IOException Description of Exception
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,106,* Closes this stream. Calls the TarBuffer's close() method.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,107,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,110,ublic TarArchiveEntry getNextEntry()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,111,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,113,f( m_hasHitEOF )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,115,eturn null;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,118,f( m_currEntry != null )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,120,inal int numToSkip = m_entrySize - m_entryOffset;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,122,f( m_debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,124,"inal String message = ""TarInputStream: SKIP currENTRY '"" +"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,125,"_currEntry.getName() + ""' SZ "" + m_entrySize +"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,126," OFF "" + m_entryOffset + ""  skipping "" + numToSkip + "" bytes"";"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,127,ebug( message );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,130,f( numToSkip > 0 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,132,kip( numToSkip );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,135,_readBuf = null;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,138,inal byte[] headerBuf = m_buffer.readRecord();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,139,f( headerBuf == null )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,141,f( m_debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,143,"ebug( ""READ NULL RECORD"" );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,145,_hasHitEOF = true;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,147,lse if( m_buffer.isEOFRecord( headerBuf ) )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,149,f( m_debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,151,"ebug( ""READ EOF RECORD"" );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,153,_hasHitEOF = true;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,156,f( m_hasHitEOF )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,158,_currEntry = null;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,160,lse
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,162,_currEntry = new TarArchiveEntry( headerBuf );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,164,f( !( headerBuf[ 257 ] == 'u' && headerBuf[ 258 ] == 's' &&
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,165,eaderBuf[ 259 ] == 't' && headerBuf[ 260 ] == 'a' &&
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,166,eaderBuf[ 261 ] == 'r' ) )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,168,/Must be v7Format
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,171,f( m_debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,173,"inal String message = ""TarInputStream: SET CURRENTRY '"" +"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,174,"_currEntry.getName() + ""' size = "" + m_currEntry.getSize();"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,175,ebug( message );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,178,_entryOffset = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,180,/ REVIEW How do we resolve this discrepancy?!
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,181,_entrySize = (int)m_currEntry.getSize();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,184,f( null != m_currEntry && m_currEntry.isGNULongNameEntry() )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,186,/ read in the name
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,187,inal StringBuffer longName = new StringBuffer();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,188,inal byte[] buffer = new byte[ 256 ];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,189,nt length = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,190,hile( ( length = read( buffer ) ) >= 0 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,192,"inal String str = new String( buffer, 0, length );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,193,ongName.append( str );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,195,etNextEntry();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,197,/ remove trailing null terminator
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,198,f (longName.length() > 0
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,199,& longName.charAt(longName.length() - 1) == 0) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,200,ongName.deleteCharAt(longName.length() - 1);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,203,_currEntry.setName( longName.toString() );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,206,eturn m_currEntry;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,109,public void close() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,110,buffer.close();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,214,ublic int getRecordSize()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,216,eturn m_buffer.getRecordSize();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,118,public int getRecordSize() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,119,return buffer.getRecordSize();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,220, Get the available data that can be read from the current entry in the
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,221, archive. This does not indicate how much data is left in the entire
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,222," archive, only in the current entry. This value is determined from the"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,223, entry's size header field and the amount of data already read from the
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,224, current entry.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,123,* Get the available data that can be read from the current
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,124,* entry in the archive. This does not indicate how much data
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,125,"* is left in the entire archive, only in the current entry."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,126,* This value is determined from the entry's size header field
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,127,* and the amount of data already read from the current entry.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,128,* Integer.MAX_VALUE is returen in case more than Integer.MAX_VALUE
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,129,* bytes are left in the current entry in the archive.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,227, @exception IOException when an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,132,* @throws IOException for signature
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,229,ublic int available()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,230,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,232,eturn m_entrySize - m_entryOffset;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,134,public int available() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,135,if (entrySize - entryOffset > Integer.MAX_VALUE) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,136,return Integer.MAX_VALUE;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,138,return (int) (entrySize - entryOffset);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,236, Closes this stream. Calls the TarBuffer's close() method.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,142,* Skip bytes in the input buffer. This skips bytes in the
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,143,"* current entry's data, not the entire archive, and will"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,144,* stop at the end of the current entry's data if the number
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,145,* to skip extends beyond that point.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,238, @exception IOException when an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,147,* @param numToSkip The number of bytes to skip.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,148,* @return the number actually skipped
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,149,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,240,ublic void close()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,241,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,243,_buffer.close();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,151,public long skip(long numToSkip) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,152,// REVIEW
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,153,"// This is horribly inefficient, but it ensures that we"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,154,// properly skip over bytes via the TarBuffer...
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,156,byte[] skipBuf = new byte[BUFFER_SIZE];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,157,long skip = numToSkip;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,158,while (skip > 0) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,159,int realSkip = (int) (skip > skipBuf.length ? skipBuf.length : skip);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,160,"int numRead = read(skipBuf, 0, realSkip);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,161,if (numRead == -1) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,162,break;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,164,skip -= numRead;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,166,return (numToSkip - skip);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,247, Copies the contents of the current tar archive entry directly into an
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,248, output stream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,170,"* Since we do not support marking just yet, we return false."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,250, @param output The OutputStream into which to write the entry's data.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,251, @exception IOException when an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,172,* @return False.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,253,ublic void copyEntryContents( final OutputStream output )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,254,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,256,inal byte[] buffer = new byte[ 32 * 1024 ];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,257,hile( true )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,259,"inal int numRead = read( buffer, 0, buffer.length );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,260,f( numRead == -1 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,262,reak;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,265,"utput.write( buffer, 0, numRead );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,174,public boolean markSupported() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,175,return false;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,274,ublic void mark( int markLimit )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,183,public void mark(int markLimit) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,279," Since we do not support marking just yet, we return false."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,281, @return False.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,187,"* Since we do not support marking just yet, we do nothing."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,283,ublic boolean markSupported()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,285,eturn false;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,189,public void reset() {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,289, Reads a byte from the current tar archive entry. This method simply calls
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,290," read( byte[], int, int )."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,193,* Get the next entry in this tar archive. This will skip
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,194,"* over any remaining data in the current entry, if there"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,195,"* is one, and place the input stream at the header of the"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,196,"* next entry, and read the header and instantiate a new"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,197,* TarEntry from the header bytes and return that entry.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,198,"* If there are no more entries in the archive, null will"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,199,* be returned to indicate that the end of the archive has
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,200,* been reached.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,292," @return The byte read, or -1 at EOF."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,293, @exception IOException when an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,202,"* @return The next TarEntry in the archive, or null."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,203,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,295,ublic int read()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,296,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,298,"inal int num = read( m_oneBuf, 0, 1 );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,299,f( num == -1 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,301,eturn num;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,205,public TarArchiveEntry getNextEntry() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,206,if (hasHitEOF) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,207,return null;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,303,lse
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,305,eturn (int)m_oneBuf[ 0 ] & 0xFF;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,210,if (currEntry != null) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,211,long numToSkip = entrySize - entryOffset;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,213,if (debug) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,214,"System.err.println(""TarInputStream: SKIP currENTRY '"""
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,215,"+ currEntry.getName() + ""' SZ """
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,216,"+ entrySize + "" OFF """
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,217,"+ entryOffset + ""  skipping """
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,218,"+ numToSkip + "" bytes"");"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,221,if (numToSkip > 0) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,222,skip(numToSkip);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,225,readBuf = null;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,228,byte[] headerBuf = buffer.readRecord();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,230,if (headerBuf == null) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,231,if (debug) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,232,"System.err.println(""READ NULL RECORD"");"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,234,hasHitEOF = true;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,235,} else if (buffer.isEOFRecord(headerBuf)) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,236,if (debug) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,237,"System.err.println(""READ EOF RECORD"");"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,239,hasHitEOF = true;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,242,if (hasHitEOF) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,243,currEntry = null;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,244,} else {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,245,currEntry = new TarArchiveEntry(headerBuf);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,247,if (debug) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,248,"System.err.println(""TarInputStream: SET CURRENTRY '"""
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,249,+ currEntry.getName()
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,250,"+ ""' size = """
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,251,+ currEntry.getSize());
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,254,entryOffset = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,256,entrySize = currEntry.getSize();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,259,if (currEntry != null && currEntry.isGNULongNameEntry()) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,260,// read in the name
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,261,StringBuffer longName = new StringBuffer();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,262,byte[] buf = new byte[SMALL_BUFFER_SIZE];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,263,int length = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,264,while ((length = read(buf)) >= 0) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,265,"longName.append(new String(buf, 0, length));"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,267,getNextEntry();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,268,if (currEntry == null) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,269,// Bugzilla: 40334
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,270,// Malformed tar file - long entry name not followed by entry
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,271,return null;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,273,// remove trailing null terminator
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,274,if (longName.length() > 0
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,275,&& longName.charAt(longName.length() - 1) == 0) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,276,longName.deleteCharAt(longName.length() - 1);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,278,currEntry.setName(longName.toString());
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,281,return currEntry;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,310, Reads bytes from the current tar archive entry. This method simply calls
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,311," read( byte[], int, int )."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,285,* Reads a byte from the current tar archive entry.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,313, @param buffer The buffer into which to place bytes read.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,314," @return The number of bytes read, or -1 at EOF."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,315, @exception IOException when an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,287,"* This method simply calls read( byte[], int, int )."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,289,"* @return The byte read, or -1 at EOF."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,290,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,317,ublic int read( final byte[] buffer )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,318,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,320,"eturn read( buffer, 0, buffer.length );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,292,public int read() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,293,"int num = read(oneBuf, 0, 1);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,294,return num == -1 ? -1 : ((int) oneBuf[0]) & BYTE_MASK;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,324, Reads bytes from the current tar archive entry. This method is aware of
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,325, the boundaries of the current entry in the archive and will deal with
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,326, them as if they were this stream's start and EOF.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,298,* Reads bytes from the current tar archive entry.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,328, @param buffer The buffer into which to place bytes read.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,300,* This method is aware of the boundaries of the current
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,301,* entry in the archive and will deal with them as if they
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,302,* were this stream's start and EOF.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,304,* @param buf The buffer into which to place bytes read.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,330, @param count The number of bytes to read.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,306,* @param numToRead The number of bytes to read.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,332, @exception IOException when an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,308,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,334,"ublic int read( final byte[] buffer,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,335,"inal int offset,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,336,inal int count )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,337,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,339,nt position = offset;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,340,nt numToRead = count;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,310,"public int read(byte[] buf, int offset, int numToRead) throws IOException {"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,343,f( m_entryOffset >= m_entrySize )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,313,if (entryOffset >= entrySize) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,348,f( ( numToRead + m_entryOffset ) > m_entrySize )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,350,umToRead = ( m_entrySize - m_entryOffset );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,317,if ((numToRead + entryOffset) > entrySize) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,318,numToRead = (int) (entrySize - entryOffset);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,353,f( null != m_readBuf )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,355,inal int size =
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,356, numToRead > m_readBuf.length ) ? m_readBuf.length : numToRead;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,321,if (readBuf != null) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,322,int sz = (numToRead > readBuf.length) ? readBuf.length
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,323,: numToRead;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,358,"ystem.arraycopy( m_readBuf, 0, buffer, position, size );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,325,"System.arraycopy(readBuf, 0, buf, offset, sz);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,360,f( size >= m_readBuf.length )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,362,_readBuf = null;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,364,lse
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,366,inal int newLength = m_readBuf.length - size;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,367,inal byte[] newBuffer = new byte[ newLength ];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,327,if (sz >= readBuf.length) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,328,readBuf = null;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,329,} else {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,330,int newLen = readBuf.length - sz;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,331,byte[] newBuf = new byte[newLen];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,369,"ystem.arraycopy( m_readBuf, size, newBuffer, 0, newLength );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,333,"System.arraycopy(readBuf, sz, newBuf, 0, newLen);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,371,_readBuf = newBuffer;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,335,readBuf = newBuf;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,374,otalRead += size;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,375,umToRead -= size;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,376,osition += size;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,338,totalRead += sz;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,339,numToRead -= sz;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,340,offset += sz;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,379,hile( numToRead > 0 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,381,inal byte[] rec = m_buffer.readRecord();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,382,f( null == rec )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,343,while (numToRead > 0) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,344,byte[] rec = buffer.readRecord();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,346,if (rec == null) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,385,inal String message =
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,386,"unexpected EOF with "" + numToRead + "" bytes unread"";"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,387,hrow new IOException( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,348,"throw new IOException(""unexpected EOF with "" + numToRead"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,349,"+ "" bytes unread"");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,390,nt size = numToRead;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,391,inal int recordLength = rec.length;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,352,int sz = numToRead;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,353,int recLen = rec.length;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,393,f( recordLength > size )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,395,"ystem.arraycopy( rec, 0, buffer, position, size );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,355,if (recLen > sz) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,356,"System.arraycopy(rec, 0, buf, offset, sz);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,397,_readBuf = new byte[ recordLength - size ];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,358,readBuf = new byte[recLen - sz];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,399,"ystem.arraycopy( rec, size, m_readBuf, 0, recordLength - size );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,401,lse
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,403,ize = recordLength;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,360,"System.arraycopy(rec, sz, readBuf, 0, recLen - sz);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,361,} else {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,362,sz = recLen;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,405,"ystem.arraycopy( rec, 0, buffer, position, recordLength );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,364,"System.arraycopy(rec, 0, buf, offset, recLen);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,408,otalRead += size;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,409,umToRead -= size;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,410,osition += size;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,367,totalRead += sz;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,368,numToRead -= sz;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,369,offset += sz;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,413,_entryOffset += totalRead;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,372,entryOffset += totalRead;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,419," Since we do not support marking just yet, we do nothing."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,421,ublic void reset()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,426, Skip bytes in the input buffer. This skips bytes in the current entry's
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,427," data, not the entire archive, and will stop at the end of the current"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,428, entry's data if the number to skip extends beyond that point.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,378,* Copies the contents of the current tar archive entry directly into
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,379,* an output stream.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,430, @param numToSkip The number of bytes to skip.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,431, @exception IOException when an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,381,* @param out The OutputStream into which to write the entry's data.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,382,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,433,ublic void skip( final int numToSkip )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,434,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,436,/ REVIEW
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,437,"/ This is horribly inefficient, but it ensures that we"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,438,/ properly skip over bytes via the TarBuffer...
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,440,inal byte[] skipBuf = new byte[ 8 * 1024 ];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,441,nt num = numToSkip;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,442,hile( num > 0 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,444,inal int count = ( num > skipBuf.length ) ? skipBuf.length : num;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,445,"inal int numRead = read( skipBuf, 0, count );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,446,f( numRead == -1 )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,384,public void copyEntryContents(OutputStream out) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,385,byte[] buf = new byte[LARGE_BUFFER_SIZE];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,387,while (true) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,388,"int numRead = read(buf, 0, buf.length);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,390,if (numRead == -1) {
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,451,um -= numRead;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,456, Utility method to do debugging.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,457, Capable of being overidden in sub-classes.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,459, @param message the message to use in debugging
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,461,rotected void debug( final String message )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,463,f( m_debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,465,ystem.err.println( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarInputStream.java,394,"out.write(buf, 0, numRead);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,27, The TarOutputStream writes a UNIX tar archive as an OutputStream. Methods are
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,28," provided to put entries, and then write their contents by writing to this"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,29, stream using write().
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,27,* The TarOutputStream writes a UNIX tar archive as an OutputStream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,28,"* Methods are provided to put entries, and then write their contents"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,29,* by writing to this stream using write().
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,31,ublic class TarOutputStream
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,32,xtends FilterOutputStream
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,35, Flag to indicate that an error should be generated if
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,36, an attempt is made to write an entry that exceeds the 100 char
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,37, POSIX limit.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,32,public class TarOutputStream extends FilterOutputStream {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,33,/** Fail if a long file name is required in the archive. */
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,42, Flag to indicate that entry name should be truncated if
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,43, an attempt is made to write an entry that exceeds the 100 char
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,44, POSIX limit.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,36,/** Long paths will be truncated in the archive. */
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,49, Flag to indicate that entry name should be formatted
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,50, according to GNU tar extension if an attempt is made
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,51, to write an entry that exceeds the 100 char POSIX
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,52, limit. Note that this makes the jar unreadable by
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,53, non-GNU tar commands.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,39,/** GNU tar extensions are used to store long file names in the archive. */
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,57,rivate int m_longFileMode = LONGFILE_ERROR;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,58,rivate byte[] m_assemBuf;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,59,rivate int m_assemLen;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,60,rivate TarBuffer m_buffer;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,61,rivate int m_currBytes;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,62,rivate int m_currSize;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,64,rivate byte[] m_oneBuf;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,65,rivate byte[] m_recordBuf;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,42,// CheckStyle:VisibilityModifier OFF - bc
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,43,protected boolean   debug;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,44,protected long      currSize;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,45,protected String    currName;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,46,protected long      currBytes;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,47,protected byte[]    oneBuf;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,48,protected byte[]    recordBuf;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,49,protected int       assemLen;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,50,protected byte[]    assemBuf;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,51,protected TarBuffer buffer;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,52,protected int       longFileMode = LONGFILE_ERROR;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,53,// CheckStyle:VisibilityModifier ON
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,55,private boolean closed = false;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,68, Construct a TarOutputStream using specified input
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,69, stream and default block and record sizes.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,71, @param output stream to create TarOutputStream from
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,72, @see TarBuffer#DEFAULT_BLOCKSIZE
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,73, @see TarBuffer#DEFAULT_RECORDSIZE
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,58,* Constructor for TarInputStream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,59,* @param os the output stream to use
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,75,ublic TarOutputStream( final OutputStream output )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,77,"his( output, TarBuffer.DEFAULT_BLOCKSIZE, TarBuffer.DEFAULT_RECORDSIZE );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,61,public TarOutputStream(OutputStream os) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,62,"this(os, TarBuffer.DEFAULT_BLKSIZE, TarBuffer.DEFAULT_RCDSIZE);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,81, Construct a TarOutputStream using specified input
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,82," stream, block size and default record sizes."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,84, @param output stream to create TarOutputStream from
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,85, @param blockSize the block size
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,86, @see TarBuffer#DEFAULT_RECORDSIZE
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,66,* Constructor for TarInputStream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,67,* @param os the output stream to use
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,68,* @param blockSize the block size to use
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,88,"ublic TarOutputStream( final OutputStream output,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,89,inal int blockSize )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,91,"his( output, blockSize, TarBuffer.DEFAULT_RECORDSIZE );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,70,"public TarOutputStream(OutputStream os, int blockSize) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,71,"this(os, blockSize, TarBuffer.DEFAULT_RCDSIZE);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,95, Construct a TarOutputStream using specified input
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,96," stream, block size and record sizes."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,98, @param output stream to create TarOutputStream from
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,99, @param blockSize the block size
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,100, @param recordSize the record size
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,75,* Constructor for TarInputStream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,76,* @param os the output stream to use
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,77,* @param blockSize the block size to use
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,78,* @param recordSize the record size to use
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,102,"ublic TarOutputStream( final OutputStream output,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,103,"inal int blockSize,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,104,inal int recordSize )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,106,uper( output );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,108,"_buffer = new TarBuffer( output, blockSize, recordSize );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,109,_assemLen = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,110,_assemBuf = new byte[ recordSize ];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,111,_recordBuf = new byte[ recordSize ];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,112,_oneBuf = new byte[ 1 ];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,80,"public TarOutputStream(OutputStream os, int blockSize, int recordSize) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,81,super(os);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,83,"this.buffer = new TarBuffer(os, blockSize, recordSize);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,84,this.debug = false;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,85,this.assemLen = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,86,this.assemBuf = new byte[recordSize];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,87,this.recordBuf = new byte[recordSize];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,88,this.oneBuf = new byte[1];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,116, Sets the debugging flag in this stream's TarBuffer.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,118, @param debug The new BufferDebug value
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,92,* Set the long file mode.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,93,"* This can be LONGFILE_ERROR(0), LONGFILE_TRUNCATE(1) or LONGFILE_GNU(2)."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,94,* This specifies the treatment of long file names (names >= TarConstants.NAMELEN).
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,95,* Default is LONGFILE_ERROR.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,96,* @param longFileMode the mode to use
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,120,ublic void setBufferDebug( boolean debug )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,122,_buffer.setDebug( debug );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,98,public void setLongFileMode(int longFileMode) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,99,this.longFileMode = longFileMode;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,126, Set the mode used to work with entrys exceeding
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,127, 100 chars (and thus break the POSIX standard).
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,128, Must be one of the LONGFILE_* constants.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,104,* Sets the debugging flag.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,130, @param longFileMode the mode
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,106,* @param debugF True to turn on debugging.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,132,ublic void setLongFileMode( final int longFileMode )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,134,f( LONGFILE_ERROR != longFileMode &&
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,135,ONGFILE_GNU != longFileMode &&
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,136,ONGFILE_TRUNCATE != longFileMode )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,138,"hrow new IllegalArgumentException( ""longFileMode"" );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,140,_longFileMode = longFileMode;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,108,public void setDebug(boolean debugF) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,109,this.debug = debugF;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,144, Get the record size being used by this stream's TarBuffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,113,* Sets the debugging flag in this stream's TarBuffer.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,146, @return The TarBuffer record size.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,115,* @param debug True to turn on debugging.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,148,ublic int getRecordSize()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,150,eturn m_buffer.getRecordSize();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,117,public void setBufferDebug(boolean debug) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,118,buffer.setDebug(debug);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,154, Ends the TAR archive and closes the underlying OutputStream. This means
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,155, that finish() is called followed by calling the TarBuffer's close().
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,157, @exception IOException when an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,122,* Ends the TAR archive without closing the underlying OutputStream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,123,* The result is that the two EOF records of nulls are written.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,124,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,159,ublic void close()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,160,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,162,inish();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,163,_buffer.close();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,126,public void finish() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,127,// See Bugzilla 28776 for a discussion on this
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,128,// http://issues.apache.org/bugzilla/show_bug.cgi?id=28776
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,129,writeEOFRecord();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,130,writeEOFRecord();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,167, Close an entry. This method MUST be called for all file entries that
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,168, contain data. The reason is that we must buffer data written to the
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,169," stream in order to satisfy the buffer's record based writes. Thus, there"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,170, may be data fragments still being assembled that must be written to the
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,171, output stream before this entry is closed and the next entry written.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,173, @exception IOException when an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,134,* Ends the TAR archive and closes the underlying OutputStream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,135,* This means that finish() is called followed by calling the
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,136,* TarBuffer's close().
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,137,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,175,ublic void closeEntry()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,176,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,178,f( m_assemLen > 0 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,180,or( int i = m_assemLen; i < m_assemBuf.length; ++i )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,182,_assemBuf[ i ] = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,185,_buffer.writeRecord( m_assemBuf );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,187,_currBytes += m_assemLen;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,188,_assemLen = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,191,f( m_currBytes < m_currSize )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,193,"inal String message = ""entry closed at '"" + m_currBytes +"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,194,"' before the '"" + m_currSize +"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,195,"' bytes specified in the header were written"";"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,196,hrow new IOException( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,139,public void close() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,140,if (!closed) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,141,finish();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,142,buffer.close();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,143,out.close();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,144,closed = true;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,201, Ends the TAR archive without closing the underlying OutputStream. The
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,202, result is that the EOF record of nulls is written.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,149,* Get the record size being used by this stream's TarBuffer.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,204, @exception IOException when an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,151,* @return The TarBuffer record size.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,206,ublic void finish()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,207,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,209,riteEOFRecord();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,153,public int getRecordSize() {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,154,return buffer.getRecordSize();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,213, Put an entry on the output stream. This writes the entry's header record
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,214, and positions the output stream for writing the contents of the entry.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,215," Once this method is called, the stream is ready for calls to write() to"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,216," write the entry's contents. Once the contents are written, closeEntry()"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,217, <B>MUST</B> be called to ensure that all buffered data is completely
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,218, written to the output stream.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,158,* Put an entry on the output stream. This writes the entry's
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,159,* header record and positions the output stream for writing
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,160,"* the contents of the entry. Once this method is called, the"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,161,* stream is ready for calls to write() to write the entry's
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,162,"* contents. Once the contents are written, closeEntry()"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,163,* <B>MUST</B> be called to ensure that all buffered data
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,164,* is completely written to the output stream.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,220," The entry must be 0 terminated. Maximum filename is 99 chars,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,221, according to V7 specification.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,223, @param entry The TarArchiveEntry to be written to the archive.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,224, @exception IOException when an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,166,* @param entry The TarEntry to be written to the archive.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,167,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,226,ublic void putNextEntry( final TarArchiveEntry entry )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,227,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,229,f( entry.getName().length() > TarArchiveEntry.NAMELEN )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,231,f( m_longFileMode == LONGFILE_GNU )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,233,"/ create a TarArchiveEntry for the LongLink, the contents"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,169,public void putNextEntry(TarArchiveEntry entry) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,170,if (entry.getName().length() >= TarConstants.NAMELEN) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,172,if (longFileMode == LONGFILE_GNU) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,173,"// create a TarEntry for the LongLink, the contents"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,235,inal TarArchiveEntry longLinkEntry =
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,236,"ew TarArchiveEntry( TarConstants.GNU_LONGLINK,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,237,arConstants.LF_GNUTYPE_LONGNAME );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,239,ongLinkEntry.setSize( entry.getName().length() + 1);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,240,utNextEntry( longLinkEntry );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,241,rite( entry.getName().getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,242,rite( 0 );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,175,"TarArchiveEntry longLinkEntry = new TarArchiveEntry(TarConstants.GNU_LONGLINK,"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,176,TarConstants.LF_GNUTYPE_LONGNAME);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,178,longLinkEntry.setSize(entry.getName().length() + 1);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,179,putNextEntry(longLinkEntry);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,180,write(entry.getName().getBytes());
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,181,write(0);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,245,lse if( m_longFileMode != LONGFILE_TRUNCATE )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,247,"inal String message = ""file name '"" + entry.getName() +"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,248,"' is too long ( > "" + TarArchiveEntry.NAMELEN + "" bytes)"";"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,249,hrow new IOException( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,183,} else if (longFileMode != LONGFILE_TRUNCATE) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,184,"throw new RuntimeException(""file name '"" + entry.getName()"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,185,"+ ""' is too long ( > """
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,186,"+ TarConstants.NAMELEN + "" bytes)"");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,253,ntry.writeEntryHeader( m_recordBuf );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,254,_buffer.writeRecord( m_recordBuf );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,190,entry.writeEntryHeader(recordBuf);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,191,buffer.writeRecord(recordBuf);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,256,_currBytes = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,193,currBytes = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,258,f( entry.isDirectory() )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,260,_currSize = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,262,lse
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,264,_currSize = (int)entry.getSize();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,195,if (entry.isDirectory()) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,196,currSize = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,197,} else {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,198,currSize = entry.getSize();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,200,currName = entry.getName();
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,269, Copies the contents of the specified stream into current tar
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,270, archive entry.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,272, @param input The InputStream from which to read entrys data
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,273, @exception IOException when an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,204,* Close an entry. This method MUST be called for all file
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,205,* entries that contain data. The reason is that we must
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,206,* buffer data written to the stream in order to satisfy
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,207,"* the buffer's record based writes. Thus, there may be"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,208,* data fragments still being assembled that must be written
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,209,* to the output stream before this entry is closed and the
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,210,* next entry written.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,211,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,275,ublic void copyEntryContents( final InputStream input )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,276,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,278,inal byte[] buffer = new byte[ 32 * 1024 ];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,279,hile( true )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,281,"inal int numRead = input.read( buffer, 0, buffer.length );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,282,f( numRead == -1 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,284,reak;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,213,public void closeEntry() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,214,if (assemLen > 0) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,215,for (int i = assemLen; i < assemBuf.length; ++i) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,216,assemBuf[i] = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,287,"rite( buffer, 0, numRead );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,219,buffer.writeRecord(assemBuf);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,221,currBytes += assemLen;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,222,assemLen = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,225,if (currBytes < currSize) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,226,"throw new IOException(""entry '"" + currName + ""' closed at '"""
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,227,+ currBytes
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,228,"+ ""' before the '"" + currSize"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,229,"+ ""' bytes specified in the header were written"");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,292, Writes a byte to the current tar archive entry. This method simply calls
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,293," read( byte[], int, int )."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,234,* Writes a byte to the current tar archive entry.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,236,"* This method simply calls read( byte[], int, int )."
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,295, @param data The byte written.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,296, @exception IOException when an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,238,* @param b The byte written.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,239,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,298,ublic void write( final int data )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,299,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,301,_oneBuf[ 0 ] = (byte)data;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,241,public void write(int b) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,242,oneBuf[0] = (byte) b;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,303,"rite( m_oneBuf, 0, 1 );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,244,"write(oneBuf, 0, 1);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,307, Writes bytes to the current tar archive entry. This method simply calls
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,308," write( byte[], int, int )."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,248,* Writes bytes to the current tar archive entry.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,310, @param buffer The buffer to write to the archive.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,311, @exception IOException when an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,250,"* This method simply calls write( byte[], int, int )."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,252,* @param wBuf The buffer to write to the archive.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,253,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,313,ublic void write( final byte[] buffer )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,314,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,316,"rite( buffer, 0, buffer.length );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,255,public void write(byte[] wBuf) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,256,"write(wBuf, 0, wBuf.length);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,320, Writes bytes to the current tar archive entry. This method is aware of
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,321, the current entry and will throw an exception if you attempt to write
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,322, bytes past the length specified for the current entry. The method is also
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,323," (painfully) aware of the record buffering required by TarBuffer, and"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,324," manages buffers that are not a multiple of recordsize in length,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,325, including assembling records from small buffers.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,260,* Writes bytes to the current tar archive entry. This method
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,261,* is aware of the current entry and will throw an exception if
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,262,* you attempt to write bytes past the length specified for the
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,263,* current entry. The method is also (painfully) aware of the
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,264,"* record buffering required by TarBuffer, and manages buffers"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,265,"* that are not a multiple of recordsize in length, including"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,266,* assembling records from small buffers.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,327, @param buffer The buffer to write to the archive.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,328, @param offset The offset in the buffer from which to get bytes.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,329, @param count The number of bytes to write.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,330, @exception IOException when an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,268,* @param wBuf The buffer to write to the archive.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,269,* @param wOffset The offset in the buffer from which to get bytes.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,270,* @param numToWrite The number of bytes to write.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,271,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,332,"ublic void write( final byte[] buffer,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,333,"inal int offset,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,334,inal int count )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,335,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,337,nt position = offset;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,338,nt numToWrite = count;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,339,f( ( m_currBytes + numToWrite ) > m_currSize )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,341,"inal String message = ""request to write '"" + numToWrite +"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,342,"' bytes exceeds size in header of '"" + m_currSize + ""' bytes"";"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,343,hrow new IOException( message );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,273,"public void write(byte[] wBuf, int wOffset, int numToWrite) throws IOException {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,274,if ((currBytes + numToWrite) > currSize) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,275,"throw new IOException(""request to write '"" + numToWrite"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,276,"+ ""' bytes exceeds size in header of '"""
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,277,"+ currSize + ""' bytes for entry '"""
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,278,"+ currName + ""'"");"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,353,f( m_assemLen > 0 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,355,f( ( m_assemLen + numToWrite ) >= m_recordBuf.length )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,357,inal int length = m_recordBuf.length - m_assemLen;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,359,"ystem.arraycopy( m_assemBuf, 0, m_recordBuf, 0,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,360,_assemLen );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,361,"ystem.arraycopy( buffer, position, m_recordBuf,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,362,"_assemLen, length );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,363,_buffer.writeRecord( m_recordBuf );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,365,_currBytes += m_recordBuf.length;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,366,osition += length;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,367,umToWrite -= length;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,368,_assemLen = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,370,lse
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,372,"ystem.arraycopy( buffer, position, m_assemBuf, m_assemLen,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,373,umToWrite );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,375,osition += numToWrite;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,376,_assemLen += numToWrite;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,289,if (assemLen > 0) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,290,if ((assemLen + numToWrite) >= recordBuf.length) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,291,int aLen = recordBuf.length - assemLen;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,293,"System.arraycopy(assemBuf, 0, recordBuf, 0,"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,294,assemLen);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,295,"System.arraycopy(wBuf, wOffset, recordBuf,"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,296,"assemLen, aLen);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,297,buffer.writeRecord(recordBuf);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,299,currBytes += recordBuf.length;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,300,wOffset += aLen;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,301,numToWrite -= aLen;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,302,assemLen = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,303,} else {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,304,"System.arraycopy(wBuf, wOffset, assemBuf, assemLen,"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,305,numToWrite);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,307,wOffset += numToWrite;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,308,assemLen += numToWrite;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,386,hile( numToWrite > 0 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,388,f( numToWrite < m_recordBuf.length )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,390,"ystem.arraycopy( buffer, position, m_assemBuf, m_assemLen,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,391,umToWrite );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,318,while (numToWrite > 0) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,319,if (numToWrite < recordBuf.length) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,320,"System.arraycopy(wBuf, wOffset, assemBuf, assemLen,"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,321,numToWrite);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,393,_assemLen += numToWrite;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,323,assemLen += numToWrite;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,398,"_buffer.writeRecord( buffer, position );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,328,"buffer.writeRecord(wBuf, wOffset);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,400,nt num = m_recordBuf.length;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,330,int num = recordBuf.length;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,402,_currBytes += num;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,332,currBytes += num;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,404,osition += num;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,334,wOffset += num;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,409, Write an EOF (end of archive) record to the tar archive. An EOF record
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,410, consists of a record of all zeros.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,412, @exception IOException when an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,339,* Write an EOF (end of archive) record to the tar archive.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,340,* An EOF record consists of a record of all zeros.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,414,rivate void writeEOFRecord()
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,415,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,417,or( int i = 0; i < m_recordBuf.length; ++i )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,419,_recordBuf[ i ] = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,342,private void writeEOFRecord() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,343,for (int i = 0; i < recordBuf.length; ++i) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,344,recordBuf[i] = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,422,_buffer.writeRecord( m_recordBuf );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,347,buffer.writeRecord(recordBuf);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,24,lass TarUtils
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,25,// CheckStyle:HideUtilityClassConstructorCheck OFF (bc)
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,26,public class TarUtils {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,28,private static final int BYTE_MASK = 255;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,27, Parse the checksum octal integer from a header buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,31,* Parse an octal string from a header buffer. This is used for the
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,32,* file permission mode value.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,34,* @param header The header buffer from which to parse.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,31, @param value Description of Parameter
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,32, @param buf Description of Parameter
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,33, @return The integer value of the entry's checksum.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,37,* @return The long value of the octal string.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,35,"ublic static int getCheckSumOctalBytes( final long value,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,36,"inal byte[] buf,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,37,"inal int offset,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,38,inal int length )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,40,"etOctalBytes( value, buf, offset, length );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,39,"public static long parseOctal(byte[] header, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,40,long    result = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,41,boolean stillPadding = true;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,42,int     end = offset + length;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,42,uf[ offset + length - 1 ] = (byte)' ';
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,43,uf[ offset + length - 2 ] = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,44,for (int i = offset; i < end; ++i) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,45,if (header[i] == 0) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,46,break;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,45,eturn offset + length;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,49,if (header[i] == (byte) ' ' || header[i] == '0') {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,50,if (stillPadding) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,51,continue;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,54,if (header[i] == (byte) ' ') {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,55,break;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,59,stillPadding = false;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,60,// CheckStyle:MagicNumber OFF
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,61,result = (result << 3) + (header[i] - '0');
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,62,// CheckStyle:MagicNumber ON
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,65,return result;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,49, Parse an octal long integer from a header buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,69,* Parse an entry name from a header buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,71,* @param header The header buffer from which to parse.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,53, @param value Description of Parameter
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,54, @param buf Description of Parameter
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,55, @return The long value of the octal bytes.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,74,* @return The header's entry name.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,57,"ublic static int getLongOctalBytes( final long value,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,58,"inal byte[] buf,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,59,"inal int offset,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,60,inal int length )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,62,yte[] temp = new byte[ length + 1 ];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,76,"public static StringBuffer parseName(byte[] header, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,77,StringBuffer result = new StringBuffer(length);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,78,int          end = offset + length;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,64,"etOctalBytes( value, temp, 0, length + 1 );"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,65,"ystem.arraycopy( temp, 0, buf, offset, length );"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,80,for (int i = offset; i < end; ++i) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,81,if (header[i] == 0) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,82,break;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,67,eturn offset + length;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,85,result.append((char) header[i]);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,88,return result;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,94,* @param name The header name from which to parse.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,95,* @param buf The buffer from which to parse.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,75, @param name Description of Parameter
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,76, @param buffer Description of Parameter
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,79,"ublic static int getNameBytes( final StringBuffer name,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,80,"inal byte[] buffer,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,81,"inal int offset,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,82,inal int length )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,100,"public static int getNameBytes(StringBuffer name, byte[] buf, int offset, int length) {"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,86,or( i = 0; i < length && i < name.length(); ++i )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,88,uffer[ offset + i ] = (byte)name.charAt( i );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,103,for (i = 0; i < length && i < name.length(); ++i) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,104,buf[offset + i] = (byte) name.charAt(i);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,91,or( ; i < length; ++i )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,93,uffer[ offset + i ] = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,107,for (; i < length; ++i) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,108,buf[offset + i] = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,117,* @param value The header value
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,118,* @param buf The buffer from which to parse.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,106,"ublic static int getOctalBytes( final long value,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,107,"inal byte[] buffer,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,108,"inal int offset,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,109,inal int length )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,111,nt idx = length - 1;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,113,uffer[ offset + idx ] = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,123,"public static int getOctalBytes(long value, byte[] buf, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,124,int    idx = length - 1;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,126,buf[offset + idx] = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,115,uffer[ offset + idx ] = (byte)' ';
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,128,buf[offset + idx] = (byte) ' ';
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,118,f( value == 0 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,120,uffer[ offset + idx ] = (byte)'0';
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,131,if (value == 0) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,132,buf[offset + idx] = (byte) '0';
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,123,lse
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,125,ong val = value;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,126,hile( idx >= 0 && val > 0 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,128,uffer[ offset + idx ] = (byte)( (byte)'0' + (byte)( val & 7 ) );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,134,} else {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,135,for (long val = value; idx >= 0 && val > 0; --idx) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,136,// CheckStyle:MagicNumber OFF
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,137,buf[offset + idx] = (byte) ((byte) '0' + (byte) (val & 7));
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,130,dx--;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,139,// CheckStyle:MagicNumber ON
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,134,hile( idx >= 0 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,136,uffer[ offset + idx ] = (byte)' ';
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,137,dx--;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,143,for (; idx >= 0; --idx) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,144,buf[offset + idx] = (byte) ' ';
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,144, Compute the checksum of a tar entry header.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,151,* Parse an octal long integer from a header buffer.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,146, @param buffer The tar entry's header buffer.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,147, @return The computed checksum.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,153,* @param value The header value
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,154,* @param buf The buffer from which to parse.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,155,* @param offset The offset into the buffer from which to parse.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,156,* @param length The number of header bytes to parse.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,157,* @return The long value of the octal bytes.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,149,ublic static long computeCheckSum( final byte[] buffer )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,151,ong sum = 0;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,159,"public static int getLongOctalBytes(long value, byte[] buf, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,160,byte[] temp = new byte[length + 1];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,153,or( int i = 0; i < buffer.length; ++i )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,155,um += 255 & buffer[ i ];
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,162,"getOctalBytes(value, temp, 0, length + 1);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,163,"System.arraycopy(temp, 0, buf, offset, length);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,158,eturn sum;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,165,return offset + length;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,162, Parse an entry name from a header buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,169,* Parse the checksum octal integer from a header buffer.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,164, @param header The header buffer from which to parse.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,171,* @param value The header value
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,172,* @param buf The buffer from which to parse.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,167, @return The header's entry name.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,175,* @return The integer value of the entry's checksum.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,169,"ublic static StringBuffer parseName( final byte[] header,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,170,"inal int offset,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,171,inal int length )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,173,tringBuffer result = new StringBuffer( length );
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,174,nt end = offset + length;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,176,or( int i = offset; i < end; ++i )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,178,f( header[ i ] == 0 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,180,reak;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,177,"public static int getCheckSumOctalBytes(long value, byte[] buf, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,178,"getOctalBytes(value, buf, offset, length);"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,183,esult.append( (char)header[ i ] );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,180,buf[offset + length - 1] = (byte) ' ';
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,181,buf[offset + length - 2] = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,186,eturn result;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,183,return offset + length;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,190, Parse an octal string from a header buffer. This is used for the file
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,191, permission mode value.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,187,* Compute the checksum of a tar entry header.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,193, @param header The header buffer from which to parse.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,194, @param offset The offset into the buffer from which to parse.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,195, @param length The number of header bytes to parse.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,196, @return The long value of the octal string.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,189,* @param buf The tar entry's header buffer.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,190,* @return The computed checksum.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,198,"ublic static long parseOctal( final byte[] header,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,199,"inal int offset,"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,200,inal int length )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,202,ong result = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,203,oolean stillPadding = true;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,204,nt end = offset + length;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,206,or( int i = offset; i < end; ++i )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,208,f( header[ i ] == 0 )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,210,reak;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,213,f( header[ i ] == (byte)' ' || header[ i ] == '0' )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,215,f( stillPadding )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,217,ontinue;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,220,f( header[ i ] == (byte)' ' )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,222,reak;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,192,public static long computeCheckSum(byte[] buf) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,193,long sum = 0;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,226,tillPadding = false;
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,227,esult = ( result << 3 ) + ( header[ i ] - '0' );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,195,for (int i = 0; i < buf.length; ++i) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,196,sum += BYTE_MASK & buf[i];
False,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,230,eturn result;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java,199,return sum;
False,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,41,ntry.setUserID(0);
False,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,42,ntry.setGroupID(0);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,41,entry.setUserId(0);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,42,entry.setGroupId(0);
False,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,64,ntry.setUserID(0);
False,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,65,ntry.setGroupID(0);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,64,entry.setUserId(0);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,65,entry.setGroupId(0);
False,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,84,ntry2.setUserID(0);
False,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,85,ntry2.setGroupID(0);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,84,entry2.setUserId(0);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,85,entry2.setGroupId(0);
