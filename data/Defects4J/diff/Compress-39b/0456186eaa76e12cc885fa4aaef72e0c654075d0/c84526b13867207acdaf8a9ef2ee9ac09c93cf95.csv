is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,21,import java.io.EOFException;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,147,long len = asLong(length);
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,163,} else if (isBSDLongName(temp)) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,164,temp = getBSDLongName(temp);
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,165,// entry length contained the length of the file name in
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,166,// addition to the real length of the entry.
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,167,"// assume file name was ASCII, there is no ""standard"" otherwise"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,168,int nameLen = temp.length();
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,169,len -= nameLen;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,170,entryOffset += nameLen;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,162,"urrentEntry = new ArArchiveEntry(temp, asLong(length), asInt(userid, true),"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,173,"currentEntry = new ArArchiveEntry(temp, len, asInt(userid, true),"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,315,"private static final String BSD_LONGNAME_PREFIX = ""#1/"";"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,316,private static final int BSD_LONGNAME_PREFIX_LEN =
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,317,BSD_LONGNAME_PREFIX.length();
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,320,* Does the name look like it is a long name (or a name containing
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,321,* spaces) as encoded by BSD ar?
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,323,* <p>From the FreeBSD ar(5) man page:</p>
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,324,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,325,"* BSD   In the BSD variant, names that are shorter than 16"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,326,*	     characters and without embedded spaces are stored
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,327,*	     directly in this field.  If a name has an embedded
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,328,"*	     space, or if it is longer than 16 characters, then"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,329,"*	     the string ""#1/"" followed by the decimal represen-"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,330,*	     tation of the length of the file name is placed in
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,331,*	     this field.	The actual file name is stored immedi-
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,332,*	     ately after the archive header.  The content of the
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,333,*	     archive member follows the file name.  The ar_size
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,334,*	     field of the header (see below) will then hold the
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,335,*	     sum of the size of the file name and the size of
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,336,*	     the member.
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,337,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,339,* @since Apache Commons Compress 1.3
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,341,private static boolean isBSDLongName(String name) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,342,return name.startsWith(BSD_LONGNAME_PREFIX)
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,343,&& name.length() > BSD_LONGNAME_PREFIX_LEN;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,347,* Reads the real name from the current stream assuming the very
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,348,* first bytes to be read are the real file name.
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,350,* @see #isBSDLongName
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,352,private String getBSDLongName(String bsdLongName) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,353,int nameLen =
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,354,Integer.parseInt(bsdLongName.substring(BSD_LONGNAME_PREFIX_LEN));
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,355,byte[] name = new byte[nameLen];
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,356,"int read = 0, readNow = 0;"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,357,"while ((readNow = input.read(name, read, nameLen - read)) >= 0) {"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,358,read += readNow;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,359,count(readNow);
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,360,if (read == nameLen) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,361,break;
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,364,if (read != nameLen) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,365,throw new EOFException();
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,367,return ArchiveUtils.toAsciiString(name);
False,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,21,mport java.util.ArrayList;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,21,import java.io.BufferedInputStream;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,22,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,24,import org.apache.commons.compress.archivers.ArchiveEntry;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,25,import org.apache.commons.compress.utils.ArchiveUtils;
False,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,27,rrayList<String> l = new ArrayList<String>();
False,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,28,".add(""this_is_a_long_file_name.txt"");"
False,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,29,"heckArchiveContent(getFile(""longfile_gnu.ar""), l);"
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,30,"checkLongNameEntry(""longfile_gnu.ar"");"
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,33,public void testReadLongNamesBSD() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,34,"checkLongNameEntry(""longfile_bsd.ar"");"
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,37,private void checkLongNameEntry(String archive) throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,38,FileInputStream fis = new FileInputStream(getFile(archive));
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,39,ArArchiveInputStream s = null;
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,40,try {
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,41,s = new ArArchiveInputStream(new BufferedInputStream(fis));
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,42,ArchiveEntry e = s.getNextEntry();
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,43,"assertEquals(""this_is_a_long_file_name.txt"", e.getName());"
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,44,"assertEquals(14, e.getSize());"
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,45,byte[] hello = new byte[14];
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,46,s.read(hello);
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,47,"assertEquals(""Hello, world!\n"", ArchiveUtils.toAsciiString(hello));"
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,48,assertNull(s.getNextEntry());
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,49,} finally {
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,50,if (s != null) {
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,51,s.close();
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,53,fis.close();
