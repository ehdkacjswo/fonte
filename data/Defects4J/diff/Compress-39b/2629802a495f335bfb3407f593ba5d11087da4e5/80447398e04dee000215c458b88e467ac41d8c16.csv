is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,455,ff += SHORT; // disk number
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,455,"int diskStart = ZipShort.getValue(cfh, off);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,456,off += SHORT;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,480,Zip64ExtendedInformationExtraField z64 =
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,481,(Zip64ExtendedInformationExtraField)
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,482,ze.getExtraField(Zip64ExtendedInformationExtraField
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,483,.HEADER_ID);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,484,if (z64 != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,485,"z64.reparseCentralDirectoryData(ze.getSize() == ZIP64_MAGIC,"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,486,ze.getCompressedSize()
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,487,"== ZIP64_MAGIC,"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,488,offset.headerOffset
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,489,"== ZIP64_MAGIC,"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,490,diskStart == ZIP64_MAGIC_SHORT);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,491,if (ze.getSize() == ZIP64_MAGIC) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,492,ze.setSize(z64.getSize().getLongValue());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,494,if (ze.getCompressedSize() == ZIP64_MAGIC) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,495,ze.setCompressedSize(z64.getCompressedSize()
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,496,.getLongValue());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,498,if (offset.headerOffset == ZIP64_MAGIC) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,499,offset.headerOffset =
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java,500,z64.getRelativeHeaderOffset().getLongValue();
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,26,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,37,import static org.junit.Assert.assertNotNull;
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,48,@Ignore
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,53,@Ignore
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,59,@Ignore
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,65,@Ignore
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,70,@Ignore
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,75,@Ignore
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,80,@Ignore
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,89,@Ignore
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,94,@Ignore
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,99,@Ignore
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,199,@Ignore
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,204,@Ignore
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,220,yte[] buf = new byte[ONE_MILLION];
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,221,ipArchiveEntry zae = null;
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,222,or (int i = 0; i < 2; i++) {
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,223,ae = new ZipArchiveEntry(String.valueOf(i));
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,224,ae.setSize(FIVE_BILLION / 2);
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,225,ae.setMethod(ZipArchiveEntry.STORED);
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,226,ae.setCrc(0x8a408f16L);
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,227,os.putArchiveEntry(zae);
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,228,or (int j = 0; j < FIVE_BILLION / 2 / 1000 / 1000;
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,229,++) {
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,230,os.write(buf);
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,232,os.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,234,ae = new ZipArchiveEntry(String.valueOf(2));
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,235,ae.setSize(0);
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,236,ae.setMethod(ZipArchiveEntry.STORED);
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,237,ae.setCrc(0);
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,238,os.putArchiveEntry(zae);
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,239,os.write(new byte[0]);
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,240,os.closeArchiveEntry();
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,241,os.close();
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,234,write3EntriesCreatingBigArchiveToStream(zos);
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,274,", 0, 0, 0,"
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,267,"1, 0, 0, 0,"
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,324,Ignore
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,323,@Test public void read3EntriesCreatingBigArchiveFileUsingZipFile()
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,324,throws Throwable {
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,325,"withTemporaryArchive(""read3EntriesCreatingBigArchiveFileUsingZipFile"","
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,326,new ZipOutputTest() {
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,327,"public void test(File f,"
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,328,ZipArchiveOutputStream zos)
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,329,throws IOException {
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,330,write3EntriesCreatingBigArchiveToStream(zos);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,331,ZipFile zf = null;
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,332,try {
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,333,zf = new ZipFile(f);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,334,int idx = 0;
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,335,for (Enumeration e =
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,336,zf.getEntriesInPhysicalOrder();
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,337,e.hasMoreElements(); ) {
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,338,ZipArchiveEntry zae =
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,339,(ZipArchiveEntry)
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,340,e.nextElement();
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,341,"assertEquals(String.valueOf(idx),"
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,342,zae.getName());
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,343,if (idx++ < 2) {
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,344,"assertEquals(FIVE_BILLION / 2,"
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,345,zae.getSize());
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,346,} else {
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,347,"assertEquals(1,"
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,348,zae.getSize());
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,349,InputStream i =
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,350,zf.getInputStream(zae);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,351,try {
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,352,assertNotNull(i);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,353,"assertEquals(42, i.read());"
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,354,} finally {
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,355,i.close();
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,359,} finally {
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,360,ZipFile.closeQuietly(zf);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,364,true);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,545,@Ignore
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1352,f.delete();
False,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1316,.delete();
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1514,private static void
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1515,write3EntriesCreatingBigArchiveToStream(ZipArchiveOutputStream zos)
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1516,throws IOException {
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1517,byte[] buf = new byte[ONE_MILLION];
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1518,ZipArchiveEntry zae = null;
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1519,for (int i = 0; i < 2; i++) {
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1520,zae = new ZipArchiveEntry(String.valueOf(i));
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1521,zae.setSize(FIVE_BILLION / 2);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1522,zae.setMethod(ZipArchiveEntry.STORED);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1523,zae.setCrc(0x8a408f16L);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1524,zos.putArchiveEntry(zae);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1525,for (int j = 0; j < FIVE_BILLION / 2 / 1000 / 1000;
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1526,j++) {
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1527,zos.write(buf);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1529,zos.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1531,zae = new ZipArchiveEntry(String.valueOf(2));
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1532,zae.setSize(1);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1533,zae.setMethod(ZipArchiveEntry.STORED);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1534,zae.setCrc(0x9b9265bL);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1535,zos.putArchiveEntry(zae);
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1536,zos.write(new byte[] { 42 });
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1537,zos.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java,1538,zos.close();
