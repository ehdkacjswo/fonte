is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,76,rivate final HashMap names = new HashMap();
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,76,"private final HashMap<String, CpioArchiveEntry> names ="
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,77,"new HashMap<String, CpioArchiveEntry>();"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,262,ap headers = new HashMap();
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java,262,"Map<String, String> headers = new HashMap<String, String>();"
False,src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java,src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java,53,rivate static final class Simple8BitChar implements Comparable {
True,src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java,src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java,53,private static final class Simple8BitChar implements Comparable<Simple8BitChar> {
False,src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java,src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java,62,ublic int compareTo(Object o) {
False,src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java,src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java,63,imple8BitChar a = (Simple8BitChar) o;
True,src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java,src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java,62,public int compareTo(Simple8BitChar a) {
False,src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java,src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java,93,ist temp = new ArrayList<Simple8BitChar>(this.highChars.length);
True,src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java,src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java,91,List<Simple8BitChar> temp =
True,src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java,src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java,92,new ArrayList<Simple8BitChar>(this.highChars.length);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,363,inkedHashMap copy = extraFields;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,363,"LinkedHashMap<ZipShort, ZipExtraField> copy = extraFields;"
False,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,37,rivate final Set changes = new LinkedHashSet();
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,37,private final Set<Change> changes = new LinkedHashSet<Change>();
False,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,160,et getChanges() {
False,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,161,eturn new LinkedHashSet(changes);
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,160,Set<Change> getChanges() {
True,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,src/main/java/org/apache/commons/compress/changes/ChangeSet.java,161,return new LinkedHashSet<Change>(changes);
False,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,42,rivate final Set changes;
True,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,42,private final Set<Change> changes;
False,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,71,et workingSet = new LinkedHashSet(changes);
True,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,71,Set<Change> workingSet = new LinkedHashSet<Change>(changes);
False,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,73,or (Iterator it = workingSet.iterator(); it.hasNext();) {
False,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,74,hange change = (Change) it.next();
True,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,73,for (Iterator<Change> it = workingSet.iterator(); it.hasNext();) {
True,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java,74,Change change = it.next();
False,src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java,src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java,28,rivate final List addedFromChangeSet = new ArrayList();
False,src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java,src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java,29,rivate final List addedFromStream = new ArrayList();
False,src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java,src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java,30,rivate final List deleted = new ArrayList();
True,src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java,src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java,28,private final List<String> addedFromChangeSet = new ArrayList<String>();
True,src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java,src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java,29,private final List<String> addedFromStream = new ArrayList<String>();
True,src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java,src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java,30,private final List<String> deleted = new ArrayList<String>();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Utils.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Utils.java,40,rivate static final Map uncompressSuffix = new HashMap();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Utils.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Utils.java,40,"private static final Map<String, String> uncompressSuffix ="
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Utils.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Utils.java,41,"new HashMap<String, String>();"
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipUtils.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipUtils.java,35,rivate static final Map compressSuffix = new HashMap();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipUtils.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipUtils.java,35,"private static final Map<String, String> compressSuffix ="
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipUtils.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipUtils.java,36,"new HashMap<String, String>();"
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipUtils.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipUtils.java,45,rivate static final Map uncompressSuffix = new HashMap();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipUtils.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipUtils.java,46,"private static final Map<String, String> uncompressSuffix ="
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipUtils.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipUtils.java,47,"new HashMap<String, String>();"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,47,rotected List archiveList; // Lists the content of the archive as originally created
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,47,protected List<String> archiveList; // Lists the content of the archive as originally created
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,142,rchiveList = new ArrayList();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,142,archiveList = new ArrayList<String>();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,201,rchiveList = new ArrayList();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,201,archiveList = new ArrayList<String>();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,227,rchiveList = new ArrayList();
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,227,archiveList = new ArrayList<String>();
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,254,"rotected void checkArchiveContent(File archive, List expected)"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,254,"protected void checkArchiveContent(File archive, List<String> expected)"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,273,"rotected void checkArchiveContent(ArchiveInputStream in, List expected)"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,273,"protected void checkArchiveContent(ArchiveInputStream in, List<String> expected)"
False,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,287,"rotected File checkArchiveContent(ArchiveInputStream in, List expected, boolean cleanUp)"
True,src/test/java/org/apache/commons/compress/AbstractTestCase.java,src/test/java/org/apache/commons/compress/AbstractTestCase.java,287,"protected File checkArchiveContent(ArchiveInputStream in, List<String> expected, boolean cleanUp)"
False,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,49,rivate static final ArrayList fileList = new ArrayList();
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,49,private static final ArrayList<String> fileList = new ArrayList<String>();
False,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,96,rrayList expected=(ArrayList) fileList.clone();
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,96,"@SuppressWarnings(""unchecked"")"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,97,ArrayList<String> expected= (ArrayList<String>) fileList.clone();
False,src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java,src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java,90,ap result = new HashMap();
True,src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java,src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java,90,"Map<String, File> result = new HashMap<String, File>();"
False,src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java,src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java,102,"ile t = (File)result.get(""test1.xml"");"
True,src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java,src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java,102,"File t = result.get(""test1.xml"");"
False,src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java,src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java,106," = (File)result.get(""test2.xml"");"
True,src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java,src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java,106,"t = result.get(""test2.xml"");"
False,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,51,rivate static final ArrayList fileList = new ArrayList();
True,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,51,private static final ArrayList<String> fileList = new ArrayList<String>();
False,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,95,rrayList expected=(ArrayList) fileList.clone();
True,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,95,"@SuppressWarnings(""unchecked"")"
True,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,96,ArrayList<String> expected = (ArrayList<String>) fileList.clone();
False,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,121,tring ent = (String) fileList.get(i);
True,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,src/test/java/org/apache/commons/compress/archivers/LongPathTest.java,122,String ent = fileList.get(i);
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,69,ist results = new ArrayList();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,69,List<File> results = new ArrayList<File>();
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,97,ile result = (File)results.get(0);
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,97,File result = results.get(0);
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,99,esult = (File)results.get(1);
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,99,result = results.get(1);
False,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,171,ist results = new ArrayList();
True,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java,171,List<String> results = new ArrayList<String>();
False,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,27,rrayList l = new ArrayList();
True,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java,27,ArrayList<String> l = new ArrayList<String>();
False,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,37,rrayList l = Collections.list(zf.getEntries());
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,37,"@SuppressWarnings(""unchecked"")"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,38,ArrayList<ZipArchiveEntry> l = Collections.list(zf.getEntries());
False,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,65,rrayList l = Collections.list(zf.getEntriesInPhysicalOrder());
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,66,"@SuppressWarnings(""unchecked"")"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,67,ArrayList<ZipArchiveEntry> l = Collections.list(zf.getEntriesInPhysicalOrder());
False,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,117,"rivate static void assertEntryName(ArrayList entries, int index,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,119,"private static void assertEntryName(ArrayList<ZipArchiveEntry> entries,"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java,120,"int index,"
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,678,ist expected = new ArrayList();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,678,List<String> expected = new ArrayList<String>();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,714,ist expected = new ArrayList();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,714,List<String> expected = new ArrayList<String>();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,752,ist expected = new ArrayList();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,752,List<String> expected = new ArrayList<String>();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,796,ist expected = new ArrayList();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,796,List<String> expected = new ArrayList<String>();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,840,ist expected = new ArrayList();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,840,List<String> expected = new ArrayList<String>();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,877,ist expected = new ArrayList();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,877,List<String> expected = new ArrayList<String>();
False,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,919,ist expected = new ArrayList();
True,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java,919,List<String> expected = new ArrayList<String>();
