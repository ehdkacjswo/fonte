is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,19,package org.apache.commons.compress.archivers.zip;
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,21,import java.util.Collections;
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,22,import java.util.HashMap;
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,23,import java.util.Map;
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,24,import java.util.zip.ZipEntry;
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,27,* Base class for all PKWare strong crypto extra headers.
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,29,* <b>Algorithm IDs</b> - integer identifier of the encryption algorithm from
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,30,* the following range
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,32,* <ul>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,33,* <li>0x6601 - DES</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,34,* <li>0x6602 - RC2 (version needed to extract < 5.2)</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,35,* <li>0x6603 - 3DES 168</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,36,* <li>0x6609 - 3DES 112</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,37,* <li>0x660E - AES 128</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,38,* <li>0x660F - AES 192</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,39,* <li>0x6610 - AES 256</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,40,* <li>0x6702 - RC2 (version needed to extract >= 5.2)</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,41,* <li>0x6720 - Blowfish</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,42,* <li>0x6721 - Twofish</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,43,* <li>0x6801 - RC4</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,44,* <li>0xFFFF - Unknown algorithm</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,45,* </ul>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,47,* <b>Hash Algorithms</b> - integer identifier of the hash algorithm from the
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,48,* following range
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,50,* <ul>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,51,* <li>0x0000 - none</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,52,* <li>0x0001 - CRC32</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,53,* <li>0x8003 - MD5</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,54,* <li>0x8004 - SHA1</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,55,* <li>0x8007 - RIPEMD160</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,56,* <li>0x800C - SHA256</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,57,* <li>0x800D - SHA384</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,58,* <li>0x800E - SHA512</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,59,* </ul>
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,61,* TODO: define enums for crypto and hash algorithms.
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,63,public abstract class PKWareExtraHeader implements ZipExtraField {
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,66,* Encryption algorithm.
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,68,public enum EncryptionAlgorithm {
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,69,"DES(0x6601),"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,70,"RC2pre52(0x6602),"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,71,"TripleDES168(0x6603),"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,72,"TripleDES192(0x6609),"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,73,"AES128(0x660E),"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,74,"AES192(0x660F),"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,75,"AES256(0x6610),"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,76,"RC2(0x6702),"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,77,"RC4(0x6801),"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,78,UNKNOWN(0xFFFF);
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,80,private final int code;
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,82,"private static final Map<Integer, EncryptionAlgorithm> codeToEnum;"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,84,static {
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,85,"Map<Integer, EncryptionAlgorithm> cte = new HashMap<Integer, EncryptionAlgorithm>();"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,86,for (EncryptionAlgorithm method : values()) {
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,87,"cte.put(Integer.valueOf(method.getCode()), method);"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,89,codeToEnum = Collections.unmodifiableMap(cte);
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,93,* private constructor for enum style class.
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,95,EncryptionAlgorithm(int code) {
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,96,this.code = code;
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,100,* the algorithm id.
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,102,* @return the PKWare AlgorithmId
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,104,public int getCode() {
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,105,return code;
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,109,* returns the EncryptionAlgorithm for the given code or null if the
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,110,* method is not known.
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,112,public static EncryptionAlgorithm getAlgorithmByCode(int code) {
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,113,return codeToEnum.get(Integer.valueOf(code));
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,118,* Hash Algorithm
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,120,public enum HashAlgorithm {
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,121,"NONE(0),"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,122,"CRC32(1),"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,123,"MD5(0x8003),"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,124,"SHA1(0x8004),"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,125,"RIPEND160(0x8007),"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,126,"SHA256(0x800C),"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,127,"SHA384(0x800D),"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,128,SHA512(0x800E);
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,130,private final int code;
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,132,"private static final Map<Integer, HashAlgorithm> codeToEnum;"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,134,static {
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,135,"Map<Integer, HashAlgorithm> cte = new HashMap<Integer, HashAlgorithm>();"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,136,for (HashAlgorithm method : values()) {
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,137,"cte.put(Integer.valueOf(method.getCode()), method);"
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,139,codeToEnum = Collections.unmodifiableMap(cte);
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,143,* private constructor for enum style class.
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,145,HashAlgorithm(int code) {
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,146,this.code = code;
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,150,* the hash algorithm ID.
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,152,* @return the PKWare hashAlg
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,154,public int getCode() {
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,155,return code;
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,159,* returns the HashAlgorithm for the given code or null if the method is
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,160,* not known.
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,162,public static HashAlgorithm getAlgorithmByCode(int code) {
True,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java,163,return codeToEnum.get(Integer.valueOf(code));
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,19,package org.apache.commons.compress.archivers.zip;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,21,import java.io.FileOutputStream;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,22,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,25,* PKCS#7 Store for X.509 Certificates (0x0014):
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,27,* This field MUST contain information about each of the certificates files may
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,28,* be signed with. When the Central Directory Encryption feature is enabled for
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,29,"* a ZIP file, this record will appear in the Archive Extra Data Record,"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,30,* otherwise it will appear in the first central directory record and will be
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,31,* ignored in any other record.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,33,* Note: all fields stored in Intel low-byte/high-byte order.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,35,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,36,*         Value     Size     Description
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,38,"* (Store) 0x0014    2 bytes  Tag for this ""extra"" block type"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,39,*         TSize     2 bytes  Size of the store data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,40,*         TData     TSize    Data about the store
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,41,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,43,* @NotThreadSafe
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,45,public class X0014_X509Certificates extends PKWareExtraHeader implements ZipExtraField {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,46,private static final ZipShort HEADER_ID = new ZipShort(0x0014);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,47,private static final long serialVersionUID = 1L;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,50,* Get the header id.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,52,* @return the header id
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,54,public ZipShort getHeaderId() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,55,return HEADER_ID;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,59,* Extra field data in local file data - without Header-ID or length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,60,* specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,62,private byte[] localData;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,65,* Set the extra field data in the local file data - without Header-ID or
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,66,* length specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,68,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,69,*            the field data to use
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,71,public void setLocalFileDataData(byte[] data) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,72,localData = ZipUtil.copy(data);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,76,* Get the length of the local data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,78,* @return the length of the local data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,80,public ZipShort getLocalFileDataLength() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,81,return new ZipShort(localData != null ? localData.length : 0);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,85,* Get the local data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,87,* @return the local data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,89,public byte[] getLocalFileDataData() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,90,return ZipUtil.copy(localData);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,94,* Extra field data in central directory - without Header-ID or length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,95,* specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,97,private byte[] centralData;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,100,* Set the extra field data in central directory.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,102,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,103,*            the data to use
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,105,public void setCentralDirectoryData(byte[] data) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,106,centralData = ZipUtil.copy(data);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,110,"* Get the central data length. If there is no central data, get the local"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,111,* file data length.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,113,* @return the central data length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,115,public ZipShort getCentralDirectoryLength() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,116,if (centralData != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,117,return new ZipShort(centralData.length);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,119,return getLocalFileDataLength();
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,123,* Get the central data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,125,"* @return the central data if present, else return the local file data"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,127,public byte[] getCentralDirectoryData() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,128,if (centralData != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,129,return ZipUtil.copy(centralData);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,131,return getLocalFileDataData();
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,135,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,136,*            the array of bytes.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,137,* @param offset
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,138,*            the source location in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,139,* @param length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,140,*            the number of bytes to use in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,141,"* @see ZipExtraField#parseFromLocalFileData(byte[], int, int)"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,143,"public void parseFromLocalFileData(byte[] data, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,144,byte[] tmp = new byte[length];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,145,"System.arraycopy(data, offset, tmp, 0, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,146,setLocalFileDataData(tmp);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,150,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,151,*            the array of bytes.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,152,* @param offset
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,153,*            the source location in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,154,* @param length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,155,*            the number of bytes to use in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,156,"* @see ZipExtraField#parseFromCentralDirectoryData(byte[], int, int)"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,158,"public void parseFromCentralDirectoryData(byte[] data, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,159,byte[] tmp = new byte[length];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,160,"System.arraycopy(data, offset, tmp, 0, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,161,setCentralDirectoryData(tmp);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,162,if (localData == null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java,163,setLocalFileDataData(tmp);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,19,package org.apache.commons.compress.archivers.zip;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,22,* X.509 Certificate ID and Signature for individual file (0x0015):
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,24,* This field contains the information about which certificate in the PKCS#7
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,25,* store was used to sign a particular file. It also contains the signature
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,26,"* data. This field can appear multiple times, but can only appear once per"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,27,* certificate.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,29,* Note: all fields stored in Intel low-byte/high-byte order.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,31,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,32,*         Value     Size     Description
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,34,"* (CID)   0x0015    2 bytes  Tag for this ""extra"" block type"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,35,*         TSize     2 bytes  Size of data that follows
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,36,*         RCount    4 bytes  Number of recipients. (inferred)
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,37,*         HashAlg   2 bytes  Hash algorithm identifier. (inferred)
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,38,*         TData     TSize    Signature Data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,39,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,41,* @NotThreadSafe
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,43,public class X0015_CertificateIdForFile extends PKWareExtraHeader implements ZipExtraField {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,44,private static final ZipShort HEADER_ID = new ZipShort(0x0015);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,45,private static final long serialVersionUID = 1L;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,48,* Get the header id.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,50,* @return the header id
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,52,public ZipShort getHeaderId() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,53,return HEADER_ID;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,57,* Extra field data in local file data - without Header-ID or length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,58,* specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,60,private byte[] localData;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,62,private int rcount;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,63,private HashAlgorithm hashAlg;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,66,* Get record count.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,67,* @return
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,69,public int getRecordCount() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,70,return rcount;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,74,* Get hash algorithm.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,75,* @return
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,77,public HashAlgorithm getHashAlgorithm() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,78,return hashAlg;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,82,* Set the extra field data in the local file data - without Header-ID or
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,83,* length specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,85,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,86,*            the field data to use
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,88,public void setLocalFileDataData(byte[] data) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,89,localData = ZipUtil.copy(data);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,93,* Get the length of the local data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,95,* @return the length of the local data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,97,public ZipShort getLocalFileDataLength() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,98,return new ZipShort(localData != null ? localData.length : 0);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,102,* Get the local data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,104,* @return the local data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,106,public byte[] getLocalFileDataData() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,107,return ZipUtil.copy(localData);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,111,* Extra field data in central directory - without Header-ID or length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,112,* specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,114,private byte[] centralData;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,117,* Set the extra field data in central directory.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,119,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,120,*            the data to use
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,122,public void setCentralDirectoryData(byte[] data) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,123,centralData = ZipUtil.copy(data);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,127,"* Get the central data length. If there is no central data, get the local"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,128,* file data length.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,130,* @return the central data length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,132,public ZipShort getCentralDirectoryLength() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,133,if (centralData != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,134,return new ZipShort(centralData.length);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,136,return getLocalFileDataLength();
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,140,* Get the central data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,142,"* @return the central data if present, else return the local file data"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,144,public byte[] getCentralDirectoryData() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,145,if (centralData != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,146,return ZipUtil.copy(centralData);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,148,return getLocalFileDataData();
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,152,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,153,*            the array of bytes.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,154,* @param offset
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,155,*            the source location in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,156,* @param length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,157,*            the number of bytes to use in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,158,"* @see ZipExtraField#parseFromLocalFileData(byte[], int, int)"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,160,"public void parseFromLocalFileData(byte[] data, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,161,byte[] tmp = new byte[length];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,162,"System.arraycopy(data, offset, tmp, 0, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,163,setLocalFileDataData(tmp);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,167,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,168,*            the array of bytes.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,169,* @param offset
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,170,*            the source location in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,171,* @param length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,172,*            the number of bytes to use in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,173,"* @see ZipExtraField#parseFromCentralDirectoryData(byte[], int, int)"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,175,"public void parseFromCentralDirectoryData(byte[] data, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,176,byte[] tmp = new byte[length];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,177,"System.arraycopy(data, offset, tmp, 0, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,178,setCentralDirectoryData(tmp);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,179,if (localData == null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,180,setLocalFileDataData(tmp);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,183,"this.rcount = ZipShort.getValue(data, offset);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java,184,"this.hashAlg = HashAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 2));"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,19,package org.apache.commons.compress.archivers.zip;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,22,* X.509 Certificate ID and Signature for central directory (0x0016):
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,24,* This field contains the information about which certificate in the PKCS#7
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,25,* store was used to sign the central directory structure. When the Central
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,26,"* Directory Encryption feature is enabled for a ZIP file, this record will"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,27,"* appear in the Archive Extra Data Record, otherwise it will appear in the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,28,* first central directory record.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,30,* Note: all fields stored in Intel low-byte/high-byte order.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,32,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,33,*         Value     Size     Description
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,35,"* (CDID)  0x0016    2 bytes  Tag for this ""extra"" block type"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,36,*         TSize     2 bytes  Size of data that follows
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,37,*         RCount    4 bytes  Number of recipients. (inferred)
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,38,*         HashAlg   2 bytes  Hash algorithm identifier. (inferred)
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,39,*         TData     TSize    Data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,40,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,42,* @NotThreadSafe
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,44,public class X0016_CertificateIdForCentralDirectory extends PKWareExtraHeader implements ZipExtraField {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,45,private static final ZipShort HEADER_ID = new ZipShort(0x0016);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,46,private static final long serialVersionUID = 1L;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,49,* Get the header id.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,51,* @return the header id
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,53,public ZipShort getHeaderId() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,54,return HEADER_ID;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,58,* Extra field data in local file data - without Header-ID or length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,59,* specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,61,private byte[] localData;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,63,private int rcount;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,64,private HashAlgorithm hashAlg;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,67,* Get record count.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,68,* @return
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,70,public int getRecordCount() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,71,return rcount;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,75,* Get hash algorithm.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,76,* @return
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,78,public HashAlgorithm getHashAlgorithm() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,79,return hashAlg;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,83,* Set the extra field data in the local file data - without Header-ID or
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,84,* length specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,86,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,87,*            the field data to use
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,89,public void setLocalFileDataData(byte[] data) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,90,localData = ZipUtil.copy(data);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,94,* Get the length of the local data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,96,* @return the length of the local data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,98,public ZipShort getLocalFileDataLength() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,99,return new ZipShort(localData != null ? localData.length : 0);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,103,* Get the local data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,105,* @return the local data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,107,public byte[] getLocalFileDataData() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,108,return ZipUtil.copy(localData);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,112,* Extra field data in central directory - without Header-ID or length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,113,* specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,115,private byte[] centralData;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,118,* Set the extra field data in central directory.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,120,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,121,*            the data to use
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,123,public void setCentralDirectoryData(byte[] data) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,124,centralData = ZipUtil.copy(data);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,128,"* Get the central data length. If there is no central data, get the local"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,129,* file data length.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,131,* @return the central data length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,133,public ZipShort getCentralDirectoryLength() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,134,if (centralData != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,135,return new ZipShort(centralData.length);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,137,return getLocalFileDataLength();
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,141,* Get the central data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,143,"* @return the central data if present, else return the local file data"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,145,public byte[] getCentralDirectoryData() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,146,if (centralData != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,147,return ZipUtil.copy(centralData);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,149,return getLocalFileDataData();
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,153,* This should never be called for this header type.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,155,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,156,*            the array of bytes.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,157,* @param offset
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,158,*            the source location in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,159,* @param length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,160,*            the number of bytes to use in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,161,"* @see ZipExtraField#parseFromLocalFileData(byte[], int, int)"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,163,"public void parseFromLocalFileData(byte[] data, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,164,byte[] tmp = new byte[length];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,165,"System.arraycopy(data, offset, tmp, 0, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,166,setLocalFileDataData(tmp);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,170,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,171,*            the array of bytes.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,172,* @param offset
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,173,*            the source location in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,174,* @param length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,175,*            the number of bytes to use in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,176,"* @see ZipExtraField#parseFromCentralDirectoryData(byte[], int, int)"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,178,"public void parseFromCentralDirectoryData(byte[] data, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,179,byte[] tmp = new byte[length];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,180,"System.arraycopy(data, offset, tmp, 0, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,181,setCentralDirectoryData(tmp);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,183,"this.rcount = ZipShort.getValue(data, offset);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java,184,"this.hashAlg = HashAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 2));"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,19,package org.apache.commons.compress.archivers.zip;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,22,* Strong Encryption Header (0x0017)
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,24,* Certificate-based encryption:
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,26,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,27,* Value     Size     Description
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,29,"* 0x0017    2 bytes  Tag for this ""extra"" block type"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,30,* TSize     2 bytes  Size of data that follows
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,31,* Format    2 bytes  Format definition for this record
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,32,* AlgID     2 bytes  Encryption algorithm identifier
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,33,* Bitlen    2 bytes  Bit length of encryption key (32-448 bits)
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,34,* Flags     2 bytes  Processing flags
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,35,* RCount    4 bytes  Number of recipients.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,36,* HashAlg   2 bytes  Hash algorithm identifier
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,37,* HSize     2 bytes  Hash size
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,38,* SRList    (var)    Simple list of recipients hashed public keys
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,40,* Flags -   This defines the processing flags.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,42,*           <ul>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,43,*           <li>0x0007 - reserved for future use
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,44,*           <li>0x000F - reserved for future use
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,45,*           <li>0x0100 - Indicates non-OAEP key wrapping was used.  If this
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,46,"*                        this field is set, the version needed to extract must"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,47,*                        be at least 61.  This means OAEP key wrapping is not
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,48,*                        used when generating a Master Session Key using
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,49,*                        ErdData.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,50,"*           <li>0x4000 - ErdData must be decrypted using 3DES-168, otherwise use the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,51,*                        same algorithm used for encrypting the file contents.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,52,*           <li>0x8000 - reserved for future use
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,53,*           </ul>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,55,* RCount - This defines the number intended recipients whose
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,56,*          public keys were used for encryption.  This identifies
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,57,*          the number of elements in the SRList.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,59,*          see also: reserved1
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,61,* HashAlg - This defines the hash algorithm used to calculate
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,62,*           the public key hash of each public key used
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,63,*           for encryption. This field currently supports
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,64,*           only the following value for SHA-1
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,66,*           0x8004 - SHA1
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,68,* HSize -   This defines the size of a hashed public key.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,70,* SRList -  This is a variable length list of the hashed
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,71,*           public keys for each intended recipient.  Each
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,72,*           element in this list is HSize.  The total size of
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,73,*           SRList is determined using RCount * HSize.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,74,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,76,* Password-based Extra Field 0x0017 in central header only.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,78,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,79,* Value     Size     Description
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,81,"* 0x0017    2 bytes  Tag for this ""extra"" block type"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,82,* TSize     2 bytes  Size of data that follows
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,83,* Format    2 bytes  Format definition for this record
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,84,* AlgID     2 bytes  Encryption algorithm identifier
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,85,* Bitlen    2 bytes  Bit length of encryption key (32-448 bits)
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,86,* Flags     2 bytes  Processing flags
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,87,* (more?)
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,88,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,90,* <b>Format</b> - the data format identifier for this record. The only value
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,91,* allowed at this time is the integer value 2.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,93,* Password-based Extra Field 0x0017 preceding compressed file data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,95,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,96,* Value     Size     Description
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,98,"* 0x0017    2 bytes  Tag for this ""extra"" block type"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,99,* IVSize    2 bytes  Size of initialization vector (IV)
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,100,* IVData    IVSize   Initialization vector for this file
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,101,* Size      4 bytes  Size of remaining decryption header data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,102,* Format    2 bytes  Format definition for this record
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,103,* AlgID     2 bytes  Encryption algorithm identifier
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,104,* Bitlen    2 bytes  Bit length of encryption key (32-448 bits)
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,105,* Flags     2 bytes  Processing flags
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,106,* ErdSize   2 bytes  Size of Encrypted Random Data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,107,* ErdData   ErdSize  Encrypted Random Data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,108,* Reserved1 4 bytes  Reserved certificate processing data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,109,* Reserved2 (var)    Reserved for certificate processing data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,110,* VSize     2 bytes  Size of password validation data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,111,* VData     VSize-4  Password validation data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,112,* VCRC32    4 bytes  Standard ZIP CRC32 of password validation data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,114,* IVData - The size of the IV should match the algorithm block size.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,115,*          The IVData can be completely random data.  If the size of
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,116,*          the randomly generated data does not match the block size
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,117,*          it should be complemented with zero's or truncated as
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,118,"*          necessary.  If IVSize is 0,then IV = CRC32 + Uncompressed"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,119,"*          File Size (as a 64 bit little-endian, unsigned integer value)."
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,121,* Format -  the data format identifier for this record.  The only
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,122,*           value allowed at this time is the integer value 2.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,124,* ErdData - Encrypted random data is used to store random data that
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,125,*           is used to generate a file session key for encrypting
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,126,*           each file.  SHA1 is used to calculate hash data used to
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,127,*           derive keys.  File session keys are derived from a master
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,128,*           session key generated from the user-supplied password.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,129,*           If the Flags field in the decryption header contains
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,130,"*           the value 0x4000, then the ErdData field must be"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,131,"*           decrypted using 3DES. If the value 0x4000 is not set,"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,132,*           then the ErdData field must be decrypted using AlgId.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,134,"* Reserved1 - Reserved for certificate processing, if value is"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,135,"*           zero, then Reserved2 data is absent.  See the explanation"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,136,*           under the Certificate Processing Method for details on
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,137,*           this data structure.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,139,"* Reserved2 - If present, the size of the Reserved2 data structure"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,140,*           is located by skipping the first 4 bytes of this field
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,141,*           and using the next 2 bytes as the remaining size.  See
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,142,*           the explanation under the Certificate Processing Method
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,143,*           for details on this data structure.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,145,* VSize - This size value will always include the 4 bytes of the
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,146,*         VCRC32 data and will be greater than 4 bytes.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,148,* VData - Random data for password validation.  This data is VSize
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,149,*         in length and VSize must be a multiple of the encryption
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,150,*         block size.  VCRC32 is a checksum value of VData.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,151,*         VData and VCRC32 are stored encrypted and start the
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,152,*         stream of encrypted data for a file.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,153,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,156,* Reserved1 - Certificate Decryption Header Reserved1 Data:
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,158,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,159,* Value     Size     Description
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,161,* RCount    4 bytes  Number of recipients.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,162,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,164,* RCount - This defines the number intended recipients whose public keys were
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,165,* used for encryption. This defines the number of elements in the REList field
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,166,* defined below.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,169,* Reserved2 - Certificate Decryption Header Reserved2 Data Structures:
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,171,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,172,* Value     Size     Description
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,174,* HashAlg   2 bytes  Hash algorithm identifier
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,175,* HSize     2 bytes  Hash size
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,176,* REList    (var)    List of recipient data elements
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,178,* HashAlg - This defines the hash algorithm used to calculate
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,179,*           the public key hash of each public key used
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,180,*           for encryption. This field currently supports
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,181,*           only the following value for SHA-1
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,183,*               0x8004 - SHA1
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,185,* HSize -   This defines the size of a hashed public key
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,186,*           defined in REHData.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,188,* REList -  This is a variable length of list of recipient data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,189,*           Each element in this list consists of a Recipient
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,190,*           Element data structure as follows:
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,191,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,193,* Recipient Element (REList) Data Structure:
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,195,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,196,* Value     Size     Description
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,198,* RESize    2 bytes  Size of REHData + REKData
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,199,* REHData   HSize    Hash of recipients public key
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,200,* REKData   (var)    Simple key blob
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,203,* RESize -  This defines the size of an individual REList
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,204,*           element.  This value is the combined size of the
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,205,*           REHData field + REKData field.  REHData is defined by
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,206,*           HSize.  REKData is variable and can be calculated
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,207,*           for each REList element using RESize and HSize.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,209,* REHData - Hashed public key for this recipient.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,211,* REKData - Simple Key Blob.  The format of this data structure
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,212,*           is identical to that defined in the Microsoft
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,213,*           CryptoAPI and generated using the CryptExportKey()
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,214,*           function.  The version of the Simple Key Blob
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,215,*           supported at this time is 0x02 as defined by
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,216,*           Microsoft.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,218,*           For more details see https://msdn.microsoft.com/en-us/library/aa920051.aspx
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,219,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,221,* <b>Flags</b> - Processing flags needed for decryption
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,223,* <ul>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,224,* <li>0x0001 - Password is required to decrypt</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,225,* <li>0x0002 - Certificates only</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,226,* <li>0x0003 - Password or certificate required to decrypt</li>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,227,* <li>0x0007 - reserved for future use
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,228,* <li>0x000F - reserved for future use
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,229,* <li>0x0100 - indicates non-OAEP key wrapping was used. If this field is set
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,230,* the version needed to extract must be at least 61. This means OAEP key
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,231,* wrapping is not used when generating a Master Session Key using ErdData.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,232,"* <li>0x4000 - ErdData must be decrypted using 3DES-168, otherwise use the same"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,233,* algorithm used for encrypting the file contents.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,234,* <li>0x8000 - reserved for future use.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,235,* </ul>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,237,* <b>See the section describing the Strong Encryption Specification for
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,238,* details. Refer to the section in this document entitled
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,239,"* ""Incorporating PKWARE Proprietary Technology into Your Product"" for more"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,240,* information.</b>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,242,* @NotThreadSafe
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,244,public class X0017_StrongEncryptionHeader extends PKWareExtraHeader implements ZipExtraField {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,245,private static final ZipShort HEADER_ID = new ZipShort(0x0017);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,246,private static final long serialVersionUID = 1L;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,249,* Get the header id.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,251,* @return the header id
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,253,public ZipShort getHeaderId() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,254,return HEADER_ID;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,258,* Extra field data in local file data - without Header-ID or length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,259,* specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,261,private byte[] localData;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,263,private int format;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,264,private EncryptionAlgorithm algId;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,265,private int bitlen;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,266,private int flags;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,267,private long rcount;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,268,private HashAlgorithm hashAlg;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,269,private int hashSize;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,271,// encryption data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,272,private byte ivData[];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,273,private byte erdData[];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,275,// encryption key
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,276,private byte recipientKeyHash[];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,277,private byte keyBlob[];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,279,// password verification data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,280,private byte vData[];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,281,private byte vCRC32[];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,284,* Get record count.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,285,* @return
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,287,public long getRecordCount() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,288,return rcount;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,292,* Get hash algorithm.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,293,* @return
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,295,public HashAlgorithm getHashAlgorithm() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,296,return hashAlg;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,300,* Get encryption algorithm.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,301,* @return
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,303,public EncryptionAlgorithm getEncryptionAlgorithm() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,304,return algId;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,308,* Set the extra field data in the local file data - without Header-ID or
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,309,* length specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,311,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,312,*            the field data to use
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,314,public void setLocalFileDataData(byte[] data) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,315,localData = ZipUtil.copy(data);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,319,* Get the length of the local data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,321,* @return the length of the local data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,323,public ZipShort getLocalFileDataLength() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,324,return new ZipShort(localData != null ? localData.length : 0);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,328,* Get the local data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,330,* @return the local data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,332,public byte[] getLocalFileDataData() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,333,return ZipUtil.copy(localData);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,337,* Extra field data in central directory - without Header-ID or length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,338,* specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,340,private byte[] centralData;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,343,* Set the extra field data in central directory.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,345,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,346,*            the data to use
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,348,public void setCentralDirectoryData(byte[] data) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,349,centralData = ZipUtil.copy(data);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,353,"* Get the central data length. If there is no central data, get the local"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,354,* file data length.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,356,* @return the central data length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,358,public ZipShort getCentralDirectoryLength() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,359,if (centralData != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,360,return new ZipShort(centralData.length);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,362,return getLocalFileDataLength();
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,366,* Get the central data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,368,"* @return the central data if present, else return the local file data"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,370,public byte[] getCentralDirectoryData() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,371,if (centralData != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,372,return ZipUtil.copy(centralData);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,374,return getLocalFileDataData();
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,378,* Parse central directory format.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,380,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,381,* @param offset
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,382,* @param length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,384,"public void parseCentralDirectoryFormat(byte[] data, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,385,"this.format = ZipShort.getValue(data, offset);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,386,"this.algId = EncryptionAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 2));"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,387,"this.bitlen = ZipShort.getValue(data, offset + 4);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,388,"this.flags = ZipShort.getValue(data, offset + 6);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,389,"this.rcount = ZipLong.getValue(data, offset + 8);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,391,if (rcount > 0) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,392,"this.hashAlg = HashAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + 12));"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,393,"this.hashSize = ZipShort.getValue(data, offset + 14);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,394,// srlist... hashed public keys
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,395,for (int i = 0; i < this.rcount; i++) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,396,for (int j = 0; j < this.hashSize; j++) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,397,//  ZipUtil.signedByteToUnsignedInt(data[offset + 16 + (i * this.hashSize) + j]));
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,404,* Parse file header format. (Password only?)
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,406,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,407,* @param offset
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,408,* @param length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,410,"public void parseFileFormat(byte[] data, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,411,"int ivSize = ZipShort.getValue(data, offset);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,412,this.ivData = new byte[ivSize];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,413,"System.arraycopy(data, offset + 4, this.ivData, 0, ivSize);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,415,"long size = ZipLong.getValue(data, offset + ivSize + 2);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,416,"this.format = ZipShort.getValue(data, offset + ivSize + 6);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,417,"this.algId = EncryptionAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + ivSize + 8));"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,418,"this.bitlen = ZipShort.getValue(data, offset + ivSize + 10);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,419,"this.flags = ZipShort.getValue(data, offset + ivSize + 12);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,421,"int erdSize = ZipShort.getValue(data, offset + ivSize + 14);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,422,this.erdData = new byte[erdSize];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,423,"System.arraycopy(data, offset + ivSize + 16, this.erdData, 0, erdSize);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,425,"this.rcount = ZipLong.getValue(data, offset + ivSize + 16 + erdSize);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,426,"System.out.println(""rcount: "" + rcount);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,427,if (rcount == 0) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,428,"int vSize = ZipShort.getValue(data, offset + ivSize + 20 + erdSize);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,429,this.vData = new byte[vSize - 4];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,430,this.vCRC32 = new byte[4];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,431,"System.arraycopy(data, offset + ivSize + 22 + erdSize , this.vData, 0, vSize - 4);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,432,"System.arraycopy(data, offset + ivSize + 22 + erdSize + vSize - 4, vCRC32, 0, 4);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,433,} else {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,434,"this.hashAlg = HashAlgorithm.getAlgorithmByCode(ZipShort.getValue(data, offset + ivSize + 20 + erdSize));"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,435,"this.hashSize = ZipShort.getValue(data, offset + ivSize + 22 + erdSize);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,436,"int resize = ZipShort.getValue(data, offset + ivSize + 24 + erdSize);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,437,this.recipientKeyHash = new byte[this.hashSize];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,438,this.keyBlob = new byte[resize - this.hashSize];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,439,"System.arraycopy(data, offset + ivSize + 24 + erdSize, this.recipientKeyHash, 0, this.hashSize);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,440,"System.arraycopy(data, offset + ivSize + 24 + erdSize + this.hashSize, this.keyBlob, 0, resize - this.hashSize);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,442,"int vSize = ZipShort.getValue(data, offset + ivSize + 26 + erdSize + resize);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,443,this.vData = new byte[vSize - 4];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,444,this.vCRC32 = new byte[4];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,445,"System.arraycopy(data, offset + ivSize + 22 + erdSize + resize, this.vData, 0, vSize - 4);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,446,"System.arraycopy(data, offset + ivSize + 22 + erdSize + resize + vSize - 4, vCRC32, 0, 4);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,449,// validate values?
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,453,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,454,*            the array of bytes.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,455,* @param offset
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,456,*            the source location in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,457,* @param length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,458,*            the number of bytes to use in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,459,"* @see ZipExtraField#parseFromLocalFileData(byte[], int, int)"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,461,"public void parseFromLocalFileData(byte[] data, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,462,byte[] tmp = new byte[length];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,463,"System.arraycopy(data, offset, tmp, 0, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,464,"parseFileFormat(data, offset, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,468,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,469,*            the array of bytes.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,470,* @param offset
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,471,*            the source location in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,472,* @param length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,473,*            the number of bytes to use in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,474,"* @see ZipExtraField#parseFromCentralDirectoryData(byte[], int, int)"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,476,"public void parseFromCentralDirectoryData(byte[] data, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,477,byte[] tmp = new byte[length];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,478,"System.arraycopy(data, offset, tmp, 0, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,479,setCentralDirectoryData(tmp);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java,480,"parseCentralDirectoryFormat(data, offset, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,19,package org.apache.commons.compress.archivers.zip;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,22,* PKCS#7 Encryption Recipient Certificate List (0x0019)
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,24,* This field MAY contain information about each of the certificates used in
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,25,* encryption processing and it can be used to identify who is allowed to
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,26,* decrypt encrypted files. This field should only appear in the archive extra
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,27,* data record. This field is not required and serves only to aid archive
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,28,* modifications by preserving public encryption key data. Individual security
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,29,* requirements may dictate that this data be omitted to deter information
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,30,* exposure.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,32,* Note: all fields stored in Intel low-byte/high-byte order.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,34,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,35,*          Value     Size     Description
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,37,"* (CStore) 0x0019    2 bytes  Tag for this ""extra"" block type"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,38,*          TSize     2 bytes  Size of the store data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,39,*          Version   2 bytes  Format version number - must 0x0001 at this time
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,40,*          CStore    (var)    PKCS#7 data blob
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,41,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,43,* <b>See the section describing the Strong Encryption Specification for
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,44,* details. Refer to the section in this document entitled
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,45,"* ""Incorporating PKWARE Proprietary Technology into Your Product"" for more"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,46,* information.</b>
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,48,* @NotThreadSafe
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,50,public class X0019_EncryptionRecipientCertificateList extends PKWareExtraHeader implements ZipExtraField {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,51,private static final ZipShort HEADER_ID = new ZipShort(0x0019);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,52,private static final long serialVersionUID = 1L;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,55,* Get the header id.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,57,* @return the header id
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,59,public ZipShort getHeaderId() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,60,return HEADER_ID;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,64,* Extra field data in local file data - without Header-ID or length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,65,* specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,67,private byte[] localData;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,70,* Set the extra field data in the local file data - without Header-ID or
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,71,* length specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,73,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,74,*            the field data to use
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,76,public void setLocalFileDataData(byte[] data) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,77,localData = ZipUtil.copy(data);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,81,* Get the length of the local data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,83,* @return the length of the local data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,85,public ZipShort getLocalFileDataLength() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,86,return new ZipShort(localData != null ? localData.length : 0);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,90,* Get the local data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,92,* @return the local data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,94,public byte[] getLocalFileDataData() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,95,return ZipUtil.copy(localData);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,99,* Extra field data in central directory - without Header-ID or length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,100,* specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,102,private byte[] centralData;
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,105,* Set the extra field data in central directory.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,107,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,108,*            the data to use
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,110,public void setCentralDirectoryData(byte[] data) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,111,centralData = ZipUtil.copy(data);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,115,"* Get the central data length. If there is no central data, get the local"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,116,* file data length.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,118,* @return the central data length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,120,public ZipShort getCentralDirectoryLength() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,121,if (centralData != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,122,return new ZipShort(centralData.length);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,124,return getLocalFileDataLength();
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,128,* Get the central data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,130,"* @return the central data if present, else return the local file data"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,132,public byte[] getCentralDirectoryData() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,133,if (centralData != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,134,return ZipUtil.copy(centralData);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,136,return getLocalFileDataData();
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,140,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,141,*            the array of bytes.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,142,* @param offset
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,143,*            the source location in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,144,* @param length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,145,*            the number of bytes to use in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,146,"* @see ZipExtraField#parseFromLocalFileData(byte[], int, int)"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,148,"public void parseFromLocalFileData(byte[] data, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,149,byte[] tmp = new byte[length];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,150,"System.arraycopy(data, offset, tmp, 0, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,151,setLocalFileDataData(tmp);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,155,* @param data
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,156,*            the array of bytes.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,157,* @param offset
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,158,*            the source location in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,159,* @param length
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,160,*            the number of bytes to use in the data array.
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,161,"* @see ZipExtraField#parseFromCentralDirectoryData(byte[], int, int)"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,163,"public void parseFromCentralDirectoryData(byte[] data, int offset, int length) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,164,byte[] tmp = new byte[length];
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,165,"System.arraycopy(data, offset, tmp, 0, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,166,setCentralDirectoryData(tmp);
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,167,if (localData == null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java,168,setLocalFileDataData(tmp);
