is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,52,static SevenZMethod findBySignature(byte[] sig) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,53,for (final CoderId coderId : coderTable) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,54,"if (Arrays.equals(coderId.method.getId(), sig)) {"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,55,return coderId.method;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,58,return null;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,30,import java.util.LinkedList;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,804,final SevenZArchiveEntry file = archive.files[currentEntryIndex];
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,808,file.setContentMethods(archive.files[currentEntryIndex - 1].getContentMethods());
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,817,"urrentFolderInputStream = buildDecoderStack(folder, folderOffset, firstPackStreamIndex);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,820,"currentFolderInputStream = buildDecoderStack(folder, folderOffset, firstPackStreamIndex, file);"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,819,inal SevenZArchiveEntry file = archive.files[currentEntryIndex];
False,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,841,inal int firstPackStreamIndex) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,843,"final int firstPackStreamIndex, SevenZArchiveEntry entry) throws IOException {"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,847,LinkedList<SevenZMethodConfiguration> methods = new LinkedList<SevenZMethodConfiguration>();
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,852,SevenZMethod method = Coders.findBySignature(coder.decompressionMethodId);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,853,methods.addFirst(new SevenZMethodConfiguration(method));
True,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java,856,entry.setContentMethods(methods);
False,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,48,"est7zUnarchive(getFile(""bla.7z""));"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,48,"test7zUnarchive(getFile(""bla.7z""), SevenZMethod.LZMA);"
False,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,52,"est7zUnarchive(getFile(""bla.deflate.7z""));"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,52,"test7zUnarchive(getFile(""bla.deflate.7z""), SevenZMethod.DEFLATE);"
False,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,57,"est7zUnarchive(getFile(""bla.encrypted.7z""), ""foo"".getBytes(""UTF-16LE""));"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,57,"test7zUnarchive(getFile(""bla.encrypted.7z""), SevenZMethod.LZMA, // stack LZMA + AES"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,58,"""foo"".getBytes(""UTF-16LE""));"
False,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,61,rivate void test7zUnarchive(File f) throws Exception {
False,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,62,"est7zUnarchive(f, null);"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,62,"private void test7zUnarchive(File f, SevenZMethod m) throws Exception {"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,63,"test7zUnarchive(f, m, null);"
False,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,105,"rivate void test7zUnarchive(File f, byte[] password) throws Exception {"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,106,"private void test7zUnarchive(File f, SevenZMethod m, byte[] password) throws Exception {"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,111,"assertEquals(m, entry.getContentMethods().iterator().next().getMethod());"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java,114,"assertEquals(m, entry.getContentMethods().iterator().next().getMethod());"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,22,import java.util.Arrays;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,23,import java.util.ArrayList;
False,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,25,mport java.util.ArrayList;
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,27,import java.util.Iterator;
False,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,260,"utput = new File(dir, ""bzip2-options.7z"");"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,262,"output = new File(dir, ""lzma2-options.7z"");"
False,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,267,"utput = new File(dir, ""bzip2-options2.7z"");"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,269,"output = new File(dir, ""lzma2-options2.7z"");"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,275,public void testArchiveWithMixedMethods() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,276,"output = new File(dir, ""mixed-methods.7z"");"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,277,SevenZOutputFile outArchive = new SevenZOutputFile(output);
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,278,try {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,279,"addFile(outArchive, 0, true);"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,280,"addFile(outArchive, 1, true, Arrays.asList(new SevenZMethodConfiguration(SevenZMethod.BZIP2)));"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,281,} finally {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,282,outArchive.close();
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,285,SevenZFile archive = new SevenZFile(output);
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,286,try {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,287,"assertEquals(Boolean.TRUE,"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,288,"verifyFile(archive, 0, Arrays.asList(new SevenZMethodConfiguration(SevenZMethod.LZMA2))));"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,289,"assertEquals(Boolean.TRUE,"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,290,"verifyFile(archive, 1, Arrays.asList(new SevenZMethodConfiguration(SevenZMethod.BZIP2))));"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,291,} finally {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,292,archive.close();
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,351,throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,352,"addFile(archive, index, nonEmpty, null);"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,355,"private void addFile(SevenZOutputFile archive, int index, boolean nonEmpty, Iterable<SevenZMethodConfiguration> methods)"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,359,entry.setContentMethods(methods);
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,366,"return verifyFile(archive, index, null);"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,369,"private Boolean verifyFile(SevenZFile archive, int index,"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,370,Iterable<SevenZMethodConfiguration> methods) throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,383,if (methods != null) {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,384,"assertContentMethodsEquals(methods, entry.getContentMethods());"
False,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,370,"ssertEquals(Boolean.TRUE, verifyFile(archive, 0));"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,407,"assertEquals(Boolean.TRUE, verifyFile(archive, 0, methods));"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,413,"private static void assertContentMethodsEquals(Iterable<? extends SevenZMethodConfiguration> expected,"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,414,Iterable<? extends SevenZMethodConfiguration> actual) {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,415,assertNotNull(actual);
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,416,Iterator<? extends SevenZMethodConfiguration> expectedIter = expected.iterator();
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,417,Iterator<? extends SevenZMethodConfiguration> actualIter = actual.iterator();
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,418,while (expectedIter.hasNext()) {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,419,assertTrue(actualIter.hasNext());
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,420,SevenZMethodConfiguration expConfig = expectedIter.next();
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,421,SevenZMethodConfiguration actConfig = actualIter.next();
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,422,"assertEquals(expConfig.getMethod(), actConfig.getMethod());"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java,424,assertFalse(actualIter.hasNext());
