is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,25,import org.apache.commons.compress.archivers.zip.JarMarker;
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,30,* Subclass that adds a special extra field to the very first entry
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,31,* which allows the created archive to be used as an executable jar on
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,32,* Solaris.
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,30,ublic JarArchiveOutputStream( final OutputStream out ) {
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,36,private boolean jarMarkerAdded = false;
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,38,public JarArchiveOutputStream(final OutputStream out) {
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,34,ublic void putArchiveEntry(ArchiveEntry entry) throws IOException {
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,35,/ TODO special jar stuff
False,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,36,uper.putArchiveEntry((ZipArchiveEntry) entry);
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,42,public void putNextEntry(ZipArchiveEntry ze) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,43,if (!jarMarkerAdded) {
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,44,ze.addAsFirstExtraField(JarMarker.getInstance());
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,45,jarMarkerAdded = true;
True,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java,47,super.putNextEntry(ze);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,220,"* <p>If no extra field of the same type exists, the field will be"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,221,* added as last field.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,234,* Adds an extra fields - replacing an already present extra field
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,235,* of the same type.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,237,* <p>The new extra field will be the first one.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,238,* @param ze an extra field
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,239,* @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,241,public void addAsFirstExtraField(ZipExtraField ze) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,242,LinkedHashMap copy = extraFields;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,243,extraFields = new LinkedHashMap();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,244,"extraFields.put(ze.getHeaderId(), ze);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,245,if (copy != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,246,copy.remove(ze.getHeaderId());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,247,extraFields.putAll(copy);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,249,setExtra();
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,17,* under the License.
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,19,package org.apache.commons.compress.archivers.jar;
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,21,import java.io.File;
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,22,import java.io.FileOutputStream;
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,23,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,24,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,26,import org.apache.commons.compress.archivers.zip.JarMarker;
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,27,import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,28,import org.apache.commons.compress.archivers.zip.ZipExtraField;
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,29,import org.apache.commons.compress.archivers.zip.ZipFile;
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,31,public class JarArchiveOutputStreamTest extends TestCase {
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,33,public void testJarMarker() throws IOException {
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,34,"File testArchive = File.createTempFile(""jar-aostest"", "".jar"");"
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,35,JarArchiveOutputStream out = null;
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,36,ZipFile zf = null;
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,37,try {
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,39,out = new JarArchiveOutputStream(new FileOutputStream(testArchive));
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,40,"out.putArchiveEntry(new ZipArchiveEntry(""foo/""));"
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,41,out.closeEntry();
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,42,"out.putArchiveEntry(new ZipArchiveEntry(""bar/""));"
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,43,out.closeEntry();
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,44,out.close();
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,45,out = null;
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,47,zf = new ZipFile(testArchive);
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,48,"ZipArchiveEntry ze = zf.getEntry(""foo/"");"
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,49,assertNotNull(ze);
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,50,ZipExtraField[] fes = ze.getExtraFields();
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,51,"assertEquals(1, fes.length);"
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,52,assertTrue(fes[0] instanceof JarMarker);
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,54,"ze = zf.getEntry(""bar/"");"
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,55,assertNotNull(ze);
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,56,fes = ze.getExtraFields();
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,57,"assertEquals(0, fes.length);"
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,58,} finally {
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,59,if (out != null) {
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,60,try {
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,61,out.close();
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,62,} catch (IOException e) { /* swallow */ }
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,64,ZipFile.closeQuietly(zf);
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,65,if (testArchive.exists()) {
True,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java,66,testArchive.delete();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,89,* test handling of extra fields
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,91,* @since 1.1
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,93,public void testAddAsFirstExtraField() {
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,94,AsiExtraField a = new AsiExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,95,a.setDirectory(true);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,96,a.setMode(0755);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,97,UnrecognizedExtraField u = new UnrecognizedExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,98,u.setHeaderId(new ZipShort(1));
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,99,u.setLocalFileDataData(new byte[0]);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,101,"ZipArchiveEntry ze = new ZipArchiveEntry(""test/"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,102,"ze.setExtraFields(new ZipExtraField[] {a, u});"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,103,byte[] data1 = ze.getExtra();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,105,UnrecognizedExtraField u2 = new UnrecognizedExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,106,u2.setHeaderId(new ZipShort(1));
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,107,u2.setLocalFileDataData(new byte[] {1});
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,109,ze.addAsFirstExtraField(u2);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,110,byte[] data2 = ze.getExtra();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,111,ZipExtraField[] result = ze.getExtraFields();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,112,"assertEquals(""second pass"", 2, result.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,113,"assertSame(u2, result[0]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,114,"assertSame(a, result[1]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,115,"assertEquals(""length second pass"", data1.length + 1, data2.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,117,UnrecognizedExtraField u3 = new UnrecognizedExtraField();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,118,u3.setHeaderId(new ZipShort(2));
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,119,u3.setLocalFileDataData(new byte[] {1});
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,120,ze.addAsFirstExtraField(u3);
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,121,result = ze.getExtraFields();
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,122,"assertEquals(""third pass"", 3, result.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,123,"assertSame(u3, result[0]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,124,"assertSame(u2, result[1]);"
True,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java,125,"assertSame(a, result[2]);"
