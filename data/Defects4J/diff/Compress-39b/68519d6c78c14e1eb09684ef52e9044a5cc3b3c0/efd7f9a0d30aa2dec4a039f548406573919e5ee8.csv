is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,4,*  this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,7,*  the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,14,*  See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,15,*  limitations under the License.
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,18,package org.apache.commons.compress.archivers.sevenz;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,20,import java.io.File;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,21,import java.io.FileOutputStream;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,22,import java.io.IOException;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,24,public class CLI {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,26,private static enum Mode {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,27,"LIST(""Analysing"") {"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,28,"public void takeAction(SevenZFile archive, SevenZArchiveEntry entry) {"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,29,System.out.print(entry.getName());
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,30,if (entry.isDirectory()) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,31,"System.out.print("" dir"");"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,32,} else {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,33,"System.out.print("" "" + entry.getCompressedSize()"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,34,"+ ""/"" + entry.getSize());"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,36,if (entry.getHasLastModifiedDate()) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,37,"System.out.print("" "" + entry.getLastModifiedDate());"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,38,} else {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,39,"System.out.print("" no last modified date"");"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,41,if (!entry.isDirectory()) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,42,"System.out.println("" "" + getContentMethods(entry));"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,43,} else {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,44,"System.out.println("""");"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,48,private String getContentMethods(SevenZArchiveEntry entry) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,49,StringBuilder sb = new StringBuilder();
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,50,boolean first = true;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,51,for (SevenZMethodConfiguration m : entry.getContentMethods()) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,52,if (!first) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,53,"sb.append("", "");"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,55,first = false;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,56,sb.append(m.getMethod());
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,57,if (m.getOptions() != null) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,58,"sb.append(""("" + m.getOptions() + "")"");"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,61,return sb.toString();
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,64,"EXTRACT(""Extracting"") {"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,65,"public void takeAction(SevenZFile archive, SevenZArchiveEntry entry)"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,66,throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,67,File outFile = new File(entry.getName());
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,68,if (entry.isDirectory()) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,69,"System.out.println(""creating "" + outFile);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,70,outFile.mkdirs();
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,71,return;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,74,"System.out.println(""extracting to "" + outFile);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,75,File parent = outFile.getParentFile();
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,76,if (!parent.exists() && !parent.mkdirs()) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,77,"throw new IOException(""Cannot create "" + parent);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,79,FileOutputStream fos = new FileOutputStream(outFile);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,80,try {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,81,byte[] contents = new byte[(int) entry.getSize()];
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,82,int off = 0;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,83,while (off < contents.length) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,84,"int bytesRead = archive.read(contents, off,"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,85,contents.length - off);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,86,"System.err.println(""read at offset "" + off + "" returned """
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,87,"+ bytesRead + "" bytes."");"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,88,if (bytesRead < 1) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,89,"throw new IOException(""reached end of entry """
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,90,+ entry.getName()
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,91,"+ "" after "" + off"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,92,"+ "" bytes, expected """
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,93,+ contents.length);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,95,off += bytesRead;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,97,} finally {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,98,fos.close();
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,103,private final String message;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,104,private Mode(String message) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,105,this.message = message;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,107,public String getMessage() {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,108,return message;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,110,"public abstract void takeAction(SevenZFile archive, SevenZArchiveEntry entry)"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,111,throws IOException;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,114,public static void main(String[] args) throws Exception {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,115,if (args.length == 0) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,116,usage();
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,117,return;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,119,Mode mode = grabMode(args);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,120,"System.out.println(mode.getMessage() + "" "" + args[0]);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,121,File f = new File(args[0]);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,122,if (!f.isFile()) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,123,"System.err.println(f + "" doesn't exist or is a directory"");"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,125,SevenZFile archive = new SevenZFile(f);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,126,try {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,127,SevenZArchiveEntry ae;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,128,while((ae=archive.getNextEntry()) != null) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,129,"mode.takeAction(archive, ae);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,131,} finally {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,132,archive.close();
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,136,private static void usage() {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,137,"System.out.println(""Parameters: archive-name [list|extract]"");"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,140,private static Mode grabMode(String[] args) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,141,if (args.length < 2) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,142,return Mode.LIST;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java,144,"return Enum.valueOf(Mode.class, args[1].toUpperCase());"
