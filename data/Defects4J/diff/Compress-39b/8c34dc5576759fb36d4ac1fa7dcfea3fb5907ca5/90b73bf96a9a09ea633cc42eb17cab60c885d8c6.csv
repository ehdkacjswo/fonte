is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,98,rivate static int read16(final DataInputStream in) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,98,private int read8(final DataInputStream in) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,99,int value = in.readUnsignedByte();
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,100,count(1);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,101,return value;
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,104,private int read16(final DataInputStream in) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,106,count(2);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,110,private int read32(final DataInputStream in) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,111,final int value = in.readInt();
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,112,count(4);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,113,return Integer.reverseBytes(value);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,125,"private void readFully(final DataInputStream in, byte[] b)"
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,126,throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,127,in.readFully(b);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,128,count(b.length);
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,117,nt second = in.readUnsignedByte();
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,136,int second = read8(in);
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,120,econd = in.readUnsignedByte();
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,139,second = read8(in);
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,129,n.readFully(basicHeaderBytes);
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,130,inal int basicHeaderCrc32 = Integer.reverseBytes(in.readInt());
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,148,"readFully(in, basicHeaderBytes);"
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,149,final int basicHeaderCrc32 = read32(in);
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,163,ainHeader.dateTimeCreated = Integer.reverseBytes(firstHeader.readInt());
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,164,ainHeader.dateTimeModified = Integer.reverseBytes(firstHeader.readInt());
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,165,ainHeader.archiveSize = 0xffffFFFFL & Integer.reverseBytes(firstHeader.readInt());
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,166,ainHeader.securityEnvelopeFilePosition = Integer.reverseBytes(firstHeader.readInt());
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,182,mainHeader.dateTimeCreated = read32(firstHeader);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,183,mainHeader.dateTimeModified = read32(firstHeader);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,184,mainHeader.archiveSize = 0xffffFFFFL & read32(firstHeader);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,185,mainHeader.securityEnvelopeFilePosition = read32(firstHeader);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,188,pushedBackBytes(20); // count has already counted them via readFully
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,186,n.readFully(mainHeader.extendedHeaderBytes);
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,187,inal int extendedHeaderCrc32 = Integer.reverseBytes(in.readInt());
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,206,"readFully(in, mainHeader.extendedHeaderBytes);"
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,207,final int extendedHeaderCrc32 = read32(in);
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,224,ocalFileHeader.dateTimeModified = Integer.reverseBytes(firstHeader.readInt());
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,225,ocalFileHeader.compressedSize = 0xffffFFFFL & Integer.reverseBytes(firstHeader.readInt());
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,226,ocalFileHeader.originalSize = 0xffffFFFFL & Integer.reverseBytes(firstHeader.readInt());
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,227,ocalFileHeader.originalCrc32 = Integer.reverseBytes(firstHeader.readInt());
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,244,localFileHeader.dateTimeModified = read32(firstHeader);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,245,localFileHeader.compressedSize = 0xffffFFFFL & read32(firstHeader);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,246,localFileHeader.originalSize = 0xffffFFFFL & read32(firstHeader);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,247,localFileHeader.originalCrc32 = read32(firstHeader);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,250,pushedBackBytes(20);
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,234,ocalFileHeader.extendedFilePosition = Integer.reverseBytes(firstHeader.readInt());
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,235,ocalFileHeader.dateTimeAccessed = Integer.reverseBytes(firstHeader.readInt());
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,236,ocalFileHeader.dateTimeCreated = Integer.reverseBytes(firstHeader.readInt());
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,237,ocalFileHeader.originalSizeEvenForVolumes = Integer.reverseBytes(firstHeader.readInt());
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,255,localFileHeader.extendedFilePosition = read32(firstHeader);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,256,localFileHeader.dateTimeAccessed = read32(firstHeader);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,257,localFileHeader.dateTimeCreated = read32(firstHeader);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,258,localFileHeader.originalSizeEvenForVolumes = read32(firstHeader);
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,259,pushedBackBytes(16);
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,248,n.readFully(extendedHeaderBytes);
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,249,inal int extendedHeaderCrc32 = Integer.reverseBytes(in.readInt());
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,270,"readFully(in, extendedHeaderBytes);"
True,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,271,final int extendedHeaderCrc32 = read32(in);
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,308,Override
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,309,ublic int read() throws IOException {
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,310,f (currentLocalFileHeader.method != LocalFileHeader.Methods.STORED) {
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,311,"hrow new IOException(""Unsupported compression method "" + currentLocalFileHeader.method);"
False,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java,313,eturn currentInputStream.read();
