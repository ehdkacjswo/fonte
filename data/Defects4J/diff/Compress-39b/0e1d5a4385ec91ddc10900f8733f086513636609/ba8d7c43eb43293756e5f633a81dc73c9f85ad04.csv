is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,43,register(X5455_ExtendedTimestamp.class);
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,17,* under the License.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,19,package org.apache.commons.compress.archivers.zip;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,21,import java.io.Serializable;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,22,import java.util.Date;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,23,import java.util.zip.ZipException;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,26,* <p>An extra field that stores additional file and directory timestamp data
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,27,* for zip entries.   Each zip entry can include up to three timestamps
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,28,"* (modify, access, create*).  The timestamps are stored as 32 bit unsigned"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,29,"* integers representing seconds since UNIX epoch (Jan 1st, 1970, UTC)."
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,30,"* This field improves on zip's default timestamp granularity, since it"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,31,"* allows one to store additional timestamps, and, in addition, the timestamps"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,32,* are stored using per-second granularity (zip's default behaviour can only store
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,33,* timestamps to the nearest <em>even</em> second).
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,34,* <p/>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,35,* </p><p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,36,"* Unfortunately, 32 (unsigned) bits can only store dates up to the year 2106,"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,37,* and so this extra field will eventually be obsolete.  Enjoy it while it lasts!
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,38,* </p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,39,* <ul>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,40,* <li><b>modifyTime:</b>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,41,* most recent time of file/directory modification
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,42,* (or file/dir creation if the entry has not been
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,43,* modified since it was created).
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,44,* </li>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,45,* <li><b>accessTime:</b>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,46,* most recent time file/directory was opened
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,47,"* (e.g., read from disk).  Many people disable"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,48,* their operating systems from updating this value
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,49,"* using the NOATIME mount option to optimize disk behaviour,"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,50,* and thus it's not always reliable.  In those cases
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,51,* it's always equal to modifyTime.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,52,* </li>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,53,* <li><b>*createTime:</b>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,54,"* modern linux file systems (e.g., ext2 and newer)"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,55,"* do not appear to store a value like this, and so"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,56,* it's usually omitted altogether in the zip extra
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,57,* field.  Perhaps other unix systems track this.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,58,* </li></ul>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,59,* <p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,60,* We're using the field definition given in Info-Zip's source archive:
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,61,* zip-3.0.tar.gz/proginfo/extrafld.txt
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,62,* </p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,63,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,64,* Value         Size        Description
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,66,"* 0x5455        Short       tag for this extra block type (""UT"")"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,67,* TSize         Short       total data size for this block
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,68,* Flags         Byte        info bits
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,69,* (ModTime)     Long        time of last modification (UTC/GMT)
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,70,* (AcTime)      Long        time of last access (UTC/GMT)
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,71,* (CrTime)      Long        time of original creation (UTC/GMT)
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,73,* Central-header version:
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,75,* Value         Size        Description
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,77,"* 0x5455        Short       tag for this extra block type (""UT"")"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,78,* TSize         Short       total data size for this block
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,79,* Flags         Byte        info bits (refers to local header!)
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,80,* (ModTime)     Long        time of last modification (UTC/GMT)
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,81,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,83,"public class X5455_ExtendedTimestamp implements ZipExtraField, Cloneable, Serializable {"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,84,private static final ZipShort HEADER_ID = new ZipShort(0x5455);
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,85,private static final long serialVersionUID = 1L;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,87,static final byte MODIFY_TIME_BIT = 1;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,88,static final byte ACCESS_TIME_BIT = 2;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,89,static final byte CREATE_TIME_BIT = 4;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,91,// The 3 boolean fields (below) come from this flags byte.  The remaining 5 bits
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,92,// are ignored according to the current version of the spec (December 2012).
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,93,private byte flags;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,95,"// Note: even if bit1 and bit2 are set, the Central data will still not contain"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,96,// access/create fields:  only local data ever holds those!  This causes
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,97,"// some of our implementation to look a little odd, with seemingly spurious"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,98,// != null and length checks.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,99,private boolean bit0_modifyTimePresent;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,100,private boolean bit1_accessTimePresent;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,101,private boolean bit2_createTimePresent;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,103,private ZipLong modifyTime;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,104,private ZipLong accessTime;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,105,private ZipLong createTime;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,108,* Constructor for X5455_ExtendedTimestamp.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,110,public X5455_ExtendedTimestamp() {}
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,113,* The Header-ID.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,115,* @return the value for the header id for this extrafield
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,117,public ZipShort getHeaderId() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,118,return HEADER_ID;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,122,* Length of the extra field in the local file data - without
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,123,* Header-ID or length specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,125,* @return a <code>ZipShort</code> for the length of the data of this extra field
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,127,public ZipShort getLocalFileDataLength() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,128,return new ZipShort(1 +
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,129,(bit0_modifyTimePresent ? 4 : 0) +
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,130,(bit1_accessTimePresent && accessTime != null ? 4 : 0) +
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,131,(bit2_createTimePresent && createTime != null ? 4 : 0)
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,136,* Length of the extra field in the local file data - without
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,137,* Header-ID or length specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,138,* <p/>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,139,* For X5455 the central length is often smaller than the
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,140,"* local length, because central cannot contain access or create"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,141,* timestamps.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,143,* @return a <code>ZipShort</code> for the length of the data of this extra field
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,145,public ZipShort getCentralDirectoryLength() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,146,return new ZipShort(1 +
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,147,(bit0_modifyTimePresent ? 4 : 0)
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,152,* The actual data to put into local file data - without Header-ID
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,153,* or length specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,155,* @return get the data
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,157,public byte[] getLocalFileDataData() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,158,byte[] data = new byte[getLocalFileDataLength().getValue()];
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,159,int pos = 0;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,160,data[pos++] = 0;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,161,if (bit0_modifyTimePresent) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,162,data[0] |= MODIFY_TIME_BIT;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,163,"System.arraycopy(modifyTime.getBytes(), 0, data, pos, 4);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,164,pos += 4;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,166,if (bit1_accessTimePresent && accessTime != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,167,data[0] |= ACCESS_TIME_BIT;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,168,"System.arraycopy(accessTime.getBytes(), 0, data, pos, 4);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,169,pos += 4;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,171,if (bit2_createTimePresent && createTime != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,172,data[0] |= CREATE_TIME_BIT;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,173,"System.arraycopy(createTime.getBytes(), 0, data, pos, 4);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,174,pos += 4;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,176,return data;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,180,* The actual data to put into central directory data - without Header-ID
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,181,* or length specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,183,* @return the central directory data
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,185,public byte[] getCentralDirectoryData() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,186,byte[] centralData = new byte[getCentralDirectoryLength().getValue()];
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,187,byte[] localData = getLocalFileDataData();
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,189,// Truncate out create & access time (last 8 bytes) from
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,190,// the copy of the local data we obtained:
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,191,"System.arraycopy(localData, 0, centralData, 0, centralData.length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,192,return centralData;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,196,* Populate data from this array as if it was in local file data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,198,* @param data   an array of bytes
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,199,* @param offset the start offset
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,200,* @param length the number of bytes in the array from offset
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,201,* @throws java.util.zip.ZipException on error
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,203,public void parseFromLocalFileData(
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,204,"byte[] data, int offset, int length"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,205,) throws ZipException {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,206,reset();
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,207,final int len = offset + length;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,208,setFlags(data[offset++]);
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,209,if (bit0_modifyTimePresent) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,210,"modifyTime = new ZipLong(data, offset);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,211,offset += 4;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,214,// Notice the extra length check in case we are parsing the shorter
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,215,// central data field (for both access and create timestamps).
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,216,if (bit1_accessTimePresent && offset + 4 <= len) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,217,"accessTime = new ZipLong(data, offset);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,218,offset += 4;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,220,if (bit2_createTimePresent && offset + 4 <= len) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,221,"createTime = new ZipLong(data, offset);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,222,offset += 4;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,227,* Doesn't do anything special since this class always uses the
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,228,* same parsing logic for both central directory and local file data.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,230,public void parseFromCentralDirectoryData(
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,231,"byte[] buffer, int offset, int length"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,232,) throws ZipException {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,233,reset();
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,234,"parseFromLocalFileData(buffer, offset, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,238,* Reset state back to newly constructed state.  Helps us make sure
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,239,* parse() calls always generate clean results.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,241,private void reset() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,242,setFlags((byte) 0);
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,243,this.modifyTime = null;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,244,this.accessTime = null;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,245,this.createTime = null;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,249,* Sets flags byte.  The flags byte tells us which of the
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,250,* three datestamp fields are present in the data:
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,251,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,252,* bit0 - modify time
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,253,* bit1 - access time
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,254,* bit2 - create time
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,255,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,256,* Only first 3 bits of flags are used according to the
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,257,* latest version of the spec (December 2012).
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,259,* @param flags flags byte indicating which of the
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,260,*              three datestamp fields are present.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,262,public void setFlags(byte flags) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,263,this.flags = flags;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,264,this.bit0_modifyTimePresent = (flags & MODIFY_TIME_BIT) == MODIFY_TIME_BIT;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,265,this.bit1_accessTimePresent = (flags & ACCESS_TIME_BIT) == ACCESS_TIME_BIT;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,266,this.bit2_createTimePresent = (flags & CREATE_TIME_BIT) == CREATE_TIME_BIT;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,270,* Gets flags byte.  The flags byte tells us which of the
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,271,* three datestamp fields are present in the data:
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,272,* <pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,273,* bit0 - modify time
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,274,* bit1 - access time
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,275,* bit2 - create time
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,276,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,277,* Only first 3 bits of flags are used according to the
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,278,* latest version of the spec (December 2012).
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,280,* @return flags byte indicating which of the
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,281,*         three datestamp fields are present.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,283,public byte getFlags() { return flags; }
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,286,"* Returns whether bit0 of the flags byte is set or not,"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,287,* which should correspond to the presence or absence of
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,288,* a modify timestamp in this particular zip entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,290,* @return true if bit0 of the flags byte is set.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,292,public boolean isBit0_modifyTimePresent() { return bit0_modifyTimePresent; }
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,295,"* Returns whether bit1 of the flags byte is set or not,"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,296,* which should correspond to the presence or absence of
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,297,"* a ""last access"" timestamp in this particular zip entry."
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,299,* @return true if bit1 of the flags byte is set.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,301,public boolean isBit1_accessTimePresent() { return bit1_accessTimePresent; }
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,304,"* Returns whether bit2 of the flags byte is set or not,"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,305,* which should correspond to the presence or absence of
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,306,* a create timestamp in this particular zip entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,308,* @return true if bit2 of the flags byte is set.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,310,public boolean isBit2_createTimePresent() { return bit2_createTimePresent; }
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,313,* Returns the modify time (seconds since epoch) of this zip entry
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,314,"* as a ZipLong object, or null if no such timestamp exists in the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,315,* zip entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,317,* @return modify time (seconds since epoch) or null.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,319,public ZipLong getModifyTime() { return modifyTime; }
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,322,* Returns the access time (seconds since epoch) of this zip entry
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,323,"* as a ZipLong object, or null if no such timestamp exists in the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,324,* zip entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,326,* @return access time (seconds since epoch) or null.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,328,public ZipLong getAccessTime() { return accessTime; }
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,331,* <p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,332,* Returns the create time (seconds since epoch) of this zip entry
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,333,"* as a ZipLong object, or null if no such timestamp exists in the"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,334,* zip entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,335,* </p><p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,336,"* Note: modern linux file systems (e.g., ext2)"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,337,"* do not appear to store a ""create time"" value, and so"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,338,* it's usually omitted altogether in the zip extra
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,339,* field.  Perhaps other unix systems track this.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,341,* @return create time (seconds since epoch) or null.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,343,public ZipLong getCreateTime() { return createTime; }
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,346,* Returns the modify time as a java.util.Date
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,347,"* of this zip entry, or null if no such timestamp exists in the zip entry."
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,348,"* The milliseconds are always zeroed out, since the underlying data"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,349,* offers only per-second precision.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,351,* @return modify time as java.util.Date or null.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,353,public Date getModifyJavaTime() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,354,return modifyTime != null ? new Date(modifyTime.getValue() * 1000) : null;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,358,* Returns the access time as a java.util.Date
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,359,"* of this zip entry, or null if no such timestamp exists in the zip entry."
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,360,"* The milliseconds are always zeroed out, since the underlying data"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,361,* offers only per-second precision.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,363,* @return access time as java.util.Date or null.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,365,public Date getAccessJavaTime() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,366,return accessTime != null ? new Date(accessTime.getValue() * 1000) : null;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,370,* <p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,371,* Returns the create time as a a java.util.Date
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,372,"* of this zip entry, or null if no such timestamp exists in the zip entry."
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,373,"* The milliseconds are always zeroed out, since the underlying data"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,374,* offers only per-second precision.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,375,* </p><p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,376,"* Note: modern linux file systems (e.g., ext2)"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,377,"* do not appear to store a ""create time"" value, and so"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,378,* it's usually omitted altogether in the zip extra
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,379,* field.  Perhaps other unix systems track this.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,381,* @return create time as java.util.Date or null.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,383,public Date getCreateJavaTime() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,384,return createTime != null ? new Date(createTime.getValue() * 1000) : null;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,388,* <p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,389,* Sets the modify time (seconds since epoch) of this zip entry
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,390,* using a ZipLong object.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,391,* </p><p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,392,* Note: the setters for flags and timestamps are decoupled.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,393,"* Even if the timestamp is not-null, it will only be written"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,394,* out if the corresponding bit in the flags is also set.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,395,* </p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,397,* @param l ZipLong of the modify time (seconds per epoch)
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,399,public void setModifyTime(ZipLong l) { this.modifyTime = l; }
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,402,* <p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,403,* Sets the access time (seconds since epoch) of this zip entry
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,404,* using a ZipLong object
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,405,* </p><p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,406,* Note: the setters for flags and timestamps are decoupled.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,407,"* Even if the timestamp is not-null, it will only be written"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,408,* out if the corresponding bit in the flags is also set.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,409,* </p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,411,* @param l ZipLong of the access time (seconds per epoch)
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,413,public void setAccessTime(ZipLong l) { this.accessTime = l; }
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,416,* <p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,417,* Sets the create time (seconds since epoch) of this zip entry
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,418,* using a ZipLong object
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,419,* </p><p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,420,* Note: the setters for flags and timestamps are decoupled.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,421,"* Even if the timestamp is not-null, it will only be written"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,422,* out if the corresponding bit in the flags is also set.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,423,* </p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,425,* @param l ZipLong of the create time (seconds per epoch)
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,427,public void setCreateTime(ZipLong l) { this.createTime = l; }
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,430,* <p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,431,* Sets the modify time as a java.util.Date
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,432,* of this zip entry.  Supplied value is truncated to per-second
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,433,* precision (milliseconds zeroed-out).
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,434,* </p><p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,435,* Note: the setters for flags and timestamps are decoupled.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,436,"* Even if the timestamp is not-null, it will only be written"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,437,* out if the corresponding bit in the flags is also set.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,438,* </p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,440,* @param d modify time as java.util.Date
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,442,public void setModifyJavaTime(Date d) { setModifyTime(dateToZipLong(d)); }
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,445,* <p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,446,* Sets the access time as a java.util.Date
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,447,* of this zip entry.  Supplied value is truncated to per-second
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,448,* precision (milliseconds zeroed-out).
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,449,* </p><p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,450,* Note: the setters for flags and timestamps are decoupled.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,451,"* Even if the timestamp is not-null, it will only be written"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,452,* out if the corresponding bit in the flags is also set.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,453,* </p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,455,* @param d access time as java.util.Date
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,457,public void setAccessJavaTime(Date d) { setAccessTime(dateToZipLong(d)); }
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,460,* <p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,461,* Sets the create time as a java.util.Date
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,462,* of this zip entry.  Supplied value is truncated to per-second
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,463,* precision (milliseconds zeroed-out).
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,464,* </p><p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,465,* Note: the setters for flags and timestamps are decoupled.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,466,"* Even if the timestamp is not-null, it will only be written"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,467,* out if the corresponding bit in the flags is also set.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,468,* </p>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,470,* @param d create time as java.util.Date
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,472,public void setCreateJavaTime(Date d) { setCreateTime(dateToZipLong(d)); }
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,475,* Utility method converts java.util.Date (milliseconds since epoch)
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,476,* into a ZipLong (seconds since epoch).
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,477,* <p/>
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,478,* Also makes sure the converted ZipLong is not too big to fit
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,479,* in 32 unsigned bits.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,481,* @param d java.util.Date to convert to ZipLong
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,482,* @return ZipLong
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,484,private static ZipLong dateToZipLong(final Date d) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,485,if (d == null) { return null; }
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,487,final long TWO_TO_32 = 0x100000000L;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,488,final long l = d.getTime() / 1000;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,489,if (l >= TWO_TO_32) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,490,"throw new IllegalArgumentException(""Cannot set an X5455 timestamp larger than 2^32: "" + l);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,492,return new ZipLong(l);
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,496,* Returns a String representation of this class useful for
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,497,* debugging purposes.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,499,* @return A String representation of this class useful for
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,500,*         debugging purposes.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,502,@Override
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,503,public String toString() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,504,StringBuilder buf = new StringBuilder();
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,505,"buf.append(""0x5455 Zip Extra Field: Flags="");"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,506,"buf.append(Integer.toBinaryString(ZipUtil.unsignedIntToSignedByte(flags))).append("" "");"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,507,if (bit0_modifyTimePresent && modifyTime != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,508,Date m = getModifyJavaTime();
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,509,"buf.append("" Modify:["").append(m).append(""] "");"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,511,if (bit1_accessTimePresent && accessTime != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,512,Date a = getAccessJavaTime();
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,513,"buf.append("" Access:["").append(a).append(""] "");"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,515,if (bit2_createTimePresent && createTime != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,516,Date c = getCreateJavaTime();
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,517,"buf.append("" Create:["").append(c).append(""] "");"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,519,return buf.toString();
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,522,@Override
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,523,public Object clone() throws CloneNotSupportedException {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,524,return super.clone();
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,527,@Override
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,528,public boolean equals(Object o) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,529,if (o instanceof X5455_ExtendedTimestamp) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,530,X5455_ExtendedTimestamp xf = (X5455_ExtendedTimestamp) o;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,532,// The ZipLong==ZipLong clauses handle the cases where both are null.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,533,// and only last 3 bits of flags matter.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,534,return ((flags & 0x07) == (xf.flags & 0x07)) &&
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,535,(modifyTime == xf.modifyTime || (modifyTime != null && modifyTime.equals(xf.modifyTime))) &&
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,536,(accessTime == xf.accessTime || (accessTime != null && accessTime.equals(xf.accessTime))) &&
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,537,(createTime == xf.createTime || (createTime != null && createTime.equals(xf.createTime)));
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,538,} else {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,539,return false;
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,543,@Override
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,544,public int hashCode() {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,545,int hc = (-123 * (flags & 0x07)); // only last 3 bits of flags matter
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,546,if (modifyTime != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,547,hc ^= modifyTime.hashCode();
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,549,if (accessTime != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,550,"// Since accessTime is often same as modifyTime,"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,551,// this prevents them from XOR negating each other.
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,552,"hc ^= Integer.rotateLeft(accessTime.hashCode(), 11);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,554,if (createTime != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,555,"hc ^= Integer.rotateLeft(createTime.hashCode(), 22);"
True,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java,557,return hc;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,4,*  this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,7,*  the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,14,*  See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,15,*  limitations under the License.
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,18,package org.apache.commons.compress.archivers.zip;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,20,import org.junit.Before;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,21,import org.junit.Test;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,23,import java.io.File;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,24,import java.net.URI;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,25,import java.net.URL;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,26,import java.text.SimpleDateFormat;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,27,import java.util.Arrays;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,28,import java.util.Calendar;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,29,import java.util.Date;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,30,import java.util.Enumeration;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,31,import java.util.TimeZone;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,32,import java.util.zip.ZipException;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,34,import static org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.ACCESS_TIME_BIT;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,35,import static org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.CREATE_TIME_BIT;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,36,import static org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.MODIFY_TIME_BIT;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,37,import static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,38,import static org.junit.Assert.assertFalse;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,39,import static org.junit.Assert.assertNull;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,40,import static org.junit.Assert.assertTrue;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,41,import static org.junit.Assert.fail;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,43,public class X5455_ExtendedTimestampTest {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,44,private final static ZipShort X5455 = new ZipShort(0x5455);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,46,private final static ZipLong ZERO_TIME = new ZipLong(0);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,47,private final static ZipLong MAX_TIME_SECONDS = new ZipLong(0xFFFFFFFFL);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,48,"private final static SimpleDateFormat DATE_FORMAT = new SimpleDateFormat(""YYYY-MM-dd/HH:mm:ss Z"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,50,static {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,51,"DATE_FORMAT.setTimeZone(TimeZone.getTimeZone(""UTC""));"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,56,* The extended field (xf) we are testing.
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,58,private X5455_ExtendedTimestamp xf;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,60,@Before
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,61,public void before() {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,62,xf = new X5455_ExtendedTimestamp();
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,65,@Test
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,66,public void testSampleFile() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,69,"Contains entries with zipTime, accessTime, and modifyTime."
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,70,The file name tells you the year we tried to set the time to
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,71,"(Jan 1st, Midnight, UTC)."
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,73,For example:
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,75,COMPRESS-210_unix_time_zip_test/1999
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,76,COMPRESS-210_unix_time_zip_test/2000
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,77,COMPRESS-210_unix_time_zip_test/2108
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,79,File's last-modified is 1st second after midnight.
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,80,Zip-time's 2-second granularity rounds that up to 2nd second.
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,81,File's last-access is 3rd second after midnight.
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,83,"So, from example above:"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,85,"1999's zip time:  Jan 1st, 1999-01-01/00:00:02"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,86,"1999's mod time:  Jan 1st, 1999-01-01/00:00:01"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,87,"1999's acc time:  Jan 1st, 1999-01-01/00:00:03"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,90,"URL zip = getClass().getResource(""/COMPRESS-210_unix_time_zip_test.zip"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,91,File archive = new File(new URI(zip.toString()));
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,92,ZipFile zf = null;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,94,try {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,95,zf = new ZipFile(archive);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,96,Enumeration<ZipArchiveEntry> en = zf.getEntries();
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,98,// We expect EVERY entry of this zip file
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,99,// to contain extra field 0x5455.
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,100,while (en.hasMoreElements()) {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,102,ZipArchiveEntry zae = en.nextElement();
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,103,String name = zae.getName();
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,104,X5455_ExtendedTimestamp xf = (X5455_ExtendedTimestamp) zae.getExtraField(X5455);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,106,Date z = zae.getLastModifiedDate();
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,107,Date m = xf.getModifyJavaTime();
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,108,Date a = xf.getAccessJavaTime();
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,110,String zipTime = DATE_FORMAT.format(z);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,111,String modTime = DATE_FORMAT.format(m);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,112,String accTime = DATE_FORMAT.format(a);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,114,if (!zae.isDirectory()) {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,115,int x = name.lastIndexOf('/');
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,116,String yearString = name.substring(x + 1);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,117,int year;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,118,try {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,119,year = Integer.parseInt(yearString);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,120,} catch (NumberFormatException nfe) {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,121,year = -1;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,123,if (year >= 0) {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,124,switch (year) {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,125,case 2107:
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,126,// Zip time is okay up to 2107.
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,127,"assertEquals(zipTime, year + ""-01-01/00:00:02 +0000"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,128,// But the X5455 data has overflowed:
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,129,"assertEquals(modTime, ""1970-11-24/17:31:45 +0000"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,130,"assertEquals(accTime, ""1970-11-24/17:31:47 +0000"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,131,break;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,132,case 2108:
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,133,// Zip time is still okay at Jan 1st midnight (UTC) in 2108
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,134,"// because we created the zip file in pacific time zone, so it's"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,135,// actually still 2107 in the zip file!
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,136,"assertEquals(zipTime, year + ""-01-01/00:00:02 +0000"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,137,"// The X5455 data is still overflowed, of course:"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,138,"assertEquals(modTime, ""1971-11-24/17:31:45 +0000"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,139,"assertEquals(accTime, ""1971-11-24/17:31:47 +0000"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,140,break;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,141,case 2109:
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,142,// All three timestamps have overflowed by 2109.
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,143,"assertEquals(zipTime, ""1981-01-01/00:00:02 +0000"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,144,"assertEquals(modTime, ""1972-11-24/17:31:45 +0000"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,145,"assertEquals(accTime, ""1972-11-24/17:31:47 +0000"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,147,// Hmmm.... looks like one could examine both DOS time
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,148,// and the Unix time together to hack a nice workaround to
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,149,// get timestamps past 2106 in a reverse-compatible way.
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,151,break;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,152,default:
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,153,// X5455 time is good from epoch (1970) to 2106.
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,154,// Zip time is good from 1980 to 2107.
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,155,if (year < 1980) {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,156,"assertEquals(zipTime, ""1980-01-01/08:00:00 +0000"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,157,} else {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,158,"assertEquals(zipTime, year + ""-01-01/00:00:02 +0000"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,160,"assertEquals(modTime, year + ""-01-01/00:00:01 +0000"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,161,"assertEquals(accTime, year + ""-01-01/00:00:03 +0000"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,162,break;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,167,} finally {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,168,if (zf != null) {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,169,zf.close();
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,175,@Test
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,176,public void testMisc() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,177,assertFalse(xf.equals(new Object()));
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,178,"assertTrue(xf.toString().startsWith(""0x5455 Zip Extra Field""));"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,179,"assertTrue(!xf.toString().contains("" Modify:""));"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,180,"assertTrue(!xf.toString().contains("" Access:""));"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,181,"assertTrue(!xf.toString().contains("" Create:""));"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,182,Object o = xf.clone();
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,183,"assertEquals(o.hashCode(), xf.hashCode());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,184,assertTrue(xf.equals(o));
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,186,xf.setModifyJavaTime(new Date(1111));
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,187,xf.setAccessJavaTime(new Date(2222));
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,188,xf.setCreateJavaTime(new Date(3333));
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,189,xf.setFlags((byte) 7);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,190,assertFalse(xf.equals(o));
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,191,"assertTrue(xf.toString().startsWith(""0x5455 Zip Extra Field""));"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,192,"assertTrue(xf.toString().contains("" Modify:""));"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,193,"assertTrue(xf.toString().contains("" Access:""));"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,194,"assertTrue(xf.toString().contains("" Create:""));"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,195,o = xf.clone();
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,196,"assertEquals(o.hashCode(), xf.hashCode());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,197,assertTrue(xf.equals(o));
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,200,@Test
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,201,public void testGettersSetters() {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,202,"// X5455 is concerned with time, so let's"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,203,"// get a timestamp to play with (Jan 1st, 2000)."
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,204,"Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(""UTC""));"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,205,"cal.set(Calendar.YEAR, 2000);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,206,"cal.set(Calendar.MONTH, Calendar.JANUARY);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,207,"cal.set(Calendar.DATE, 1);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,208,"cal.set(Calendar.HOUR_OF_DAY, 0);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,209,"cal.set(Calendar.MINUTE, 0);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,210,"cal.set(Calendar.MILLISECOND, 0);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,211,Date timeMillis = cal.getTime();
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,212,ZipLong time = new ZipLong(timeMillis.getTime() / 1000);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,214,// set too big
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,215,try {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,216,// Java time is 1000 x larger (milliseconds).
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,217,xf.setModifyJavaTime(new Date(1000L * (MAX_TIME_SECONDS.getValue() + 1L)));
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,218,"fail(""Time too big for 32 bits!"");"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,219,} catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,220,// All is good.
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,223,// get/set modify time
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,224,xf.setModifyTime(time);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,225,"assertEquals(time, xf.getModifyTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,226,"assertEquals(timeMillis, xf.getModifyJavaTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,227,xf.setModifyJavaTime(timeMillis);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,228,"assertEquals(time, xf.getModifyTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,229,"assertEquals(timeMillis, xf.getModifyJavaTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,230,// Make sure milliseconds get zeroed out:
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,231,xf.setModifyJavaTime(new Date(timeMillis.getTime() + 123));
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,232,"assertEquals(time, xf.getModifyTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,233,"assertEquals(timeMillis, xf.getModifyJavaTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,234,// Null
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,235,xf.setModifyTime(null);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,236,assertNull(xf.getModifyJavaTime());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,237,xf.setModifyJavaTime(null);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,238,assertNull(xf.getModifyTime());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,240,// get/set access time
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,241,xf.setAccessTime(time);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,242,"assertEquals(time, xf.getAccessTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,243,"assertEquals(timeMillis, xf.getAccessJavaTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,244,xf.setAccessJavaTime(timeMillis);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,245,"assertEquals(time, xf.getAccessTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,246,"assertEquals(timeMillis, xf.getAccessJavaTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,247,// Make sure milliseconds get zeroed out:
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,248,xf.setAccessJavaTime(new Date(timeMillis.getTime() + 123));
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,249,"assertEquals(time, xf.getAccessTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,250,"assertEquals(timeMillis, xf.getAccessJavaTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,251,// Null
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,252,xf.setAccessTime(null);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,253,assertNull(xf.getAccessJavaTime());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,254,xf.setAccessJavaTime(null);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,255,assertNull(xf.getAccessTime());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,257,// get/set create time
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,258,xf.setCreateTime(time);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,259,"assertEquals(time, xf.getCreateTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,260,"assertEquals(timeMillis, xf.getCreateJavaTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,261,xf.setCreateJavaTime(timeMillis);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,262,"assertEquals(time, xf.getCreateTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,263,"assertEquals(timeMillis, xf.getCreateJavaTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,264,// Make sure milliseconds get zeroed out:
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,265,xf.setCreateJavaTime(new Date(timeMillis.getTime() + 123));
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,266,"assertEquals(time, xf.getCreateTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,267,"assertEquals(timeMillis, xf.getCreateJavaTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,268,// Null
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,269,xf.setCreateTime(null);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,270,assertNull(xf.getCreateJavaTime());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,271,xf.setCreateJavaTime(null);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,272,assertNull(xf.getCreateTime());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,275,// initialize for flags
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,276,xf.setModifyTime(time);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,277,xf.setAccessTime(time);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,278,xf.setCreateTime(time);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,280,// get/set flags: 000
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,281,xf.setFlags((byte) 0);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,282,"assertEquals(0, xf.getFlags());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,283,assertFalse(xf.isBit0_modifyTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,284,assertFalse(xf.isBit1_accessTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,285,assertFalse(xf.isBit2_createTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,286,"// Local length=1, Central length=1 (flags only!)"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,287,"assertEquals(1, xf.getLocalFileDataLength().getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,288,"assertEquals(1, xf.getCentralDirectoryLength().getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,290,// get/set flags: 001
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,291,xf.setFlags((byte) 1);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,292,"assertEquals(1, xf.getFlags());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,293,assertTrue(xf.isBit0_modifyTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,294,assertFalse(xf.isBit1_accessTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,295,assertFalse(xf.isBit2_createTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,296,"// Local length=5, Central length=5 (flags + mod)"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,297,"assertEquals(5, xf.getLocalFileDataLength().getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,298,"assertEquals(5, xf.getCentralDirectoryLength().getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,300,// get/set flags: 010
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,301,xf.setFlags((byte) 2);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,302,"assertEquals(2, xf.getFlags());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,303,assertFalse(xf.isBit0_modifyTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,304,assertTrue(xf.isBit1_accessTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,305,assertFalse(xf.isBit2_createTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,306,"// Local length=5, Central length=1"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,307,"assertEquals(5, xf.getLocalFileDataLength().getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,308,"assertEquals(1, xf.getCentralDirectoryLength().getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,310,// get/set flags: 100
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,311,xf.setFlags((byte) 4);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,312,"assertEquals(4, xf.getFlags());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,313,assertFalse(xf.isBit0_modifyTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,314,assertFalse(xf.isBit1_accessTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,315,assertTrue(xf.isBit2_createTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,316,"// Local length=5, Central length=1"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,317,"assertEquals(5, xf.getLocalFileDataLength().getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,318,"assertEquals(1, xf.getCentralDirectoryLength().getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,320,// get/set flags: 111
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,321,xf.setFlags((byte) 7);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,322,"assertEquals(7, xf.getFlags());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,323,assertTrue(xf.isBit0_modifyTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,324,assertTrue(xf.isBit1_accessTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,325,assertTrue(xf.isBit2_createTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,326,"// Local length=13, Central length=5"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,327,"assertEquals(13, xf.getLocalFileDataLength().getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,328,"assertEquals(5, xf.getCentralDirectoryLength().getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,330,// get/set flags: 11111111
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,331,xf.setFlags((byte) -1);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,332,"assertEquals(-1, xf.getFlags());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,333,assertTrue(xf.isBit0_modifyTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,334,assertTrue(xf.isBit1_accessTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,335,assertTrue(xf.isBit2_createTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,336,"// Local length=13, Central length=5"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,337,"assertEquals(13, xf.getLocalFileDataLength().getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,338,"assertEquals(5, xf.getCentralDirectoryLength().getValue());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,341,@Test
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,342,public void testGetHeaderId() {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,343,"assertEquals(X5455, xf.getHeaderId());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,346,@Test
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,347,public void testParseReparse() throws ZipException {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,349,* Recall the spec:
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,351,"* 0x5455        Short       tag for this extra block type (""UT"")"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,352,* TSize         Short       total data size for this block
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,353,* Flags         Byte        info bits
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,354,* (ModTime)     Long        time of last modification (UTC/GMT)
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,355,* (AcTime)      Long        time of last access (UTC/GMT)
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,356,* (CrTime)      Long        time of original creation (UTC/GMT)
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,358,final byte[] NULL_FLAGS = {0};
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,359,final byte[] AC_CENTRAL = {2}; // central data only contains the AC flag and no actual data
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,360,final byte[] CR_CENTRAL = {4}; // central data only dontains the CR flag and no actual data
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,362,"final byte[] MOD_ZERO = {1, 0, 0, 0, 0};"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,363,"final byte[] MOD_MAX = {1, -1, -1, -1, -1};"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,364,"final byte[] AC_ZERO = {2, 0, 0, 0, 0};"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,365,"final byte[] AC_MAX = {2, -1, -1, -1, -1};"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,366,"final byte[] CR_ZERO = {4, 0, 0, 0, 0};"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,367,"final byte[] CR_MAX = {4, -1, -1, -1, -1};"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,368,"final byte[] MOD_AC_ZERO = {3, 0, 0, 0, 0, 0, 0, 0, 0};"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,369,"final byte[] MOD_AC_MAX = {3, -1, -1, -1, -1, -1, -1, -1, -1};"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,370,"final byte[] MOD_AC_CR_ZERO = {7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,371,"final byte[] MOD_AC_CR_MAX = {7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,373,"parseReparse(null, NULL_FLAGS, NULL_FLAGS);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,374,"parseReparse(ZERO_TIME, MOD_ZERO, MOD_ZERO);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,375,"parseReparse(MAX_TIME_SECONDS, MOD_MAX, MOD_MAX);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,376,"parseReparse(ZERO_TIME, AC_ZERO, AC_CENTRAL);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,377,"parseReparse(MAX_TIME_SECONDS, AC_MAX, AC_CENTRAL);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,378,"parseReparse(ZERO_TIME, CR_ZERO, CR_CENTRAL);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,379,"parseReparse(MAX_TIME_SECONDS, CR_MAX, CR_CENTRAL);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,380,"parseReparse(ZERO_TIME, MOD_AC_ZERO, MOD_ZERO);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,381,"parseReparse(MAX_TIME_SECONDS, MOD_AC_MAX, MOD_MAX);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,382,"parseReparse(ZERO_TIME, MOD_AC_CR_ZERO, MOD_ZERO);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,383,"parseReparse(MAX_TIME_SECONDS, MOD_AC_CR_MAX, MOD_MAX);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,385,// As far as the spec is concerned (December 2012) all of these flags
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,386,// are spurious versions of 7 (a.k.a. binary 00000111).
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,387,"parseReparse((byte) 15, MAX_TIME_SECONDS, (byte) 7, MOD_AC_CR_MAX, MOD_MAX);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,388,"parseReparse((byte) 31, MAX_TIME_SECONDS, (byte) 7, MOD_AC_CR_MAX, MOD_MAX);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,389,"parseReparse((byte) 63, MAX_TIME_SECONDS, (byte) 7, MOD_AC_CR_MAX, MOD_MAX);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,390,"parseReparse((byte) 71, MAX_TIME_SECONDS, (byte) 7, MOD_AC_CR_MAX, MOD_MAX);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,391,"parseReparse((byte) 127, MAX_TIME_SECONDS, (byte) 7, MOD_AC_CR_MAX, MOD_MAX);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,392,"parseReparse((byte) -1, MAX_TIME_SECONDS, (byte) 7, MOD_AC_CR_MAX, MOD_MAX);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,395,private void parseReparse(
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,396,"final ZipLong time,"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,397,"final byte[] expectedLocal,"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,398,final byte[] almostExpectedCentral
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,399,) throws ZipException {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,400,"parseReparse(null, time, null, expectedLocal, almostExpectedCentral);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,403,private void parseReparse(
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,404,"final Byte providedFlagsByte,"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,405,"final ZipLong time,"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,406,"final Byte expectedFlagsByte,"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,407,"final byte[] expectedLocal,"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,408,final byte[] almostExpectedCentral
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,409,) throws ZipException {
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,410,final byte providedFlags = providedFlagsByte == null ? expectedLocal[0] : providedFlagsByte;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,411,final byte expectedFlags = expectedFlagsByte == null ? expectedLocal[0] : expectedFlagsByte;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,413,// We're responsible for expectedCentral's flags.  Too annoying to set in caller.
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,414,final byte[] expectedCentral = new byte[almostExpectedCentral.length];
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,415,"System.arraycopy(almostExpectedCentral, 0, expectedCentral, 0, almostExpectedCentral.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,416,expectedCentral[0] = expectedFlags;
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,418,xf.setFlags(providedFlags);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,419,xf.setModifyTime(time);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,420,xf.setAccessTime(time);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,421,xf.setCreateTime(time);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,422,byte[] result = xf.getLocalFileDataData();
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,423,"assertTrue(Arrays.equals(expectedLocal, result));"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,425,// And now we re-parse:
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,426,"xf.parseFromLocalFileData(result, 0, result.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,427,"assertEquals(expectedFlags, xf.getFlags());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,428,"if (isFlagSet(expectedFlags, MODIFY_TIME_BIT)) {"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,429,assertTrue(xf.isBit0_modifyTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,430,"assertEquals(time, xf.getModifyTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,432,"if (isFlagSet(expectedFlags, ACCESS_TIME_BIT)) {"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,433,assertTrue(xf.isBit1_accessTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,434,"assertEquals(time, xf.getAccessTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,436,"if (isFlagSet(expectedFlags, CREATE_TIME_BIT)) {"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,437,assertTrue(xf.isBit2_createTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,438,"assertEquals(time, xf.getCreateTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,441,"// Do the same as above, but with Central Directory data:"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,442,xf.setFlags(providedFlags);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,443,xf.setModifyTime(time);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,444,xf.setAccessTime(time);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,445,xf.setCreateTime(time);
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,446,result = xf.getCentralDirectoryData();
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,447,"assertTrue(Arrays.equals(expectedCentral, result));"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,449,// And now we re-parse:
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,450,"xf.parseFromCentralDirectoryData(result, 0, result.length);"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,451,"assertEquals(expectedFlags, xf.getFlags());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,452,"// Central Directory never contains ACCESS or CREATE, but"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,453,// may contain MODIFY.
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,454,"if (isFlagSet(expectedFlags, MODIFY_TIME_BIT)) {"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,455,assertTrue(xf.isBit0_modifyTimePresent());
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,456,"assertEquals(time, xf.getModifyTime());"
True,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java,460,"private static boolean isFlagSet(byte data, byte flag) { return (data & flag) == flag; }"
