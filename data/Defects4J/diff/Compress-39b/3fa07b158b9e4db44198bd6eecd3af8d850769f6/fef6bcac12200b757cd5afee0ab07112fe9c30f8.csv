is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,127,"* If the option represents a number, return its integer"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,128,"* value, otherwise return the given default value."
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,130,"protected int numberOptionOrDefault(Object options, int defaultValue) {"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,131,return options instanceof Number ? ((Number) options).intValue() : defaultValue;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,164,DeflateDecoder() {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,165,super(Number.class);
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,164,"eturn new DeflaterOutputStream(out, new Deflater(9, true));"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,176,"int level = numberOptionOrDefault(options, 9);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,177,"return new DeflaterOutputStream(out, new Deflater(level, true));"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,182,BZIP2Decoder() {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,183,super(Number.class);
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,175,"utputStream encode(final OutputStream out, final Object _)"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,192,"OutputStream encode(final OutputStream out, final Object options)"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,177,eturn new BZip2CompressorOutputStream(out);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,194,"int blockSize = numberOptionOrDefault(options, BZip2CompressorOutputStream.MAX_BLOCKSIZE);"
True,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java,195,"return new BZip2CompressorOutputStream(out, blockSize);"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java,30,uper(LZMA2Options.class);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java,30,"super(LZMA2Options.class, Number.class);"
False,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java,74,eturn LZMA2Options.DICT_SIZE_DEFAULT;
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java,74,return numberOptionOrDefault(opts);
False,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java,82,ptions.setDictSize(LZMA2Options.DICT_SIZE_DEFAULT);
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java,82,options.setDictSize(numberOptionOrDefault(opts));
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java,86,private int numberOptionOrDefault(Object opts) {
True,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java,src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java,87,"return numberOptionOrDefault(opts, LZMA2Options.DICT_SIZE_DEFAULT);"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,39,@Test
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,40,public void shouldAllowNumberForLZMA2() {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,41,"Assert.assertNotNull(new SevenZMethodConfiguration(SevenZMethod.LZMA2, 42)"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,42,.getOptions());
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,45,@Test
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,46,public void shouldAllowNumberForBzip2() {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,47,"Assert.assertNotNull(new SevenZMethodConfiguration(SevenZMethod.BZIP2, 42)"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,48,.getOptions());
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,51,@Test
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,52,public void shouldAllowNumberForDeflate() {
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,53,"Assert.assertNotNull(new SevenZMethodConfiguration(SevenZMethod.DEFLATE, 42)"
True,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZMethodConfigurationTest.java,54,.getOptions());
