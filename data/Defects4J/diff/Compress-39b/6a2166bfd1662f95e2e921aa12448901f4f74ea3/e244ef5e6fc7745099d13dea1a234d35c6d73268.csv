is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,28,import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream;
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,72,public void testConcatenatedStreamsReadFirstOnly() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,73,"final File input = getFile(""multiple.bz2"");"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,74,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,75,try {
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,76,final CompressorInputStream in = new CompressorStreamFactory()
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,77,".createCompressorInputStream(""bzip2"", is);"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,78,try {
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,79,"assertEquals('a', in.read());"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,80,"assertEquals(-1, in.read());"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,81,} finally {
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,82,in.close();
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,84,} finally {
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,85,is.close();
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,89,public void testConcatenatedStreamsReadFully() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,90,"final File input = getFile(""multiple.bz2"");"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,91,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,92,try {
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,93,final CompressorInputStream in =
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,94,"new BZip2CompressorInputStream(is, true);"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,95,try {
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,96,"assertEquals('a', in.read());"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,97,"assertEquals('b', in.read());"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,98,"assertEquals(0, in.available());"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,99,"assertEquals(-1, in.read());"
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,100,} finally {
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,101,in.close();
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,103,} finally {
True,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java,104,is.close();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,31,import org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,75,public void testConcatenatedStreamsReadFirstOnly() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,76,"final File input = getFile(""multiple.gz"");"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,77,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,78,try {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,79,final CompressorInputStream in = new CompressorStreamFactory()
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,80,".createCompressorInputStream(""gz"", is);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,81,try {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,82,"assertEquals('a', in.read());"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,83,"assertEquals(-1, in.read());"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,84,} finally {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,85,in.close();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,87,} finally {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,88,is.close();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,92,public void testConcatenatedStreamsReadFully() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,93,"final File input = getFile(""multiple.gz"");"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,94,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,95,try {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,96,final CompressorInputStream in =
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,97,"new GzipCompressorInputStream(is, true);"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,98,try {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,99,"assertEquals('a', in.read());"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,100,"assertEquals('b', in.read());"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,101,"assertEquals(0, in.available());"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,102,"assertEquals(-1, in.read());"
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,103,} finally {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,104,in.close();
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,106,} finally {
True,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java,107,is.close();
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,28,import org.apache.commons.compress.compressors.xz.XZCompressorInputStream;
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,72,public void testConcatenatedStreamsReadFirstOnly() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,73,"final File input = getFile(""multiple.xz"");"
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,74,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,75,try {
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,76,final CompressorInputStream in = new CompressorStreamFactory()
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,77,".createCompressorInputStream(""xz"", is);"
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,78,try {
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,79,"assertEquals('a', in.read());"
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,80,"assertEquals(-1, in.read());"
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,81,} finally {
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,82,in.close();
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,84,} finally {
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,85,is.close();
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,89,public void testConcatenatedStreamsReadFully() throws Exception {
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,90,"final File input = getFile(""multiple.xz"");"
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,91,final InputStream is = new FileInputStream(input);
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,92,try {
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,93,final CompressorInputStream in =
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,94,"new XZCompressorInputStream(is, true);"
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,95,try {
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,96,"assertEquals('a', in.read());"
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,97,"assertEquals('b', in.read());"
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,98,"assertEquals(0, in.available());"
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,99,"assertEquals(-1, in.read());"
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,100,} finally {
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,101,in.close();
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,103,} finally {
True,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,src/test/java/org/apache/commons/compress/compressors/XZTestCase.java,104,is.close();
