is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,72,ublic static final int NAMELEN = 100;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,72,public static final int NAMELEN = 99;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,220,"* The entry must be 0 terminated. Maximum filename is 99 chars,"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,221,* according to V7 specification.
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,226,f( entry.getName().length() >= TarArchiveEntry.NAMELEN )
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,229,if( entry.getName().length() > TarArchiveEntry.NAMELEN )
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,236,ongLinkEntry.setSize( entry.getName().length() );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,239,longLinkEntry.setSize( entry.getName().length() + 1);
False,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,239,/write( 0 );
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,242,write( 0 );
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,24,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,28,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,54,public void testTarArchiveLongNameCreation() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,55,"String name = ""testdata/12345678901234567890123456789012345678901234567890123456789012345678901234567890123456.xml"";"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,56,byte[] bytes = name.getBytes();
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,57,"assertEquals(bytes.length, 99);"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,59,"final File output = new File(dir, ""bla.tar"");"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,60,"final File file1 = new File(getClass().getClassLoader().getResource(""test1.xml"").getFile());"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,61,final OutputStream out = new FileOutputStream(output);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,62,"final ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(""tar"", out);"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,63,final TarArchiveEntry entry = new TarArchiveEntry(name);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,64,entry.setModTime(0);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,65,entry.setSize(file1.length());
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,66,entry.setUserID(0);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,67,entry.setGroupID(0);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,68,"entry.setUserName(""avalon"");"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,69,"entry.setGroupName(""excalibur"");"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,70,entry.setMode(0100000);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,71,os.putArchiveEntry(entry);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,72,"IOUtils.copy(new FileInputStream(file1), os);"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,73,os.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,74,os.close();
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,77,ArchiveOutputStream os2 = null;
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,78,try {
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,79,"String toLongName = ""testdata/123456789012345678901234567890123456789012345678901234567890123456789012345678901234567.xml"";"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,80,"final File output2 = new File(dir, ""bla.tar"");"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,81,final OutputStream out2 = new FileOutputStream(output2);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,82,"os2 = new ArchiveStreamFactory().createArchiveOutputStream(""tar"", out2);"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,83,final TarArchiveEntry entry2 = new TarArchiveEntry(toLongName);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,84,entry2.setModTime(0);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,85,entry2.setSize(file1.length());
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,86,entry2.setUserID(0);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,87,entry2.setGroupID(0);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,88,"entry2.setUserName(""avalon"");"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,89,"entry2.setGroupName(""excalibur"");"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,90,entry2.setMode(0100000);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,91,os.putArchiveEntry(entry);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,92,"IOUtils.copy(new FileInputStream(file1), os2);"
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,93,} catch(IOException e) {
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,94,assertTrue(true);
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,95,} finally {
True,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,src/test/java/org/apache/commons/compress/archivers/TarTestCase.java,96,os2.closeArchiveEntry();
