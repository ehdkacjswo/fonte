is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,25, Adds Unix file permission and UID/GID fields as well as symbolic link
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,26, handling. <p>
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,25,* Adds Unix file permission and UID/GID fields as well as symbolic
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,26,* link handling.
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,28, This class uses the ASi extra field in the format: <pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,28,* <p>This class uses the ASi extra field in the format:
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,29,* <pre>
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,39," </pre> taken from appnote.iz (Info-ZIP note, 981119) found at <a"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,40," href=""ftp://ftp.uu.net/pub/archiving/zip/doc/"">"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,41, ftp://ftp.uu.net/pub/archiving/zip/doc/</a> </p> <p>
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,40,* </pre>
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,41,"* taken from appnote.iz (Info-ZIP note, 981119) found at <a"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,42,"* href=""ftp://ftp.uu.net/pub/archiving/zip/doc/"">ftp://ftp.uu.net/pub/archiving/zip/doc/</a></p>"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,45,* <p>Short is two bytes and Long is four bytes in big endian byte and
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,46,"* word order, device numbers are currently not supported.</p>"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,43," Short is two bytes and Long is four bytes in big endian byte and word order,"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,44, device numbers are currently not supported.</p>
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,46,ublic class AsiExtraField
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,47,"mplements ZipExtraField, UnixStat, Cloneable"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,49,rivate static final ZipShort HEADER_ID = new ZipShort( 0x756E );
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,49,"public class AsiExtraField implements ZipExtraField, UnixStat, Cloneable {"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,51,private static final ZipShort HEADER_ID = new ZipShort(0x756E);
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,52,private static final int      WORD = 4;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,56,rivate int m_mode;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,58,private int mode = 0;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,63,rivate int m_uid;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,64,private int uid = 0;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,70,rivate int m_gid;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,70,private int gid = 0;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,73," File this entry points to, if it is a symbolic link. <p>"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,72,"* File this entry points to, if it is a symbolic link."
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,75, empty string - if entry is not a symbolic link.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,74,* <p>empty string - if entry is not a symbolic link.</p>
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,79,"rivate String m_link = """";"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,78,"private String link = """";"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,86,rivate boolean m_dirFlag;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,84,private boolean dirFlag = false;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,93,rivate CRC32 m_crc = new CRC32();
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,91,private CRC32 crc = new CRC32();
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,96, Indicate whether this entry is a directory.
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,98, @param dirFlag The new Directory value
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,99, @since 1.1
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,101,ublic void setDirectory( final boolean dirFlag )
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,103,_dirFlag = dirFlag;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,104,_mode = getMode( m_mode );
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,93,/** Constructor for AsiExtraField. */
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,94,public AsiExtraField() {
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,108, Set the group id.
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,110, @param gid The new GroupId value
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,98,* The Header-ID.
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,99,* @return the value for the header id for this extrafield
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,113,ublic void setGroupId( int gid )
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,115,_gid = gid;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,102,public ZipShort getHeaderId() {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,103,return HEADER_ID;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,119, Indicate that this entry is a symbolic link to the given filename.
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,121," @param name Name of the file this entry links to, empty String if it is"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,122,      not a symbolic link.
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,107,* Length of the extra field in the local file data - without
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,108,* Header-ID or length specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,109,* @return a <code>ZipShort</code> for the length of the data of this extra field
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,125,ublic void setLinkedFile( final String name )
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,127,_link = name;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,128,_mode = getMode( m_mode );
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,112,public ZipShort getLocalFileDataLength() {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,113,return new ZipShort(WORD         // CRC
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,114,+ 2         // Mode
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,115,+ WORD         // SizDev
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,116,+ 2         // UID
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,117,+ 2         // GID
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,118,+ getLinkedFile().getBytes().length);
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,132, File mode of this file.
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,134, @param mode The new Mode value
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,122,* Delegate to local file data.
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,123,* @return the centralDirectory length
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,137,ublic void setMode( final int mode )
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,139,_mode = getMode( mode );
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,126,public ZipShort getCentralDirectoryLength() {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,127,return getLocalFileDataLength();
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,143, Set the user id.
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,145, @param uid The new UserId value
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,131,* The actual data to put into local file data - without Header-ID
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,132,* or length specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,133,* @return get the data
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,147, @deprecated Use setUserID(int)
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,148, @see #setUserID(int)
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,150,ublic void setUserId( final int uid )
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,152,_uid = uid;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,136,public byte[] getLocalFileDataData() {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,137,// CRC will be added later
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,138,byte[] data = new byte[getLocalFileDataLength().getValue() - WORD];
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,139,"System.arraycopy(ZipShort.getBytes(getMode()), 0, data, 0, 2);"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,156, Set the user id.
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,158, @param uid The new UserId value
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,160,ublic void setUserID( final int uid )
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,162,_uid = uid;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,141,byte[] linkArray = getLinkedFile().getBytes();
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,142,// CheckStyle:MagicNumber OFF
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,143,"System.arraycopy(ZipLong.getBytes(linkArray.length),"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,144,"0, data, 2, WORD);"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,146,"System.arraycopy(ZipShort.getBytes(getUserId()),"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,147,"0, data, 6, 2);"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,148,"System.arraycopy(ZipShort.getBytes(getGroupId()),"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,149,"0, data, 8, 2);"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,151,"System.arraycopy(linkArray, 0, data, 10, linkArray.length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,152,// CheckStyle:MagicNumber ON
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,154,crc.reset();
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,155,crc.update(data);
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,156,long checksum = crc.getValue();
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,158,byte[] result = new byte[data.length + WORD];
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,159,"System.arraycopy(ZipLong.getBytes(checksum), 0, result, 0, WORD);"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,160,"System.arraycopy(data, 0, result, WORD, data.length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,161,return result;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,168, @return The CentralDirectoryData value
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,166,* @return the local file data
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,171,ublic byte[] getCentralDirectoryData()
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,169,public byte[] getCentralDirectoryData() {
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,177, Delegate to local file data.
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,179, @return The CentralDirectoryLength value
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,174,* Set the user id.
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,175,* @param uid the user id
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,182,ublic ZipShort getCentralDirectoryLength()
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,184,eturn getLocalFileDataLength();
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,178,public void setUserId(int uid) {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,179,this.uid = uid;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,188, Get the group id.
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,190, @return The GroupId value
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,183,* Get the user id.
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,184,* @return the user id
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,193,ublic int getGroupID()
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,195,eturn m_gid;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,187,public int getUserId() {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,188,return uid;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,199, Get the group id.
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,201, @return The GroupId value
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,192,* Set the group id.
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,193,* @param gid the group id
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,203, @deprecated Use getGroupID() instead
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,204, @see #getGroupID()
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,206,ublic int getGroupId()
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,208,eturn m_gid;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,196,public void setGroupId(int gid) {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,197,this.gid = gid;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,212, The Header-ID.
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,214, @return The HeaderId value
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,201,* Get the group id.
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,202,* @return the group id
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,217,ublic ZipShort getHeaderID()
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,219,eturn HEADER_ID;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,205,public int getGroupId() {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,206,return gid;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,223, Name of linked file
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,210,* Indicate that this entry is a symbolic link to the given filename.
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,212,"* @param name Name of the file this entry links to, empty String"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,213,*             if it is not a symbolic link.
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,225," @return name of the file this entry links to if it is a symbolic link,"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,226,      the empty string otherwise.
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,229,ublic String getLinkedFile()
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,231,eturn m_link;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,217,public void setLinkedFile(String name) {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,218,link = name;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,219,mode = getMode(mode);
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,235, The actual data to put into local file data - without Header-ID or length
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,236, specifier.
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,223,* Name of linked file
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,225,* @return name of the file this entry links to if it is a
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,226,"*         symbolic link, the empty string otherwise."
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,238, @return The LocalFileDataData value
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,241,ublic byte[] getLocalFileDataData()
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,243,/ CRC will be added later
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,244,yte[] data = new byte[ getLocalFileDataLength().getValue() - 4 ];
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,245,"ystem.arraycopy( ( new ZipShort( getMode() ) ).getBytes(), 0, data, 0, 2 );"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,247,yte[] linkArray = getLinkedFile().getBytes();
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,248,"ystem.arraycopy( ( new ZipLong( linkArray.length ) ).getBytes(),"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,249,", data, 2, 4 );"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,251,"ystem.arraycopy( ( new ZipShort( getUserID() ) ).getBytes(),"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,252,", data, 6, 2 );"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,253,"ystem.arraycopy( ( new ZipShort( getGroupID() ) ).getBytes(),"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,254,", data, 8, 2 );"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,256,"ystem.arraycopy( linkArray, 0, data, 10, linkArray.length );"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,258,_crc.reset();
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,259,_crc.update( data );
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,260,ong checksum = m_crc.getValue();
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,262,yte[] result = new byte[ data.length + 4 ];
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,263,"ystem.arraycopy( ( new ZipLong( checksum ) ).getBytes(), 0, result, 0, 4 );"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,264,"ystem.arraycopy( data, 0, result, 4, data.length );"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,265,eturn result;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,230,public String getLinkedFile() {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,231,return link;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,269, Length of the extra field in the local file data - without Header-ID or
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,270, length specifier.
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,272, @return The LocalFileDataLength value
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,235,* Is this entry a symbolic link?
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,236,* @return true if this is a symbolic link
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,275,ublic ZipShort getLocalFileDataLength()
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,277,eturn new ZipShort( 4 + // CRC
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,278, + // Mode
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,279, + // SizDev
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,280, + // UID
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,281, + // GID
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,282,etLinkedFile().getBytes().length );
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,239,public boolean isLink() {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,240,return getLinkedFile().length() != 0;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,288, @return The Mode value
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,245,* @param mode the file mode
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,291,ublic int getMode()
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,293,eturn m_mode;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,248,public void setMode(int mode) {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,249,this.mode = getMode(mode);
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,297, Get the user id.
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,299, @return The UserId value
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,253,* File mode of this file.
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,254,* @return the file mode
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,301, @deprecated Use getUserID()
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,302, @see #getUserID()
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,304,ublic int getUserId()
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,306,eturn m_uid;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,257,public int getMode() {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,258,return mode;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,310, Get the user id.
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,312, @return The UserID value
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,314,ublic int getUserID()
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,316,eturn m_uid;
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,320, Is this entry a directory?
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,322, @return The Directory value
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,262,* Indicate whether this entry is a directory.
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,263,"* @param dirFlag if true, this entry is a directory"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,325,ublic boolean isDirectory()
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,327,eturn m_dirFlag && !isLink();
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,266,public void setDirectory(boolean dirFlag) {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,267,this.dirFlag = dirFlag;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,268,mode = getMode(mode);
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,331, Is this entry a symbolic link?
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,333, @return The Link value
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,272,* Is this entry a directory?
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,273,* @return true if this entry is a directory
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,336,ublic boolean isLink()
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,338,eturn getLinkedFile().length() != 0;
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,276,public boolean isDirectory() {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,277,return dirFlag && !isLink();
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,344, @param buffer the buffer
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,345, @param offset the offset into buffer
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,346, @param length the length of data in buffer
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,347, @throws ZipException on error
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,282,* @param data an array of bytes
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,283,* @param offset the start offset
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,284,* @param length the number of bytes in the array from offset
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,286,* @throws ZipException on error
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,350,"ublic void parseFromLocalFileData( final byte[] buffer,"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,351,"inal int offset,"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,352,inal int length )
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,353,hrows ZipException
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,356,"ong givenChecksum = ( new ZipLong( buffer, offset ) ).getValue();"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,357,yte[] tmp = new byte[ length - 4 ];
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,358,"ystem.arraycopy( buffer, offset + 4, tmp, 0, length - 4 );"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,359,_crc.reset();
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,360,_crc.update( tmp );
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,361,ong realChecksum = m_crc.getValue();
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,362,f( givenChecksum != realChecksum )
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,364,"hrow new ZipException( ""bad CRC checksum "" + Long.toHexString( givenChecksum ) +"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,365," instead of "" + Long.toHexString( realChecksum ) );"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,288,"public void parseFromLocalFileData(byte[] data, int offset, int length)"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,289,throws ZipException {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,291,"long givenChecksum = ZipLong.getValue(data, offset);"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,292,byte[] tmp = new byte[length - WORD];
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,293,"System.arraycopy(data, offset + WORD, tmp, 0, length - WORD);"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,294,crc.reset();
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,295,crc.update(tmp);
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,296,long realChecksum = crc.getValue();
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,297,if (givenChecksum != realChecksum) {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,298,"throw new ZipException(""bad CRC checksum """
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,299,+ Long.toHexString(givenChecksum)
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,300,"+ "" instead of """
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,301,+ Long.toHexString(realChecksum));
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,368,"nt newMode = ( new ZipShort( tmp, 0 ) ).getValue();"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,369,"yte[] linkArray = new byte[ (int)( new ZipLong( tmp, 2 ) ).getValue() ];"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,370,"_uid = ( new ZipShort( tmp, 6 ) ).getValue();"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,371,"_gid = ( new ZipShort( tmp, 8 ) ).getValue();"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,373,f( linkArray.length == 0 )
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,375,"_link = """";"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,377,lse
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,379,"ystem.arraycopy( tmp, 10, linkArray, 0, linkArray.length );"
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,380,_link = new String( linkArray );
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,304,"int newMode = ZipShort.getValue(tmp, 0);"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,305,// CheckStyle:MagicNumber OFF
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,306,"byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,307,"uid = ZipShort.getValue(tmp, 6);"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,308,"gid = ZipShort.getValue(tmp, 8);"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,310,if (linkArray.length == 0) {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,311,"link = """";"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,312,} else {
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,313,"System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,314,link = new String(linkArray);
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,382,etDirectory( ( newMode & DIR_FLAG ) != 0 );
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,383,etMode( newMode );
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,316,// CheckStyle:MagicNumber ON
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,317,setDirectory((newMode & DIR_FLAG) != 0);
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,318,setMode(newMode);
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,389, @param mode Description of Parameter
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,390, @return The Mode value
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,323,* @param mode the mode
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,324,* @return the type with the mode
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,393,rotected int getMode( final int mode )
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,327,protected int getMode(int mode) {
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,396,f( isLink() )
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,329,if (isLink()) {
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,400,lse if( isDirectory() )
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,331,} else if (isDirectory()) {
False,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,404,eturn type | ( mode & PERM_MASK );
True,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java,334,return type | (mode & PERM_MASK);
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,3, or more contributor license agreements.  See the NOTICE file
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,4, distributed with this work for additional information
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,6," to you under the Apache License, Version 2.0 (the"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,7," ""License""); you may not use this file except in compliance"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,8, with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,4,*  this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,7,*  the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,10, http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,14,*  See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,15,*  limitations under the License.
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,12," Unless required by applicable law or agreed to in writing,"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,13, software distributed under the License is distributed on an
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,15," KIND, either express or implied.  See the License for the"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,16, specific language governing permissions and limitations
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,17, under the License.
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,21,mport java.util.ArrayList;
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,21,import java.util.Vector;
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,28,ublic class ExtraFieldUtils
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,28,// CheckStyle:HideUtilityClassConstructorCheck OFF (bc)
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,29,public class ExtraFieldUtils {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,31,private static final int WORD = 4;
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,35,rivate static final Hashtable c_implementations;
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,38,private static Hashtable implementations;
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,37,tatic
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,39,_implementations = new Hashtable();
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,40,egister( AsiExtraField.class );
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,40,static {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,41,implementations = new Hashtable();
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,42,register(AsiExtraField.class);
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,43,register(JarMarker.class);
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,44," Create an instance of the approriate ExtraField, falls back to {@link"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,45, UnrecognizedExtraField UnrecognizedExtraField}.
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,47,* Register a ZipExtraField implementation.
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,47, Throws java.lang.IllegalAccessException if cant create implementation.
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,49,* <p>The given class must have a no-arg constructor and implement
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,50,* the {@link ZipExtraField ZipExtraField interface}.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,51,* @param c the class to register
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,49, @param headerID the header ID
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,50, @return the extra field implementation
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,51, @throws InstantiationException if cant create implementation
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,52, @throws IllegalAccessException if cant create implementation
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,55,ublic static ZipExtraField createExtraField( final ZipShort headerID )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,56,"hrows InstantiationException, IllegalAccessException"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,58,inal Class clazz =
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,59,Class)c_implementations.get( headerID );
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,60,f( clazz != null )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,62,eturn (ZipExtraField)clazz.newInstance();
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,55,public static void register(Class c) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,56,try {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,57,ZipExtraField ze = (ZipExtraField) c.newInstance();
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,58,"implementations.put(ze.getHeaderId(), c);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,59,} catch (ClassCastException cc) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,60,"throw new RuntimeException(c + "" doesn\'t implement ZipExtraField"");"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,61,} catch (InstantiationException ie) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,62,"throw new RuntimeException(c + "" is not a concrete class"");"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,63,} catch (IllegalAccessException ie) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,64,"throw new RuntimeException(c + ""\'s no-arg constructor is not public"");"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,64,inal UnrecognizedExtraField unrecognized = new UnrecognizedExtraField();
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,65,nrecognized.setHeaderID( headerID );
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,66,eturn unrecognized;
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,70, Merges the central directory fields of the given ZipExtraFields.
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,72, @param data the central directory data
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,73, @return the merged data
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,69,"* Create an instance of the approriate ExtraField, falls back to"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,70,* {@link UnrecognizedExtraField UnrecognizedExtraField}.
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,71,* @param headerId the header identifier
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,72,* @return an instance of the appropiate ExtraField
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,73,* @exception InstantiationException if unable to instantiate the class
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,74,* @exception IllegalAccessException if not allowed to instatiate the class
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,76,ublic static byte[] mergeCentralDirectoryData( final ZipExtraField[] data )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,78,nt sum = 4 * data.length;
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,79,or( int i = 0; i < data.length; i++ )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,81,um += data[ i ].getCentralDirectoryLength().getValue();
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,83,yte[] result = new byte[ sum ];
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,84,nt start = 0;
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,85,or( int i = 0; i < data.length; i++ )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,87,"ystem.arraycopy( data[ i ].getHeaderID().getBytes(),"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,88,", result, start, 2 );"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,89,"ystem.arraycopy( data[ i ].getCentralDirectoryLength().getBytes(),"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,90,", result, start + 2, 2 );"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,91,yte[] local = data[ i ].getCentralDirectoryData();
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,92,"ystem.arraycopy( local, 0, result, start + 4, local.length );"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,93,tart += ( local.length + 4 );
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,77,public static ZipExtraField createExtraField(ZipShort headerId)
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,78,"throws InstantiationException, IllegalAccessException {"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,79,Class c = (Class) implementations.get(headerId);
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,80,if (c != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,81,return (ZipExtraField) c.newInstance();
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,95,eturn result;
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,83,UnrecognizedExtraField u = new UnrecognizedExtraField();
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,84,u.setHeaderId(headerId);
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,85,return u;
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,99, Merges the local file data fields of the given ZipExtraFields.
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,101, @param data the data
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,102, @return the merged data
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,89,* Split the array into ExtraFields and populate them with the
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,90,* give data.
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,91,* @param data an array of bytes
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,92,* @return an array of ExtraFields
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,94,* @throws ZipException on error
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,105,ublic static byte[] mergeLocalFileDataData( final ZipExtraField[] data )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,107,nt sum = 4 * data.length;
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,108,or( int i = 0; i < data.length; i++ )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,110,um += data[ i ].getLocalFileDataLength().getValue();
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,112,yte[] result = new byte[ sum ];
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,96,public static ZipExtraField[] parse(byte[] data) throws ZipException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,97,Vector v = new Vector();
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,114,or( int i = 0; i < data.length; i++ )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,116,"ystem.arraycopy( data[ i ].getHeaderID().getBytes(),"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,117,", result, start, 2 );"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,118,"ystem.arraycopy( data[ i ].getLocalFileDataLength().getBytes(),"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,119,", result, start + 2, 2 );"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,120,yte[] local = data[ i ].getLocalFileDataData();
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,121,"ystem.arraycopy( local, 0, result, start + 4, local.length );"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,122,tart += ( local.length + 4 );
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,99,while (start <= data.length - WORD) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,100,"ZipShort headerId = new ZipShort(data, start);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,101,"int length = (new ZipShort(data, start + 2)).getValue();"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,102,if (start + WORD + length > data.length) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,103,"throw new ZipException(""data starting at "" + start"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,104,"+ "" is in unknown format"");"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,106,try {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,107,ZipExtraField ze = createExtraField(headerId);
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,108,"ze.parseFromLocalFileData(data, start + WORD, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,109,v.addElement(ze);
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,110,} catch (InstantiationException ie) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,111,throw new ZipException(ie.getMessage());
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,112,} catch (IllegalAccessException iae) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,113,throw new ZipException(iae.getMessage());
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,115,start += (length + WORD);
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,117,if (start != data.length) { // array not exhausted
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,118,"throw new ZipException(""data starting at "" + start"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,119,"+ "" is in unknown format"");"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,122,ZipExtraField[] result = new ZipExtraField[v.size()];
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,123,v.copyInto(result);
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,128, Split the array into ExtraFields and populate them with the give data.
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,130, @param data the data to parse
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,131, @return the parsed fields
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,132, @exception ZipException on error
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,128,* Merges the local file data fields of the given ZipExtraFields.
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,129,* @param data an array of ExtraFiles
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,130,* @return an array of bytes
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,135,ublic static ZipExtraField[] parse( final byte[] data )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,136,hrows ZipException
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,138,rrayList v = new ArrayList();
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,139,nt start = 0;
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,140,hile( start <= data.length - 4 )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,142,"inal ZipShort headerID = new ZipShort( data, start );"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,143,"nt length = ( new ZipShort( data, start + 2 ) ).getValue();"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,144,f( start + 4 + length > data.length )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,146,"hrow new ZipException( ""data starting at "" + start + "" is in unknown format"" );"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,148,ry
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,150,ipExtraField ze = createExtraField( headerID );
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,151,"e.parseFromLocalFileData( data, start + 4, length );"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,152,.add( ze );
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,154,atch( InstantiationException ie )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,156,hrow new ZipException( ie.getMessage() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,158,atch( IllegalAccessException iae )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,160,hrow new ZipException( iae.getMessage() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,162,tart += ( length + 4 );
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,133,public static byte[] mergeLocalFileDataData(ZipExtraField[] data) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,134,int sum = WORD * data.length;
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,135,for (int i = 0; i < data.length; i++) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,136,sum += data[i].getLocalFileDataLength().getValue();
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,164,f( start != data.length )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,165,// array not exhausted
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,166,"hrow new ZipException( ""data starting at "" + start + "" is in unknown format"" );"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,138,byte[] result = new byte[sum];
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,139,int start = 0;
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,140,for (int i = 0; i < data.length; i++) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,141,"System.arraycopy(data[i].getHeaderId().getBytes(),"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,142,"0, result, start, 2);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,143,"System.arraycopy(data[i].getLocalFileDataLength().getBytes(),"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,144,"0, result, start + 2, 2);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,145,byte[] local = data[i].getLocalFileDataData();
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,146,"System.arraycopy(local, 0, result, start + WORD, local.length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,147,start += (local.length + WORD);
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,169,inal ZipExtraField[] result = new ZipExtraField[ v.size() ];
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,170,eturn (ZipExtraField[])v.toArray( result );
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,149,return result;
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,174, Register a ZipExtraField implementation. <p>
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,176, The given class must have a no-arg constructor and implement the {@link
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,177, ZipExtraField ZipExtraField interface}.</p>
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,179, @param clazz The Class for particular implementation
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,153,* Merges the central directory fields of the given ZipExtraFields.
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,154,* @param data an array of ExtraFields
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,155,* @return an array of bytes
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,182,ublic static void register( final Class clazz )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,184,ry
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,186,ipExtraField ze = (ZipExtraField)clazz.newInstance();
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,187,"_implementations.put( ze.getHeaderID(), clazz );"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,158,public static byte[] mergeCentralDirectoryData(ZipExtraField[] data) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,159,int sum = WORD * data.length;
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,160,for (int i = 0; i < data.length; i++) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,161,sum += data[i].getCentralDirectoryLength().getValue();
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,189,atch( ClassCastException cc )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,191,hrow new RuntimeException( clazz +
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,192," doesn\'t implement ZipExtraField"" );"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,194,atch( InstantiationException ie )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,196,"hrow new RuntimeException( clazz + "" is not a concrete class"" );"
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,198,atch( IllegalAccessException ie )
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,200,hrow new RuntimeException( clazz +
False,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,201,"\'s no-arg constructor is not public"" );"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,163,byte[] result = new byte[sum];
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,164,int start = 0;
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,165,for (int i = 0; i < data.length; i++) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,166,"System.arraycopy(data[i].getHeaderId().getBytes(),"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,167,"0, result, start, 2);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,168,"System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,169,"0, result, start + 2, 2);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,170,byte[] local = data[i].getCentralDirectoryData();
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,171,"System.arraycopy(local, 0, result, start + WORD, local.length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,172,start += (local.length + WORD);
True,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java,174,return result;
False,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,68,ublic void setHeaderID( final ZipShort headerID )
True,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,68,public void setHeaderId( final ZipShort headerID )
False,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,116,ublic ZipShort getHeaderID()
True,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java,116,public ZipShort getHeaderId()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,374,inal ZipShort type = extraField.getHeaderID();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,374,final ZipShort type = extraField.getHeaderId();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,379,f( other.getHeaderID().equals( type ) )
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,379,if( other.getHeaderId().equals( type ) )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,429,f( ( (ZipExtraField)m_extraFields.get( i ) ).getHeaderID().equals( type ) )
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,429,if( ( (ZipExtraField)m_extraFields.get( i ) ).getHeaderId().equals( type ) )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,3, or more contributor license agreements.  See the NOTICE file
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,4, distributed with this work for additional information
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,6," to you under the Apache License, Version 2.0 (the"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,7," ""License""); you may not use this file except in compliance"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,8, with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,4,*  this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,7,*  the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,10, http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,14,*  See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,15,*  limitations under the License.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,12," Unless required by applicable law or agreed to in writing,"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,13, software distributed under the License is distributed on an
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,15," KIND, either express or implied.  See the License for the"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,16, specific language governing permissions and limitations
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,17, under the License.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,21,mport java.lang.reflect.InvocationTargetException;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,22,mport java.lang.reflect.Method;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,23,mport java.util.ArrayList;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,20,import java.util.Vector;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,27, Extension that adds better handling of extra fields and provides access to
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,28, the internal and external file attributes.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,24,* Extension that adds better handling of extra fields and provides
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,25,* access to the internal and external file attributes.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,30,ublic class ZipEntry
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,31,xtends java.util.zip.ZipEntry
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,28,public class ZipEntry extends java.util.zip.ZipEntry implements Cloneable {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,30,public static final int PLATFORM_UNIX = 3;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,31,public static final int PLATFORM_FAT  = 0;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,32,private static final int SHORT_MASK = 0xFFFF;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,33,private static final int SHORT_SHIFT = 16;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,35,private int internalAttributes = 0;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,36,private int platform = PLATFORM_FAT;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,37,private long externalAttributes = 0;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,38,private Vector/*<ZipExtraField>*/ extraFields = null;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,39,private String name = null;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,34, Helper for JDK 1.1
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,36, @since 1.2
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,42,* Creates a new zip entry with the specified name.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,43,* @param name the name of the entry
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,44,* @since 1.1
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,38,rivate static Method c_setCompressedSizeMethod;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,46,public ZipEntry(String name) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,47,super(name);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,41, Helper for JDK 1.1
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,43, @since 1.2
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,51,* Creates a new zip entry with fields taken from the specified zip entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,52,* @param entry the entry to get fields from
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,53,* @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,54,* @throws ZipException on error
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,45,rivate static final Object c_lockReflection = new Object();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,56,public ZipEntry(java.util.zip.ZipEntry entry) throws ZipException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,57,super(entry);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,58,byte[] extra = entry.getExtra();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,59,if (extra != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,60,setExtraFields(ExtraFieldUtils.parse(extra));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,61,} else {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,62,// initializes extra data to an empty byte array
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,63,setExtra();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,48, Helper for JDK 1.1
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,50, @since 1.2
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,68,* Creates a new zip entry with fields taken from the specified zip entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,69,* @param entry the entry to get fields from
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,70,* @throws ZipException on error
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,71,* @since 1.1
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,52,rivate static boolean c_triedToGetMethod;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,54,rivate final ArrayList m_extraFields = new ArrayList();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,56,rivate int m_internalAttributes;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,57,rivate long m_externalAttributes;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,73,public ZipEntry(ZipEntry entry) throws ZipException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,74,this((java.util.zip.ZipEntry) entry);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,75,setInternalAttributes(entry.getInternalAttributes());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,76,setExternalAttributes(entry.getExternalAttributes());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,77,setExtraFields(entry.getExtraFields());
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,60, Helper for JDK 1.1 <-> 1.2 incompatibility.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,62, @since 1.2
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,81,* @since 1.9
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,64,rivate Long m_compressedSize;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,83,protected ZipEntry() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,84,"super("""");"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,67, Creates a new zip entry with the specified name.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,69, @param name the name of entry
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,88,* Overwrite clone.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,89,* @return a cloned copy of this ZipEntry
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,72,ublic ZipEntry( final String name )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,74,uper( name );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,92,public Object clone() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,93,ZipEntry e = (ZipEntry) super.clone();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,95,e.extraFields = extraFields != null ? (Vector) extraFields.clone() : null;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,96,e.setInternalAttributes(getInternalAttributes());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,97,e.setExternalAttributes(getExternalAttributes());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,98,e.setExtraFields(getExtraFields());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,99,return e;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,78, Creates a new zip entry with fields taken from the specified zip entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,103,* Retrieves the internal file attributes.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,80, @param entry the JDK ZipEntry to adapt
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,81, @exception ZipException if can not create entry
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,105,* @return the internal file attributes
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,84,ublic ZipEntry( java.util.zip.ZipEntry entry )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,85,hrows ZipException
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,88," REVISIT: call super(entry) instead of this stuff in Ant2,"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,89," ""copy constructor"" has not been available in JDK 1.1"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,91,uper( entry.getName() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,93,etComment( entry.getComment() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,94,etMethod( entry.getMethod() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,95,etTime( entry.getTime() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,97,inal long size = entry.getSize();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,98,f( size > 0 )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,100,etSize( size );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,103,inal long cSize = entry.getCompressedSize();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,104,f( cSize > 0 )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,106,etComprSize( cSize );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,109,inal long crc = entry.getCrc();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,110,f( crc > 0 )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,112,etCrc( crc );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,108,public int getInternalAttributes() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,109,return internalAttributes;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,115,inal byte[] extra = entry.getExtra();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,116,f( extra != null )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,118,etExtraFields( ExtraFieldUtils.parse( extra ) );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,120,lse
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,122,/ initializes extra data to an empty byte array
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,123,etExtra();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,113,* Sets the internal file attributes.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,114,* @param value an <code>int</code> value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,115,* @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,117,public void setInternalAttributes(int value) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,118,internalAttributes = value;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,128, Creates a new zip entry with fields taken from the specified zip entry.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,130, @param entry the entry to adapt
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,131, @exception ZipException if can not create entry
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,122,* Retrieves the external file attributes.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,123,* @return the external file attributes
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,134,ublic ZipEntry( final ZipEntry entry )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,135,hrows ZipException
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,137,his( (java.util.zip.ZipEntry)entry );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,138,etInternalAttributes( entry.getInternalAttributes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,139,etExternalAttributes( entry.getExternalAttributes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,140,etExtraFields( entry.getExtraFields() );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,126,public long getExternalAttributes() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,127,return externalAttributes;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,144, Try to get a handle to the setCompressedSize method.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,146, @since 1.2
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,131,* Sets the external file attributes.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,132,* @param value an <code>long</code> value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,133,* @since 1.1
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,148,rivate static void checkSCS()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,150,f( !c_triedToGetMethod )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,152,ynchronized( c_lockReflection )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,154,_triedToGetMethod = true;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,155,ry
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,157,_setCompressedSizeMethod =
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,158,"ava.util.zip.ZipEntry.class.getMethod( ""setCompressedSize"","
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,159,ew Class[]{Long.TYPE} );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,161,atch( NoSuchMethodException nse )
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,135,public void setExternalAttributes(long value) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,136,externalAttributes = value;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,169, Are we running JDK 1.2 or higher?
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,171, @return Description of the Returned Value
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,172, @since 1.2
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,140,* Sets Unix permissions in a way that is understood by Info-Zip's
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,141,* unzip command.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,142,* @param mode an <code>int</code> value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,143,* @since Ant 1.5.2
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,174,rivate static boolean haveSetCompressedSize()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,176,heckSCS();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,177,eturn c_setCompressedSizeMethod != null;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,145,public void setUnixMode(int mode) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,146,// CheckStyle:MagicNumberCheck OFF - no point
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,147,setExternalAttributes((mode << SHORT_SHIFT)
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,148,// MS-DOS read-only attribute
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,149,| ((mode & 0200) == 0 ? 1 : 0)
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,150,// MS-DOS directory flag
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,151,| (isDirectory() ? 0x10 : 0));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,152,// CheckStyle:MagicNumberCheck ON
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,153,platform = PLATFORM_UNIX;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,181, Invoke setCompressedSize via reflection.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,183, @param entry Description of Parameter
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,184, @param size Description of Parameter
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,185, @since 1.2
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,157,* Unix permission.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,158,* @return the unix permissions
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,159,* @since Ant 1.6
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,187,"rivate static void performSetCompressedSize( final ZipEntry entry,"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,188,inal long size )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,190,inal Long[] s = {new Long( size )};
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,191,ry
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,193,"_setCompressedSizeMethod.invoke( entry, s );"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,195,atch( final InvocationTargetException ite )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,197,inal Throwable nested = ite.getTargetException();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,198,"inal String message = ""Exception setting the compressed size "" +"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,199,"of "" + entry + "": "" + nested.getMessage();"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,200,hrow new RuntimeException( message );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,202,atch( final Throwable t )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,204,"inal String message = ""Exception setting the compressed size "" +"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,205,"of "" + entry + "": "" + t.getMessage();"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,206,hrow new RuntimeException( message );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,161,public int getUnixMode() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,162,return platform != PLATFORM_UNIX ? 0 :
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,163,(int) ((getExternalAttributes() >> SHORT_SHIFT) & SHORT_MASK);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,211, Make this class work in JDK 1.1 like a 1.2 class. <p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,167,* Platform specification to put into the &quot;version made
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,168,* by&quot; part of the central file header.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,213, This either stores the size for later usage or invokes setCompressedSize
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,214, via reflection.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,170,* @return PLATFORM_FAT unless {@link #setUnixMode setUnixMode}
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,171,"* has been called, in which case PLATORM_UNIX will be returned."
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,216, @param size The new ComprSize value
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,217, @since 1.2
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,173,* @since Ant 1.5.2
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,219,ublic void setComprSize( final long size )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,221,f( haveSetCompressedSize() )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,223,"erformSetCompressedSize( this, size );"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,225,lse
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,227,_compressedSize = new Long( size );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,175,public int getPlatform() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,176,return platform;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,232, Sets the external file attributes.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,234, @param externalAttributes The new ExternalAttributes value
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,235, @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,180,* Set the platform (UNIX or FAT).
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,181,"* @param platform an <code>int</code> value - 0 is FAT, 3 is UNIX"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,182,* @since 1.9
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,237,ublic void setExternalAttributes( final long externalAttributes )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,239,_externalAttributes = externalAttributes;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,184,protected void setPlatform(int platform) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,185,this.platform = platform;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,243, Throws an Exception if extra data cannot be parsed into extra fields.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,245, @param extra The new Extra value
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,246, @throws RuntimeException if fail to set extra data
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,189,* Replaces all currently attached extra fields with the new array.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,190,* @param fields an array of extra fields
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,249,ublic void setExtra( final byte[] extra )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,250,hrows RuntimeException
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,252,ry
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,254,etExtraFields( ExtraFieldUtils.parse( extra ) );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,256,atch( final Exception e )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,258,hrow new RuntimeException( e.getMessage() );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,193,public void setExtraFields(ZipExtraField[] fields) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,194,extraFields = new Vector();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,195,for (int i = 0; i < fields.length; i++) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,196,extraFields.addElement(fields[i]);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,198,setExtra();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,263, Replaces all currently attached extra fields with the new array.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,265, @param fields The new ExtraFields value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,202,* Retrieves extra fields.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,203,* @return an array of the extra fields
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,268,ublic void setExtraFields( final ZipExtraField[] fields )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,270,_extraFields.clear();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,271,or( int i = 0; i < fields.length; i++ )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,273,_extraFields.add( fields[ i ] );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,206,public ZipExtraField[] getExtraFields() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,207,if (extraFields == null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,208,return new ZipExtraField[0];
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,275,etExtra();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,210,ZipExtraField[] result = new ZipExtraField[extraFields.size()];
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,211,extraFields.copyInto(result);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,212,return result;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,279, Sets the internal file attributes.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,281, @param value The new InternalAttributes value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,216,* Adds an extra fields - replacing an already present extra field
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,217,* of the same type.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,218,* @param ze an extra field
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,284,ublic void setInternalAttributes( final int value )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,286,_internalAttributes = value;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,221,public void addExtraField(ZipExtraField ze) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,222,if (extraFields == null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,223,extraFields = new Vector();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,225,ZipShort type = ze.getHeaderId();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,226,boolean done = false;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,227,"for (int i = 0, fieldsSize = extraFields.size(); !done && i < fieldsSize; i++) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,228,if (((ZipExtraField) extraFields.elementAt(i)).getHeaderId().equals(type)) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,229,"extraFields.setElementAt(ze, i);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,230,done = true;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,233,if (!done) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,234,extraFields.addElement(ze);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,236,setExtra();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,290, Retrieves the extra data for the central directory.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,292, @return The CentralDirectoryExtra value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,240,* Remove an extra fields.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,241,* @param type the type of extra field to remove
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,295,ublic byte[] getCentralDirectoryExtra()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,297,eturn ExtraFieldUtils.mergeCentralDirectoryData( getExtraFields() );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,244,public void removeExtraField(ZipShort type) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,245,if (extraFields == null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,246,extraFields = new Vector();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,248,boolean done = false;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,249,"for (int i = 0, fieldsSize = extraFields.size(); !done && i < fieldsSize; i++) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,250,if (((ZipExtraField) extraFields.elementAt(i)).getHeaderId().equals(type)) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,251,extraFields.removeElementAt(i);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,252,done = true;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,255,if (!done) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,256,throw new java.util.NoSuchElementException();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,258,setExtra();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,301, Override to make this class work in JDK 1.1 like a 1.2 class.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,303, @return The CompressedSize value
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,304, @since 1.2
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,262,* Throws an Exception if extra data cannot be parsed into extra fields.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,263,* @param extra an array of bytes to be parsed into extra fields
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,264,* @throws RuntimeException if the bytes cannot be parsed
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,265,* @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,266,* @throws RuntimeException on error
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,306,ublic long getCompressedSize()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,308,f( m_compressedSize != null )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,310,/ has been set explicitly and we are running in a 1.1 VM
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,311,eturn m_compressedSize.longValue();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,268,public void setExtra(byte[] extra) throws RuntimeException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,269,try {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,270,setExtraFields(ExtraFieldUtils.parse(extra));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,271,} catch (Exception e) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,272,throw new RuntimeException(e.getMessage());
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,313,eturn super.getCompressedSize();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,317, Retrieves the external file attributes.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,277,* Unfortunately {@link java.util.zip.ZipOutputStream
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,278,* java.util.zip.ZipOutputStream} seems to access the extra data
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,279,"* directly, so overriding getExtra doesn't help - we need to"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,280,* modify super's data directly.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,319, @return The ExternalAttributes value
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,322,ublic long getExternalAttributes()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,324,eturn m_externalAttributes;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,284,protected void setExtra() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,285,super.setExtra(ExtraFieldUtils.mergeLocalFileDataData(getExtraFields()));
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,328, Retrieves extra fields.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,330, @return The ExtraFields value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,289,* Retrieves the extra data for the local file data.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,290,* @return the extra data for local file
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,333,ublic ZipExtraField[] getExtraFields()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,335,inal ZipExtraField[] result = new ZipExtraField[ m_extraFields.size() ];
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,336,eturn (ZipExtraField[])m_extraFields.toArray( result );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,293,public byte[] getLocalFileDataExtra() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,294,byte[] extra = getExtra();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,295,return extra != null ? extra : new byte[0];
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,340, Retrieves the internal file attributes.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,342, @return The InternalAttributes value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,299,* Retrieves the extra data for the central directory.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,300,* @return the central directory extra data
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,345,ublic int getInternalAttributes()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,347,eturn m_internalAttributes;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,303,public byte[] getCentralDirectoryExtra() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,304,return ExtraFieldUtils.mergeCentralDirectoryData(getExtraFields());
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,351, Retrieves the extra data for the local file data.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,308,* Make this class work in JDK 1.1 like a 1.2 class.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,353, @return The LocalFileDataExtra value
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,354, @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,310,* <p>This either stores the size for later usage or invokes
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,311,* setCompressedSize via reflection.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,312,* @param size the size to use
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,313,* @deprecated since 1.7.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,314,*             Use setCompressedSize directly.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,315,* @since 1.2
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,356,ublic byte[] getLocalFileDataExtra()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,358,yte[] extra = getExtra();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,359,eturn extra != null ? extra : new byte[ 0 ];
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,317,public void setComprSize(long size) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,318,setCompressedSize(size);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,363, Adds an extra fields - replacing an already present extra field of the
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,364, same type.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,366, @param extraField The feature to be added to the ExtraField attribute
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,367, @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,322,* Get the name of the entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,323,* @return the entry name
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,324,* @since 1.9
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,369,ublic void addExtraField( final ZipExtraField extraField )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,371,inal ZipShort type = extraField.getHeaderID();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,372,oolean done = false;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,373,or( int i = 0; !done && i < m_extraFields.size(); i++ )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,375,inal ZipExtraField other = (ZipExtraField)m_extraFields.get( i );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,376,f( other.getHeaderID().equals( type ) )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,378,"_extraFields.set( i, extraField );"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,379,one = true;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,382,f( !done )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,384,_extraFields.add( extraField );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,386,etExtra();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,326,public String getName() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,327,return name == null ? super.getName() : name;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,390, Overwrite clone
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,392, @return Description of the Returned Value
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,393, @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,331,* Is this entry a directory?
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,332,* @return true if the entry is a directory
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,333,* @since 1.10
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,395,ublic Object clone()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,397,ipEntry entry = null;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,398,ry
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,400,ntry = new ZipEntry( (java.util.zip.ZipEntry)super.clone() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,402,atch( final Exception e )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,404,/ impossible as extra data is in correct format
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,405,.printStackTrace();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,406,eturn null;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,335,public boolean isDirectory() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,336,"return getName().endsWith(""/"");"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,409,ntry.setInternalAttributes( getInternalAttributes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,410,ntry.setExternalAttributes( getExternalAttributes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,411,ntry.setExtraFields( getExtraFields() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,412,eturn entry;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,340,* Set the name of the entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,341,* @param name the name to use
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,343,protected void setName(String name) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,344,this.name = name;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,416, Remove an extra fields.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,418, @param type Description of Parameter
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,419, @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,348,* Get the hashCode of the entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,349,* This uses the name as the hashcode.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,350,* @return a hashcode.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,351,* @since Ant 1.7
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,421,ublic void removeExtraField( final ZipShort type )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,423,oolean done = false;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,424,or( int i = 0; !done && i < m_extraFields.size(); i++ )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,426,f( ( (ZipExtraField)m_extraFields.get( i ) ).getHeaderID().equals( type ) )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,428,_extraFields.remove( i );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,429,one = true;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,432,f( !done )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,434,hrow new java.util.NoSuchElementException();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,436,etExtra();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,353,public int hashCode() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,354,// this method has severe consequences on performance. We cannot rely
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,355,// on the super.hashCode() method since super.getName() always return
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,356,// the empty string in the current implemention (there's no setter)
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,357,// so it is basically draining the performance of a hashmap lookup
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,358,return getName().hashCode();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,440, Unfortunately {@link java.util.zip.ZipOutputStream
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,441," java.util.zip.ZipOutputStream} seems to access the extra data directly,"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,442, so overriding getExtra doesn't help - we need to modify super's data
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,443, directly.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,445, @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,362,"* The equality method. In this case, the implementation returns 'this == o'"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,363,* which is basically the equals method of the Object class.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,364,* @param o the object to compare to
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,365,* @return true if this object is the same as <code>o</code>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,366,* @since Ant 1.7
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,447,rotected void setExtra()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,449,uper.setExtra( ExtraFieldUtils.mergeLocalFileDataData( getExtraFields() ) );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,368,public boolean equals(Object o) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipEntry.java,369,return (this == o);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,39,ipShort getHeaderID();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipExtraField.java,39,ZipShort getHeaderId();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,3, or more contributor license agreements.  See the NOTICE file
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,4, distributed with this work for additional information
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,6," to you under the Apache License, Version 2.0 (the"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,7," ""License""); you may not use this file except in compliance"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,8, with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,4,*  this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,7,*  the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,10, http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,14,*  See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,15,*  limitations under the License.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,12," Unless required by applicable law or agreed to in writing,"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,13, software distributed under the License is distributed on an
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,15," KIND, either express or implied.  See the License for the"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,16, specific language governing permissions and limitations
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,17, under the License.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,22, Utility class that represents a four byte integer with conversion rules for
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,23, the big endian byte order of ZIP files.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,21,* Utility class that represents a four byte integer with conversion
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,22,* rules for the big endian byte order of ZIP files.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,25,ublic final class ZipLong implements Cloneable
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,27,rivate long m_value;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,25,public final class ZipLong implements Cloneable {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,27,private static final int WORD = 4;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,28,//private static final int BYTE_BIT_SIZE = 8;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,29,private static final int BYTE_MASK = 0xFF;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,31,private static final int BYTE_1 = 1;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,32,private static final int BYTE_1_MASK = 0xFF00;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,33,private static final int BYTE_1_SHIFT = 8;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,35,private static final int BYTE_2 = 2;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,36,private static final int BYTE_2_MASK = 0xFF0000;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,37,private static final int BYTE_2_SHIFT = 16;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,39,private static final int BYTE_3 = 3;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,40,private static final long BYTE_3_MASK = 0xFF000000L;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,41,private static final int BYTE_3_SHIFT = 24;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,43,private long value;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,32, @param value the value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,47,* @param value the long to store as a ZipLong
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,35,ublic ZipLong( final long value )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,37,_value = value;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,50,public ZipLong(long value) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,51,this.value = value;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,43, @param buffer the buffer to read data from
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,56,* @param bytes the bytes to store as a ZipLong
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,46,ublic ZipLong( final byte[] buffer )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,48,"his( buffer, 0 );"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,59,public ZipLong (byte[] bytes) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,60,"this(bytes, 0);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,54, @param buffer buffer to read data from
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,55, @param offset offset into buffer
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,65,* @param bytes the bytes to store as a ZipLong
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,66,* @param offset the offset to start
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,58,"ublic ZipLong( final byte[] buffer, final int offset )"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,60,_value = ( buffer[ offset + 3 ] << 24 ) & 0xFF000000l;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,61,_value += ( buffer[ offset + 2 ] << 16 ) & 0xFF0000;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,62,_value += ( buffer[ offset + 1 ] << 8 ) & 0xFF00;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,63,_value += ( buffer[ offset ] & 0xFF );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,69,"public ZipLong (byte[] bytes, int offset) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,70,"value = ZipLong.getValue(bytes, offset);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,67, Get value as two bytes in big endian byte order.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,69, @return The value as bytes
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,74,* Get value as four bytes in big endian byte order.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,76,* @return value as four bytes in big endian order
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,72,ublic byte[] getBytes()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,74,yte[] result = new byte[ 4 ];
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,75,esult[ 0 ] = (byte)( ( m_value & 0xFF ) );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,76,esult[ 1 ] = (byte)( ( m_value & 0xFF00 ) >> 8 );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,77,esult[ 2 ] = (byte)( ( m_value & 0xFF0000 ) >> 16 );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,78,esult[ 3 ] = (byte)( ( m_value & 0xFF000000l ) >> 24 );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,79,eturn result;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,78,public byte[] getBytes() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,79,return ZipLong.getBytes(value);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,83, Get value as Java int.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,85, @return The value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,83,* Get value as Java long.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,85,* @return value as a long
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,87,public long getValue() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,88,return value;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,92,* Get value as four bytes in big endian byte order.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,93,* @param value the value to convert
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,94,* @return value as four bytes in big endian byte order
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,96,public static byte[] getBytes(long value) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,97,byte[] result = new byte[WORD];
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,98,result[0] = (byte) ((value & BYTE_MASK));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,99,result[BYTE_1] = (byte) ((value & BYTE_1_MASK) >> BYTE_1_SHIFT);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,100,result[BYTE_2] = (byte) ((value & BYTE_2_MASK) >> BYTE_2_SHIFT);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,101,result[BYTE_3] = (byte) ((value & BYTE_3_MASK) >> BYTE_3_SHIFT);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,102,return result;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,106,* Helper method to get the value as a Java long from four bytes starting at given array offset
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,107,* @param bytes the array of bytes
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,108,* @param offset the offset to start
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,109,* @return the correspondanding Java long value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,111,"public static long getValue(byte[] bytes, int offset) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,112,long value = (bytes[offset + BYTE_3] << BYTE_3_SHIFT) & BYTE_3_MASK;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,113,value += (bytes[offset + BYTE_2] << BYTE_2_SHIFT) & BYTE_2_MASK;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,114,value += (bytes[offset + BYTE_1] << BYTE_1_SHIFT) & BYTE_1_MASK;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,115,value += (bytes[offset] & BYTE_MASK);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,116,return value;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,120,* Helper method to get the value as a Java long from a four-byte array
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,121,* @param bytes the array of bytes
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,122,* @return the correspondanding Java long value
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,88,ublic long getValue()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,90,eturn m_value;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,124,public static long getValue(byte[] bytes) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,125,"return getValue(bytes, 0);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,96, @param o the object to compare against
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,97," @return true if equyal, false otherwise"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,130,* @param o an object to compare
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,131,* @return true if the objects are equal
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,100,ublic boolean equals( final Object o )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,102,f( o == null || !( o instanceof ZipLong ) )
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,134,public boolean equals(Object o) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,135,if (o == null || !(o instanceof ZipLong)) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,106,eturn m_value == ( (ZipLong)o ).getValue();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,138,return value == ((ZipLong) o).getValue();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,112, @return the hashcode
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,143,* @return the value stored in the ZipLong
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,115,ublic int hashCode()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,117,eturn (int)m_value;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,146,public int hashCode() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java,147,return (int) value;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,3, or more contributor license agreements.  See the NOTICE file
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,4, distributed with this work for additional information
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,6," to you under the Apache License, Version 2.0 (the"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,7," ""License""); you may not use this file except in compliance"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,8, with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,4,*  this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,7,*  the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,10, http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,14,*  See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,15,*  limitations under the License.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,12," Unless required by applicable law or agreed to in writing,"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,13, software distributed under the License is distributed on an
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,15," KIND, either express or implied.  See the License for the"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,16, specific language governing permissions and limitations
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,17, under the License.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,20,import java.io.File;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,21,import java.io.FileOutputStream;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,22,import java.io.FilterOutputStream;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,25,import java.io.RandomAccessFile;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,24,mport java.util.ArrayList;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,25,mport java.util.Calendar;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,29,import java.util.Vector;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,30,mport java.util.zip.DeflaterOutputStream;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,35, java.util.zip.ZipOutputStream} that does handle the extended functionality of
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,36," this package, especially internal/external file attributes and extra fields"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,37, with different layouts for local file data and central directory entries. <p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,36,* java.util.zip.ZipOutputStream} that does handle the extended
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,37,"* functionality of this package, especially internal/external file"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,38,* attributes and extra fields with different layouts for local file
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,39,* data and central directory entries.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,41,* <p>This class will try to use {@link java.io.RandomAccessFile
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,42,* RandomAccessFile} when you know that the output is going to go to a
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,43,* file.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,45,"* <p>If RandomAccessFile cannot be used, this implementation will use"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,46,* a Data Descriptor to store size and CRC information for {@link
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,47,"* #DEFLATED DEFLATED} entries, this means, you don't need to"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,48,* calculate them yourself.  Unfortunately this is not possible for
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,49,"* the {@link #STORED STORED} method, here setting the CRC and"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,50,* uncompressed size information is required before {@link
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,51,* #putNextEntry putNextEntry} can be called.</p>
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,39, This implementation will use a Data Descriptor to store size and CRC
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,40," information for DEFLATED entries, this means, you don't need to calculate"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,41," them yourself. Unfortunately this is not possible for the STORED method, here"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,42, setting the CRC and uncompressed size information is required before {@link
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,43, #putNextEntry putNextEntry} will be called.</p>
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,45,ublic class ZipOutputStream
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,46,xtends DeflaterOutputStream
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,49," Helper, a 0 as ZipShort."
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,54,public class ZipOutputStream extends FilterOutputStream {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,56,private static final int BYTE_MASK = 0xFF;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,57,private static final int SHORT = 2;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,58,private static final int WORD = 4;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,59,private static final int BUFFER_SIZE = 512;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,61,* Apparently Deflater.setInput gets slowed down a lot on Sun JVMs
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,62,* when it gets handed a really big buffer.  See
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,63,* https://issues.apache.org/bugzilla/show_bug.cgi?id=45396
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,51, @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,65,* Using a buffer size of 8 kB proved to be a good compromise
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,53,"rivate static final byte[] ZERO = {0, 0};"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,67,private static final int DEFLATER_BLOCK_SIZE = 8192;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,56," Helper, a 0 as ZipLong."
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,70,* Compression method for deflated entries.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,60,"rivate static final byte[] LZERO = {0, 0, 0, 0};"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,74,public static final int DEFLATED = java.util.zip.ZipEntry.DEFLATED;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,63, Compression method for deflated entries.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,77,* Default compression level for deflated entries.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,65, @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,79,* @since Ant 1.7
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,67,ublic static final int DEFLATED = ZipEntry.DEFLATED;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,81,public static final int DEFAULT_COMPRESSION = Deflater.DEFAULT_COMPRESSION;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,70, Compression method for deflated entries.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,84,* Compression method for stored entries.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,74,ublic static final int STORED = ZipEntry.STORED;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,88,public static final int STORED = java.util.zip.ZipEntry.STORED;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,77, Various ZIP constants
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,80, local file header signature
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,91,* Current entry.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,84,rotected static final ZipLong LFH_SIG = new ZipLong( 0X04034B50L );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,95,private ZipEntry entry;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,86, data descriptor signature
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,98,* The file comment.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,90,rotected static final ZipLong DD_SIG = new ZipLong( 0X08074B50L );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,102,"private String comment = """";"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,92, central file header signature
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,105,* Compression level for next entry.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,96,rotected static final ZipLong CFH_SIG = new ZipLong( 0X02014B50L );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,109,private int level = DEFAULT_COMPRESSION;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,98, end of central dir signature
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,112,* Has the compression level changed when compared to the last
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,113,* entry?
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,100, @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,115,* @since 1.5
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,102,rotected static final ZipLong EOCD_SIG = new ZipLong( 0X06054B50L );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,117,private boolean hasCompressionLevelChanged = false;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,105, Smallest date/time ZIP can handle.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,120,* Default compression method for next entry.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,109,rivate static final ZipLong DOS_TIME_MIN = new ZipLong( 0x00002100L );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,124,private int method = java.util.zip.ZipEntry.DEFLATED;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,112, The file comment.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,127,* List of ZipEntries written so far.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,116,"rivate String m_comment = """";"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,131,private Vector entries = new Vector();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,119, Compression level for next entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,134,* CRC instance to avoid parsing DEFLATED data twice.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,123,rivate int m_level = Deflater.DEFAULT_COMPRESSION;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,138,private CRC32 crc = new CRC32();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,126, Default compression method for next entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,141,* Count the bytes written to out.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,130,rivate int m_method = DEFLATED;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,145,private long written = 0;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,133, List of ZipEntries written so far.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,148,* Data for local header data
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,137,rivate final ArrayList m_entries = new ArrayList();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,152,private long dataStart = 0;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,140, CRC instance to avoid parsing DEFLATED data twice.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,155,* Offset for CRC entry in the local file header data for the
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,156,* current entry starts here.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,142, @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,158,* @since 1.15
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,144,rivate final CRC32 m_crc = new CRC32();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,160,private long localDataStart = 0;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,147, Count the bytes written to out.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,163,* Start of central directory.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,151,rivate long m_written;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,167,private long cdOffset = 0;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,154, Data for current entry started here.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,170,* Length of central directory.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,158,rivate long m_dataStart;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,174,private long cdLength = 0;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,161, Start of central directory.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,177,"* Helper, a 0 as ZipShort."
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,165,rivate ZipLong m_cdOffset = new ZipLong( 0 );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,181,"private static final byte[] ZERO = {0, 0};"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,168, Length of central directory.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,184,"* Helper, a 0 as ZipLong."
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,172,rivate ZipLong m_cdLength = new ZipLong( 0 );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,188,"private static final byte[] LZERO = {0, 0, 0, 0};"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,175, Holds the offsets of the LFH starts for each entry
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,191,* Holds the offsets of the LFH starts for each entry.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,179,rivate final Hashtable m_offsets = new Hashtable();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,195,private Hashtable offsets = new Hashtable();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,182, The encoding to use for filenames and the file comment. <p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,198,* The encoding to use for filenames and the file comment.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,184, For a list of possible values see <a
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,185," href=""http://java.sun.com/products/jdk/1.2/docs/guide/internat/encoding.doc.html"">"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,186, http://java.sun.com/products/jdk/1.2/docs/guide/internat/encoding.doc.html
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,187, </a>. Defaults to the platform's default character encoding.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,200,* <p>For a list of possible values see <a
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,201,"* href=""http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html"">http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html</a>."
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,202,* Defaults to the platform's default character encoding.</p>
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,191,rivate String m_encoding;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,206,private String encoding = null;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,208,// CheckStyle:VisibilityModifier OFF - bc
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,194, Current entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,211,* This Deflater object is used for output.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,196, @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,213,* <p>This attribute is only protected to provide a level of API
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,214,* backwards compatibility.  This class used to extend {@link
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,215,* java.util.zip.DeflaterOutputStream DeflaterOutputStream} up to
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,216,* Revision 1.13.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,218,* @since 1.14
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,198,rivate ZipArchiveEntry m_entry;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,220,"protected Deflater def = new Deflater(level, true);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,201, Creates a new ZIP OutputStream filtering the underlying stream.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,223,* This buffer servers as a Deflater.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,203, @param output the output stream to write to
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,204, @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,225,* <p>This attribute is only protected to provide a level of API
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,226,* backwards compatibility.  This class used to extend {@link
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,227,* java.util.zip.DeflaterOutputStream DeflaterOutputStream} up to
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,228,* Revision 1.13.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,230,* @since 1.14
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,206,ublic ZipOutputStream( final OutputStream output )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,208,"uper( output, new Deflater( Deflater.DEFAULT_COMPRESSION, true ) );"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,232,protected byte[] buf = new byte[BUFFER_SIZE];
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,234,// CheckStyle:VisibilityModifier ON
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,212, Convert a Date object to a DOS date/time field. <p>
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,214, Stolen from InfoZip's <code>fileio.c</code></p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,237,* Optional random access output.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,216, @param time Description of Parameter
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,217, @return Description of the Returned Value
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,218, @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,239,* @since 1.14
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,220,rotected static ZipLong toDosTime( Date time )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,222,alendar cal = Calendar.getInstance();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,223,al.setTime( time );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,224,nt year = cal.get(Calendar.YEAR);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,225,nt month = cal.get(Calendar.MONTH) + 1;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,226,f( year < 1980 )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,228,eturn DOS_TIME_MIN;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,230,ong value = ( ( year - 1980 ) << 25 )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,231, ( month << 21 )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,232, ( cal.get(Calendar.DAY_OF_MONTH) << 16 )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,233, ( cal.get(Calendar.HOUR_OF_DAY) << 11 )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,234, ( cal.get(Calendar.MINUTE) << 5 )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,235, ( cal.get(Calendar.SECOND) >> 1 );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,237,yte[] result = new byte[ 4 ];
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,238,esult[ 0 ] = (byte)( ( value & 0xFF ) );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,239,esult[ 1 ] = (byte)( ( value & 0xFF00 ) >> 8 );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,240,esult[ 2 ] = (byte)( ( value & 0xFF0000 ) >> 16 );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,241,esult[ 3 ] = (byte)( ( value & 0xFF000000l ) >> 24 );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,242,eturn new ZipLong( result );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,241,private RandomAccessFile raf = null;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,246, Set the file comment.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,248, @param comment The new Comment value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,244,* Creates a new ZIP OutputStream filtering the underlying stream.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,245,* @param out the outputstream to zip
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,251,ublic void setComment( String comment )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,253,_comment = comment;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,248,public ZipOutputStream(OutputStream out) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,249,super(out);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,257, The encoding to use for filenames and the file comment. <p>
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,259, For a list of possible values see <a
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,260," href=""http://java.sun.com/products/jdk/1.2/docs/guide/internat/encoding.doc.html"">"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,261, http://java.sun.com/products/jdk/1.2/docs/guide/internat/encoding.doc.html
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,262, </a>. Defaults to the platform's default character encoding.</p>
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,264, @param encoding The new Encoding value
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,265, @since 1.3
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,267,ublic void setEncoding( String encoding )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,269,_encoding = encoding;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,253,* Creates a new ZIP OutputStream writing to a File.  Will use
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,254,* random access if possible.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,255,* @param file the file to zip to
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,256,* @since 1.14
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,257,* @throws IOException on error
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,259,public ZipOutputStream(File file) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,260,super(null);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,262,try {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,263,"raf = new RandomAccessFile(file, ""rw"");"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,264,raf.setLength(0);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,265,} catch (IOException e) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,266,if (raf != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,267,try {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,268,raf.close();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,269,} catch (IOException inner) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,270,// ignore
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,272,raf = null;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,274,out = new FileOutputStream(file);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,273, Sets the compression level for subsequent entries. <p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,279,"* This method indicates whether this archive is writing to a seekable stream (i.e., to a random"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,280,* access file).
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,275, Default is Deflater.DEFAULT_COMPRESSION.</p>
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,277, @param level The new Level value
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,278, @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,282,"* <p>For seekable streams, you don't need to calculate the CRC or"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,283,* uncompressed size for {@link #STORED} entries before
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,284,* invoking {@link #putNextEntry}.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,285,* @return true if seekable
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,286,* @since 1.17
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,280,ublic void setLevel( int level )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,282,_level = level;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,288,public boolean isSeekable() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,289,return raf != null;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,286, Sets the default compression method for subsequent entries. <p>
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,288, Default is DEFLATED.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,293,* The encoding to use for filenames and the file comment.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,290, @param method The new Method value
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,291, @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,295,* <p>For a list of possible values see <a
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,296,"* href=""http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html"">http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html</a>."
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,297,* Defaults to the platform's default character encoding.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,298,* @param encoding the encoding value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,299,* @since 1.3
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,293,ublic void setMethod( final int method )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,295,_method = method;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,301,public void setEncoding(String encoding) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,302,this.encoding = encoding;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,304,ublic String getEncoding()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,306,eturn m_encoding;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,312,public String getEncoding() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,313,return encoding;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,317,* Finishs writing the contents and closes this as well as the
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,318,* underlying stream.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,320,* @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,321,* @throws IOException on error
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,323,public void finish() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,324,closeEntry();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,325,cdOffset = written;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,326,"for (int i = 0, entriesSize = entries.size(); i < entriesSize; i++) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,327,writeCentralFileHeader((ZipEntry) entries.elementAt(i));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,329,cdLength = written - cdOffset;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,330,writeCentralDirectoryEnd();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,331,offsets.clear();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,332,entries.removeAllElements();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,312, @throws IOException if an IO failure causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,339,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,315,ublic void closeEntry()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,316,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,318,f( m_entry == null )
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,341,public void closeEntry() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,342,if (entry == null) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,323,ong realCrc = m_crc.getValue();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,324,_crc.reset();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,346,long realCrc = crc.getValue();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,347,crc.reset();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,326,f( m_entry.getMethod() == DEFLATED )
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,349,if (entry.getMethod() == DEFLATED) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,329,hile( !def.finished() )
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,351,while (!def.finished()) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,334,_entry.setSize( def.getTotalIn() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,335,_entry.setComprSize( def.getTotalOut() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,336,_entry.setCrc( realCrc );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,355,entry.setSize(adjustToLong(def.getTotalIn()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,356,entry.setCompressedSize(adjustToLong(def.getTotalOut()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,357,entry.setCrc(realCrc);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,340,_written += m_entry.getCompressedSize();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,342,lse
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,344,f( m_entry.getCrc() != realCrc )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,346,"hrow new ZipException( ""bad CRC checksum for entry """
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,347," m_entry.getName() + "": """
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,348, Long.toHexString( m_entry.getCrc() )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,349," "" instead of """
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,350, Long.toHexString( realCrc ) );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,361,written += entry.getCompressedSize();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,362,} else if (raf == null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,363,if (entry.getCrc() != realCrc) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,364,"throw new ZipException(""bad CRC checksum for entry """
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,365,"+ entry.getName() + "": """
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,366,+ Long.toHexString(entry.getCrc())
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,367,"+ "" instead of """
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,368,+ Long.toHexString(realCrc));
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,353,f( m_entry.getSize() != m_written - m_dataStart )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,355,"hrow new ZipException( ""bad size for entry """
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,356," m_entry.getName() + "": """
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,357, m_entry.getSize()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,358," "" instead of """
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,359, ( m_written - m_dataStart ) );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,371,if (entry.getSize() != written - dataStart) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,372,"throw new ZipException(""bad size for entry """
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,373,"+ entry.getName() + "": """
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,374,+ entry.getSize()
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,375,"+ "" instead of """
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,376,+ (written - dataStart));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,378,} else { /* method is STORED and we used RandomAccessFile */
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,379,long size = written - dataStart;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,381,entry.setSize(size);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,382,entry.setCompressedSize(size);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,383,entry.setCrc(realCrc);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,364,riteDataDescriptor( m_entry );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,365,_entry = null;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,386,"// If random access output, write the local file header containing"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,387,// the correct CRC and compressed/uncompressed sizes
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,388,if (raf != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,389,long save = raf.getFilePointer();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,369," Found out by experiment, that DeflaterOutputStream.close()"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,370, will call finish() - so we don't need to override close
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,371, ourselves.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,374, Finishs writing the contents and closes this as well as the underlying
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,375, stream.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,377, @throws IOException if an IO failure causes operation to fail
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,378, @since 1.1
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,380,ublic void finish()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,381,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,383,loseEntry();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,384,_cdOffset = new ZipLong( m_written );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,385,inal int size = m_entries.size();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,386,or( int i = 0; i < size; i++ )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,388,inal ZipArchiveEntry entry = (ZipArchiveEntry)m_entries.get( i );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,389,riteCentralFileHeader( entry );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,391,raf.seek(localDataStart);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,392,writeOut(ZipLong.getBytes(entry.getCrc()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,393,writeOut(ZipLong.getBytes(entry.getCompressedSize()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,394,writeOut(ZipLong.getBytes(entry.getSize()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,395,raf.seek(save);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,391,_cdLength = new ZipLong( m_written - m_cdOffset.getValue() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,392,riteCentralDirectoryEnd();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,393,_offsets.clear();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,394,_entries.clear();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,398,writeDataDescriptor(entry);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,399,entry = null;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,400, @param entry the entry
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,401, @throws IOException if an IO failure causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,404,* @param ze the entry to write
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,406,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,404,ublic void putNextEntry( final ZipArchiveEntry entry )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,405,hrows IOException
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,408,public void putNextEntry(ZipEntry ze) throws IOException {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,409,_entry = entry;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,410,_entries.add( m_entry );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,411,entry = ze;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,412,entries.addElement(entry);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,412,f( m_entry.getMethod() == -1 )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,413,// not specified
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,414,_entry.setMethod( m_method );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,414,if (entry.getMethod() == -1) { // not specified
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,415,entry.setMethod(method);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,417,f( m_entry.getTime() == -1 )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,418,// not specified
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,419,_entry.setTime( System.currentTimeMillis() );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,418,if (entry.getTime() == -1) { // not specified
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,419,entry.setTime(System.currentTimeMillis());
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,422,f( m_entry.getMethod() == STORED )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,424,f( m_entry.getSize() == -1 )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,426,"hrow new ZipException( ""uncompressed size is required for STORED method"" );"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,422,// Size/CRC not required if RandomAccessFile is used
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,423,if (entry.getMethod() == STORED && raf == null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,424,if (entry.getSize() == -1) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,425,"throw new ZipException(""uncompressed size is required for"""
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,426,"+ "" STORED method when not writing to a"""
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,427,"+ "" file"");"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,428,f( m_entry.getCrc() == -1 )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,430,"hrow new ZipException( ""crc checksum is required for STORED method"" );"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,429,if (entry.getCrc() == -1) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,430,"throw new ZipException(""crc checksum is required for STORED"""
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,431,"+ "" method when not writing to a file"");"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,432,_entry.setComprSize( m_entry.getSize() );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,433,entry.setCompressedSize(entry.getSize());
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,434,lse
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,436,ef.setLevel( m_level );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,436,if (entry.getMethod() == DEFLATED && hasCompressionLevelChanged) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,437,def.setLevel(level);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,438,hasCompressionLevelChanged = false;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,438,riteLocalFileHeader( m_entry );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,440,writeLocalFileHeader(entry);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,442, Writes bytes to ZIP entry. <p>
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,444," Override is necessary to support STORED entries, as well as calculationg"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,445, CRC automatically for DEFLATED entries.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,444,* Set the file comment.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,445,* @param comment the comment
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,446,* @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,448,public void setComment(String comment) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,449,this.comment = comment;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,453,* Sets the compression level for subsequent entries.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,447, @param buffer the buffer to write to
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,448, @param offset the offset to write to
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,449, @param length the length of data to write
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,450, @exception IOException if an IO error causes operation to fail
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,455,* <p>Default is Deflater.DEFAULT_COMPRESSION.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,456,* @param level the compression level.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,457,* @throws IllegalArgumentException if an invalid compression level is specified.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,458,* @since 1.1
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,452,"ublic void write( final byte[] buffer,"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,453,"inal int offset,"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,454,inal int length )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,455,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,457,f( m_entry.getMethod() == DEFLATED )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,459,"uper.write( buffer, offset, length );"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,461,lse
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,463,"ut.write( buffer, offset, length );"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,464,_written += length;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,460,public void setLevel(int level) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,461,if (level < Deflater.DEFAULT_COMPRESSION
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,462,|| level > Deflater.BEST_COMPRESSION) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,463,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,464,"""Invalid compression level: "" + level);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,466,"_crc.update( buffer, offset, length );"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,466,hasCompressionLevelChanged = (this.level != level);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,467,this.level = level;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,470, Retrieve the bytes for the given String in the encoding set for this
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,471, Stream.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,471,* Sets the default compression method for subsequent entries.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,473, @param name the name to decode
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,474, @return the bytes for string
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,475, @exception ZipException if fail to retrieve bytes for specified string
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,476, @since 1.3
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,473,* <p>Default is DEFLATED.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,474,* @param method an <code>int</code> from java.util.zip.ZipEntry
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,475,* @since 1.1
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,478,rotected byte[] getBytes( String name )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,479,hrows ZipException
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,481,f( m_encoding == null )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,483,eturn name.getBytes();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,485,lse
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,487,ry
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,489,eturn name.getBytes( m_encoding );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,491,atch( UnsupportedEncodingException uee )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,493,hrow new ZipException( uee.getMessage() );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,477,public void setMethod(int method) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,478,this.method = method;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,482,* Writes bytes to ZIP entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,483,* @param b the byte array to write
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,484,* @param offset the start position to write from
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,485,* @param length the number of bytes to write
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,486,* @throws IOException on error
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,488,"public void write(byte[] b, int offset, int length) throws IOException {"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,489,if (entry.getMethod() == DEFLATED) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,490,if (length > 0) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,491,if (!def.finished()) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,492,if (length <= DEFLATER_BLOCK_SIZE) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,493,"def.setInput(b, offset, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,494,deflateUntilInputIsNeeded();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,495,} else {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,496,final int fullblocks = length / DEFLATER_BLOCK_SIZE;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,497,for (int i = 0; i < fullblocks; i++) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,498,"def.setInput(b, offset + i * DEFLATER_BLOCK_SIZE,"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,499,DEFLATER_BLOCK_SIZE);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,500,deflateUntilInputIsNeeded();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,502,final int done = fullblocks * DEFLATER_BLOCK_SIZE;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,503,if (done < length) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,504,"def.setInput(b, offset + done, length - done);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,505,deflateUntilInputIsNeeded();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,510,} else {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,511,"writeOut(b, offset, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,512,written += length;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,514,"crc.update(b, offset, length);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,499, Writes the &quot;End of central dir record&quot;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,518,* Writes a single byte to ZIP entry.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,501, @exception IOException when an IO erro causes operation to fail
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,502, @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,520,* <p>Delegates to the three arg method.</p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,521,* @param b the byte to write
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,522,* @since 1.14
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,523,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,504,rotected void writeCentralDirectoryEnd()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,505,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,507,ut.write( EOCD_SIG.getBytes() );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,525,public void write(int b) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,526,byte[] buff = new byte[1];
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,527,buff[0] = (byte) (b & BYTE_MASK);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,528,"write(buff, 0, 1);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,509,/ disk numbers
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,510,ut.write( ZERO );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,511,ut.write( ZERO );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,532,* Closes this output stream and releases any system resources
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,533,* associated with the stream.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,535,* @exception  IOException  if an I/O error occurs.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,536,* @since 1.14
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,538,public void close() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,539,finish();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,513,/ number of entries
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,514,yte[] num = ( new ZipShort( m_entries.size() ) ).getBytes();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,515,ut.write( num );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,516,ut.write( num );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,541,if (raf != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,542,raf.close();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,544,if (out != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,545,out.close();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,518,/ length and location of CD
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,519,ut.write( m_cdLength.getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,520,ut.write( m_cdOffset.getBytes() );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,550,* Flushes this output stream and forces any buffered output bytes
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,551,* to be written out to the stream.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,553,* @exception  IOException  if an I/O error occurs.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,554,* @since 1.14
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,556,public void flush() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,557,if (out != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,558,out.flush();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,522,/ ZIP file comment
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,523,yte[] data = getBytes( m_comment );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,524,ut.write( ( new ZipShort( data.length ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,525,ut.write( data );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,563,* Various ZIP constants
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,566,* local file header signature
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,568,* @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,570,protected static final byte[] LFH_SIG = ZipLong.getBytes(0X04034B50L);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,572,* data descriptor signature
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,574,* @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,576,protected static final byte[] DD_SIG = ZipLong.getBytes(0X08074B50L);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,578,* central file header signature
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,580,* @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,582,protected static final byte[] CFH_SIG = ZipLong.getBytes(0X02014B50L);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,584,* end of central dir signature
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,586,* @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,588,protected static final byte[] EOCD_SIG = ZipLong.getBytes(0X06054B50L);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,591,* Writes next block of compressed data to the output stream.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,592,* @throws IOException on error
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,594,* @since 1.14
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,596,protected final void deflate() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,597,"int len = def.deflate(buf, 0, buf.length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,598,if (len > 0) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,599,"writeOut(buf, 0, len);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,529, Writes the central file header entry
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,604,* Writes the local file header entry
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,605,* @param ze the entry to write
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,606,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,531, @param entry the zip entry
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,532, @throws IOException when an IO error causes operation to fail
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,535,rotected void writeCentralFileHeader( final ZipArchiveEntry entry )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,536,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,538,ut.write( CFH_SIG.getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,539,_written += 4;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,610,protected void writeLocalFileHeader(ZipEntry ze) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,611,"offsets.put(ze, ZipLong.getBytes(written));"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,541,/ version made by
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,542,ut.write( ( new ZipShort( 20 ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,543,_written += 2;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,613,writeOut(LFH_SIG);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,614,written += WORD;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,616,//store method in local variable to prevent multiple method calls
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,617,final int zipMethod = ze.getMethod();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,547,f( entry.getMethod() == DEFLATED )
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,621,// CheckStyle:MagicNumber OFF
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,622,if (zipMethod == DEFLATED && raf == null) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,551,ut.write( ( new ZipShort( 20 ) ).getBytes() );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,625,writeOut(ZipShort.getBytes(20));
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,554,ut.write( ( new ZipShort( 8 ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,556,lse
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,558,ut.write( ( new ZipShort( 10 ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,559,ut.write( ZERO );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,628,writeOut(ZipShort.getBytes(8));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,629,} else {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,630,writeOut(ZipShort.getBytes(10));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,631,writeOut(ZERO);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,561,_written += 4;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,633,// CheckStyle:MagicNumber ON
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,634,written += WORD;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,564,ut.write( ( new ZipShort( entry.getMethod() ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,565,_written += 2;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,637,writeOut(ZipShort.getBytes(zipMethod));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,638,written += SHORT;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,568,ut.write( toDosTime( new Date( entry.getTime() ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,569,_written += 4;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,641,writeOut(toDosTime(ze.getTime()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,642,written += WORD;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,574,ut.write( ( new ZipLong( entry.getCrc() ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,575,ut.write( ( new ZipLong( entry.getCompressedSize() ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,576,ut.write( ( new ZipLong( entry.getSize() ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,577,_written += 12;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,647,localDataStart = written;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,648,if (zipMethod == DEFLATED || raf != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,649,writeOut(LZERO);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,650,writeOut(LZERO);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,651,writeOut(LZERO);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,652,} else {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,653,writeOut(ZipLong.getBytes(ze.getCrc()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,654,writeOut(ZipLong.getBytes(ze.getSize()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,655,writeOut(ZipLong.getBytes(ze.getSize()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,657,// CheckStyle:MagicNumber OFF
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,658,written += 12;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,659,// CheckStyle:MagicNumber ON
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,580,yte[] name = getBytes( entry.getName() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,581,ut.write( ( new ZipShort( name.length ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,582,_written += 2;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,662,byte[] name = getBytes(ze.getName());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,663,writeOut(ZipShort.getBytes(name.length));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,664,written += SHORT;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,585,yte[] extra = entry.getCentralDirectoryExtra();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,586,ut.write( ( new ZipShort( extra.length ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,587,_written += 2;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,589,/ file comment length
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,590,tring comm = entry.getComment();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,591,f( comm == null )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,593,"omm = """";"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,595,yte[] comment = getBytes( comm );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,596,ut.write( ( new ZipShort( comment.length ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,597,_written += 2;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,599,/ disk number start
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,600,ut.write( ZERO );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,601,_written += 2;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,603,/ internal file attributes
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,604,ut.write( ( new ZipShort( entry.getInternalAttributes() ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,605,_written += 2;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,607,/ external file attributes
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,608,ut.write( ( new ZipLong( entry.getExternalAttributes() ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,609,_written += 4;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,611,/ relative offset of LFH
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,612,ut.write( ( (ZipLong)m_offsets.get( entry ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,613,_written += 4;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,667,byte[] extra = ze.getLocalFileDataExtra();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,668,writeOut(ZipShort.getBytes(extra.length));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,669,written += SHORT;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,616,ut.write( name );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,617,_written += name.length;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,672,writeOut(name);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,673,written += name.length;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,620,ut.write( extra );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,621,_written += extra.length;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,676,writeOut(extra);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,677,written += extra.length;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,623,/ file comment
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,624,ut.write( comment );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,625,_written += comment.length;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,679,dataStart = written;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,629, Writes the data descriptor entry
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,683,* Writes the data descriptor entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,684,* @param ze the entry to write
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,685,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,631, @param ze Description of Parameter
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,632, @throws IOException if an IO failure causes operation to fail
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,635,rotected void writeDataDescriptor( ZipArchiveEntry ze )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,636,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,638,f( ze.getMethod() != DEFLATED )
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,689,protected void writeDataDescriptor(ZipEntry ze) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,690,if (ze.getMethod() != DEFLATED || raf != null) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,642,ut.write( DD_SIG.getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,643,ut.write( ( new ZipLong( m_entry.getCrc() ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,644,ut.write( ( new ZipLong( m_entry.getCompressedSize() ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,645,ut.write( ( new ZipLong( m_entry.getSize() ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,646,_written += 16;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,693,writeOut(DD_SIG);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,694,writeOut(ZipLong.getBytes(entry.getCrc()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,695,writeOut(ZipLong.getBytes(entry.getCompressedSize()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,696,writeOut(ZipLong.getBytes(entry.getSize()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,697,// CheckStyle:MagicNumber OFF
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,698,written += 16;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,699,// CheckStyle:MagicNumber ON
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,650, Writes the local file header entry
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,703,* Writes the central file header entry.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,704,* @param ze the entry to write
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,705,* @throws IOException on error
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,652, @param entry the zip entry
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,653, @exception IOException when an IO error causes operation to fail
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,656,rotected void writeLocalFileHeader( final ZipArchiveEntry entry )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,657,hrows IOException
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,659,"_offsets.put( entry, new ZipLong( m_written ) );"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,709,protected void writeCentralFileHeader(ZipEntry ze) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,710,writeOut(CFH_SIG);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,711,written += WORD;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,661,ut.write( LFH_SIG.getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,662,_written += 4;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,713,// version made by
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,714,// CheckStyle:MagicNumber OFF
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,715,writeOut(ZipShort.getBytes((ze.getPlatform() << 8) | 20));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,716,written += SHORT;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,666,f( entry.getMethod() == DEFLATED )
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,720,if (ze.getMethod() == DEFLATED && raf == null) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,670,ut.write( ( new ZipShort( 20 ) ).getBytes() );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,723,writeOut(ZipShort.getBytes(20));
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,673,ut.write( ( new ZipShort( 8 ) ).getBytes() );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,726,writeOut(ZipShort.getBytes(8));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,727,} else {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,728,writeOut(ZipShort.getBytes(10));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,729,writeOut(ZERO);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,675,lse
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,677,ut.write( ( new ZipShort( 10 ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,678,ut.write( ZERO );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,680,_written += 4;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,731,// CheckStyle:MagicNumber ON
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,732,written += WORD;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,683,ut.write( ( new ZipShort( entry.getMethod() ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,684,_written += 2;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,735,writeOut(ZipShort.getBytes(ze.getMethod()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,736,written += SHORT;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,687,ut.write( toDosTime( new Date( entry.getTime() ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,688,_written += 4;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,739,writeOut(toDosTime(ze.getTime()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,740,written += WORD;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,693,f( entry.getMethod() == DEFLATED )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,695,ut.write( LZERO );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,696,ut.write( LZERO );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,697,ut.write( LZERO );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,699,lse
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,701,ut.write( ( new ZipLong( entry.getCrc() ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,702,ut.write( ( new ZipLong( entry.getSize() ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,703,ut.write( ( new ZipLong( entry.getSize() ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,705,_written += 12;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,745,writeOut(ZipLong.getBytes(ze.getCrc()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,746,writeOut(ZipLong.getBytes(ze.getCompressedSize()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,747,writeOut(ZipLong.getBytes(ze.getSize()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,748,// CheckStyle:MagicNumber OFF
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,749,written += 12;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,750,// CheckStyle:MagicNumber ON
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,708,yte[] name = getBytes( entry.getName() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,709,ut.write( ( new ZipShort( name.length ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,710,_written += 2;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,753,byte[] name = getBytes(ze.getName());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,754,writeOut(ZipShort.getBytes(name.length));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,755,written += SHORT;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,713,yte[] extra = entry.getLocalFileDataExtra();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,714,ut.write( ( new ZipShort( extra.length ) ).getBytes() );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,715,_written += 2;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,758,byte[] extra = ze.getCentralDirectoryExtra();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,759,writeOut(ZipShort.getBytes(extra.length));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,760,written += SHORT;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,762,// file comment length
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,763,String comm = ze.getComment();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,764,if (comm == null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,765,"comm = """";"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,767,byte[] commentB = getBytes(comm);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,768,writeOut(ZipShort.getBytes(commentB.length));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,769,written += SHORT;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,771,// disk number start
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,772,writeOut(ZERO);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,773,written += SHORT;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,775,// internal file attributes
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,776,writeOut(ZipShort.getBytes(ze.getInternalAttributes()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,777,written += SHORT;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,779,// external file attributes
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,780,writeOut(ZipLong.getBytes(ze.getExternalAttributes()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,781,written += WORD;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,783,// relative offset of LFH
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,784,writeOut((byte[]) offsets.get(ze));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,785,written += WORD;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,718,ut.write( name );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,719,_written += name.length;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,788,writeOut(name);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,789,written += name.length;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,722,ut.write( extra );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,723,_written += extra.length;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,792,writeOut(extra);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,793,written += extra.length;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,795,// file comment
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,796,writeOut(commentB);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,797,written += commentB.length;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,801,* Writes the &quot;End of central dir record&quot;.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,802,* @throws IOException on error
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,804,* @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,806,protected void writeCentralDirectoryEnd() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,807,writeOut(EOCD_SIG);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,809,// disk numbers
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,810,writeOut(ZERO);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,811,writeOut(ZERO);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,813,// number of entries
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,814,byte[] num = ZipShort.getBytes(entries.size());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,815,writeOut(num);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,816,writeOut(num);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,818,// length and location of CD
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,819,writeOut(ZipLong.getBytes(cdLength));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,820,writeOut(ZipLong.getBytes(cdOffset));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,822,// ZIP file comment
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,823,byte[] data = getBytes(comment);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,824,writeOut(ZipShort.getBytes(data.length));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,825,writeOut(data);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,829,* Smallest date/time ZIP can handle.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,831,* @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,833,private static final byte[] DOS_TIME_MIN = ZipLong.getBytes(0x00002100L);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,836,* Convert a Date object to a DOS date/time field.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,837,* @param time the <code>Date</code> to convert
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,838,* @return the date as a <code>ZipLong</code>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,839,* @since 1.1
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,841,protected static ZipLong toDosTime(Date time) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,842,return new ZipLong(toDosTime(time.getTime()));
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,846,* Convert a Date object to a DOS date/time field.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,848,* <p>Stolen from InfoZip's <code>fileio.c</code></p>
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,849,* @param t number of milliseconds since the epoch
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,850,* @return the date as a byte array
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,851,* @since 1.26
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,853,protected static byte[] toDosTime(long t) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,854,Date time = new Date(t);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,855,// CheckStyle:MagicNumberCheck OFF - I do not think that using constants
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,856,//                                   here will improve the readablity
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,857,int year = time.getYear() + 1900;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,858,if (year < 1980) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,859,return DOS_TIME_MIN;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,861,int month = time.getMonth() + 1;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,862,long value =  ((year - 1980) << 25)
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,863,|         (month << 21)
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,864,|         (time.getDate() << 16)
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,865,|         (time.getHours() << 11)
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,866,|         (time.getMinutes() << 5)
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,867,|         (time.getSeconds() >> 1);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,868,return ZipLong.getBytes(value);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,869,// CheckStyle:MagicNumberCheck ON
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,873,* Retrieve the bytes for the given String in the encoding set for
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,874,* this Stream.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,875,* @param name the string to get bytes from
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,876,* @return the bytes as a byte array
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,877,* @throws ZipException on error
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,879,* @since 1.3
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,881,protected byte[] getBytes(String name) throws ZipException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,882,if (encoding == null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,883,return name.getBytes();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,884,} else {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,885,try {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,886,return name.getBytes(encoding);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,887,} catch (UnsupportedEncodingException uee) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,888,throw new ZipException(uee.getMessage());
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,894,* Write bytes to output or random access file.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,895,* @param data the byte array to write
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,896,* @throws IOException on error
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,898,* @since 1.14
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,900,protected final void writeOut(byte[] data) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,901,"writeOut(data, 0, data.length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,905,* Write bytes to output or random access file.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,906,* @param data the byte array to write
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,907,* @param offset the start position to write from
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,908,* @param length the number of bytes to write
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,909,* @throws IOException on error
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,911,* @since 1.14
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,913,"protected final void writeOut(byte[] data, int offset, int length)"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,914,throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,915,if (raf != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,916,"raf.write(data, offset, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,917,} else {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,918,"out.write(data, offset, length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,923,* Assumes a negative integer really is a positive integer that
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,924,* has wrapped around and re-creates the original value.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,925,* @param i the value to treat as unsigned int.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,926,* @return the unsigned int as a long.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,927,* @since 1.34
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,929,protected static long adjustToLong(int i) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,930,if (i < 0) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,931,return 2 * ((long) Integer.MAX_VALUE) + 2 + i;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,932,} else {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,933,return i;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,725,_dataStart = m_written;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,937,private void deflateUntilInputIsNeeded() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,938,while (!def.needsInput()) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipOutputStream.java,939,deflate();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,3, or more contributor license agreements.  See the NOTICE file
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,4, distributed with this work for additional information
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,6," to you under the Apache License, Version 2.0 (the"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,7," ""License""); you may not use this file except in compliance"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,8, with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,3,*  contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,4,*  this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,7,*  the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,10, http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,14,*  See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,15,*  limitations under the License.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,12," Unless required by applicable law or agreed to in writing,"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,13, software distributed under the License is distributed on an
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,15," KIND, either express or implied.  See the License for the"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,16, specific language governing permissions and limitations
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,17, under the License.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,22, Utility class that represents a two byte integer with conversion rules for
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,23, the big endian byte order of ZIP files.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,21,* Utility class that represents a two byte integer with conversion
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,22,* rules for the big endian byte order of ZIP files.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,25,ublic final class ZipShort implements Cloneable
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,27,rivate int m_value;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,25,public final class ZipShort implements Cloneable {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,26,private static final int BYTE_MASK = 0xFF;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,27,private static final int BYTE_1_MASK = 0xFF00;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,28,private static final int BYTE_1_SHIFT = 8;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,30,private int value;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,32, @param value Description of Parameter
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,34,* @param value the int to store as a ZipShort
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,35,ublic ZipShort( int value )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,37,his.m_value = value;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,37,public ZipShort (int value) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,38,this.value = value;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,43, @param bytes Description of Parameter
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,43,* @param bytes the bytes to store as a ZipShort
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,46,ublic ZipShort( byte[] bytes )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,48,"his( bytes, 0 );"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,46,public ZipShort (byte[] bytes) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,47,"this(bytes, 0);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,54, @param bytes Description of Parameter
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,55, @param offset Description of Parameter
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,52,* @param bytes the bytes to store as a ZipShort
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,53,* @param offset the offset to start
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,58,"ublic ZipShort( byte[] bytes, int offset )"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,60,_value = ( bytes[ offset + 1 ] << 8 ) & 0xFF00;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,61,_value += ( bytes[ offset ] & 0xFF );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,56,"public ZipShort (byte[] bytes, int offset) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,57,"value = ZipShort.getValue(bytes, offset);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,67, @return The Bytes value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,62,* @return the value as a a two byte array in big endian byte order
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,70,ublic byte[] getBytes()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,72,yte[] result = new byte[ 2 ];
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,73,esult[ 0 ] = (byte)( m_value & 0xFF );
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,74,esult[ 1 ] = (byte)( ( m_value & 0xFF00 ) >> 8 );
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,65,public byte[] getBytes() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,66,byte[] result = new byte[2];
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,67,result[0] = (byte) (value & BYTE_MASK);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,68,result[1] = (byte) ((value & BYTE_1_MASK) >> BYTE_1_SHIFT);
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,81, @return The Value value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,74,* @return value as a Java int
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,84,ublic int getValue()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,86,eturn m_value;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,77,public int getValue() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,78,return value;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,82,* Get value as two bytes in big endian byte order.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,83,* @param value the Java int to convert to bytes
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,84,* @return the converted int as a byte array in big endian byte order
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,86,public static byte[] getBytes(int value) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,87,byte[] result = new byte[2];
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,88,result[0] = (byte) (value & BYTE_MASK);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,89,result[1] = (byte) ((value & BYTE_1_MASK) >> BYTE_1_SHIFT);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,90,return result;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,94,* Helper method to get the value as a java int from two bytes starting at given array offset
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,95,* @param bytes the array of bytes
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,96,* @param offset the offset to start
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,97,* @return the correspondanding java int value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,99,"public static int getValue(byte[] bytes, int offset) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,100,int value = (bytes[offset + 1] << BYTE_1_SHIFT) & BYTE_1_MASK;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,101,value += (bytes[offset] & BYTE_MASK);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,102,return value;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,106,* Helper method to get the value as a java int from a two-byte array
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,107,* @param bytes the array of bytes
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,108,* @return the correspondanding java int value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,110,public static int getValue(byte[] bytes) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,111,"return getValue(bytes, 0);"
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,92, @param o Description of Parameter
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,93, @return Description of the Returned Value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,116,* @param o an object to compare
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,117,* @return true if the objects are equal
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,96,ublic boolean equals( Object o )
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,98,f( o == null || !( o instanceof ZipShort ) )
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,120,public boolean equals(Object o) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,121,if (o == null || !(o instanceof ZipShort)) {
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,102,eturn m_value == ( (ZipShort)o ).getValue();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,124,return value == ((ZipShort) o).getValue();
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,108, @return Description of the Returned Value
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,129,* @return the value stored in the ZipShort
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,111,ublic int hashCode()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,113,eturn m_value;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,132,public int hashCode() {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java,133,return value;
