is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java,78,* The finish() method throws an Exception if the user forgets to close the entry
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,156,loseArchiveEntry();
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,170,/ Nothing to do
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,169,if(haveUnclosedEntry) {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,170,"throw new IOException(""This archives contains unclosed entries."");"
False,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,318,loseArchiveEntry();
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,318,"throw new IOException(""This archives contains unclosed entries."");"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,54,/* Indicates if putArchiveEntry has been called without closeArchiveEntry */
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,55,private boolean haveUnclosedEntry = false;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,113,if(haveUnclosedEntry) {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,114,"throw new IOException(""This archives contains unclosed entries."");"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,191,haveUnclosedEntry = true;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,222,haveUnclosedEntry = false;
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,332, Finishs writing the contents and closes this as well as the
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,333, underlying stream.
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,334, @throws IOException on error
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,331,/* (non-Javadoc)
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,332,* @see org.apache.commons.compress.archivers.ArchiveOutputStream#finish()
False,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,337,loseArchiveEntry();
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,335,if(entry != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,336,"throw new IOException(""This archives contains unclosed entries."");"
True,src/test/java/org/apache/commons/compress/IOMethodsTest.java,src/test/java/org/apache/commons/compress/IOMethodsTest.java,107,aos1.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/IOMethodsTest.java,src/test/java/org/apache/commons/compress/IOMethodsTest.java,111,aos2.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/IOMethodsTest.java,src/test/java/org/apache/commons/compress/IOMethodsTest.java,115,aos3.closeArchiveEntry();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,1,package org.apache.commons.compress.archivers;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,3,import java.io.ByteArrayOutputStream;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,4,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,5,import java.io.OutputStream;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,7,import org.apache.commons.compress.AbstractTestCase;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,8,import org.apache.commons.compress.archivers.ar.ArArchiveEntry;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,9,import org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,10,import org.apache.commons.compress.archivers.jar.JarArchiveEntry;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,11,import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,12,import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,14,public class ArchiveOutputStreamTest extends AbstractTestCase {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,16,protected void setUp() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,17,super.setUp();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,20,protected void tearDown() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,21,super.tearDown();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,24,public void testFinish() throws Exception {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,25,OutputStream out1 = new ByteArrayOutputStream();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,27,"ArchiveOutputStream aos1 = factory.createArchiveOutputStream(""zip"", out1);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,28,"aos1.putArchiveEntry(new ZipArchiveEntry(""dummy""));"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,29,try {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,30,aos1.finish();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,31,"fail(""After putArchive should follow closeArchive"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,32,} catch (IOException io) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,33,// Exception expected
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,36,"aos1 = factory.createArchiveOutputStream(""jar"", out1);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,37,"aos1.putArchiveEntry(new JarArchiveEntry(""dummy""));"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,38,try {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,39,aos1.finish();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,40,"fail(""After putArchive should follow closeArchive"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,41,} catch (IOException io) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,42,// Exception expected
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,45,"aos1 = factory.createArchiveOutputStream(""ar"", out1);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,46,"aos1.putArchiveEntry(new ArArchiveEntry(""dummy"", 100));"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,47,try {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,48,aos1.finish();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,49,"fail(""After putArchive should follow closeArchive"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,50,} catch (IOException io) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,51,// Exception expected
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,54,"aos1 = factory.createArchiveOutputStream(""cpio"", out1);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,55,"aos1.putArchiveEntry(new CpioArchiveEntry(""dummy""));"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,56,try {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,57,aos1.finish();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,58,"fail(""After putArchive should follow closeArchive"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,59,} catch (IOException io) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,60,// Exception expected
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,63,"aos1 = factory.createArchiveOutputStream(""tar"", out1);"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,64,"aos1.putArchiveEntry(new TarArchiveEntry(""dummy""));"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,65,try {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,66,aos1.finish();
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,67,"fail(""After putArchive should follow closeArchive"");"
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,68,} catch (IOException io) {
True,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java,69,// Exception expected
