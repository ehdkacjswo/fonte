is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java,21,import java.io.File;
True,src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java,60,* Create an archive entry using the inputFile and entryName provided.
True,src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java,62,* @param inputFile
True,src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java,63,* @param entryName
True,src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java,64,* @return the ArchiveEntry set up with details from the file
True,src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java,66,* @throws IOException
True,src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java,68,"public abstract ArchiveEntry createArchiveEntry(File inputFile, String entryName) throws IOException;"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,21,import java.io.File;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,57,ublic long getSize() {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,59,"public ArArchiveEntry(File inputFile, String entryName) {"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,60,// TODO sort out mode
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,61,"this(entryName, inputFile.length(), 0, 0, 0, inputFile.lastModified());"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,64,public long getSize() {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,21,import java.io.File;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,102,"hrow new IOException(""filename too long"");"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,103,"throw new IOException(""filename too long, > 16 chars: ""+n);"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,160,"public ArchiveEntry createArchiveEntry(File inputFile, String entryName)"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,161,throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,162,"return new ArArchiveEntry(inputFile, entryName);"
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,21,import java.io.File;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,254,"public CpioArchiveEntry(File inputFile, String entryName) {"
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,255,"this(entryName, inputFile.length());"
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,256,long mode=0;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,257,if (inputFile.isDirectory()){
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,258,mode |= C_ISDIR;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,259,} else if (inputFile.isFile()){
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,260,mode |= C_ISREG;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,261,} else {
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,262,"throw new IllegalArgumentException(""Cannot determine type of file ""+inputFile.getName());"
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,264,// TODO set other fields as needed
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java,265,setMode(mode);
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,21,import java.io.File;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,383,"public ArchiveEntry createArchiveEntry(File inputFile, String entryName)"
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,384,throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,385,"return new CpioArchiveEntry(inputFile, entryName);"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,196,* The name is set from the normalized file path.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,201,"this(file, normalizeFileName(file.getPath()));"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,205,"* Construct an entry for a file. File is set to file, and the"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,206,* header is constructed from information from the file.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,208,* @param file The file that the entry represents.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,209,* @param fileName the name to be used for the entry.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,211,"public TarArchiveEntry(File file, String fileName) {"
False,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,204,tring fileName = normalizeFileName(file.getPath());
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,21,import java.io.File;
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,340,"public ArchiveEntry createArchiveEntry(File inputFile, String entryName)"
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,341,throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java,342,"return new TarArchiveEntry(inputFile, entryName);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,20,import java.io.File;
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,88,"public ZipArchiveEntry(File inputFile, String entryName) {"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,89,this(entryName);
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java,90,// TODO are there any other fields we can set here?
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,914,"public ArchiveEntry createArchiveEntry(File inputFile, String entryName)"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,915,throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,916,"return new ZipArchiveEntry(inputFile, entryName);"
