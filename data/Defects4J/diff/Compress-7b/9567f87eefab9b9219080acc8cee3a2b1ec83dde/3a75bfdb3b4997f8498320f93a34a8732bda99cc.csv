is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,21,import java.io.UnsupportedEncodingException;
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,54,* Check if buffer contents matches Ascii String.
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,56,* @param expected
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,57,* @param buffer
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,58,* @param offset
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,59,* @param length
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,60,* @return <code>true</code> if buffer is the same as the expected string
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,62,public static boolean matchAsciiBuffer(
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,63,"String expected, byte[] buffer, int offset, int length){"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,64,byte[] buffer1;
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,65,try {
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,66,"buffer1 = expected.getBytes(""ASCII"");"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,67,} catch (UnsupportedEncodingException e) {
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,68,throw new RuntimeException(e); // Should not happen
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,70,"return isEqual(buffer1, 0, buffer1.length, buffer, offset, length, false);"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,74,* Check if buffer contents matches Ascii String.
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,76,* @param expected
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,77,* @param buffer
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,78,* @return <code>true</code> if buffer is the same as the expected string
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,80,"public static boolean matchAsciiBuffer(String expected, byte[] buffer){"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,81,byte[] buffer1;
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,82,try {
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,83,"buffer1 = expected.getBytes(""ASCII"");"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,84,} catch (UnsupportedEncodingException e) {
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,85,throw new RuntimeException(e); // Should not happen
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,87,"return isEqual(buffer1, 0, buffer1.length, buffer, 0, buffer.length, false);"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,91,"* Compare byte buffers, optionally ignoring trailing nulls"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,93,* @param buffer1
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,94,* @param offset1
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,95,* @param length1
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,96,* @param buffer2
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,97,* @param offset2
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,98,* @param length2
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,99,* @param ignoreTrailingNulls
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,100,"* @return <code>true</code> if buffer1 and buffer2 have same contents, having regard to trailing nulls"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,102,public static boolean isEqual(
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,103,"final byte[] buffer1, final int offset1, final int length1,"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,104,"final byte[] buffer2, final int offset2, final int length2,"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,105,boolean ignoreTrailingNulls){
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,106,int minLen=length1 < length2 ? length1 : length2;
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,107,for (int i=0; i < minLen; i++){
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,108,if (buffer1[offset1+i] != buffer2[offset2+i]){
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,109,return false;
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,112,if (length1 == length2){
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,113,return true;
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,115,if (ignoreTrailingNulls){
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,116,if (length1 > length2){
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,117,for(int i = length2; i < length1; i++){
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,118,if (buffer1[offset1+i] != 0){
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,119,return false;
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,122,} else {
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,123,for(int i = length1; i < length2; i++){
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,124,if (buffer2[offset2+i] != 0){
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,125,return false;
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,129,return true;
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,131,return false;
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,135,* Compare byte buffers
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,137,* @param buffer1
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,138,* @param offset1
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,139,* @param length1
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,140,* @param buffer2
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,141,* @param offset2
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,142,* @param length2
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,143,* @return <code>true</code> if buffer1 and buffer2 have same contents
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,145,public static boolean isEqual(
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,146,"final byte[] buffer1, final int offset1, final int length1,"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,147,"final byte[] buffer2, final int offset2, final int length2){"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,148,"return isEqual(buffer1, offset1, length1, buffer2, offset2, length2, false);"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,152,* Compare byte buffers
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,154,* @param buffer1
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,155,* @param buffer2
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,156,* @return <code>true</code> if buffer1 and buffer2 have same contents
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,158,"public static boolean isEqual(final byte[] buffer1, final byte[] buffer2 ){"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,159,"return isEqual(buffer1, 0, buffer1.length, buffer2, 0, buffer2.length, false);"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,163,"* Compare byte buffers, optionally ignoring trailing nulls"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,165,* @param buffer1
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,166,* @param buffer2
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,167,* @param ignoreTrailingNulls
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,168,* @return <code>true</code> if buffer1 and buffer2 have same contents
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,170,"public static boolean isEqual(final byte[] buffer1, final byte[] buffer2, boolean ignoreTrailingNulls){"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,171,"return isEqual(buffer1, 0, buffer1.length, buffer2, 0, buffer2.length, ignoreTrailingNulls);"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,175,"* Compare byte buffers, ignoring trailing nulls"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,177,* @param buffer1
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,178,* @param offset1
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,179,* @param length1
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,180,* @param buffer2
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,181,* @param offset2
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,182,* @param length2
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,183,"* @return <code>true</code> if buffer1 and buffer2 have same contents, having regard to trailing nulls"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,185,public static boolean isEqualWithNull(
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,186,"final byte[] buffer1, final int offset1, final int length1,"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,187,"final byte[] buffer2, final int offset2, final int length2){"
True,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java,188,"return isEqual(buffer1, offset1, length1, buffer2, offset2, length2, true);"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,9,*   http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,19,package org.apache.commons.compress;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,21,import java.io.ByteArrayOutputStream;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,22,import java.io.File;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,23,import java.io.FileInputStream;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,24,import java.io.InputStream;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,25,import java.io.OutputStream;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,27,import org.apache.commons.compress.archivers.ArchiveEntry;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,28,import org.apache.commons.compress.archivers.ArchiveInputStream;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,29,import org.apache.commons.compress.archivers.ArchiveOutputStream;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,30,import org.apache.commons.compress.archivers.ar.ArArchiveEntry;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,31,import org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,32,import org.apache.commons.compress.archivers.jar.JarArchiveEntry;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,33,import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,34,import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,35,import org.apache.commons.compress.utils.ArchiveUtils;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,38,* Check that the different write methods create the same output.
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,39,* TODO perform the same checks for reads.
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,41,public class ArchiveUtilsTest extends AbstractTestCase {
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,43,private static final int bytesToTest = 50;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,44,private static final byte[] byteTest = new byte[bytesToTest];
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,45,static {
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,46,for(int i=0; i < byteTest.length ;) {
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,47,byteTest[i]=(byte) i;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,48,byteTest[i+1]=(byte) -i;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,49,i += 2;
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,52,public void testCompareBA(){
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,53,"byte[] buffer1 = {1,2,3};"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,54,"byte[] buffer2 = {1,2,3,0};"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,55,"byte[] buffer3 = {1,2,3};"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,56,"assertTrue(ArchiveUtils.isEqual(buffer1, buffer2, true));"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,57,"assertFalse(ArchiveUtils.isEqual(buffer1, buffer2, false));"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,58,"assertFalse(ArchiveUtils.isEqual(buffer1, buffer2));"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,59,"assertTrue(ArchiveUtils.isEqual(buffer2, buffer1, true));"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,60,"assertFalse(ArchiveUtils.isEqual(buffer2, buffer1, false));"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,61,"assertFalse(ArchiveUtils.isEqual(buffer2, buffer1));"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,62,"assertTrue(ArchiveUtils.isEqual(buffer1, buffer3));"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,63,"assertTrue(ArchiveUtils.isEqual(buffer3, buffer1));"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,66,public void testCompareAscii(){
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,67,"byte[] buffer1 = {'a','b','c'};"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,68,"byte[] buffer2 = {'d','e','f',0};"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,69,"assertTrue(ArchiveUtils.matchAsciiBuffer(""abc"", buffer1));"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,70,"assertFalse(ArchiveUtils.matchAsciiBuffer(""abc\0"", buffer1));"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,71,"assertTrue(ArchiveUtils.matchAsciiBuffer(""def\0"", buffer2));"
True,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java,72,"assertFalse(ArchiveUtils.matchAsciiBuffer(""def"", buffer2));"
