is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,86,f (archiverName == null || in == null) {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,86,if (archiverName == null) {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,89,if (in == null) {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,90,"throw new IllegalArgumentException(""InputStream must not be null."");"
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,116,f (archiverName == null || out == null) {
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,117,hrow new IllegalArgumentException(
False,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,118,"Archivername and stream must not be null."");"
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,119,if (archiverName == null) {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,120,"throw new IllegalArgumentException(""Archivername must not be null."");"
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,122,if (out == null) {
True,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java,123,"throw new IllegalArgumentException(""OutputStream must not be null."");"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,1,package org.apache.commons.compress.archivers;
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,3,import junit.framework.Assert;
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,4,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,6,public class ExceptionMessageTest extends TestCase {
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,8,"private static final String ARCHIVER_NULL_MESSAGE = ""Archivername must not be null."";"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,10,"private static final String INPUTSTREAM_NULL_MESSAGE = ""InputStream must not be null."";"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,12,"private static final String OUTPUTSTREAM_NULL_MESSAGE = ""OutputStream must not be null."";"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,16,public void testMessageWhenArchiverNameIsNull_1(){
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,17,try{
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,18,"new ArchiveStreamFactory().createArchiveInputStream(null, System.in);"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,19,"fail(""Should raise an IllegalArgumentException."");"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,20,}catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,21,"Assert.assertEquals(ARCHIVER_NULL_MESSAGE, e.getMessage());"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,22,} catch (ArchiveException e) {
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,23,"fail(""ArchiveException not expected"");"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,27,public void testMessageWhenInputStreamIsNull(){
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,28,try{
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,29,"new ArchiveStreamFactory().createArchiveInputStream(""zip"", null);"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,30,"fail(""Should raise an IllegalArgumentException."");"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,31,}catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,32,"Assert.assertEquals(INPUTSTREAM_NULL_MESSAGE, e.getMessage());"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,33,} catch (ArchiveException e) {
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,34,"fail(""ArchiveException not expected"");"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,38,public void testMessageWhenArchiverNameIsNull_2(){
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,39,try{
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,40,"new ArchiveStreamFactory().createArchiveOutputStream(null, System.out);"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,41,"fail(""Should raise an IllegalArgumentException."");"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,42,} catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,43,"Assert.assertEquals(ARCHIVER_NULL_MESSAGE, e.getMessage());"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,44,} catch (ArchiveException e){
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,45,"fail(""ArchiveException not expected"");"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,49,public void testMessageWhenOutputStreamIsNull(){
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,50,try{
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,51,"new ArchiveStreamFactory().createArchiveOutputStream(""zip"", null);"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,52,"fail(""Should raise an IllegalArgumentException."");"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,53,} catch (IllegalArgumentException e) {
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,54,"Assert.assertEquals(OUTPUTSTREAM_NULL_MESSAGE, e.getMessage());"
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,55,} catch (ArchiveException e) {
True,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java,56,"fail(""ArchiveException not expected"");"
