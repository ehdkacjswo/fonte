is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,603," Method called to ""consume"" the current token by effectively"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,604," removing it so that {@link #hasCurrentToken} returns false, and"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,605, {@link #getCurrentToken} null).
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,606, Cleared token value can still be accessed by calling
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,607," {@link #getLastClearedToken} (if absolutely needed), but"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,608, usually isn't.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,609,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,610," Method was added to be used by the optional data binder, since"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,611, it has to be able to consume last token used for binding (so that
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,612, it will not be used again).
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,614,ublic abstract void clearCurrentToken();
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,652, Method that can be called to get the last token that was
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,653, cleared using {@link #clearCurrentToken}. This is not necessarily
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,654, the latest token read.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,655," Will return null if no tokens have been cleared,"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,656, or if parser has been closed.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,658,ublic abstract JsonToken getLastClearedToken();
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,660,"/* Public API, token state overrides"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,665,"* Method called to ""consume"" the current token by effectively"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,666,"* removing it so that {@link #hasCurrentToken} returns false, and"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,667,* {@link #getCurrentToken} null).
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,668,* Cleared token value can still be accessed by calling
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,669,"* {@link #getLastClearedToken} (if absolutely needed), but"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,670,* usually isn't.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,671,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,672,"* Method was added to be used by the optional data binder, since"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,673,* it has to be able to consume last token used for binding (so that
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,674,* it will not be used again).
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,676,public abstract void clearCurrentToken();
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,679,* Method that can be called to get the last token that was
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,680,* cleared using {@link #clearCurrentToken}. This is not necessarily
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,681,* the latest token read.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,682,"* Will return null if no tokens have been cleared,"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,683,* or if parser has been closed.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,685,public abstract JsonToken getLastClearedToken();
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,688,* Method that can be used to change what is considered to be
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,689,* the current (field) name.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,690,* May be needed to support non-JSON data formats or unusual binding
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,691,* conventions; not needed for typical processing.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,692,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,693,* Note that use of this method should only be done as sort of last
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,694,"* resort, as it is a work-around for regular operation."
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,696,* @param name Name to use as the current name; may be null.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,698,* @since 2.0
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,700,public abstract void overrideCurrentName(String name);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,322,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,323,public void overrideCurrentName(String name)
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,325,"// Simple, but need to look for START_OBJECT/ARRAY's ""off-by-one"" thing:"
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,326,JsonReadContext ctxt = _parsingContext;
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,327,if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,328,ctxt = ctxt.getParent();
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,330,ctxt.setCurrentName(name);
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,120,Override
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,121,ublic void clearCurrentToken() {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,122,f (_currToken != null) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,123,lastClearedToken = _currToken;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,124,currToken = null;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,128,Override
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,129,ublic JsonToken getLastClearedToken() {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,130,eturn _lastClearedToken;
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,199,"/* Public API, token state overrides"
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,203,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,204,public void clearCurrentToken() {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,205,if (_currToken != null) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,206,_lastClearedToken = _currToken;
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,207,_currToken = null;
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,211,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,212,public JsonToken getLastClearedToken() {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,213,return _lastClearedToken;
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,216,@Override
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,217,public abstract void overrideCurrentName(String name);
False,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,140,rotected char getNextChar(String eofMsg)
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,140,protected final char getNextChar(String eofMsg)
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,138,* Former StreamBasedParserBase methods
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,138,/* Overrides
False,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,112,Override
False,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,113,ublic void clearCurrentToken() {
False,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,114,elegate.clearCurrentToken();
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,122,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,123,public JsonStreamContext getParsingContext() {
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,124,return delegate.getParsingContext();
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,129,"/* Public API, token state overrides"
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,133,@Override
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,134,public void clearCurrentToken() {
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,135,delegate.clearCurrentToken();
False,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,133,ublic JsonStreamContext getParsingContext() {
False,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,134,eturn delegate.getParsingContext();
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,144,public void overrideCurrentName(String name) {
True,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,src/main/java/com/fasterxml/jackson/core/util/JsonParserDelegate.java,145,delegate.overrideCurrentName(name);
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,63,ublic void testTokenAccess() throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,65,"sonParser jp = createParserUsingReader(""[ ]"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,66,ssertNull(jp.getCurrentToken());
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,67,p.clearCurrentToken();
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,68,ssertNull(jp.getCurrentToken());
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,69,ssertNull(jp.getEmbeddedObject());
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,70,"ssertToken(JsonToken.START_ARRAY, jp.nextToken());"
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,71,"ssertToken(JsonToken.START_ARRAY, jp.getCurrentToken());"
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,72,p.clearCurrentToken();
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,73,ssertNull(jp.getCurrentToken());
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,76,/ Also: no codec defined by default
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,77,ry {
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,78,p.readValueAsTree();
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,79,"ail(""Should get exception without codec"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,80, catch (IllegalStateException e) {
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,81,"erifyException(e, ""No ObjectCodec defined"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,84,p.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,1,package com.fasterxml.jackson.core.json;
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,3,import java.io.ByteArrayInputStream;
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,4,import java.io.StringReader;
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,6,import com.fasterxml.jackson.core.JsonFactory;
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,7,import com.fasterxml.jackson.core.JsonParser;
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,8,import com.fasterxml.jackson.core.JsonToken;
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,10,public class TestParserOverrides extends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,14,"/* Wrappers, to test stream and reader-based parsers"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,18,public void testTokenAccess() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,20,JsonFactory jf = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,21,"_testTokenAccess(jf, false);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,22,"_testTokenAccess(jf, true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,25,public void testCurrentName() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,27,JsonFactory jf = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,30,"_testCurrentName(jf, false);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,33,"_testCurrentName(jf, true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,38,/* Actual test methods
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,42,"public void _testTokenAccess(JsonFactory jf, boolean useStream) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,44,"final String DOC = ""[ ]"";"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,45,JsonParser jp = useStream ?
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,46,"jf.createJsonParser(new ByteArrayInputStream(DOC.getBytes(""UTF-8"")))"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,47,: jf.createJsonParser(DOC);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,48,assertNull(jp.getCurrentToken());
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,49,jp.clearCurrentToken();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,50,assertNull(jp.getCurrentToken());
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,51,assertNull(jp.getEmbeddedObject());
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,52,"assertToken(JsonToken.START_ARRAY, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,53,"assertToken(JsonToken.START_ARRAY, jp.getCurrentToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,54,jp.clearCurrentToken();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,55,assertNull(jp.getCurrentToken());
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,56,// Also: no codec defined by default
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,57,try {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,58,jp.readValueAsTree();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,59,"fail(""Should get exception without codec"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,60,} catch (IllegalStateException e) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,61,"verifyException(e, ""No ObjectCodec defined"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,63,jp.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,66,"private void _testCurrentName(JsonFactory jf, boolean useStream) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,68,"final String DOC = ""{\""first\"":{\""second\"":3, \""third\"":false}}"";"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,69,JsonParser jp = useStream ?
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,70,"jf.createJsonParser(new ByteArrayInputStream(DOC.getBytes(""UTF-8"")))"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,71,: jf.createJsonParser(new StringReader(DOC));
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,72,assertNull(jp.getCurrentToken());
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,73,"assertToken(JsonToken.START_OBJECT, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,74,"assertToken(JsonToken.FIELD_NAME, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,75,"assertEquals(""first"", jp.getCurrentName());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,76,"assertToken(JsonToken.START_OBJECT, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,77,"assertEquals(""first"", jp.getCurrentName()); // still the same..."
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,78,"jp.overrideCurrentName(""foobar"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,79,"assertEquals(""foobar"", jp.getCurrentName()); // but not any more!"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,81,"assertToken(JsonToken.FIELD_NAME, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,82,"assertEquals(""second"", jp.getCurrentName());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,83,"assertToken(JsonToken.VALUE_NUMBER_INT, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,84,"assertEquals(""second"", jp.getCurrentName());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,86,"assertToken(JsonToken.FIELD_NAME, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,87,"assertEquals(""third"", jp.getCurrentName());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,88,"assertToken(JsonToken.VALUE_FALSE, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,89,"assertEquals(""third"", jp.getCurrentName());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,91,"assertToken(JsonToken.END_OBJECT, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,92,"// should retain overrides, too"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,93,"assertEquals(""foobar"", jp.getCurrentName());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,95,"assertToken(JsonToken.END_OBJECT, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,96,jp.clearCurrentToken();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,src/test/java/com/fasterxml/jackson/core/json/TestParserOverrides.java,97,assertNull(jp.getCurrentToken());
