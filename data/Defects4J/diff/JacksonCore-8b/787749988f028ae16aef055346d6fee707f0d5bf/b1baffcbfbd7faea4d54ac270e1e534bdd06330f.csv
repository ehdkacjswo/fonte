is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,4,import java.util.Properties;
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,102,* Will attempt to load the maven version for the given groupId and
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,103,* artifactId.  Maven puts a pom.properties file in
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,104,"* META-INF/maven/groupId/artifactId, containing the groupId,"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,105,* artifactId and version of the library.
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,107,* @param classLoader the ClassLoader to load the pom.properties file from
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,108,* @param groupId the groupId of the library
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,109,* @param artifactId the artifactId of the library
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,110,* @return The version
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,112,"public static Version mavenVersionFor(ClassLoader classLoader, String groupId, String artifactId) {"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,113,"InputStream pomPoperties = classLoader.getResourceAsStream(""META-INF/maven/"" + groupId.replaceAll(""\\."", ""/"")"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,114,"+ ""/"" + artifactId + ""/pom.properties"");"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,115,if (pomPoperties != null) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,116,try {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,117,Properties props = new Properties();
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,118,props.load(pomPoperties);
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,119,"String versionStr = props.getProperty(""version"");"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,120,"String pomPropertiesArtifactId = props.getProperty(""artifactId"");"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,121,"String pomPropertiesGroupId = props.getProperty(""groupId"");"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,122,"return parseVersion(versionStr, pomPropertiesGroupId, pomPropertiesArtifactId);"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,123,} catch (IOException e) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,124,// Ignore
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,125,} finally {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,126,try {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,127,pomPoperties.close();
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,128,} catch (IOException e) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,129,// Ignore
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,133,return Version.unknownVersion();
False,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,4,mport com.fasterxml.jackson.core.util.VersionUtil;
True,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,19,public void testMavenVersionParsing() {
True,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,20,"assertEquals(new Version(1, 2, 3, ""SNAPSHOT"", ""foo.bar"", ""foo-bar""),"
True,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,src/test/java/com/fasterxml/jackson/core/util/TestVersionUtil.java,21,"VersionUtil.mavenVersionFor(TestVersionUtil.class.getClassLoader(), ""foo.bar"", ""foo-bar""));"
