is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,470, Bulk set method for (re)settting states of all standard {@link Feature}s
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,470,* Bulk set method for (re)setting states of all standard {@link Feature}s
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,26,/            | Feature.STRICT_DUPLICATE_DETECTION.getMask()
True,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,26,| Feature.STRICT_DUPLICATE_DETECTION.getMask()
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,10,ublic void testSimpleDups() throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,12,testSimpleDups(false);
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,13,testSimpleDups(true);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,10,public void testSimpleDupsEagerlyBytes() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,11,"_testSimpleDups(true, false, new JsonFactory());"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,16,rotected void _testSimpleDups(boolean useStream) throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,18,sonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,13,public void testSimpleDupsEagerlyChars() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,14,"_testSimpleDups(false, false, new JsonFactory());"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,17,// Testing ability to enable checking after construction of
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,18,"// generator, not just via JsonFactory"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,19,public void testSimpleDupsLazilyBytes() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,20,final JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,22,"_testSimpleDups(true, true, f);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,25,public void testSimpleDupsLazilyChars() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,26,final JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,27,"_testSimpleDups(false, true, f);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,30,"@SuppressWarnings(""resource"")"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,31,"protected void _testSimpleDups(boolean useStream, boolean lazySetting, JsonFactory f)"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,32,throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,22,"writeSimple0(_generator(f, useStream), ""a"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,23,"writeSimple1(_generator(f, useStream), ""b"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,35,if (!lazySetting) {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,36,"_writeSimple0(_generator(f, useStream), ""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,37,"_writeSimple1(_generator(f, useStream), ""b"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,26,.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,41,JsonGenerator g;
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,43,if (lazySetting) {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,44,"g = _generator(f, useStream);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,45,g.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,46,} else {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,47,f.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,48,"g = _generator(f, useStream);"
False,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,28,"writeSimple0( _generator(f, useStream), ""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,51,"_writeSimple0(g, ""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,57,if (lazySetting) {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,58,"g = _generator(f, useStream);"
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,59,g.enable(JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,60,} else {
True,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestGeneratorDupHandling.java,61,"g = _generator(f, useStream);"
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,8,ublic void testSimpleDups() throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,10,or (String doc : new String[] {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,8,private final String[] DUP_DOCS = new String[] {
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,18,"oc = doc.replace(""'"", ""\"""");"
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,19,sonFactory f = new JsonFactory();
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,20,ssertFalse(f.isEnabled(JsonParser.Feature.STRICT_DUPLICATE_DETECTION));
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,17,for (int i = 0; i < DUP_DOCS.length; ++i) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,18,"DUP_DOCS[i] = DUP_DOCS[i].replace(""'"", ""\"""");"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,22,public void testSimpleDupsDisabled() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,24,// first: verify no problems if detection NOT enabled
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,25,final JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,26,assertFalse(f.isEnabled(JsonParser.Feature.STRICT_DUPLICATE_DETECTION));
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,27,for (String doc : DUP_DOCS) {
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,24,.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,25,"testSimpleDupsFail(doc, f, false, ""a"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,26,"testSimpleDupsFail(doc, f, true, ""a"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,30,"rivate void _testSimpleDupsOk(final String doc, JsonFactory f, boolean useStream) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,33,public void testSimpleDupsBytes() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,35,JsonFactory nonDupF = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,36,JsonFactory dupF = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,37,dupF.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,38,for (String doc : DUP_DOCS) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,39,"// First, with static setting"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,40,"_testSimpleDupsFail(doc, dupF, true, ""a"", false);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,42,// and then dynamic
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,43,"_testSimpleDupsFail(doc, nonDupF, true, ""a"", true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,47,public void testSimpleDupsChars() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,49,JsonFactory nonDupF = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,50,JsonFactory dupF = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,51,dupF.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,52,for (String doc : DUP_DOCS) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,53,"_testSimpleDupsFail(doc, dupF, false, ""a"", false);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,54,"_testSimpleDupsFail(doc, nonDupF, false, ""a"", true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,58,"private void _testSimpleDupsOk(final String doc, JsonFactory f,"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,59,boolean useStream) throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,42,"oolean useStream, String name) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,71,"boolean useStream, String name, boolean lazily) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,75,if (lazily) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,76,jp.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
