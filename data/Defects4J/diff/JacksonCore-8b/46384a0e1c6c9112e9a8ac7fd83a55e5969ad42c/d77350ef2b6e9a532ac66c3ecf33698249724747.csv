is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1,ackage com.fasterxml.jackson.core.util;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,3,mport java.io.IOException;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,4,mport java.math.BigDecimal;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,5,mport java.math.BigInteger;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,7,mport com.fasterxml.jackson.core.*;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,8,mport com.fasterxml.jackson.core.base.ParserMinimalBase;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,9,mport com.fasterxml.jackson.core.io.SerializedString;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,10,mport com.fasterxml.jackson.core.json.JsonReadContext;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,11,mport com.fasterxml.jackson.core.json.JsonWriteContext;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,14, Utility class used for efficient storage of {@link JsonToken}
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,15," sequences, needed for temporary buffering."
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,16, Space efficient for different sequence lengths (especially so for smaller
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,17," ones; but not significantly less efficient for larger), highly efficient"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,18, for linear iteration and appending. Implemented as segmented/chunked
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,19, linked list of tokens; only modifications are via appends.
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,21, @since 1.5
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,23,ublic class TokenBuffer
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,24,"* Won't use JsonGeneratorBase, to minimize overhead for validity"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,25, checking
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,27,xtends JsonGenerator
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,29,rotected final static int DEFAULT_PARSER_FEATURES = JsonParser.Feature.collectDefaults();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,33,* Configuration
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,38, Object codec to use for stream-based object
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,39,"   conversion through parser/generator interfaces. If null,"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,40,   such methods can not be used.
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,42,rotected ObjectCodec _objectCodec;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,45, Bit flag composed of bits that indicate which
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,46, {@link com.fasterxml.jackson.core.JsonGenerator.Feature}s
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,47, are enabled.
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,48,<p>
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,49, NOTE: most features have no effect on this class
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,51,rotected int _generatorFeatures;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,53,rotected boolean _closed;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,57,* Token buffering state
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,62," First segment, for contents this buffer has"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,64,rotected Segment _first;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,67," Last segment of this buffer, one that is used"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,68, for appending more tokens
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,70,rotected Segment _last;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,73," Offset within last segment,"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,75,rotected int _appendOffset;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,79,* Output state
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,83,rotected JsonWriteContext _writeContext;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,87,* Life-cycle
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,92, @param codec Object codec to use for stream-based object
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,93,"   conversion through parser/generator interfaces. If null,"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,94,   such methods can not be used.
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,96,ublic TokenBuffer(ObjectCodec codec)
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,98,objectCodec = codec;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,99,generatorFeatures = DEFAULT_PARSER_FEATURES;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,100,writeContext = JsonWriteContext.createRootContext();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,101,/ at first we have just one segment
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,102,first = _last = new Segment();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,103,appendOffset = 0;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,107, Method used to create a {@link JsonParser} that can read contents
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,108, stored in this buffer. Will use default <code>_objectCodec</code> for
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,109, object conversions.
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,110,<p>
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,111," Note: instances are not synchronized, that is, they are not thread-safe"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,112, if there are concurrent appends to the underlying buffer.
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,114, @return Parser that can be used for reading contents stored in this buffer
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,116,ublic JsonParser asParser()
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,118,eturn asParser(_objectCodec);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,122, Method used to create a {@link JsonParser} that can read contents
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,123, stored in this buffer.
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,124,<p>
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,125," Note: instances are not synchronized, that is, they are not thread-safe"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,126, if there are concurrent appends to the underlying buffer.
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,128, @param codec Object codec to use for stream-based object
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,129,"   conversion through parser/generator interfaces. If null,"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,130,   such methods can not be used.
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,132, @return Parser that can be used for reading contents stored in this buffer
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,134,ublic JsonParser asParser(ObjectCodec codec)
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,136,"eturn new Parser(_first, codec);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,140, @param src Parser to use for accessing source information
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,141,"    like location, configured codec"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,143,ublic JsonParser asParser(JsonParser src)
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,145,"arser p = new Parser(_first, src.getCodec());"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,146,.setLocation(src.getTokenLocation());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,147,eturn p;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,152,* Other custom methods not needed for implementing interfaces
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,157, Helper method that will write all contents of this buffer
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,158, using given {@link JsonGenerator}.
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,159,<p>
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,160, Note: this method would be enough to implement
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,161, <code>JsonSerializer</code>  for <code>TokenBuffer</code> type;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,162, but we can not have upwards
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,163, references (from core to mapper package); and as such we also
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,164, can not take second argument.
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,166,ublic void serialize(JsonGenerator jgen)
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,167,"hrows IOException, JsonGenerationException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,169,egment segment = _first;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,170,nt ptr = -1;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,172,hile (true) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,173,f (++ptr >= Segment.TOKENS_PER_SEGMENT) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,174,tr = 0;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,175,egment = segment.next();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,176,f (segment == null) break;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,178,sonToken t = segment.type(ptr);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,179,f (t == null) break;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,181,/ Note: copied from 'copyCurrentEvent'...
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,182,witch (t) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,183,ase START_OBJECT:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,184,gen.writeStartObject();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,185,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,186,ase END_OBJECT:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,187,gen.writeEndObject();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,188,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,189,ase START_ARRAY:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,190,gen.writeStartArray();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,191,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,192,ase END_ARRAY:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,193,gen.writeEndArray();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,194,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,195,ase FIELD_NAME:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,197,"/ 13-Dec-2010, tatu: Maybe we should start using different type tokens to reduce casting?"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,198,bject ob = segment.get(ptr);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,199,f (ob instanceof SerializableString) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,200,gen.writeFieldName((SerializableString) ob);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,201, else {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,202,gen.writeFieldName((String) ob);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,205,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,206,ase VALUE_STRING:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,208,bject ob = segment.get(ptr);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,209,f (ob instanceof SerializableString) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,210,gen.writeString((SerializableString) ob);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,211, else {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,212,gen.writeString((String) ob);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,215,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,216,ase VALUE_NUMBER_INT:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,218,umber n = (Number) segment.get(ptr);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,219,f (n instanceof BigInteger) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,220,gen.writeNumber((BigInteger) n);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,221, else if (n instanceof Long) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,222,gen.writeNumber(n.longValue());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,223, else {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,224,gen.writeNumber(n.intValue());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,227,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,228,ase VALUE_NUMBER_FLOAT:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,230,bject n = segment.get(ptr);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,231,f (n instanceof BigDecimal) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,232,gen.writeNumber((BigDecimal) n);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,233, else if (n instanceof Float) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,234,gen.writeNumber(((Float) n).floatValue());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,235, else if (n instanceof Double) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,236,gen.writeNumber(((Double) n).doubleValue());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,237, else if (n == null) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,238,gen.writeNull();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,239, else if (n instanceof String) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,240,gen.writeNumber((String) n);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,241, else {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,242,"hrow new JsonGenerationException(""Unrecognized value type for VALUE_NUMBER_FLOAT: ""+n.getClass().getName()+"", can not serialize"");"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,245,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,246,ase VALUE_TRUE:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,247,gen.writeBoolean(true);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,248,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,249,ase VALUE_FALSE:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,250,gen.writeBoolean(false);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,251,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,252,ase VALUE_NULL:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,253,gen.writeNull();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,254,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,255,ase VALUE_EMBEDDED_OBJECT:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,256,gen.writeObject(segment.get(ptr));
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,257,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,258,efault:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,259,"hrow new RuntimeException(""Internal error: should never end up through this code path"");"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,264,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,265,ublic String toString()
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,267,/ Let's print up to 100 first tokens...
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,268,inal int MAX_COUNT = 100;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,270,tringBuilder sb = new StringBuilder();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,271,"b.append(""[TokenBuffer: "");"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,272,sonParser jp = asParser();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,273,nt count = 0;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,275,hile (true) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,276,sonToken t;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,277,ry {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,278, = jp.nextToken();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,279, catch (IOException ioe) { // should never occur
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,280,hrow new IllegalStateException(ioe);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,282,f (t == null) break;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,283,f (count < MAX_COUNT) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,284,f (count > 0) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,285,"b.append("", "");"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,287,b.append(t.toString());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,289,+count;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,292,f (count >= MAX_COUNT) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,293,"b.append("" ... (truncated "").append(count-MAX_COUNT).append("" entries)"");"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,295,b.append(']');
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,296,eturn sb.toString();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,301,* JsonGenerator implementation: configuration
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,305,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,306,ublic JsonGenerator enable(Feature f) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,307,generatorFeatures |= f.getMask();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,308,eturn this;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,311,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,312,ublic JsonGenerator disable(Feature f) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,313,generatorFeatures &= ~f.getMask();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,314,eturn this;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,317,"/public JsonGenerator configure(Feature f, boolean state) { }"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,319,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,320,ublic boolean isEnabled(Feature f) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,321,eturn (_generatorFeatures & f.getMask()) != 0;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,324,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,325,ublic JsonGenerator useDefaultPrettyPrinter() {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,326,/ No-op: we don't indent
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,327,eturn this;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,330,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,331,ublic JsonGenerator setCodec(ObjectCodec oc) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,332,objectCodec = oc;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,333,eturn this;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,336,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,337,ublic ObjectCodec getCodec() { return _objectCodec; }
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,339,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,340,ublic final JsonWriteContext getOutputContext() { return _writeContext; }
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,344,* JsonGenerator implementation: low-level output handling
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,348,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,349,ublic void flush() throws IOException { /* NOP */ }
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,351,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,352,ublic void close() throws IOException {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,353,closed = true;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,356,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,357,ublic boolean isClosed() { return _closed; }
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,361,"* JsonGenerator implementation: write methods, structural"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,365,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,366,ublic final void writeStartArray()
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,367,"hrows IOException, JsonGenerationException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,369,append(JsonToken.START_ARRAY);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,370,writeContext = _writeContext.createChildArrayContext();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,373,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,374,ublic final void writeEndArray()
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,375,"hrows IOException, JsonGenerationException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,377,append(JsonToken.END_ARRAY);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,378,"/ Let's allow unbalanced tho... i.e. not run out of root level, ever"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,379,sonWriteContext c = _writeContext.getParent();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,380,f (c != null) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,381,writeContext = c;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,385,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,386,ublic final void writeStartObject()
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,387,"hrows IOException, JsonGenerationException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,389,append(JsonToken.START_OBJECT);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,390,writeContext = _writeContext.createChildObjectContext();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,393,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,394,ublic final void writeEndObject()
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,395,"hrows IOException, JsonGenerationException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,397,append(JsonToken.END_OBJECT);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,398,"/ Let's allow unbalanced tho... i.e. not run out of root level, ever"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,399,sonWriteContext c = _writeContext.getParent();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,400,f (c != null) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,401,writeContext = c;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,405,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,406,ublic final void writeFieldName(String name)
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,407,"hrows IOException, JsonGenerationException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,409,"append(JsonToken.FIELD_NAME, name);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,410,writeContext.writeFieldName(name);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,413,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,414,ublic void writeFieldName(SerializableString name)
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,415,"hrows IOException, JsonGenerationException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,417,"append(JsonToken.FIELD_NAME, name);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,418,writeContext.writeFieldName(name.getValue());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,421,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,422,ublic void writeFieldName(SerializedString name)
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,423,"hrows IOException, JsonGenerationException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,425,"append(JsonToken.FIELD_NAME, name);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,426,writeContext.writeFieldName(name.getValue());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,431,"* JsonGenerator implementation: write methods, textual"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,435,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,436,"ublic void writeString(String text) throws IOException,JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,437,f (text == null) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,438,riteNull();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,439, else {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,440,"append(JsonToken.VALUE_STRING, text);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,444,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,445,"ublic void writeString(char[] text, int offset, int len) throws IOException, JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,446,"riteString(new String(text, offset, len));"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,449,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,450,"ublic void writeString(SerializableString text) throws IOException, JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,451,f (text == null) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,452,riteNull();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,453, else {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,454,"append(JsonToken.VALUE_STRING, text);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,458,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,459,"ublic void writeRawUTF8String(byte[] text, int offset, int length)"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,460,"hrows IOException, JsonGenerationException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,462,/ could add support for buffering if we really want it...
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,463,reportUnsupportedOperation();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,466,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,467,"ublic void writeUTF8String(byte[] text, int offset, int length)"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,468,"hrows IOException, JsonGenerationException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,470,/ could add support for buffering if we really want it...
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,471,reportUnsupportedOperation();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,474,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,475,"ublic void writeRaw(String text) throws IOException, JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,476,reportUnsupportedOperation();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,479,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,480,"ublic void writeRaw(String text, int offset, int len) throws IOException, JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,481,reportUnsupportedOperation();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,484,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,485,"ublic void writeRaw(char[] text, int offset, int len) throws IOException, JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,486,reportUnsupportedOperation();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,489,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,490,"ublic void writeRaw(char c) throws IOException, JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,491,reportUnsupportedOperation();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,494,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,495,"ublic void writeRawValue(String text) throws IOException, JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,496,reportUnsupportedOperation();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,499,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,500,"ublic void writeRawValue(String text, int offset, int len) throws IOException, JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,501,reportUnsupportedOperation();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,504,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,505,"ublic void writeRawValue(char[] text, int offset, int len) throws IOException, JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,506,reportUnsupportedOperation();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,511,"* JsonGenerator implementation: write methods, primitive types"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,515,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,516,"ublic void writeNumber(int i) throws IOException, JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,517,"append(JsonToken.VALUE_NUMBER_INT, Integer.valueOf(i));"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,520,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,521,"ublic void writeNumber(long l) throws IOException, JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,522,"append(JsonToken.VALUE_NUMBER_INT, Long.valueOf(l));"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,525,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,526,"ublic void writeNumber(double d) throws IOException,JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,527,"append(JsonToken.VALUE_NUMBER_FLOAT, Double.valueOf(d));"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,530,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,531,"ublic void writeNumber(float f) throws IOException, JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,532,"append(JsonToken.VALUE_NUMBER_FLOAT, Float.valueOf(f));"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,535,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,536,"ublic void writeNumber(BigDecimal dec) throws IOException,JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,537,f (dec == null) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,538,riteNull();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,539, else {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,540,"append(JsonToken.VALUE_NUMBER_FLOAT, dec);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,544,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,545,"ublic void writeNumber(BigInteger v) throws IOException, JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,546,f (v == null) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,547,riteNull();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,548, else {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,549,"append(JsonToken.VALUE_NUMBER_INT, v);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,553,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,554,"ublic void writeNumber(String encodedValue) throws IOException, JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,555,"* 03-Dec-2010, tatu: related to [JACKSON-423], should try to keep as numeric"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,556,   identity as long as possible
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,558,"append(JsonToken.VALUE_NUMBER_FLOAT, encodedValue);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,561,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,562,"ublic void writeBoolean(boolean state) throws IOException,JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,563,append(state ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,566,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,567,"ublic void writeNull() throws IOException, JsonGenerationException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,568,append(JsonToken.VALUE_NULL);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,573,* JsonGenerator implementation: write methods for POJOs/trees
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,577,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,578,ublic void writeObject(Object value)
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,579,"hrows IOException, JsonProcessingException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,581,/ embedded means that no conversions should be done...
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,582,"append(JsonToken.VALUE_EMBEDDED_OBJECT, value);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,585,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,586,ublic void writeTree(JsonNode rootNode)
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,587,"hrows IOException, JsonProcessingException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,589,"* 31-Dec-2009, tatu: no need to convert trees either is there?"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,590,  (note: may need to re-evaluate at some point)
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,592,"append(JsonToken.VALUE_EMBEDDED_OBJECT, rootNode);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,597,* JsonGenerator implementation; binary
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,601,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,602,"ublic void writeBinary(Base64Variant b64variant, byte[] data, int offset, int len)"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,603,"hrows IOException, JsonGenerationException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,605,"* 31-Dec-2009, tatu: can do this using multiple alternatives; but for"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,606,"   now, let's try to limit number of conversions."
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,607,"   The only (?) tricky thing is that of whether to preserve variant,"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,608,"   seems pointless, so let's not worry about it unless there's some"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,609,   compelling reason to.
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,611,yte[] copy = new byte[len];
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,612,"ystem.arraycopy(data, offset, copy, 0, len);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,613,riteObject(copy);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,618,* JsonGenerator implementation; pass-through copy
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,622,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,623,"ublic void copyCurrentEvent(JsonParser jp) throws IOException, JsonProcessingException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,625,witch (jp.getCurrentToken()) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,626,ase START_OBJECT:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,627,riteStartObject();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,628,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,629,ase END_OBJECT:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,630,riteEndObject();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,631,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,632,ase START_ARRAY:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,633,riteStartArray();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,634,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,635,ase END_ARRAY:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,636,riteEndArray();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,637,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,638,ase FIELD_NAME:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,639,riteFieldName(jp.getCurrentName());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,640,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,641,ase VALUE_STRING:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,642,f (jp.hasTextCharacters()) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,643,"riteString(jp.getTextCharacters(), jp.getTextOffset(), jp.getTextLength());"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,644, else {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,645,riteString(jp.getText());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,647,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,648,ase VALUE_NUMBER_INT:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,649,witch (jp.getNumberType()) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,650,ase INT:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,651,riteNumber(jp.getIntValue());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,652,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,653,ase BIG_INTEGER:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,654,riteNumber(jp.getBigIntegerValue());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,655,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,656,efault:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,657,riteNumber(jp.getLongValue());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,659,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,660,ase VALUE_NUMBER_FLOAT:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,661,witch (jp.getNumberType()) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,662,ase BIG_DECIMAL:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,663,riteNumber(jp.getDecimalValue());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,664,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,665,ase FLOAT:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,666,riteNumber(jp.getFloatValue());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,667,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,668,efault:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,669,riteNumber(jp.getDoubleValue());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,671,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,672,ase VALUE_TRUE:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,673,riteBoolean(true);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,674,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,675,ase VALUE_FALSE:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,676,riteBoolean(false);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,677,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,678,ase VALUE_NULL:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,679,riteNull();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,680,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,681,ase VALUE_EMBEDDED_OBJECT:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,682,riteObject(jp.getEmbeddedObject());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,683,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,684,efault:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,685,"hrow new RuntimeException(""Internal error: should never end up through this code path"");"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,689,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,690,"ublic void copyCurrentStructure(JsonParser jp) throws IOException, JsonProcessingException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,691,sonToken t = jp.getCurrentToken();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,693,/ Let's handle field-name separately first
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,694,f (t == JsonToken.FIELD_NAME) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,695,riteFieldName(jp.getCurrentName());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,696, = jp.nextToken();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,697,/ fall-through to copy the associated value
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,700,witch (t) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,701,ase START_ARRAY:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,702,riteStartArray();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,703,hile (jp.nextToken() != JsonToken.END_ARRAY) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,704,opyCurrentStructure(jp);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,706,riteEndArray();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,707,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,708,ase START_OBJECT:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,709,riteStartObject();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,710,hile (jp.nextToken() != JsonToken.END_OBJECT) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,711,opyCurrentStructure(jp);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,713,riteEndObject();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,714,reak;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,715,efault: // others are simple:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,716,opyCurrentEvent(jp);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,722,* Internal methods
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,725,rotected final void _append(JsonToken type) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,726,"egment next = _last.append(_appendOffset, type);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,727,f (next == null) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,728,+_appendOffset;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,729, else {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,730,last = next;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,731,appendOffset = 1; // since we added first at 0
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,735,"rotected final void _append(JsonToken type, Object value) {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,736,"egment next = _last.append(_appendOffset, type, value);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,737,f (next == null) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,738,+_appendOffset;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,739, else {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,740,last = next;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,741,appendOffset = 1;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,745,rotected void _reportUnsupportedOperation() {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,746,"hrow new UnsupportedOperationException(""Called operation not supported for TokenBuffer"");"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,751,* Supporting classes
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,755,rotected final static class Parser
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,756,xtends ParserMinimalBase
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,758,rotected ObjectCodec _codec;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,762,* Parsing state
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,767, Currently active segment
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,769,rotected Segment _segment;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,772, Pointer to current token within current segment
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,774,rotected int _segmentPtr;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,777," Information about parser context, context in which"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,778," the next token is to be parsed (root, array, object)."
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,780,rotected JsonReadContext _parsingContext;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,782,rotected boolean _closed;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,784,rotected transient ByteArrayBuilder _byteBuilder;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,786,rotected JsonLocation _location = null;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,790,"* Construction, init"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,794,"ublic Parser(Segment firstSeg, ObjectCodec codec)"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,796,uper(0);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,797,segment = firstSeg;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,798,segmentPtr = -1; // not yet read
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,799,codec = codec;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,800,"parsingContext = JsonReadContext.createRootContext(-1, -1);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,803,ublic void setLocation(JsonLocation l) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,804,location = l;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,807,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,808,ublic ObjectCodec getCodec() { return _codec; }
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,810,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,811,ublic void setCodec(ObjectCodec c) { _codec = c; }
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,815,* Extended API beyond JsonParser
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,819,ublic JsonToken peekNextToken()
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,820,"hrows IOException, JsonParseException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,822,"/ closed? nothing more to peek, either"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,823,f (_closed) return null;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,824,egment seg = _segment;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,825,nt ptr = _segmentPtr+1;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,826,f (ptr >= Segment.TOKENS_PER_SEGMENT) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,827,tr = 0;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,828,eg = (seg == null) ? null : seg.next();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,830,eturn (seg == null) ? null : seg.type(ptr);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,835,* Closeable implementation
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,839,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,840,ublic void close() throws IOException {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,841,f (!_closed) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,842,closed = true;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,848,"* Public API, traversal"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,852,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,853,"ublic JsonToken nextToken() throws IOException, JsonParseException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,855,"/ If we are closed, nothing more to do"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,856,f (_closed || (_segment == null)) return null;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,858,"/ Ok, then: any more tokens?"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,859,f (++_segmentPtr >= Segment.TOKENS_PER_SEGMENT) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,860,segmentPtr = 0;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,861,segment = _segment.next();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,862,f (_segment == null) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,863,eturn null;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,866,currToken = _segment.type(_segmentPtr);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,867,/ Field name? Need to update context
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,868,f (_currToken == JsonToken.FIELD_NAME) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,869,bject ob = _currentObject();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,870,tring name = (ob instanceof String) ? ((String) ob) : ob.toString();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,871,parsingContext.setCurrentName(name);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,872, else if (_currToken == JsonToken.START_OBJECT) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,873,"parsingContext = _parsingContext.createChildObjectContext(-1, -1);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,874, else if (_currToken == JsonToken.START_ARRAY) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,875,"parsingContext = _parsingContext.createChildArrayContext(-1, -1);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,876, else if (_currToken == JsonToken.END_OBJECT
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,877,| _currToken == JsonToken.END_ARRAY) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,878,/ Closing JSON Object/Array? Close matching context
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,879,parsingContext = _parsingContext.getParent();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,880,/ but allow unbalanced cases too (more close markers)
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,881,f (_parsingContext == null) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,882,"parsingContext = JsonReadContext.createRootContext(-1, -1);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,885,eturn _currToken;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,888,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,889,ublic boolean isClosed() { return _closed; }
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,893,"* Public API, token accessors"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,897,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,898,ublic JsonStreamContext getParsingContext() { return _parsingContext; }
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,900,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,901,ublic JsonLocation getTokenLocation() { return getCurrentLocation(); }
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,903,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,904,ublic JsonLocation getCurrentLocation() {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,905,eturn (_location == null) ? JsonLocation.NA : _location;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,908,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,909,ublic String getCurrentName() { return _parsingContext.getCurrentName(); }
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,913,"* Public API, access to token information, text"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,917,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,918,ublic String getText()
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,920,/ common cases first:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,921,f (_currToken == JsonToken.VALUE_STRING
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,922,| _currToken == JsonToken.FIELD_NAME) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,923,bject ob = _currentObject();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,924,f (ob instanceof String) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,925,eturn (String) ob;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,927,eturn (ob == null) ? null : ob.toString();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,929,f (_currToken == null) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,930,eturn null;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,932,witch (_currToken) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,933,ase VALUE_NUMBER_INT:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,934,ase VALUE_NUMBER_FLOAT:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,935,bject ob = _currentObject();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,936,eturn (ob == null) ? null : ob.toString();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,938,eturn _currToken.asString();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,941,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,942,ublic char[] getTextCharacters() {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,943,tring str = getText();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,944,eturn (str == null) ? null : str.toCharArray();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,947,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,948,ublic int getTextLength() {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,949,tring str = getText();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,950,eturn (str == null) ? 0 : str.length();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,953,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,954,ublic int getTextOffset() { return 0; }
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,956,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,957,ublic boolean hasTextCharacters() {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,958,"/ We never have raw buffer available, so:"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,959,eturn false;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,964,"* Public API, access to token information, numeric"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,968,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,969,"ublic BigInteger getBigIntegerValue() throws IOException, JsonParseException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,971,umber n = getNumberValue();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,972,f (n instanceof BigInteger) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,973,eturn (BigInteger) n;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,975,witch (getNumberType()) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,976,ase BIG_DECIMAL:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,977,eturn ((BigDecimal) n).toBigInteger();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,979,"/ int/long is simple, but let's also just truncate float/double:"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,980,eturn BigInteger.valueOf(n.longValue());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,983,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,984,"ublic BigDecimal getDecimalValue() throws IOException, JsonParseException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,986,umber n = getNumberValue();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,987,f (n instanceof BigDecimal) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,988,eturn (BigDecimal) n;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,990,witch (getNumberType()) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,991,ase INT:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,992,ase LONG:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,993,eturn BigDecimal.valueOf(n.longValue());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,994,ase BIG_INTEGER:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,995,eturn new BigDecimal((BigInteger) n);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,997,/ float or double
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,998,eturn BigDecimal.valueOf(n.doubleValue());
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1001,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1002,"ublic double getDoubleValue() throws IOException, JsonParseException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1003,eturn getNumberValue().doubleValue();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1006,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1007,"ublic float getFloatValue() throws IOException, JsonParseException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1008,eturn getNumberValue().floatValue();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1011,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1012,"ublic int getIntValue() throws IOException, JsonParseException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1014,/ optimize common case:
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1015,f (_currToken == JsonToken.VALUE_NUMBER_INT) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1016,eturn ((Number) _currentObject()).intValue();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1018,eturn getNumberValue().intValue();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1021,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1022,"ublic long getLongValue() throws IOException, JsonParseException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1023,eturn getNumberValue().longValue();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1026,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1027,"ublic NumberType getNumberType() throws IOException, JsonParseException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1029,umber n = getNumberValue();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1030,f (n instanceof Integer) return NumberType.INT;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1031,f (n instanceof Long) return NumberType.LONG;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1032,f (n instanceof Double) return NumberType.DOUBLE;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1033,f (n instanceof BigDecimal) return NumberType.BIG_DECIMAL;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1034,f (n instanceof Float) return NumberType.FLOAT;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1035,f (n instanceof BigInteger) return NumberType.BIG_INTEGER;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1036,eturn null;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1039,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1040,"ublic final Number getNumberValue() throws IOException, JsonParseException {"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1041,checkIsNumber();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1042,eturn (Number) _currentObject();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1047,"* Public API, access to token information, other"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1051,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1052,ublic Object getEmbeddedObject()
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1054,f (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1055,eturn _currentObject();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1057,eturn null;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1060,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1061,"ublic byte[] getBinaryValue(Base64Variant b64variant) throws IOException, JsonParseException"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1063,/ First: maybe we some special types?
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1064,f (_currToken == JsonToken.VALUE_EMBEDDED_OBJECT) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1065,/ Embedded byte array would work nicely...
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1066,bject ob = _currentObject();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1067,f (ob instanceof byte[]) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1068,eturn (byte[]) ob;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1070,/ fall through to error case
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1072,f (_currToken != JsonToken.VALUE_STRING) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1073,"hrow _constructError(""Current token (""+_currToken+"") not VALUE_STRING (or VALUE_EMBEDDED_OBJECT with byte[]), can not access as binary"");"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1075,inal String str = getText();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1076,f (str == null) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1077,eturn null;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1079,yteArrayBuilder builder = _byteBuilder;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1080,f (builder == null) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1081,byteBuilder = builder = new ByteArrayBuilder(100);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1083,"decodeBase64(str, builder, b64variant);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1084,eturn builder.toByteArray();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1089,* Internal methods
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1093,rotected final Object _currentObject() {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1094,eturn _segment.get(_segmentPtr);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1097,rotected final void _checkIsNumber() throws JsonParseException
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1099,f (_currToken == null || !_currToken.isNumeric()) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1100,"hrow _constructError(""Current token (""+_currToken+"") not numeric, can not use numeric value accessors"");"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1104,Override
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1105,rotected void _handleEOF() throws JsonParseException {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1106,throwInternal();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1111, Individual segment of TokenBuffer that can store up to 16 tokens
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1112, (limited by 4 bits per token type marker requirement).
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1113, Current implementation uses fixed length array; could alternatively
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1114, use 16 distinct fields and switch statement (slightly more efficient
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1115," storage, slightly slower access)"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1117,rotected final static class Segment
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1119,ublic final static int TOKENS_PER_SEGMENT = 16;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1122, Static array used for fast conversion between token markers and
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1123, matching {@link JsonToken} instances
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1125,rivate final static JsonToken[] TOKEN_TYPES_BY_INDEX;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1126,tatic {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1127,/ ... here we know that there are <= 16 values in JsonToken enum
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1128,OKEN_TYPES_BY_INDEX = new JsonToken[16];
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1129,sonToken[] t = JsonToken.values();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1130,"ystem.arraycopy(t, 1, TOKEN_TYPES_BY_INDEX, 1, Math.min(15, t.length - 1));"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1133,/ // // Linking
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1135,rotected Segment _next;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1137,/ // // State
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1140, Bit field used to store types of buffered tokens; 4 bits per token.
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1141," Value 0 is reserved for ""not in use"""
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1143,rotected long _tokenTypes;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1146,/ Actual tokens
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1148,rotected final Object[] _tokens = new Object[TOKENS_PER_SEGMENT];
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1150,ublic Segment() { }
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1152,/ // // Accessors
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1154,ublic JsonToken type(int index)
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1156,ong l = _tokenTypes;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1157,f (index > 0) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1158, >>= (index << 2);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1160,nt ix = ((int) l) & 0xF;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1161,eturn TOKEN_TYPES_BY_INDEX[ix];
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1164,ublic Object get(int index) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1165,eturn _tokens[index];
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1168,ublic Segment next() { return _next; }
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1170,/ // // Mutators
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1172,"ublic Segment append(int index, JsonToken tokenType)"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1174,f (index < TOKENS_PER_SEGMENT) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1175,"et(index, tokenType);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1176,eturn null;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1178,next = new Segment();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1179,"next.set(0, tokenType);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1180,eturn _next;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1183,"ublic Segment append(int index, JsonToken tokenType, Object value)"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1185,f (index < TOKENS_PER_SEGMENT) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1186,"et(index, tokenType, value);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1187,eturn null;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1189,next = new Segment();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1190,"next.set(0, tokenType, value);"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1191,eturn _next;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1194,"ublic void set(int index, JsonToken tokenType)"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1196,ong typeCode = tokenType.ordinal();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1197,"* Assumption here is that there are no overwrites, just appends;"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1198, and so no masking is needed
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1200,f (index > 0) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1201,ypeCode <<= (index << 2);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1203,tokenTypes |= typeCode;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1206,"ublic void set(int index, JsonToken tokenType, Object value)"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1208,tokens[index] = value;
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1209,ong typeCode = tokenType.ordinal();
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1210,"* Assumption here is that there are no overwrites, just appends;"
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1211, and so no masking is needed
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1213,f (index > 0) {
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1214,ypeCode <<= (index << 2);
False,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,src/main/java/com/fasterxml/jackson/core/util/TokenBuffer.java,1216,tokenTypes |= typeCode;
