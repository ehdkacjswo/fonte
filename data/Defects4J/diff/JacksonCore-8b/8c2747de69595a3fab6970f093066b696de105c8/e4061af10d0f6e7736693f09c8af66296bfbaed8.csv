is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1684,"nt count = in.read(readBuffer, inputEnd, maxRead - inputEnd);"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1684,int length = maxRead - inputEnd;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1685,if (length == 0) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1686,break;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java,1688,"int count = in.read(readBuffer, inputEnd, length);"
False,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,1592,"nt count = in.read(readBuffer, inputEnd, maxRead - inputEnd);"
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,1592,int length = maxRead - inputEnd;
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,1593,if (length == 0) {
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,1594,break;
True,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java,1596,"int count = in.read(readBuffer, inputEnd, length);"
False,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,46,"/        _testStreamingWrites(f, true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,46,"_testStreamingWrites(f, true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,50,// For [#55]
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,51,public void testIssue55() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,53,final JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,55,"// First,  byte-backed:"
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,56,ByteArrayOutputStream bytes = new ByteArrayOutputStream();
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,58,JsonGenerator gen = f.createGenerator(bytes);
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,59,ByteArrayInputStream data = new ByteArrayInputStream(new byte[2000]);
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,60,"gen.writeBinary(data, 1999);"
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,61,gen.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,63,final int EXP_LEN = 2670;
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,65,"assertEquals(EXP_LEN, bytes.size());"
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,67,// Then char-backed
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,68,StringWriter sw = new StringWriter();
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,70,gen = f.createGenerator(sw);
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,71,data = new ByteArrayInputStream(new byte[2000]);
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,72,"gen.writeBinary(data, 1999);"
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,73,gen.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,src/test/java/com/fasterxml/jackson/core/json/TestBase64Generation.java,75,"assertEquals(EXP_LEN, sw.toString().length());"
