is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,17,ackage org.apache.commons.math;
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,19,mport org.apache.commons.math.exception.util.Localizable;
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,20,mport org.apache.commons.math.exception.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,23, Error thrown when a numerical computation can not be performed because the
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,24, numerical result failed to converge to a finite value.
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,26, @version $Id$
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,28,ublic class ConvergenceException extends MathException {
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,30,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,31,rivate static final long serialVersionUID = -1111352570797662604L;
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,34, Default constructor.
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,36,ublic ConvergenceException() {
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,37,uper(LocalizedFormats.CONVERGENCE_FAILED);
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,41, Constructs an exception with specified formatted detail message.
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,42, Message formatting is delegated to {@link java.text.MessageFormat}.
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,43, @param pattern format specifier
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,44, @param arguments format arguments
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,45, @since 2.2
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,47,"ublic ConvergenceException(Localizable pattern, Object ... arguments) {"
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,48,"uper(pattern, arguments);"
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,52, Create an exception with a given root cause.
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,53, @param cause  the exception or error that caused this exception to be thrown
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,55,ublic ConvergenceException(Throwable cause) {
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,56,uper(cause);
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,60, Constructs an exception with specified formatted detail message and root cause.
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,61, Message formatting is delegated to {@link java.text.MessageFormat}.
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,62, @param cause  the exception or error that caused this exception to be thrown
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,63, @param pattern format specifier
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,64, @param arguments format arguments
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,65, @since 2.2
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,67,"ublic ConvergenceException(Throwable cause, Localizable pattern, Object ... arguments) {"
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,68,"uper(cause, pattern, arguments);"
False,src/main/java/org/apache/commons/math/fraction/FractionConversionException.java,src/main/java/org/apache/commons/math/fraction/FractionConversionException.java,20,mport org.apache.commons.math.ConvergenceException;
True,src/main/java/org/apache/commons/math/fraction/FractionConversionException.java,src/main/java/org/apache/commons/math/fraction/FractionConversionException.java,20,import org.apache.commons.math.exception.ConvergenceException;
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,26,mport org.apache.commons.math.ConvergenceException;
True,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,26,import org.apache.commons.math.exception.ConvergenceException;
False,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,20,mport org.apache.commons.math.ConvergenceException;
True,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,20,import org.apache.commons.math.exception.ConvergenceException;
False,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,48, Create an exception with a given root cause.
False,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,49, @param cause  the exception or error that caused this exception to be thrown
False,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,51,ublic OptimizationException(Throwable cause) {
False,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,52,uper(cause);
False,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,93, @exception OptimizationException if the maximal number
True,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,93,* @exception MaxCountExceededException if the maximal number
False,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,97,hrows OptimizationException {
True,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,97,throws MaxCountExceededException {
False,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,99,hrow new OptimizationException(new MaxCountExceededException(maxIterations));
True,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,99,throw new MaxCountExceededException(maxIterations);
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,15, limitations under the License.
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,18,ackage org.apache.commons.math;
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,21,mport java.util.Locale;
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,23,mport org.junit.Assert;
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,24,mport org.junit.Test;
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,27, @version $Id$
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,29,ublic class ConvergenceExceptionTest {
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,31,Test
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,32,ublic void testConstructor(){
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,33,onvergenceException ex = new ConvergenceException();
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,34,ssert.assertNull(ex.getCause());
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,35,ssert.assertNotNull(ex.getMessage());
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,36,ssert.assertNotNull(ex.getMessage(Locale.FRENCH));
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,37,ssert.assertFalse(ex.getMessage().equals(ex.getMessage(Locale.FRENCH)));
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,40,Test
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,41,ublic void testConstructorCause(){
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,42,"tring inMsg = ""inner message"";"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,43,xception cause = new Exception(inMsg);
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,44,onvergenceException ex = new ConvergenceException(cause);
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,45,"ssert.assertEquals(cause, ex.getCause());"
False,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,21,mport org.apache.commons.math.ConvergenceException;
False,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,79,ublic void testExactIntegration()
False,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,80,hrows ConvergenceException {
True,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,78,public void testExactIntegration() {
False,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,108,ublic void testIssue464() throws ConvergenceException {
True,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java,106,public void testIssue464() {
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,22,mport org.apache.commons.math.ConvergenceException;
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,23,import org.apache.commons.math.exception.ConvergenceException;
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,19,mport org.apache.commons.math.ConvergenceException;
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,19,import org.apache.commons.math.exception.ConvergenceException;
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,68,Test
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,68,@Test(expected=ConvergenceException.class)
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,70,ry {
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,71,/ the golden ratio is notoriously a difficult number for continuous fraction
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,72,"ew Fraction((1 + FastMath.sqrt(5)) / 2, 1.0e-12, 25);"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,73,"ssert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,74, catch (ConvergenceException ce) {
False,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,75,/ expected behavior
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,70,// the golden ratio is notoriously a difficult number for continuous fraction
True,src/test/java/org/apache/commons/math/fraction/FractionTest.java,src/test/java/org/apache/commons/math/fraction/FractionTest.java,71,"new Fraction((1 + FastMath.sqrt(5)) / 2, 1.0e-12, 25);"
