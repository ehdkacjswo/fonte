is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,19,mport org.apache.commons.math.analysis.*;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,19,import java.util.Arrays;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,20,import java.util.Collection;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,22,import org.apache.commons.math.analysis.SinFunction;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,23,import org.apache.commons.math.analysis.UnivariateFunction;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,24,import org.apache.commons.math.analysis.function.Sinc;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,25,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,29,import org.junit.runner.RunWith;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,30,import org.junit.runners.Parameterized;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,31,import org.junit.runners.Parameterized.Parameters;
False,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,32,ublic final class FastSineTransformerTest {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,41,@RunWith(value = Parameterized.class)
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,42,public final class FastSineTransformerTest extends RealTransformerAbstractTest {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,44,private final boolean standard;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,46,private final int[] invalidDataSize;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,48,private final double[] relativeTolerance;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,50,private final int[] validDataSize;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,52,public FastSineTransformerTest(final boolean standard) {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,53,this.standard = standard;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,54,this.validDataSize = new int[] {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,55,"1, 2, 4, 8, 16, 32, 64, 128"
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,57,this.invalidDataSize = new int[] {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,58,129
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,60,this.relativeTolerance = new double[] {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,61,"1E-15, 1E-15, 1E-14, 1E-14, 1E-13, 1E-12, 1E-11, 1E-11"
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,66,"* Returns an array containing {@code true, false} in order to check both"
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,67,* standard and orthogonal DSTs.
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,69,* @return an array of parameters for this parameterized test
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,71,@Parameters
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,72,public static Collection<Object[]> data() {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,73,final Object[][] data = new Boolean[][] {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,75,Boolean.TRUE
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,77,Boolean.FALSE
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,80,return Arrays.asList(data);
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,84,* {@inheritDoc}
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,86,* Overriding the default implementation allows to ensure that the first
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,87,* element of the data set is zero.
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,89,@Override
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,90,double[] createRealData(final int n) {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,91,final double[] data = super.createRealData(n);
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,92,data[0] = 0.0;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,93,return data;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,96,@Override
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,97,RealTransformer createRealTransformer() {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,98,if (standard) {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,99,return FastSineTransformer.create();
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,100,} else {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,101,return FastSineTransformer.createOrthogonal();
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,105,@Override
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,106,int getInvalidDataSize(final int i) {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,107,return invalidDataSize[i];
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,110,@Override
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,111,int getNumberOfInvalidDataSizes() {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,112,return invalidDataSize.length;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,115,@Override
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,116,int getNumberOfValidDataSizes() {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,117,return validDataSize.length;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,120,@Override
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,121,double getRelativeTolerance(final int i) {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,122,return relativeTolerance[i];
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,125,@Override
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,126,int getValidDataSize(final int i) {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,127,return validDataSize[i];
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,130,@Override
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,131,UnivariateFunction getValidFunction() {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,132,return new Sinc();
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,135,@Override
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,136,double getValidLowerBound() {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,137,return 0.0;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,140,@Override
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,141,double getValidUpperBound() {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,142,return FastMath.PI;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,145,@Override
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,146,"double[] transform(final double[] x, final boolean forward) {"
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,147,final int n = x.length;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,148,final double[] y = new double[n];
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,149,final double[] sin = new double[2 * n];
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,150,for (int i = 0; i < sin.length; i++) {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,151,sin[i] = FastMath.sin(FastMath.PI * i / (double) n);
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,153,for (int j = 0; j < n; j++) {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,154,double yj = 0.0;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,155,for (int i = 0; i < n; i++) {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,156,yj += x[i] * sin[(i * j) % sin.length];
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,158,y[j] = yj;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,160,final double s;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,161,if (forward) {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,162,s = standard ? 1.0 : FastMath.sqrt(2.0 / (double) n);
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,163,} else {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,164,s = standard ? 2.0 / n : FastMath.sqrt(2.0 / (double) n);
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,166,"TransformUtils.scaleArray(y, s);"
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,167,return y;
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,171,* Additional tests.
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,173,@Test(expected = MathIllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,174,public void testTransformRealFirstElementNotZero() {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,175,final double[] data = new double[] {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,176,"1.0, 1.0, 1.0, 1.0"
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,178,final RealTransformer transformer = createRealTransformer();
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,179,transformer.transform(data);
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,182,@Test(expected = MathIllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,183,public void testInverseTransformRealFirstElementNotZero() {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,184,final double[] data = new double[] {
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,185,"1.0, 1.0, 1.0, 1.0"
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,187,final RealTransformer transformer = createRealTransformer();
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,188,transformer.inverseTransform(data);
True,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java,192,* Additional (legacy) tests.
False,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,47, Returns a random array of doubles. Random generator always uses the same
False,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,48, seed.
False,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,50, @param n the size of the array to be returned
False,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,51, @return a random array of specified size
False,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,53,tatic double[] createRealData(final int n) {
False,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,54,inal Random random = new Random(SEED);
False,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,55,inal double[] data = new double[n];
False,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,56,or (int i = 0; i < n; i++) {
False,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,57,ata[i] = 2.0 * random.nextDouble() - 1.0;
False,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,59,eturn data;
True,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,404,* Utility methods.
True,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,408,* Returns a random array of doubles. Random generator always uses the same
True,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,409,* seed.
True,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,411,* @param n the size of the array to be returned
True,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,412,* @return a random array of specified size
True,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,414,double[] createRealData(final int n) {
True,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,415,final Random random = new Random(SEED);
True,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,416,final double[] data = new double[n];
True,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,417,for (int i = 0; i < n; i++) {
True,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,418,data[i] = 2.0 * random.nextDouble() - 1.0;
True,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math/transform/RealTransformerAbstractTest.java,420,return data;
