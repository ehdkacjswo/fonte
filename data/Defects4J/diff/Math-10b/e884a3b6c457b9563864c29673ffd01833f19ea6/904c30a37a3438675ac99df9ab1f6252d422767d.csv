is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,17,package org.apache.commons.math3.analysis.differentiation;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,19,import java.io.Serializable;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,21,import org.apache.commons.math3.analysis.UnivariateFunction;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,22,import org.apache.commons.math3.analysis.UnivariateMatrixFunction;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,23,import org.apache.commons.math3.analysis.UnivariateVectorFunction;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,24,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,25,import org.apache.commons.math3.exception.NotPositiveException;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,26,import org.apache.commons.math3.exception.NumberIsTooLargeException;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,27,import org.apache.commons.math3.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,29,/** Univariate functions differentiator using finite differences.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,30,* <p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,31,* This class creates some wrapper objetcs around regular
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,32,* {@link UnivariateFunction univariate functions} (or {@link
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,33,* UnivariateVectorFunction univariate vector functions} or {@link
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,34,* UnivariateMatrixFunction univariate matrix functions}). These
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,35,* wrapper objects compute derivatives in addition to function
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,36,* value.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,37,* </p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,38,* <p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,39,* The wrapper objects work by calling the underlying function on
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,40,* a sampling grid around the current point and perform polynomial
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,41,* interpolation. A finite differences scheme with n points is
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,42,"* theoretically able to compute derivatives up to order n-1, but"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,43,* it is generally better to have a slight margin. The step size must
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,44,* also be small enough in order for the polynomial approximation to
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,45,"* be good in the current point neighborhood, but it should not be too"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,46,* small because numerical instability appears quickly (there are several
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,47,* differences of close points). Choosing the number of points and
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,48,* the step size is highly problem dependent.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,49,* </p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,50,* <p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,51,"* As an example of good and bad settings, lets consider the quintic"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,52,* polynomial function {@code f(x) = (x-1)*(x-0.5)*x*(x+0.5)*(x+1)}.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,53,"* Since it is a polynomial, finite differences with at least 6 points"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,54,* should theoretically recover the exact same polynomial and hence
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,55,"* compute accurate derivatives for any order. However, due to numerical"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,56,"* errors, we get the following results for a 7 points finite differences"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,57,"* for abscissae in the [-10, 10] range:"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,58,* <ul>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,59,"*   <li>step size = 0.25, second order derivative error about 9.97e-10</li>"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,60,"*   <li>step size = 0.25, fourth order derivative error about 5.43e-8</li>"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,61,"*   <li>step size = 1.0e-6, second order derivative error about 56.25</li>"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,62,"*   <li>step size = 1.0e-6, fourth order derivative error about 2.47e+14</li>"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,63,* </ul>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,64,"* This example shows that the small step size is really bad, even simply"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,65,* for second order derivative!
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,66,* </p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,67,* @version $Id$
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,68,* @since 3.1
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,70,public class FiniteDifferencesDifferentiator
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,71,"implements UnivariateFunctionDifferentiator, UnivariateVectorFunctionDifferentiator,"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,72,"UnivariateMatrixFunctionDifferentiator, Serializable {"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,74,/** Serializable UID. */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,75,private static final long serialVersionUID = 20120917L;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,77,/** Number of points to use. */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,78,private final int nbPoints;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,80,/** Step size. */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,81,private double stepSize;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,84,* Build a differentiator with number of points and step size.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,85,* <p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,86,* Beware that wrong settings for the finite differences differentiator
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,87,"* can lead to highly unstable and inaccurate results, especially for"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,88,* high derivation orders. Using very small step sizes is often a
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,89,* <em>bad</em> idea.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,90,* </p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,91,* @param nbPoints number of points to use
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,92,* @param stepSize step size (gap between each point)
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,93,* @exception NotPositiveException if {@code stepsize <= 0} (note that
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,94,* {@link NotPositiveException} extends {@link NumberIsTooSmallException})
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,95,* @exception NumberIsTooSmallException {@code nbPoint <= 1}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,97,"public FiniteDifferencesDifferentiator(final int nbPoints, final double stepSize)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,98,"throws NotPositiveException, NumberIsTooSmallException {"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,100,if (nbPoints <= 1) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,101,"throw new NumberIsTooSmallException(stepSize, 1, false);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,103,this.nbPoints = nbPoints;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,105,if (stepSize <= 0) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,106,throw new NotPositiveException(stepSize);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,108,this.stepSize = stepSize;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,113,* Get the number of points to use.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,114,* @return number of points to use
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,116,public int getNbPoints() {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,117,return nbPoints;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,121,* Get the step size.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,122,* @return step size
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,124,public double getStepSize() {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,125,return stepSize;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,129,* Evaluate derivatives from a centered sample.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,130,* @param t central value and derivatives
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,131,* @param y function values at {@code t + stepSize * (i - 0.5 * (nbPoints - 1))}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,132,* @return value and derivatives at {@code t}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,133,* @exception NumberIsTooLargeException if the requested derivation order
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,134,* is larger or equal to the number of points
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,136,"private DerivativeStructure evaluate(final DerivativeStructure t, final double[] y)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,137,throws NumberIsTooLargeException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,139,// check we can achieve the requested derivation order with the sample
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,140,final int order = t.getOrder();
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,141,if (order >= nbPoints) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,142,"throw new NumberIsTooLargeException(order, nbPoints, false);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,145,// create divided differences diagonal arrays
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,146,final double[] top    = new double[nbPoints];
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,147,final double[] bottom = new double[nbPoints];
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,149,for (int i = 0; i < nbPoints; ++i) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,151,// update the bottom diagonal of the divided differences array
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,152,bottom[i] = y[i];
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,153,for (int j = 1; j <= i; ++j) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,154,bottom[i - j] = (bottom[i - j + 1] - bottom[i - j]) / (j * stepSize);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,157,// update the top diagonal of the divided differences array
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,158,top[i] = bottom[0];
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,162,// evaluate interpolation polynomial (represented by top diagonal) at t
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,163,final int parameters = t.getFreeParameters();
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,164,final double[] derivatives = t.getAllDerivatives();
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,165,"DerivativeStructure interpolation = new DerivativeStructure(parameters, order, 0.0);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,166,"DerivativeStructure monomial      = new DerivativeStructure(parameters, order, 1.0);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,167,for (int i = 0; i < nbPoints; ++i) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,168,interpolation = interpolation.add(monomial.multiply(top[i]));
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,169,derivatives[0] = stepSize * (0.5 * (nbPoints - 1) - i);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,170,"final DerivativeStructure deltaX = new DerivativeStructure(parameters, order, derivatives);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,171,monomial = monomial.multiply(deltaX);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,174,return interpolation;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,178,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,179,* <p>The returned object cannot compute derivatives to arbitrary orders. The
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,180,* value function will throw a {@link NumberIsTooLargeException} if the requested
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,181,* derivation order is larger or equal to the number of points.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,182,* </p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,184,public UnivariateDifferentiableFunction differentiate(final UnivariateFunction function) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,185,return new UnivariateDifferentiableFunction() {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,187,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,188,public double value(final double x) throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,189,return function.value(x);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,192,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,193,public DerivativeStructure value(final DerivativeStructure t)
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,194,throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,196,// get sample points centered around t value
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,197,final double t0 = t.getValue();
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,198,final double[] y = new double[nbPoints];
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,199,for (int i = 0; i < nbPoints; ++i) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,200,final double xi = t0 + stepSize * (i - 0.5 * (nbPoints - 1));
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,201,y[i] = function.value(xi);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,204,// evaluate derivatives
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,205,"return evaluate(t, y);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,212,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,213,* <p>The returned object cannot compute derivatives to arbitrary orders. The
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,214,* value function will throw a {@link NumberIsTooLargeException} if the requested
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,215,* derivation order is larger or equal to the number of points.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,216,* </p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,218,public UnivariateDifferentiableVectorFunction differentiate(final UnivariateVectorFunction function) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,219,return new UnivariateDifferentiableVectorFunction() {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,221,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,222,public double[]value(final double x) throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,223,return function.value(x);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,226,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,227,public DerivativeStructure[] value(final DerivativeStructure t)
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,228,throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,230,// get sample points centered around t value
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,231,final double t0 = t.getValue();
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,232,double[][] y = null;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,233,for (int i = 0; i < nbPoints; ++i) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,234,final double xi = t0 + stepSize * (i - 0.5 * (nbPoints - 1));
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,235,final double[] v = function.value(xi);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,236,if (i == 0) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,237,y = new double[v.length][nbPoints];
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,239,for (int j = 0; j < v.length; ++j) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,240,y[j][i] = v[j];
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,244,// evaluate derivatives
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,245,final DerivativeStructure[] value = new DerivativeStructure[y.length];
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,246,for (int j = 0; j < value.length; ++j) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,247,"value[j] = evaluate(t, y[j]);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,250,return value;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,257,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,258,* <p>The returned object cannot compute derivatives to arbitrary orders. The
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,259,* value function will throw a {@link NumberIsTooLargeException} if the requested
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,260,* derivation order is larger or equal to the number of points.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,261,* </p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,263,public UnivariateDifferentiableMatrixFunction differentiate(final UnivariateMatrixFunction function) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,264,return new UnivariateDifferentiableMatrixFunction() {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,266,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,267,public double[][]  value(final double x) throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,268,return function.value(x);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,271,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,272,public DerivativeStructure[][]  value(final DerivativeStructure t)
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,273,throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,275,// get sample points centered around t value
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,276,final double t0 = t.getValue();
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,277,double[][][] y = null;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,278,for (int i = 0; i < nbPoints; ++i) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,279,final double xi = t0 + stepSize * (i - 0.5 * (nbPoints - 1));
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,280,final double[][] v = function.value(xi);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,281,if (i == 0) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,282,y = new double[v.length][v[0].length][nbPoints];
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,284,for (int j = 0; j < v.length; ++j) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,285,for (int k = 0; k < v[j].length; ++k) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,286,y[j][k][i] = v[j][k];
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,291,// evaluate derivatives
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,292,final DerivativeStructure[][] value = new DerivativeStructure[y.length][y[0].length];
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,293,for (int j = 0; j < value.length; ++j) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,294,for (int k = 0; k < y[j].length; ++k) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,295,"value[j][k] = evaluate(t, y[j][k]);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,299,return value;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,18,package org.apache.commons.math3.analysis.differentiation;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,20,import org.apache.commons.math3.TestUtils;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,21,import org.apache.commons.math3.analysis.QuinticFunction;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,22,import org.apache.commons.math3.analysis.UnivariateFunction;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,23,import org.apache.commons.math3.analysis.UnivariateMatrixFunction;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,24,import org.apache.commons.math3.analysis.UnivariateVectorFunction;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,25,import org.apache.commons.math3.analysis.function.Gaussian;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,26,import org.apache.commons.math3.analysis.function.Sin;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,27,import org.apache.commons.math3.exception.NotPositiveException;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,28,import org.apache.commons.math3.exception.NumberIsTooSmallException;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,29,import org.apache.commons.math3.util.FastMath;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,30,import org.junit.Assert;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,31,import org.junit.Test;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,34,* Test for class {@link FiniteDifferencesDifferentiator}.
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,36,public class FiniteDifferencesDifferentiatorTest {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,38,@Test(expected=NumberIsTooSmallException.class)
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,39,public void testWrongNumberOfPoints() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,40,"new FiniteDifferencesDifferentiator(1, 1.0);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,43,@Test(expected=NotPositiveException.class)
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,44,public void testWrongStepSize() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,45,"new FiniteDifferencesDifferentiator(3, 0.0);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,48,@Test
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,49,public void testSerialization() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,50,FiniteDifferencesDifferentiator differentiator =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,51,"new FiniteDifferencesDifferentiator(3, 1.0e-3);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,52,FiniteDifferencesDifferentiator recovered =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,53,(FiniteDifferencesDifferentiator) TestUtils.serializeAndRecover(differentiator);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,54,"Assert.assertEquals(differentiator.getNbPoints(), recovered.getNbPoints());"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,55,"Assert.assertEquals(differentiator.getStepSize(), recovered.getStepSize(), 1.0e-15);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,58,@Test
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,59,public void testConstant() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,60,FiniteDifferencesDifferentiator differentiator =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,61,"new FiniteDifferencesDifferentiator(5, 0.01);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,62,UnivariateDifferentiableFunction f =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,63,differentiator.differentiate(new UnivariateFunction() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,64,public double value(double x) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,65,return 42.0;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,68,for (double x = -10; x < 10; x += 0.1) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,69,"DerivativeStructure y = f.value(new DerivativeStructure(1, 2, 0, x));"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,70,"Assert.assertEquals(42.0, y.getValue(), 1.0e-15);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,71,"Assert.assertEquals( 0.0, y.getPartialDerivative(1), 1.0e-15);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,72,"Assert.assertEquals( 0.0, y.getPartialDerivative(2), 1.0e-15);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,76,@Test
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,77,public void testLinear() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,78,FiniteDifferencesDifferentiator differentiator =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,79,"new FiniteDifferencesDifferentiator(5, 0.01);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,80,UnivariateDifferentiableFunction f =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,81,differentiator.differentiate(new UnivariateFunction() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,82,public double value(double x) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,83,return 2 - 3 * x;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,86,for (double x = -10; x < 10; x += 0.1) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,87,"DerivativeStructure y = f.value(new DerivativeStructure(1, 2, 0, x));"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,88,"Assert.assertEquals(2 - 3 * x, y.getValue(), 1.0e-20);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,89,"Assert.assertEquals(-3.0, y.getPartialDerivative(1), 4.0e-13);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,90,"Assert.assertEquals( 0.0, y.getPartialDerivative(2), 5.0e-11);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,94,@Test
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,95,public void testGaussian() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,96,FiniteDifferencesDifferentiator differentiator =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,97,"new FiniteDifferencesDifferentiator(9, 0.02);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,98,"UnivariateDifferentiableFunction gaussian = new Gaussian(1.0, 2.0);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,99,UnivariateDifferentiableFunction f =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,100,differentiator.differentiate(gaussian);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,101,double[] expectedError = new double[] {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,102,"2.776e-17, 1.742e-15, 2.385e-13, 1.329e-11, 2.668e-9, 8.873e-8"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,104,double[] maxError = new double[expectedError.length];
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,105,for (double x = -10; x < 10; x += 0.1) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,106,"DerivativeStructure dsX  = new DerivativeStructure(1, maxError.length - 1, 0, x);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,107,DerivativeStructure yRef = gaussian.value(dsX);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,108,DerivativeStructure y    = f.value(dsX);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,109,for (int order = 0; order <= yRef.getOrder(); ++order) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,110,"maxError[order] = FastMath.max(maxError[order],"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,111,FastMath.abs(yRef.getPartialDerivative(order) -
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,112,y.getPartialDerivative(order)));
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,115,for (int i = 0; i < maxError.length; ++i) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,116,"Assert.assertEquals(expectedError[i], maxError[i], 0.01 * expectedError[i]);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,120,@Test
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,121,public void testStepSizeUnstability() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,122,UnivariateDifferentiableFunction quintic = new QuinticFunction();
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,123,UnivariateDifferentiableFunction goodStep =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,124,"new FiniteDifferencesDifferentiator(7, 0.25).differentiate(quintic);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,125,UnivariateDifferentiableFunction badStep =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,126,"new FiniteDifferencesDifferentiator(7, 1.0e-6).differentiate(quintic);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,127,double[] maxErrorGood = new double[7];
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,128,double[] maxErrorBad  = new double[7];
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,129,for (double x = -10; x < 10; x += 0.1) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,130,"DerivativeStructure dsX  = new DerivativeStructure(1, 6, 0, x);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,131,DerivativeStructure yRef  = quintic.value(dsX);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,132,DerivativeStructure yGood = goodStep.value(dsX);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,133,DerivativeStructure yBad  = badStep.value(dsX);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,134,for (int order = 0; order <= 6; ++order) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,135,"maxErrorGood[order] = FastMath.max(maxErrorGood[order],"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,136,FastMath.abs(yRef.getPartialDerivative(order) -
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,137,yGood.getPartialDerivative(order)));
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,138,"maxErrorBad[order]  = FastMath.max(maxErrorBad[order],"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,139,FastMath.abs(yRef.getPartialDerivative(order) -
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,140,yBad.getPartialDerivative(order)));
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,144,// the 0.25 step size is good for finite differences in the quintic on this abscissa range for 7 points
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,145,// the errors are fair
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,146,final double[] expectedGood = new double[] {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,147,"7.276e-12, 7.276e-11, 9.968e-10, 3.092e-9, 5.432e-8, 8.196e-8, 1.818e-6"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,150,// the 1.0e-6 step size is far too small for finite differences in the quintic on this abscissa range for 7 points
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,151,// the errors are huge!
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,152,final double[] expectedBad = new double[] {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,153,"1.792e-22, 6.926e-5, 56.25, 1.783e8, 2.468e14, 3.056e20, 5.857e26"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,156,for (int i = 0; i < maxErrorGood.length; ++i) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,157,"Assert.assertEquals(expectedGood[i], maxErrorGood[i], 0.01 * expectedGood[i]);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,158,"Assert.assertEquals(expectedBad[i],  maxErrorBad[i],  0.01 * expectedBad[i]);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,163,@Test
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,164,public void testVectorFunction() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,166,FiniteDifferencesDifferentiator differentiator =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,167,"new FiniteDifferencesDifferentiator(7, 0.01);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,168,UnivariateDifferentiableVectorFunction f =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,169,differentiator.differentiate(new UnivariateVectorFunction() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,171,public double[] value(double x) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,172,"return new double[] { FastMath.cos(x), FastMath.sin(x) };"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,177,for (double x = -10; x < 10; x += 0.1) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,178,"DerivativeStructure[] y = f.value(new DerivativeStructure(1, 2, 0, x));"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,179,double cos = FastMath.cos(x);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,180,double sin = FastMath.sin(x);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,181,"Assert.assertEquals(cos, y[0].getValue(), 2.0e-16);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,182,"Assert.assertEquals(sin, y[1].getValue(), 2.0e-16);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,183,"Assert.assertEquals(-sin, y[0].getPartialDerivative(1), 5.0e-14);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,184,"Assert.assertEquals( cos, y[1].getPartialDerivative(1), 5.0e-14);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,185,"Assert.assertEquals(-cos, y[0].getPartialDerivative(2), 6.0e-12);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,186,"Assert.assertEquals(-sin, y[1].getPartialDerivative(2), 6.0e-12);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,191,@Test
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,192,public void testMatrixFunction() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,194,FiniteDifferencesDifferentiator differentiator =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,195,"new FiniteDifferencesDifferentiator(7, 0.01);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,196,UnivariateDifferentiableMatrixFunction f =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,197,differentiator.differentiate(new UnivariateMatrixFunction() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,199,public double[][] value(double x) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,200,return new double[][] {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,201,"{ FastMath.cos(x),  FastMath.sin(x)  },"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,202,"{ FastMath.cosh(x), FastMath.sinh(x) }"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,208,for (double x = -1; x < 1; x += 0.02) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,209,"DerivativeStructure[][] y = f.value(new DerivativeStructure(1, 2, 0, x));"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,210,double cos = FastMath.cos(x);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,211,double sin = FastMath.sin(x);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,212,double cosh = FastMath.cosh(x);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,213,double sinh = FastMath.sinh(x);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,214,"Assert.assertEquals(cos,   y[0][0].getValue(), 7.0e-18);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,215,"Assert.assertEquals(sin,   y[0][1].getValue(), 7.0e-18);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,216,"Assert.assertEquals(cosh,  y[1][0].getValue(), 3.0e-16);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,217,"Assert.assertEquals(sinh,  y[1][1].getValue(), 3.0e-16);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,218,"Assert.assertEquals(-sin,  y[0][0].getPartialDerivative(1), 2.0e-14);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,219,"Assert.assertEquals( cos,  y[0][1].getPartialDerivative(1), 2.0e-14);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,220,"Assert.assertEquals( sinh, y[1][0].getPartialDerivative(1), 3.0e-14);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,221,"Assert.assertEquals( cosh, y[1][1].getPartialDerivative(1), 3.0e-14);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,222,"Assert.assertEquals(-cos,  y[0][0].getPartialDerivative(2), 3.0e-12);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,223,"Assert.assertEquals(-sin,  y[0][1].getPartialDerivative(2), 3.0e-12);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,224,"Assert.assertEquals( cosh, y[1][0].getPartialDerivative(2), 6.0e-12);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,225,"Assert.assertEquals( sinh, y[1][1].getPartialDerivative(2), 6.0e-12);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,230,@Test
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,231,public void testSeveralFreeParameters() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,232,FiniteDifferencesDifferentiator differentiator =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,233,"new FiniteDifferencesDifferentiator(5, 0.001);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,234,UnivariateDifferentiableFunction sine = new Sin();
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,235,UnivariateDifferentiableFunction f =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,236,differentiator.differentiate(sine);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,237,double[] expectedError = new double[] {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,238,"1.110e-16, 2.66e-12, 4.803e-9, 5.486e-5"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,240,double[] maxError = new double[expectedError.length];
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,241,for (double x = -2; x < 2; x += 0.1) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,242,for (double y = -2; y < 2; y += 0.1) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,243,"DerivativeStructure dsX  = new DerivativeStructure(2, maxError.length - 1, 0, x);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,244,"DerivativeStructure dsY  = new DerivativeStructure(2, maxError.length - 1, 1, y);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,245,DerivativeStructure dsT  = dsX.multiply(3).subtract(dsY.multiply(2));
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,246,DerivativeStructure sRef = sine.value(dsT);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,247,DerivativeStructure s    = f.value(dsT);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,248,for (int xOrder = 0; xOrder <= sRef.getOrder(); ++xOrder) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,249,for (int yOrder = 0; yOrder <= sRef.getOrder(); ++yOrder) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,250,if (xOrder + yOrder <= sRef.getOrder()) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,251,"maxError[xOrder +yOrder] = FastMath.max(maxError[xOrder + yOrder],"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,252,"FastMath.abs(sRef.getPartialDerivative(xOrder, yOrder) -"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,253,"s.getPartialDerivative(xOrder, yOrder)));"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,259,for (int i = 0; i < maxError.length; ++i) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,260,"Assert.assertEquals(expectedError[i], maxError[i], 0.01 * expectedError[i]);"
