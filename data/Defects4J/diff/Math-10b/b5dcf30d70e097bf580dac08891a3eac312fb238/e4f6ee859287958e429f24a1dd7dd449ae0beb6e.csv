is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,17,package org.apache.commons.math.stat.regression;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,19,import java.io.Serializable;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,20,import java.util.Arrays;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,21,import org.apache.commons.math.util.FastMath;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,24,* Results of a Multiple Linear Regression model fit.
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,26,* @version $Id$
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,27,* @since 3.0
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,29,public class RegressionResults implements Serializable {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,31,private static final int SSE_IDX = 0;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,32,private static final int SST_IDX = 1;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,33,private static final int RSQ_IDX = 2;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,34,private static final int MSE_IDX = 3;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,35,private static final int ADJRSQ_IDX = 4;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,36,private static final long serialVersionUID = 1l;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,37,private final double[] parameters;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,38,private final double[][] varCovData;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,39,private final boolean isSymmetricVCD;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,40,private final int rank;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,41,private final long nobs;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,42,private final boolean containsConstant;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,43,private final double[] globalFitInfo;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,46,*  Set the default constructor to private access
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,47,*  to prevent inadvertent instantiation
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,49,"@SuppressWarnings(""unused"")"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,50,private RegressionResults() {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,51,this.parameters = null;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,52,this.varCovData = null;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,53,this.rank = -1;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,54,this.nobs = -1;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,55,this.containsConstant = false;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,56,this.isSymmetricVCD = false;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,57,this.globalFitInfo = null;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,60,public RegressionResults(
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,61,"final double[] parameters, final double[][] varcov,"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,62,"final boolean isSymmetricCompressed,"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,63,"final long nobs, final int rank,"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,64,"final double sumy, final double sumysq, final double sse,"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,65,"final boolean containsConstant,"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,66,final boolean copyData) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,67,if (copyData) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,68,"this.parameters = Arrays.copyOf(parameters, parameters.length);"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,69,this.varCovData = new double[varcov.length][];
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,70,for (int i = 0; i < varcov.length; i++) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,71,"this.varCovData[i] = Arrays.copyOf(varcov[i], varcov[i].length);"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,73,} else {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,74,this.parameters = parameters;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,75,this.varCovData = varcov;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,77,this.isSymmetricVCD = isSymmetricCompressed;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,78,this.nobs = nobs;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,79,this.rank = rank;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,80,this.containsConstant = containsConstant;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,81,this.globalFitInfo = new double[5];
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,82,"Arrays.fill(this.globalFitInfo, Double.NaN);"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,84,if (rank > 2) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,85,this.globalFitInfo[SST_IDX] = containsConstant ?
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,86,(sumysq - sumy * sumy / ((double) nobs)) : sumysq;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,88,this.globalFitInfo[SSE_IDX] = sse;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,89,this.globalFitInfo[MSE_IDX] = this.globalFitInfo[SSE_IDX] /
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,90,((double) (nobs - rank));
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,91,this.globalFitInfo[RSQ_IDX] = 1.0 -
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,92,this.globalFitInfo[SSE_IDX] /
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,93,this.globalFitInfo[SST_IDX];
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,95,if (!containsConstant) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,96,this.globalFitInfo[ADJRSQ_IDX] = 1.0 - (1.0 - this.globalFitInfo[RSQ_IDX]) *
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,97,(nobs / (nobs - rank));
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,98,} else {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,99,this.globalFitInfo[ADJRSQ_IDX] = 1.0 - (sse * (nobs - 1.0)) /
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,100,(globalFitInfo[SST_IDX] * (nobs - rank));
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,105,* <p>Returns the parameter estimate for the regressor at the given index.</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,107,"* <p>A redundant regressor will have its redundancy flag set, as well as"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,108,*  a parameters estimated equal to {@code Double.NaN}</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,110,"* @param index an integer index which must be in the range [0, numberOfParameters-1]"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,111,* @return parameters estimated for regressor at index
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,112,* @throws IndexOutOfBoundsException thrown if the index >= numberOfParameters
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,114,public double getParameterEstimate(int index) throws IndexOutOfBoundsException {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,115,if (parameters == null) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,116,return Double.NaN;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,118,if (index < 0 || index >= this.parameters.length) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,119,"throw new IndexOutOfBoundsException(""Index is outside of the 0 to number of variables - 1 range"");"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,121,return this.parameters[index];
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,125,* <p>Returns a copy of the regression parameters estimates.</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,127,* <p>The parameter estimates are returned in the natural order of the data.</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,129,"* <p>A redundant regressor will have its redundancy flag set, as will"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,130,*  a parameter estimate equal to {@code Double.NaN}.</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,132,"* @return array of parameter estimates, null if no estimation occurred"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,134,public double[] getParameterEstimates() {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,135,if (this.parameters == null) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,136,return null;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,138,"return Arrays.copyOf(parameters, parameters.length);"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,142,"* Returns the <a href=""http://www.xycoon.com/standerrorb(1).htm"">standard"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,143,"* error of the parameter estimate at index</a>,"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,144,* usually denoted s(b<sub>index</sub>).
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,146,"* @param index an integer index which must be in the range [0, numberOfParameters-1]"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,147,* @return standard errors associated with parameters estimated at index
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,148,* @throws IndexOutOfBoundsException thrown if the index >= numberOfParameters
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,150,public double getStdErrorOfEstimate(int index) throws IndexOutOfBoundsException {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,151,if (parameters == null) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,152,return Double.NaN;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,154,if (index < 0 || index >= this.parameters.length) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,155,"throw new IndexOutOfBoundsException(""Index is outside of the 0 to number of variables - 1 range"");"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,157,"double var = this.getVcvElement(index, index);"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,158,if (!Double.isNaN(var) && var > Double.MIN_VALUE) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,159,return FastMath.sqrt(rank);
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,161,return Double.NaN;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,165,"* <p>Returns the <a href=""http://www.xycoon.com/standerrorb(1).htm"">standard"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,166,"* error of the parameter estimates</a>,"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,167,* usually denoted s(b<sub>i</sub>).</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,169,* <p>If there are problems with an ill conditioned design matrix then the regressor
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,170,* which is redundant will be assigned <code>Double.NaN</code>. </p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,172,"* @return an array standard errors associated with parameters estimates,"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,173,*  null if no estimation occurred
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,175,public double[] getStdErrorOfEstimates() {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,176,if (parameters == null) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,177,return null;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,179,double[] se = new double[this.parameters.length];
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,180,for (int i = 0; i < this.parameters.length; i++) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,181,"double var = this.getVcvElement(i, i);"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,182,if (!Double.isNaN(var) && var > Double.MIN_VALUE) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,183,se[i] = FastMath.sqrt(rank);
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,184,continue;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,186,se[i] = Double.NaN;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,188,return se;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,192,* <p>Returns the covariance between regression parameters i and j.</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,194,* <p>If there are problems with an ill conditioned design matrix then the covariance
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,195,* which involves redundant columns will be assigned {@code Double.NaN}. </p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,197,* @param i - the ith regression parameter
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,198,* @param j - the jth regression parameter
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,199,* @return the covariance of the parameter estimates
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,201,"public double getCovarianceOfParameters(int i, int j) throws IndexOutOfBoundsException {"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,202,if (parameters == null) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,203,return Double.NaN;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,205,if (i < 0 || i >= this.parameters.length) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,206,"throw new IndexOutOfBoundsException("" Row index is outside of the 0 "" +"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,207,"""to number of variables - 1 range"");"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,209,if (j < 0 || j >= this.parameters.length) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,210,"throw new IndexOutOfBoundsException("" Column index is outside of the 0"" +"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,211,""" to number of variables - 1 range"");"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,213,"return this.getVcvElement(i, j);"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,217,* <p>Returns the number of parameters estimated in the model.</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,219,"* <p>This is the maximum number of regressors, some techniques may drop"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,220,* redundant parameters</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,222,"* @return number of regressors, -1 if not estimated"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,224,public int getNumberOfParameters() {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,225,if (this.parameters == null) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,226,return -1;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,228,return this.parameters.length;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,232,* Returns the number of observations added to the regression model.
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,234,"* @return Number of observations, -1 if an error condition prevents estimation"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,236,public long getN() {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,237,return this.nobs;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,241,* <p>Returns the sum of squared deviations of the y values about their mean.</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,243,* <p>This is defined as SSTO
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,244,"* <a href=""http://www.xycoon.com/SumOfSquares.htm"">here</a>.</p>"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,246,"* <p>If {@code n < 2}, this returns {@code Double.NaN}.</p>"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,248,* @return sum of squared deviations of y values
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,250,public double getTotalSumSquares() {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,251,return this.globalFitInfo[SST_IDX];
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,255,* <p>Returns the sum of squared deviations of the predicted y values about
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,256,* their mean (which equals the mean of y).</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,258,* <p>This is usually abbreviated SSR or SSM.  It is defined as SSM
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,259,"* <a href=""http://www.xycoon.com/SumOfSquares.htm"">here</a></p>"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,261,* <p><strong>Preconditions</strong>: <ul>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,262,* <li>At least two observations (with at least two different x values)
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,263,* must have been added before invoking this method. If this method is
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,264,"* invoked before a model can be estimated, <code>Double.NaN</code> is"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,265,* returned.
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,266,* </li></ul></p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,268,* @return sum of squared deviations of predicted y values
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,270,public double getRegressionSumSquares() {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,271,return this.globalFitInfo[SST_IDX] - this.globalFitInfo[SSE_IDX];
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,275,"* <p>Returns the <a href=""http://www.xycoon.com/SumOfSquares.htm"">"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,276,* sum of squared errors</a> (SSE) associated with the regression
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,277,* model.</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,279,"* <p>The return value is constrained to be non-negative - i.e., if due to"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,280,"* rounding errors the computational formula returns a negative result,"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,281,* 0 is returned.</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,283,* <p><strong>Preconditions</strong>: <ul>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,284,* <li>numberOfParameters data pairs
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,285,* must have been added before invoking this method. If this method is
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,286,"* invoked before a model can be estimated, <code>Double,NaN</code> is"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,287,* returned.
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,288,* </li></ul></p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,290,* @return sum of squared errors associated with the regression model
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,292,public double getErrorSumSquares() {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,293,return this.globalFitInfo[ SSE_IDX];
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,297,"* <p>Returns the sum of squared errors divided by the degrees of freedom,"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,298,* usually abbreviated MSE.</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,300,"* <p>If there are fewer than <strong>numberOfParameters + 1</strong> data pairs in the model,"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,301,"* or if there is no variation in <code>x</code>, this returns"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,302,* <code>Double.NaN</code>.</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,304,* @return sum of squared deviations of y values
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,306,public double getMeanSquareError() {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,307,return this.globalFitInfo[ MSE_IDX];
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,311,"* <p>Returns the <a href=""http://www.xycoon.com/coefficient1.htm"">"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,312,"* coefficient of multiple determination</a>,"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,313,* usually denoted r-square.</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,315,* <p><strong>Preconditions</strong>: <ul>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,316,* <li>At least numberOfParameters observations (with at least numberOfParameters different x values)
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,317,* must have been added before invoking this method. If this method is
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,318,"* invoked before a model can be estimated, {@code Double,NaN} is"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,319,* returned.
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,320,* </li></ul></p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,322,"* @return r-square, a double in the interval [0, 1]"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,324,public double getRSquared() {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,325,return this.globalFitInfo[ RSQ_IDX];
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,329,"* <p>Returns the adjusted R-squared statistic, defined by the formula <pre>"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,330,* R<sup>2</sup><sub>adj</sub> = 1 - [SSR (n - 1)] / [SSTO (n - p)]
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,331,* </pre>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,332,"* where SSR is the sum of squared residuals},"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,333,"* SSTO is the total sum of squares}, n is the number"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,334,* of observations and p is the number of parameters estimated (including the intercept).</p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,336,"* <p>If the regression is estimated without an intercept term, what is returned is <pre>"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,337,* <code> 1 - (1 - {@link #getRSquared()} ) * (n / (n - p)) </code>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,338,* </pre></p>
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,340,* @return adjusted R-Squared statistic
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,342,public double getAdjustedRSquared() {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,343,return this.globalFitInfo[ ADJRSQ_IDX];
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,347,* Returns true if the regression model has been computed including an intercept.
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,348,"* In this case, the coefficient of the intercept is the first element of the"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,349,* {@link #getParameterEstimates() parameter estimates}.
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,350,* @return true if the model has an intercept term
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,352,public boolean hasIntercept() {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,353,return this.containsConstant;
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,357,* Gets the i-jth element of the variance-covariance matrix.
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,359,* @param i first variable index
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,360,* @param j second variable index
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,361,* @return the requested variance-covariance matrix entry
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,363,"private double getVcvElement(int i, int j) {"
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,364,if (this.isSymmetricVCD) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,365,if (this.varCovData.length > 1) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,366,//could be stored in upper or lower triangular
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,367,if (i == j) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,368,return varCovData[i][i];
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,369,} else if (i >= varCovData[j].length) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,370,return varCovData[i][j];
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,371,} else {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,372,return varCovData[j][i];
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,374,} else {//could be in single array
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,375,if (i > j) {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,376,return varCovData[0][(i + 1) * i / 2 + j];
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,377,} else {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,378,return varCovData[0][(j + 1) * j / 2 + i];
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,381,} else {
True,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java,382,return this.varCovData[i][j];
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,17,package org.apache.commons.math.stat.regression;
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,19,import org.apache.commons.math.MathException;
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,22,* An interface for regression models allowing for dynamic updating of the data.
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,23,"* That is, the entire data set need not be loaded into memory. As observations"
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,24,"* become available, they can be added to the regression  model and an updated"
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,25,* estimate regression statistics can be calculated.
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,27,* @version $Id$
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,28,* @since 3.0
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,30,public interface UpdatingMultipleLinearRegression {
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,33,* Returns true if a constant has been included false otherwise.
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,35,"* @return true if constant exists, false otherwise"
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,37,boolean hasIntercept();
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,40,* Returns the number of observations added to the regression model.
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,42,* @return Number of observations
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,44,long getN();
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,47,* Adds one observation to the regression model.
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,49,* @param x the independent variables which form the design matrix
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,50,* @param y the dependent or response variable
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,52,"void addObservation(double[] x, double y);"
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,55,* Adds a series of observations to the regression model. The lengths of
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,56,* x and y must be the same and x must be rectangular.
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,58,* @param x a series of observations on the independent variables
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,59,* @param y a series of observations on the dependent variable
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,60,* The length of x and y must be the same
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,62,"void addObservations(double[][] x, double[] y);"
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,65,* Clears internal buffers and resets the regression model. This means all
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,66,* data and derived values are initialized
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,68,void clear();
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,72,* Performs a regression on data present in buffers and outputs a RegressionResults object
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,73,* @return RegressionResults acts as a container of regression output
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,74,"* @throws MathException a wide variety of exception cases are possible, check message"
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,76,RegressionResults regress() throws MathException;
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,79,* Performs a regression on data present in buffers including only regressors
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,80,* indexed in variablesToInclude and outputs a RegressionResults object
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,81,* @param variablesToInclude an array of indices of regressors to include
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,82,* @return RegressionResults acts as a container of regression output
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,83,"* @throws MathException a wide variety of exception cases are possible, check message"
True,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java,85,RegressionResults regress(int[] variablesToInclude) throws MathException;
