is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,17,package org.apache.commons.math.exception;
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,19,import org.apache.commons.math.exception.util.Localizable;
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,20,import org.apache.commons.math.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,23,* Exception to be thrown when a number is not finite.
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,25,* @since 3.0
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,26,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,28,public class NotFiniteNumberException extends MathIllegalNumberException {
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,29,/** Serializable version Id. */
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,30,private static final long serialVersionUID = -6100997100383932834L;
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,33,* Construct the exception.
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,35,* @param wrong Value that is infinite or NaN.
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,36,* @param args Optional arguments.
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,38,"public NotFiniteNumberException(Number wrong,"
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,39,Object ... arguments) {
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,40,"this(null, wrong, arguments);"
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,44,* Construct the exception with a specific context.
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,46,* @param specific Specific contexte pattern.
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,47,* @param wrong Value that is infinite or NaN.
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,48,* @param args Optional arguments.
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,50,"public NotFiniteNumberException(Localizable specific,"
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,51,"Number wrong,"
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,52,Object ... arguments) {
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,53,"super(specific, LocalizedFormats.NOT_FINITE_NUMBER,"
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,54,"wrong, arguments);"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,117,"NOT_FINITE_NUMBER(""{0} is not a finite number""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,118,"ARRAY_ELEMENT(""value {0} at index {1}""), /* keep */"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,30,import org.apache.commons.math.exception.NotFiniteNumberException;
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1519,public void testCheckFinite() {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1520,try {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1521,MathUtils.checkFinite(Double.POSITIVE_INFINITY);
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1522,"fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1523,} catch (NotFiniteNumberException e) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1524,// Expected
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1526,try {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1527,MathUtils.checkFinite(Double.NEGATIVE_INFINITY);
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1528,"fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1529,} catch (NotFiniteNumberException e) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1530,// Expected
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1532,try {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1533,MathUtils.checkFinite(Double.NaN);
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1534,"fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1535,} catch (NotFiniteNumberException e) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1536,// Expected
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1539,try {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1540,"MathUtils.checkFinite(new double[] {0, -1, Double.POSITIVE_INFINITY, -2, 3});"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1541,"fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1542,} catch (NotFiniteNumberException e) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1543,// Expected
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1545,try {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1546,"MathUtils.checkFinite(new double[] {1, Double.NEGATIVE_INFINITY, -2, 3});"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1547,"fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1548,} catch (NotFiniteNumberException e) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1549,// Expected
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1551,try {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1552,"MathUtils.checkFinite(new double[] {4, 3, -1, Double.NaN, -2, 1});"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1553,"fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1554,} catch (NotFiniteNumberException e) {
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1555,// Expected
