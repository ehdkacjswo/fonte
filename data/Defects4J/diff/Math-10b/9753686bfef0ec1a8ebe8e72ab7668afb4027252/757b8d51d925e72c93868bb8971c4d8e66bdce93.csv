is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,17,package org.apache.commons.math.util;
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,19,import java.util.Map;
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,22,* Generic pair.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,23,* It is provided as a replacement for the standard
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,24,* {@code AbstractMap.SimpleEntry} that is available only in Java 1.6
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,25,* and later.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,27,* @param <K> Key type.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,28,* @param <V> Value type.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,30,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,31,* @since 3.0
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,33,"public class Pair<K, V> implements Map.Entry<K, V> {"
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,34,/** Key. */
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,35,private K key;
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,36,/** Value. */
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,37,private V value;
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,40,* Create an entry representing a mapping from the specified key to the
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,41,* specified value.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,43,* @param k Key.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,44,* @param v Value.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,46,"public Pair(K k, V v) {"
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,47,key = k;
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,48,value = v;
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,52,* Create an entry representing the same mapping as the specified entry.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,54,* @param entry Entry to copy.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,56,"Pair(Map.Entry<? extends K, ? extends V> entry) {"
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,57,key = entry.getKey();
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,58,value = entry.getValue();
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,62,* Get the key.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,64,* @return the key.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,66,public K getKey() {
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,67,return key;
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,71,* Get the value.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,73,* @return the key.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,75,public V getValue() {
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,76,return value;
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,80,* Set the value.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,82,* @param v Value to be stored.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,83,* @return the old value.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,85,public V setValue(V v) {
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,86,V old = value;
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,87,value = v;
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,88,return old;
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,92,* Compare the specified object with this entry for equality.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,94,* @param o Object.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,95,* @return {@code true} if the given object is also a map entry and
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,96,* the two entries represent the same mapping.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,98,public boolean equals(Object o) {
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,99,if (o == null) {
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,100,return false;
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,102,if (!(o instanceof Map.Entry)) {
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,103,return false;
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,104,} else {
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,105,"Map.Entry<? extends K, ? extends V> ome"
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,106,"= (Map.Entry<? extends K, ? extends V>) o;"
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,107,return (key == null ?
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,108,ome.getKey() == null :
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,109,key.equals(ome.getKey())) &&
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,110,(value == null ?
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,111,ome.getValue() == null :
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,112,value.equals(ome.getValue()));
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,117,* Compute a hash code.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,119,* @return the hash code value.
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,121,public int hashCode() {
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,122,return (key == null ? 0 : key.hashCode()) ^
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,123,(value == null ? 0 : value.hashCode());
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,3,* contributor license agreements. See the NOTICE file distributed with this
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,4,* work for additional information regarding copyright ownership. The ASF
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,5,"* licenses this file to You under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,6,"* ""License""); you may not use this file except in compliance with the License."
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,7,* You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,9,"* or agreed to in writing, software distributed under the License is"
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,10,"* distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,11,"* KIND, either express or implied. See the License for the specific language"
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,12,* governing permissions and limitations under the License.
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,14,package org.apache.commons.math.util;
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,16,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,17,import org.junit.Test;
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,20,* Test for {@link Pair}.
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,22,public class PairTest {
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,24,@Test
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,25,public void testAccessor() {
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,26,"final Pair<Integer, Double> p"
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,27,"= new Pair<Integer, Double>(new Integer(1), new Double(2));"
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,28,"Assert.assertEquals(new Integer(1), p.getKey());"
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,29,"Assert.assertEquals(new Double(2), p.getValue(), Math.ulp(1d));"
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,31,final Double old = p.setValue(new Double(3));
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,32,"Assert.assertEquals(new Double(2), old, Math.ulp(1d));"
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,33,"Assert.assertEquals(new Double(3), p.getValue(), Math.ulp(1d));"
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,36,@Test
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,37,public void testEquals() {
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,38,"Pair<Integer, Double> p1 = new Pair<Integer, Double>(null, null);"
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,39,Assert.assertFalse(p1.equals(null));
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,41,"Pair<Integer, Double> p2 = new Pair<Integer, Double>(null, null);"
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,42,Assert.assertTrue(p1.equals(p2));
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,44,"p1 = new Pair<Integer, Double>(new Integer(1), new Double(2));"
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,45,Assert.assertFalse(p1.equals(p2));
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,47,"Pair<Integer, Number> p3 = new Pair<Integer, Number>(new Integer(1), null);"
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,48,Assert.assertFalse(p1.equals(p3));
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,49,p3.setValue(new Double(3));
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,50,Assert.assertFalse(p1.equals(p3));
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,51,p3.setValue(new Double(2));
True,src/test/java/org/apache/commons/math/util/PairTest.java,src/test/java/org/apache/commons/math/util/PairTest.java,52,Assert.assertTrue(p1.equals(p3));
