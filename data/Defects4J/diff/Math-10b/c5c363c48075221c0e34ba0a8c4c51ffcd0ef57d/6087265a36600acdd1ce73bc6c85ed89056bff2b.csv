is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,35,                   -C-                                -C-
True,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,35,*                   -C-                                 -C-
False,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,41, c1 = (1 0 1 0 0 1  | 1 1 1)    X    p2 = (0 1 1 0 1 0  | 0 1 1)
True,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,41,* c1 = (1 0 1 0 0 1  | 1 1 1)    X    c2 = (0 1 1 0 1 0  | 0 1 1)
False,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,45," is parametrized by T. Moreover, the chromosomes must have same lengths."
True,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,45,"* is parameterized by T. Moreover, the chromosomes must have same lengths."
True,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,60,* <pre>
False,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,61,                   -C-                                -C-
True,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,62,*                   -C-                                 -C-
False,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,67, c1 = (1 0 1 0 0 1  | 1 1 1)    X    p2 = (0 1 1 0 1 0  | 0 1 1)
True,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,68,* c1 = (1 0 1 0 0 1  | 1 1 1)    X    c2 = (0 1 1 0 1 0  | 0 1 1)
True,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,69,* </pre>
False,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,95,nt length = first.getLength();
True,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,97,final int length = first.getLength();
False,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,101,ist<T> parent1Rep = first.getRepresentation();
False,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,102,ist<T> parent2Rep = second.getRepresentation();
True,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,103,final List<T> parent1Rep = first.getRepresentation();
True,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,104,final List<T> parent2Rep = second.getRepresentation();
False,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,104,rrayList<T> child1Rep = new ArrayList<T> (first.getLength());
False,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,105,rrayList<T> child2Rep = new ArrayList<T> (second.getLength());
True,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,106,final ArrayList<T> child1Rep = new ArrayList<T> (first.getLength());
True,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,107,final ArrayList<T> child2Rep = new ArrayList<T> (second.getLength());
False,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,108,nt crossoverIndex = 1 + (GeneticAlgorithm.getRandomGenerator().nextInt(length-2));
True,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,110,final int crossoverIndex = 1 + (GeneticAlgorithm.getRandomGenerator().nextInt(length-2));
