is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,51,* Real-valued function that operate on an array or a part of it.
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,53,public interface Function {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,55,* Operates on an entire array.
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,57,* @param array Array to operate on.
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,58,* @return the result of the operation.
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,60,double evaluate(double[] array);
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,62,* @param array Array to operate on.
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,63,* @param startIndex Index of the first element to take into account.
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,64,* @param numElements Number of elements to take into account.
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,65,* @return the result of the operation.
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,67,"double evaluate(double[] array,"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,68,"int startIndex,"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,69,int numElements);
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,809,* Performs an operation on the addressable elements of the array.
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,811,* @param f Function to be applied on this array.
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,812,* @return the result.
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,814,public double compute(MathArrays.Function f) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,815,"return f.evaluate(internalArray, startIndex, numElements);"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,561,@Test
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,562,public void testCompute() {
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,563,final ResizableDoubleArray a = new ResizableDoubleArray();
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,564,final int max = 20;
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,565,for (int i = 1; i <= max; i++) {
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,566,"a.setElement(i, i);"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,569,final MathArrays.Function add = new MathArrays.Function() {
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,570,"public double evaluate(double[] a, int index, int num) {"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,571,double sum = 0;
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,572,final int max = index + num;
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,573,for (int i = index; i < max; i++) {
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,574,sum += a[i];
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,576,return sum;
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,578,public double evaluate(double[] a) {
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,579,"return evaluate(a, 0, a.length);"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,583,final double sum = a.compute(add);
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,584,"Assert.assertEquals(0.5 * max * (max + 1), sum, 0);"
