is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,366,inal double scale = FastMath.max(FastMath.max(FastMath.max(FastMath.max(
False,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,367,"astMath.abs(singularValues[p - 1]), FastMath.abs(singularValues[p - 2])), FastMath.abs(e[p - 2])),"
False,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,368,"astMath.abs(singularValues[k])), FastMath.abs(e[k]));"
True,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,366,"final double maxPm1Pm2 = FastMath.max(FastMath.abs(singularValues[p - 1]),"
True,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,367,FastMath.abs(singularValues[p - 2]));
True,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,368,"final double scale = FastMath.max(FastMath.max(FastMath.max(maxPm1Pm2,"
True,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,369,"FastMath.abs(e[p - 2])),"
True,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,370,"FastMath.abs(singularValues[k])),"
True,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java,371,FastMath.abs(e[k]));
