is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,20,import org.apache.commons.math3.analysis.differentiation.DerivativeStructure;
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,21,import org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable;
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,23,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,63,* Composes functions.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,64,* <br/>
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,65,"* The functions in the argument list are composed sequentially, in the"
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,66,"* given order.  For example, compose(f1,f2,f3) acts like f1(f2(f3(x)))."
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,68,* @param f List of functions.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,69,* @return the composite function.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,70,* @since 3.1
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,72,public static UnivariateDifferentiable compose(final UnivariateDifferentiable ... f) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,73,return new UnivariateDifferentiable() {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,75,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,76,public double value(final double t) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,77,double r = t;
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,78,for (int i = f.length - 1; i >= 0; i--) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,79,r = f[i].value(r);
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,81,return r;
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,84,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,85,public DerivativeStructure value(final DerivativeStructure t) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,86,DerivativeStructure r = t;
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,87,for (int i = f.length - 1; i >= 0; i--) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,88,r = f[i].value(r);
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,90,return r;
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,154,* Adds functions.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,156,* @param f List of functions.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,157,* @return a function that computes the sum of the functions.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,158,* @since 3.1
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,160,public static UnivariateDifferentiable add(final UnivariateDifferentiable ... f) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,161,return new UnivariateDifferentiable() {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,163,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,164,public double value(final double t) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,165,double r = f[0].value(t);
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,166,for (int i = 1; i < f.length; i++) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,167,r += f[i].value(t);
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,169,return r;
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,172,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,173,public DerivativeStructure value(final DerivativeStructure t) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,174,DerivativeStructure r = f[0].value(t);
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,175,for (int i = 1; i < f.length; i++) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,176,r = r.add(f[i].value(t));
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,178,return r;
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,237,* Multiplies functions.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,239,* @param f List of functions.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,240,* @return a function that computes the product of the functions.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,241,* @since 3.1
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,243,public static UnivariateDifferentiable multiply(final UnivariateDifferentiable ... f) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,244,return new UnivariateDifferentiable() {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,246,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,247,public double value(final double t) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,248,double r = f[0].value(t);
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,249,for (int i = 1; i < f.length; i++) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,250,r  *= f[i].value(t);
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,252,return r;
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,255,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,256,public DerivativeStructure value(final DerivativeStructure t) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,257,DerivativeStructure r = f[0].value(t);
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,258,for (int i = 1; i < f.length; i++) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,259,r = r.multiply(f[i].value(t));
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,261,return r;
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,435,/** Convert a {@link UnivariateDifferentiable} into a {@link DifferentiableUnivariateFunction}.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,436,* @param f function to convert
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,437,* @return converted function
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,438,"* @deprecated this conversion method is temporary in version 3.1, as the {@link"
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,439,* DifferentiableUnivariateFunction} interface itself is deprecated
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,441,@Deprecated
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,442,public static DifferentiableUnivariateFunction toDifferentiableUnivariateFunction(final UnivariateDifferentiable f) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,443,return new DifferentiableUnivariateFunction() {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,445,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,446,public double value(final double x) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,447,return f.value(x);
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,450,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,451,public UnivariateFunction derivative() {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,452,return new UnivariateFunction() {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,453,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,454,public double value(final double x) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,455,"return f.value(new DerivativeStructure(1, 1, 0, x)).getPartialDerivative(1);"
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,463,/** Convert a {@link DifferentiableUnivariateFunction} into a {@link UnivariateDifferentiable}.
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,464,* <p>
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,465,* Note that the converted function is able to handle {@link DerivativeStructure} with
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,466,* <em>only</em> one parameter and up to order one. If the function is called with
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,467,"* more parameters or higher order, a {@link DimensionMismatchException} will be thrown."
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,468,* </p>
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,469,* @param f function to convert
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,470,* @return converted function
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,471,"* @deprecated this conversion method is temporary in version 3.1, as the {@link"
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,472,* DifferentiableUnivariateFunction} interface itself is deprecated
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,474,@Deprecated
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,475,public static UnivariateDifferentiable toUnivariateDifferential(final DifferentiableUnivariateFunction f) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,476,return new UnivariateDifferentiable() {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,478,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,479,public double value(final double x) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,480,return f.value(x);
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,483,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,484,* @exception DimensionMismatchException if number of parameters or derivation
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,485,* order are higher than 1
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,487,public DerivativeStructure value(final DerivativeStructure t)
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,488,throws DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,489,if (t.getFreeParameters() != 1) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,490,"throw new DimensionMismatchException(t.getFreeParameters(), 1);"
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,492,if (t.getOrder() > 1) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,493,"throw new DimensionMismatchException(t.getOrder(), 1);"
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,495,return t.compose(new double[] {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,496,"f.value(t.getValue()),"
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,497,f.derivative().value(t.getValue())
