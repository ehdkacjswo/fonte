is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,50,/** Singleton G-Test instance. */
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,51,private static final GTest G_TEST = new GTest();
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,369,"* @see org.apache.commons.math3.stat.inference.GTest#g(double[], long[])"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,371,"public static double g(final double[] expected, final long[] observed)"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,372,"throws NotPositiveException, NotStrictlyPositiveException,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,373,DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,374,"return G_TEST.g(expected, observed);"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,378,"* @see org.apache.commons.math3.stat.inference.GTest#gTest( double[],  long[] )"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,380,"public static double gTest(final double[] expected, final long[] observed)"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,381,"throws NotPositiveException, NotStrictlyPositiveException,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,382,"DimensionMismatchException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,383,"return G_TEST.gTest(expected, observed);"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,387,"* @see org.apache.commons.math3.stat.inference.GTest#gTestIntrinsic(double[], long[] )"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,389,"public static double gTestIntrinsic(final double[] expected, final long[] observed)"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,390,"throws NotPositiveException, NotStrictlyPositiveException,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,391,"DimensionMismatchException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,392,"return G_TEST.gTestIntrinsic(expected, observed);"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,396,"* @see org.apache.commons.math3.stat.inference.GTest#gTest( double[],long[],double)"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,398,"public static boolean gTest(final double[] expected, final long[] observed,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,399,final double alpha)
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,400,"throws NotPositiveException, NotStrictlyPositiveException,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,401,"DimensionMismatchException, OutOfRangeException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,402,"return G_TEST.gTest(expected, observed, alpha);"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,406,"* @see org.apache.commons.math3.stat.inference.GTest#gDataSetsComparison(long[], long[])"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,408,"public static double gDataSetsComparison(final long[] observed1,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,409,final long[] observed2)
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,410,"throws DimensionMismatchException, NotPositiveException, ZeroException {"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,411,"return G_TEST.gDataSetsComparison(observed1, observed2);"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,415,"* @see org.apache.commons.math3.stat.inference.GTest#rootLogLikelihoodRatio(long, long, long, long)"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,417,"public static double rootLogLikelihoodRatio(final long k11, final long k12, final long k21, final long k22)"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,418,"throws DimensionMismatchException, NotPositiveException, ZeroException {"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,419,"return G_TEST.rootLogLikelihoodRatio(k11, k12, k21, k22);"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,424,"* @see org.apache.commons.math3.stat.inference.GTest#gTestDataSetsComparison(long[], long[])"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,427,"public static double gTestDataSetsComparison(final long[] observed1,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,428,final long[] observed2)
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,429,"throws DimensionMismatchException, NotPositiveException, ZeroException,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,430,MaxCountExceededException {
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,431,"return G_TEST.gTestDataSetsComparison(observed1, observed2);"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,435,"* @see org.apache.commons.math3.stat.inference.GTest#gTestDataSetsComparison(double[],long[],double)"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,437,"public static boolean gTestDataSetsComparison(final long[] observed1,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,438,"final long[] observed2,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,439,final double alpha)
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,440,"throws DimensionMismatchException, NotPositiveException,"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,441,"ZeroException, OutOfRangeException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java,442,"return G_TEST.gTestDataSetsComparison(observed1, observed2, alpha);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,472,@Test
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,473,public void testGTestGoodnesOfFit() throws Exception {
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,474,double[] exp = new double[]{
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,475,"0.54d, 0.40d, 0.05d, 0.01d"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,478,long[] obs = new long[]{
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,479,"70, 79, 3, 4"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,481,"Assert.assertEquals(""G test statistic"","
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,482,"13.144799, TestUtils.g(exp, obs), 1E-5);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,483,"double p_gtgf = TestUtils.gTest(exp, obs);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,484,"Assert.assertEquals(""g-Test p-value"", 0.004333, p_gtgf, 1E-5);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,486,"Assert.assertTrue(TestUtils.gTest(exp, obs, 0.05));"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,489,@Test
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,490,public void testGTestIndependance() throws Exception {
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,491,long[] obs1 = new long[]{
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,492,"268, 199, 42"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,495,long[] obs2 = new long[]{
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,496,"807, 759, 184"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,499,"double g = TestUtils.gDataSetsComparison(obs1, obs2);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,501,"Assert.assertEquals(""G test statistic"","
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,502,"7.3008170, g, 1E-4);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,503,"double p_gti = TestUtils.gTestDataSetsComparison(obs1, obs2);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,505,"Assert.assertEquals(""g-Test p-value"", 0.0259805, p_gti, 1E-4);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,506,"Assert.assertTrue(TestUtils.gTestDataSetsComparison(obs1, obs2, 0.05));"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,509,@Test
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,510,public void testRootLogLikelihood() {
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,511,// positive where k11 is bigger than expected.
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,512,"Assert.assertTrue(TestUtils.rootLogLikelihoodRatio(904, 21060, 1144, 283012) > 0.0);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,514,// negative because k11 is lower than expected
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,515,"Assert.assertTrue(TestUtils.rootLogLikelihoodRatio(36, 21928, 60280, 623876) < 0.0);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,517,"Assert.assertEquals(Math.sqrt(2.772589), TestUtils.rootLogLikelihoodRatio(1, 0, 0, 1), 0.000001);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,518,"Assert.assertEquals(-Math.sqrt(2.772589), TestUtils.rootLogLikelihoodRatio(0, 1, 1, 0), 0.000001);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,519,"Assert.assertEquals(Math.sqrt(27.72589), TestUtils.rootLogLikelihoodRatio(10, 0, 0, 10), 0.00001);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,521,"Assert.assertEquals(Math.sqrt(39.33052), TestUtils.rootLogLikelihoodRatio(5, 1995, 0, 100000), 0.00001);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,522,"Assert.assertEquals(-Math.sqrt(39.33052), TestUtils.rootLogLikelihoodRatio(0, 100000, 5, 1995), 0.00001);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,524,"Assert.assertEquals(Math.sqrt(4730.737), TestUtils.rootLogLikelihoodRatio(1000, 1995, 1000, 100000), 0.001);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,525,"Assert.assertEquals(-Math.sqrt(4730.737), TestUtils.rootLogLikelihoodRatio(1000, 100000, 1000, 1995), 0.001);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,527,"Assert.assertEquals(Math.sqrt(5734.343), TestUtils.rootLogLikelihoodRatio(1000, 1000, 1000, 100000), 0.001);"
True,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,src/test/java/org/apache/commons/math3/stat/inference/TestUtilsTest.java,528,"Assert.assertEquals(Math.sqrt(5714.932), TestUtils.rootLogLikelihoodRatio(1000, 1000, 1000, 99000), 0.001);"
