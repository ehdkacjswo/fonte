is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,30, <p>This base class handles the boilerplate methods associated to thresholds
False,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,31, settings and iterations counters.</p>
True,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,30,* <p>
True,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,31,* This base class handles the boilerplate methods associated to thresholds
True,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,32,* settings and iterations counters.
False,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,71,** Simple constructor with default settings.
True,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,73,* Simple constructor with default settings.
False,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,121,** Increment the iterations counter by 1.
False,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,122, @exception MaxCountExceededException if the maximal number
False,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,123, of iterations is exceeded
True,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,124,* Increment the iterations counter by 1.
True,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,125,* @exception MaxCountExceededException if the maximal number of iterations is exceeded
False,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,134,"inal Collection<LinearConstraint> constraints,"
False,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,135,"inal GoalType goalType, final boolean restrictToNonNegative)"
False,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,136,hrows MathIllegalStateException {
True,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,136,"final Collection<LinearConstraint> constraints,"
True,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,137,"final GoalType goalType, final boolean restrictToNonNegative)"
True,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,138,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,151,** Perform the bulk of optimization algorithm.
True,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,154,* Perform the bulk of optimization algorithm.
False,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,156,rotected abstract PointValuePair doOptimize()
False,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,157,hrows MathIllegalStateException;
True,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java,159,protected abstract PointValuePair doOptimize() throws MathIllegalStateException;
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java,187,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java,204,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java,212,** Serialize the instance.
True,src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java,211,* Serialize the instance.
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java,222,** Deserialize the instance.
True,src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java,222,* Deserialize the instance.
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java,104,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java,120,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java,126,** Serialize the instance.
True,src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java,125,* Serialize the instance.
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java,136,** Deserialize the instance.
True,src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java,136,* Deserialize the instance.
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,55,** Set the maximal number of iterations of the algorithm.
True,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,56,* Set the maximal number of iterations of the algorithm.
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,60,** Get the maximal number of iterations of the algorithm.
True,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,62,* Get the maximal number of iterations of the algorithm.
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,65,** Get the number of iterations realized by the algorithm.
True,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,68,* Get the number of iterations realized by the algorithm.
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,75,** Optimizes an objective function.
True,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,79,* Optimizes an objective function.
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,78, @param goalType type of optimization goal: either {@link GoalType#MAXIMIZE}
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,79, or {@link GoalType#MINIMIZE}
True,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,82,* @param goalType type of optimization goal: either {@link GoalType#MAXIMIZE} or {@link GoalType#MINIMIZE}
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,83, can be found in the allowed number of iterations
True,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,86,*   can be found in the allowed number of iterations
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,86,"oalType goalType, boolean restrictToNonNegative)"
False,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,87,hrows MathIllegalStateException;
True,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java,89,"GoalType goalType, boolean restrictToNonNegative) throws MathIllegalStateException;"
False,src/main/java/org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException.java,src/main/java/org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException.java,24, This class represents exceptions thrown by optimizers when no solution
False,src/main/java/org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException.java,src/main/java/org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException.java,25, fulfills the constraints.
True,src/main/java/org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException.java,src/main/java/org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException.java,24,* This class represents exceptions thrown by optimizers when no solution fulfills the constraints.
False,src/main/java/org/apache/commons/math3/optimization/linear/Relationship.java,src/main/java/org/apache/commons/math3/optimization/linear/Relationship.java,46,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,113, @param goalType type of optimization goal: either {@link GoalType#MAXIMIZE}
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,114, or {@link GoalType#MINIMIZE}
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,113,* @param goalType type of optimization goal: either {@link GoalType#MAXIMIZE} or {@link GoalType#MINIMIZE}
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,129, @param goalType type of optimization goal: either {@link GoalType#MAXIMIZE}
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,130, or {@link GoalType#MINIMIZE}
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,128,* @param goalType type of optimization goal: either {@link GoalType#MAXIMIZE} or {@link GoalType#MINIMIZE}
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,440,   minuendRow = minuendRow - multiple * subtrahendRow
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,441, </p>
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,437,* <pre>minuendRow = minuendRow - multiple * subtrahendRow</pre>
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,455,   minuendRow = minuendRow - multiple * subtrahendRow
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,456, </p>
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,452,* <pre>minuendRow = minuendRow - multiple * subtrahendRow</pre>
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,489,** Get an entry of the tableau.
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,487,* Get an entry of the tableau.
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,498,** Set an entry of the tableau.
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,497,* Set an entry of the tableau.
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,535," If variables are not restricted to positive values, this will include 1"
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,536, extra decision variable to represent the absolute value of the most
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,537, negative variable.
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,538, </p>
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,534,"* If variables are not restricted to positive values, this will include 1 extra decision variable to represent"
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,535,* the absolute value of the most negative variable.
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,579,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,602,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,616,** Serialize the instance.
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,613,* Serialize the instance.
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,626,** Deserialize the instance.
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,624,* Deserialize the instance.
False,src/main/java/org/apache/commons/math3/optimization/linear/UnboundedSolutionException.java,src/main/java/org/apache/commons/math3/optimization/linear/UnboundedSolutionException.java,24, This class represents exceptions thrown by optimizers when a solution
False,src/main/java/org/apache/commons/math3/optimization/linear/UnboundedSolutionException.java,src/main/java/org/apache/commons/math3/optimization/linear/UnboundedSolutionException.java,25, escapes to infinity.
True,src/main/java/org/apache/commons/math3/optimization/linear/UnboundedSolutionException.java,src/main/java/org/apache/commons/math3/optimization/linear/UnboundedSolutionException.java,24,* This class represents exceptions thrown by optimizers when a solution escapes to infinity.
