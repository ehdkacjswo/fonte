is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,17,package org.apache.commons.math3.linear;
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,19,import org.junit.Test;
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,20,import org.junit.Assert;
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,22,import org.apache.commons.math3.exception.MathUnsupportedOperationException;
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,23,import org.apache.commons.math3.exception.OutOfRangeException;
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,24,import org.apache.commons.math3.TestUtils;
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,27,* Test cases for the {@link DiagonalMatrix} class.
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,29,public class DiagonalMatrixTest {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,30,@Test
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,31,public void testConstructor1() {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,32,final int dim = 3;
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,33,final DiagonalMatrix m = new DiagonalMatrix(dim);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,34,"Assert.assertEquals(dim, m.getRowDimension());"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,35,"Assert.assertEquals(dim, m.getColumnDimension());"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,38,@Test
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,39,public void testConstructor2() {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,40,"final double[] d = { -1.2, 3.4, 5 };"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,41,final DiagonalMatrix m = new DiagonalMatrix(d);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,42,for (int i = 0; i < m.getRowDimension(); i++) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,43,for (int j = 0; j < m.getRowDimension(); j++) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,44,if (i == j) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,45,"Assert.assertEquals(d[i], m.getEntry(i, j), 0d);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,46,} else {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,47,"Assert.assertEquals(0d, m.getEntry(i, j), 0d);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,52,// Check that the underlying was copied.
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,53,d[0] = 0;
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,54,"Assert.assertFalse(d[0] == m.getEntry(0, 0));"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,57,@Test
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,58,public void testConstructor3() {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,59,"final double[] d = { -1.2, 3.4, 5 };"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,60,"final DiagonalMatrix m = new DiagonalMatrix(d, false);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,61,for (int i = 0; i < m.getRowDimension(); i++) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,62,for (int j = 0; j < m.getRowDimension(); j++) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,63,if (i == j) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,64,"Assert.assertEquals(d[i], m.getEntry(i, j), 0d);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,65,} else {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,66,"Assert.assertEquals(0d, m.getEntry(i, j), 0d);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,71,// Check that the underlying is referenced.
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,72,d[0] = 0;
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,73,"Assert.assertTrue(d[0] == m.getEntry(0, 0));"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,77,@Test
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,78,public void testGetData() {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,79,"final double[] data = { -1.2, 3.4, 5 };"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,80,final int dim = 3;
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,81,final DiagonalMatrix m = new DiagonalMatrix(dim);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,82,for (int i = 0; i < dim; i++) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,83,"m.setEntry(i, i, data[i]);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,86,final double[][] out = m.getData();
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,87,"Assert.assertEquals(dim, out.length);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,88,for (int i = 0; i < m.getRowDimension(); i++) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,89,"Assert.assertEquals(dim, out[i].length);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,90,for (int j = 0; j < m.getRowDimension(); j++) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,91,if (i == j) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,92,"Assert.assertEquals(data[i], out[i][j], 0d);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,93,} else {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,94,"Assert.assertEquals(0d, out[i][j], 0d);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,100,@Test
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,101,public void testAdd() {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,102,"final double[] data1 = { -1.2, 3.4, 5 };"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,103,final DiagonalMatrix m1 = new DiagonalMatrix(data1);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,105,"final double[] data2 = { 10.1, 2.3, 45 };"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,106,final DiagonalMatrix m2 = new DiagonalMatrix(data2);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,108,final DiagonalMatrix result = m1.add(m2);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,109,"Assert.assertEquals(m1.getRowDimension(), result.getRowDimension());"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,110,for (int i = 0; i < result.getRowDimension(); i++) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,111,for (int j = 0; j < result.getRowDimension(); j++) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,112,if (i == j) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,113,"Assert.assertEquals(data1[i] + data2[i], result.getEntry(i, j), 0d);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,114,} else {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,115,"Assert.assertEquals(0d, result.getEntry(i, j), 0d);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,121,@Test
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,122,public void testAddToEntry() {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,123,"final double[] data = { -1.2, 3.4, 5 };"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,124,final DiagonalMatrix m = new DiagonalMatrix(data);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,126,for (int i = 0; i < m.getRowDimension(); i++) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,127,"m.addToEntry(i, i, i);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,128,"Assert.assertEquals(data[i] + i, m.getEntry(i, i), 0d);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,132,@Test
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,133,public void testMultiplyEntry() {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,134,"final double[] data = { -1.2, 3.4, 5 };"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,135,final DiagonalMatrix m = new DiagonalMatrix(data);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,137,for (int i = 0; i < m.getRowDimension(); i++) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,138,"m.multiplyEntry(i, i, i);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,139,"Assert.assertEquals(data[i] * i, m.getEntry(i, i), 0d);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,143,@Test
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,144,public void testMultiply1() {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,145,"final double[] data1 = { -1.2, 3.4, 5 };"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,146,final DiagonalMatrix m1 = new DiagonalMatrix(data1);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,147,"final double[] data2 = { 10.1, 2.3, 45 };"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,148,final DiagonalMatrix m2 = new DiagonalMatrix(data2);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,150,final DiagonalMatrix result = m1.multiply(m2);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,151,"Assert.assertEquals(m1.getRowDimension(), result.getRowDimension());"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,152,for (int i = 0; i < result.getRowDimension(); i++) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,153,for (int j = 0; j < result.getRowDimension(); j++) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,154,if (i == j) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,155,"Assert.assertEquals(data1[i] * data2[i], result.getEntry(i, j), 0d);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,156,} else {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,157,"Assert.assertEquals(0d, result.getEntry(i, j), 0d);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,163,@Test
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,164,public void testMultiply2() {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,165,"final double[] data1 = { -1.2, 3.4, 5 };"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,166,final DiagonalMatrix diag1 = new DiagonalMatrix(data1);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,168,"final double[][] data2 = { { -1.2, 3.4 },"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,169,"{ -5.6, 7.8 },"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,170,"{  9.1, 2.3 } };"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,171,final RealMatrix dense2 = new Array2DRowRealMatrix(data2);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,172,final RealMatrix dense1 = new Array2DRowRealMatrix(diag1.getData());
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,174,final RealMatrix diagResult = diag1.multiply(dense2);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,175,final RealMatrix denseResult = dense1.multiply(dense2);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,177,for (int i = 0; i < dense1.getRowDimension(); i++) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,178,for (int j = 0; j < dense2.getColumnDimension(); j++) {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,179,"Assert.assertEquals(denseResult.getEntry(i, j),"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,180,"diagResult.getEntry(i, j), 0d);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,185,@Test
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,186,public void testOperate() {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,187,"final double[] data = { -1.2, 3.4, 5 };"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,188,final DiagonalMatrix diag = new DiagonalMatrix(data);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,189,final RealMatrix dense = new Array2DRowRealMatrix(diag.getData());
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,191,"final double[] v = { 6.7, 890.1, 23.4 };"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,192,final double[] diagResult = diag.operate(v);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,193,final double[] denseResult = dense.operate(v);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,195,"TestUtils.assertEquals(diagResult, denseResult, 0d);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,198,@Test
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,199,public void testPreMultiply() {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,200,"final double[] data = { -1.2, 3.4, 5 };"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,201,final DiagonalMatrix diag = new DiagonalMatrix(data);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,202,final RealMatrix dense = new Array2DRowRealMatrix(diag.getData());
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,204,"final double[] v = { 6.7, 890.1, 23.4 };"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,205,final double[] diagResult = diag.preMultiply(v);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,206,final double[] denseResult = dense.preMultiply(v);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,208,"TestUtils.assertEquals(diagResult, denseResult, 0d);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,211,@Test(expected=MathUnsupportedOperationException.class)
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,212,public void testSetNonDiagonalEntry() {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,213,final DiagonalMatrix diag = new DiagonalMatrix(3);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,214,"diag.setEntry(1, 2, 3.4);"
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,217,@Test(expected=OutOfRangeException.class)
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,218,public void testSetEntryOutOfRange() {
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,219,final DiagonalMatrix diag = new DiagonalMatrix(3);
True,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,src/test/java/org/apache/commons/math3/linear/DiagonalMatrixTest.java,220,"diag.setEntry(3, 3, 3.4);"
