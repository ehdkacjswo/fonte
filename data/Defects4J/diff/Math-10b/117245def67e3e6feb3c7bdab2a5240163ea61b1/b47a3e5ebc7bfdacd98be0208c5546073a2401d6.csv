is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,42,/** Default format. */
True,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,43,private static final RealMatrixFormat DEFAULT_FORMAT = RealMatrixFormat.getInstance();
True,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,44,static {
True,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,45,// set the minimum fraction digits to 1 to keep compatibility
True,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,46,DEFAULT_FORMAT.getFormat().setMinimumFractionDigits(1);
False,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,874,inal int nRows = getRowDimension();
False,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,875,inal int nCols = getColumnDimension();
False,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,876,inal StringBuffer res = new StringBuffer();
True,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,882,final StringBuilder res = new StringBuilder();
False,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,879,"es.append(shortClassName).append(""{"");"
False,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,881,or (int i = 0; i < nRows; ++i) {
False,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,882,f (i > 0) {
False,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,883,"es.append("","");"
False,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,885,"es.append(""{"");"
False,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,886,or (int j = 0; j < nCols; ++j) {
False,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,887,f (j > 0) {
False,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,888,"es.append("","");"
False,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,890,"es.append(getEntry(i, j));"
False,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,892,"es.append(""}"");"
False,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,895,"es.append(""}"");"
True,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,885,res.append(shortClassName);
True,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java,886,res.append(DEFAULT_FORMAT.format(this));
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,50,* The default format for {@link RealMatrix} objects.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,51,* @since 3.1
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,53,public static final RealMatrixFormat DEFAULT_FORMAT = RealMatrixFormat.getInstance();
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,56,* A format for {@link RealMatrix} objects compatible with octave.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,57,* @since 3.1
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,59,"public static final RealMatrixFormat OCTAVE_FORMAT = new RealMatrixFormat(""["", ""]"", """", """", ""; "", "", "");"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,32," ""[a<sub>0</sub><sub>0</sub>, a<sub>0</sub><sub>1</sub>, ...,"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,33," a<sub>0</sub><sub>m-1</sub>; a<sub>1</sub><sub>0</sub>,"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,34," a<sub>1</sub><sub>1</sub>, ..., a<sub>1</sub><sub>m-1</sub>; ...;"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,32,"* ""{{a<sub>0</sub><sub>0</sub>,a<sub>0</sub><sub>1</sub>, ...,"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,33,"* a<sub>0</sub><sub>m-1</sub>},{a<sub>1</sub><sub>0</sub>,"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,34,"* a<sub>1</sub><sub>1</sub>, ..., a<sub>1</sub><sub>m-1</sub>},{...},{"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,36," a<sub>n-1</sub><sub>m-1</sub>}""."
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,37," <p>The prefix and suffix ""["" and ""]"", the row separator ""; "" and the column"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,38," separator "", "" can be replaced by any user-defined strings. The number format"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,39, for components can be configured.</p>
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,36,"* a<sub>n-1</sub><sub>m-1</sub>}}""."
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,37,"* <p>The prefix and suffix ""{"" and ""}"", the row prefix and suffix ""{"" and ""}"","
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,38,"* the row separator "","" and the column separator "","" can be replaced by any"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,39,* user-defined strings. The number format for components can be configured.</p>
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,43," character that is used at format time, both input string ""[1,1,1]"" and"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,44," "" [ 1 , 1 , 1 ] "" will be parsed without error and the same vector will be"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,43,"* character that is used at format time, both input string ""{{1,1,1}}"" and"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,44,"* "" { { 1 , 1 , 1 } } "" will be parsed without error and the same matrix will be"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,58,"rivate static final String DEFAULT_PREFIX = ""["";"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,58,"private static final String DEFAULT_PREFIX = ""{"";"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,60,"rivate static final String DEFAULT_SUFFIX = ""]"";"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,61,"** The default row separator: "";"". */"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,62,"rivate static final String DEFAULT_ROW_SEPARATOR = ""; "";"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,63,"** The default column separator: "", "". */"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,64,"rivate static final String DEFAULT_COLUMN_SEPARATOR = "", "";"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,60,"private static final String DEFAULT_SUFFIX = ""}"";"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,61,"/** The default row prefix: ""{"". */"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,62,"private static final String DEFAULT_ROW_PREFIX = ""{"";"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,63,"/** The default row suffix: ""}"". */"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,64,"private static final String DEFAULT_ROW_SUFFIX = ""}"";"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,65,"/** The default row separator: "","". */"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,66,"private static final String DEFAULT_ROW_SEPARATOR = "","";"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,67,"/** The default column separator: "","". */"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,68,"private static final String DEFAULT_COLUMN_SEPARATOR = "","";"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,73,/** Row prefix. */
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,74,private final String rowPrefix;
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,75,/** Row suffix. */
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,76,private final String rowSuffix;
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,73,** Trimmed prefix. */
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,74,rivate final String trimmedPrefix;
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,75,** Trimmed suffix. */
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,76,rivate final String trimmedSuffix;
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,77,** Trimmed row separator. */
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,78,rivate final String trimmedRowSeparator;
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,79,** Trimmed column separator. */
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,80,rivate final String trimmedColumnSeparator;
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,90,"his(DEFAULT_PREFIX, DEFAULT_SUFFIX, DEFAULT_ROW_SEPARATOR, DEFAULT_COLUMN_SEPARATOR,"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,91,ompositeFormat.getDefaultNumberFormat());
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,90,"this(DEFAULT_PREFIX, DEFAULT_SUFFIX, DEFAULT_ROW_PREFIX, DEFAULT_ROW_SUFFIX,"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,91,"DEFAULT_ROW_SEPARATOR, DEFAULT_COLUMN_SEPARATOR, CompositeFormat.getDefaultNumberFormat());"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,99,"his(DEFAULT_PREFIX, DEFAULT_SUFFIX, DEFAULT_ROW_SEPARATOR, DEFAULT_COLUMN_SEPARATOR, format);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,99,"this(DEFAULT_PREFIX, DEFAULT_SUFFIX, DEFAULT_ROW_PREFIX, DEFAULT_ROW_SUFFIX,"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,100,"DEFAULT_ROW_SEPARATOR, DEFAULT_COLUMN_SEPARATOR, format);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,107,"* @param rowPrefix row prefix to use instead of the default ""{"""
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,108,"* @param rowSuffix row suffix to use instead of the default ""}"""
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,113,"final String rowPrefix, final String rowSuffix,"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,111,"his(prefix, suffix, rowSeparator, columnSeparator, CompositeFormat.getDefaultNumberFormat());"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,115,"this(prefix, suffix, rowPrefix, rowSuffix, rowSeparator, columnSeparator,"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,116,CompositeFormat.getDefaultNumberFormat());
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,124,"* @param rowPrefix row prefix to use instead of the default ""{"""
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,125,"* @param rowSuffix row suffix to use instead of the default ""}"""
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,131,"final String rowPrefix, final String rowSuffix,"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,136,this.rowPrefix         = rowPrefix;
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,137,this.rowSuffix         = rowSuffix;
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,130,rimmedPrefix          = prefix.trim();
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,131,rimmedSuffix          = suffix.trim();
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,132,rimmedRowSeparator    = rowSeparator.trim();
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,133,rimmedColumnSeparator = columnSeparator.trim();
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,171,* Get the format prefix.
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,172,* @return format prefix.
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,174,public String getRowPrefix() {
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,175,return rowPrefix;
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,179,* Get the format suffix.
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,180,* @return format suffix.
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,182,public String getRowSuffix() {
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,183,return rowSuffix;
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,257,toAppendTo.append(rowPrefix);
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,264,toAppendTo.append(rowSuffix);
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,305,final String trimmedPrefix = prefix.trim();
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,306,final String trimmedSuffix = suffix.trim();
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,307,final String trimmedRowPrefix = rowPrefix.trim();
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,308,final String trimmedRowSuffix = rowSuffix.trim();
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,309,final String trimmedColumnSeparator = columnSeparator.trim();
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,310,final String trimmedRowSeparator = rowSeparator.trim();
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,295,"f (CompositeFormat.parseFixedstring(source, trimmedRowSeparator, pos)) {"
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,296,atrix.add(rowComponents);
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,297,owComponents = new ArrayList<Number>();
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,326,"if (!trimmedRowSuffix.isEmpty() && !CompositeFormat.parseFixedstring(source, trimmedRowSuffix, pos)) {"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,327,return null;
False,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,299,oop = false;
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,329,"CompositeFormat.parseAndIgnoreWhitespace(source, pos);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,330,"if (CompositeFormat.parseFixedstring(source, trimmedRowSeparator, pos)) {"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,331,matrix.add(rowComponents);
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,332,rowComponents = new ArrayList<Number>();
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,333,continue;
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,334,} else {
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,335,loop = false;
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,339,} else {
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,340,"CompositeFormat.parseAndIgnoreWhitespace(source, pos);"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,341,"if (!trimmedRowPrefix.isEmpty() && !CompositeFormat.parseFixedstring(source, trimmedRowPrefix, pos)) {"
True,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java,342,return null;
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,24,import org.junit.Ignore;
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,32,ealMatrixFormat realMatrixFormatOther = null;
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,33,RealMatrixFormat realMatrixFormatOctave = null;
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,42,"ealMatrixFormatOther = new RealMatrixFormat(""{"", ""}"", "", "", "" : "", nf);"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,43,"realMatrixFormatOctave = new RealMatrixFormat(""["", ""]"", """", """", ""; "", "", "", nf);"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,48,"tring expected = ""[1, 1, 1; 1, 1, 1]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,49,"String expected = ""{{1,1,1},{1,1,1}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,57,"[1""    + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,58,"23, 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,59,"43, 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,60,"63; 2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,61,"46, 2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,62,"46, 2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,63,"66]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,58,"""{{1""    + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,59,"""23,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,60,"""43,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,61,"""63},{2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,62,"""46,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,63,"""46,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,64,"""66}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,73,"[1""    + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,74,"23, 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,75,"43, 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,76,"63; 2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,77,"47, 2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,78,"47, 2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,79,"67]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,74,"""{{1""    + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,75,"""23,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,76,"""43,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,77,"""63},{2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,78,"""47,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,79,"""47,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,80,"""67}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,85,ublic void testNegativeX() {
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,86,public void testNegativeComponent() {
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,89,"[-1""    + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,90,"23, 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,91,"43, 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,92,"63; 2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,93,"47, 2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,94,"47, 2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,95,"67]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,90,"""{{-1""    + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,91,"""23,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,92,"""43,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,93,"""63},{2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,94,"""47,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,95,"""47,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,96,"""67}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,101,ublic void testNegativeY() {
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,102,public void testNegativeComponent2() {
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,105,"[1""    + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,106,"23, -1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,107,"43, 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,108,"63; 2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,109,"47, 2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,110,"47, 2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,111,"67]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,106,"""{{1""    + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,107,"""23,-1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,108,"""43,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,109,"""63},{2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,110,"""47,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,111,"""47,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,112,"""67}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,121,"[1""    + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,122,"23, 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,123,"43, 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,124,"63; -2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,125,"47, 2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,126,"47, 2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,127,"67]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,122,"""{{1""    + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,123,"""23,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,124,"""43,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,125,"""63},{-2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,126,"""47,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,127,"""47,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,128,"""67}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,135,"tring expected = ""{1 : 1 : 1, 1 : 1 : 1}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,136,tring actual = realMatrixFormatOther.format(m);
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,136,"String expected = ""[1, 1, 1; 1, 1, 1]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,137,String actual = realMatrixFormatOctave.format(m);
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,141,ublic void testDefaultFormatRealVectorImpl() {
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,142,ocale defaultLocal = Locale.getDefault();
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,142,public void testDefaultFormat() {
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,143,Locale defaultLocale = Locale.getDefault();
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,147,"[232""    + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,148,"22, -342"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,149,"33, 432"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,150,"44]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,148,"""{{232""    + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,149,"""22,-342"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,150,"""33,432"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,151,"""44}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,154,ocale.setDefault(defaultLocal);
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,155,Locale.setDefault(defaultLocale);
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,160,"tring expected = ""[(NaN), (NaN), (NaN)]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,161,"String expected = ""{{(NaN),(NaN),(NaN)}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,169,"tring expected = ""[(Infinity), (Infinity), (Infinity)]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,170,"String expected = ""{{(Infinity),(Infinity),(Infinity)}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,178,"tring expected = ""[(-Infinity), (-Infinity), (-Infinity)]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,179,"String expected = ""{{(-Infinity),(-Infinity),(-Infinity)}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,185,"tring source = ""[1, 1, 1; 1, 1, 1]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,186,"String source = ""{{1, 1, 1}, {1, 1, 1}}"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,193,@Ignore
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,193,"tring source = ""[1, 1, 1; 1, 1, 1 ;]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,195,"String source = ""{{1, 1, 1},{1, 1, 1}, }}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,203,"tring source1 = ""[1,1,1;1,1,1]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,205,"String source1 = ""{{1,1,1},{1,1,1}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,207,"tring source2 = "" [ 1 , 1 , 1 ; 1 , 1 , 1 ] "";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,209,"String source2 = "" { { 1 , 1 , 1 } , { 1 , 1 , 1 } } "";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,215,"[1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,216,"23, 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,217,"43, 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,218,"63]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,217,"""{{1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,218,"""23,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,219,"""43,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,220,"""63}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,227,"[1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,228,"2323, 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,229,"4343, 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,230,"6333]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,229,"""{{1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,230,"""2323,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,231,"""4343,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,232,"""6333}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,239,"[-1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,240,"2323, 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,241,"4343, 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,242,"6333]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,241,"""{{-1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,242,"""2323,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,243,"""4343,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,244,"""6333}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,251,"[-1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,252,"2323, -1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,253,"4343, -1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,254,"6333]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,253,"""{{-1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,254,"""2323,-1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,255,"""4343,-1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,256,"""6333}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,263,"[0"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,264,"0, -1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,265,"4343, 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,266,"6333]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,265,"""{{0"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,266,"""0,-1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,267,"""4343,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,268,"""6333}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,275,"{1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,276,"2323 : 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,277,"4343 : 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,278,"6333}"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,277,"""[1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,278,"""2323, 1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,279,"""4343, 1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,280,"""6333]"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,280,ealMatrix actual = realMatrixFormatOther.parse(source);
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,282,RealMatrix actual = realMatrixFormatOctave.parse(source);
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,286,"tring source = ""[(NaN), (NaN), (NaN)]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,288,"String source = ""{{(NaN), (NaN), (NaN)}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,298,"tring source = ""[(Infinity), (Infinity), (Infinity)]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,300,"String source = ""{{(Infinity), (Infinity), (Infinity)}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,307,"tring source = ""[(-Infinity), (-Infinity), (-Infinity)]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,309,"String source = ""{{(-Infinity), (-Infinity), (-Infinity)}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,317,"ealMatrixFormat.parse(""[ ]"");"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,319,"realMatrixFormat.parse(""{{ }}"");"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,326,"ealMatrix parsed = realMatrixFormat.parse(""[0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0]"");"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,327,"ssert.assertEquals(24, parsed.getRowDimension());"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,328,"RealMatrix parsed = realMatrixFormat.parse(""{{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}"");"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,329,"Assert.assertEquals(24, parsed.getColumnDimension());"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,349,"inal String source = ""[1; 1 1]"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,351,"final String source = ""{{1, 1 1}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,351,"ssert.assertEquals(6, pos.getErrorIndex());"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,353,"Assert.assertEquals(7, pos.getErrorIndex());"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,357,"inal String source = ""[1; 1; 1 "";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,359,"final String source = ""{{1, 1, 1 "";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,359,"ssert.assertEquals(8, pos.getErrorIndex());"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,361,"Assert.assertEquals(9, pos.getErrorIndex());"
