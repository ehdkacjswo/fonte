is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,65,essageFormat fmt = null;
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,66,"mt = new MessageFormat(general.getLocalizedString(locale), locale);"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,67,b.append(fmt.format(arguments));
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,66,"final MessageFormat generalFmt  = new MessageFormat(general.getLocalizedString(locale), locale);"
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,67,Object[] generalArgs = arguments;
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,71,"final MessageFormat specificFmt = new MessageFormat(specific.getLocalizedString(locale), locale);"
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,73,// split the arguments: first specific ones then general ones
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,74,"final int nbSpecific = Math.min(arguments.length, specificFmt.getFormatsByArgumentIndex().length);"
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,75,final int nbGeneral  = arguments.length - nbSpecific;
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,76,Object[] specificArgs = new Object[nbSpecific];
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,77,"System.arraycopy(arguments, 0, specificArgs, 0, nbSpecific);"
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,78,generalArgs = new Object[nbGeneral];
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,79,"System.arraycopy(arguments, nbSpecific, generalArgs, 0, nbGeneral);"
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,81,// build the message
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,82,sb.append(specificFmt.format(specificArgs));
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,70,"mt = new MessageFormat(specific.getLocalizedString(locale), locale);"
False,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,71,b.append(fmt.format(arguments));
True,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,87,sb.append(generalFmt.format(generalArgs));
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,17,package org.apache.commons.math.exception.util;
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,19,import java.util.Locale;
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,21,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,22,import org.junit.Test;
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,24,public class MessageFactoryTest {
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,26,@Test
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,27,public void testSpecificGeneric() {
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,28,"Localizable specific = new DummyLocalizable(""specific {0} - {1} - {2}"");"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,29,"Localizable general  = new DummyLocalizable(""general  {0} / {1}"");"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,30,"String message = MessageFactory.buildMessage(Locale.FRENCH, specific, general,"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,31,"0, 1, 2, 'a', 'b');"
True,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java,32,"Assert.assertEquals(""specific 0 - 1 - 2: general  a / b"", message);"
