is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,635,* @deprecated As of 3.1. Please use {@link #getCapacity()} instead.
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,637,@Deprecated
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,643,* Gets the currently allocated size of the internal data structure used
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,644,* for storing elements.
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,645,* This is not to be confused with {@link #getNumElements() the number of
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,646,* elements actually stored}.
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,648,* @return the length of the internal array.
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,650,public int getCapacity() {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,651,return internalArray.length;
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,55,"ssert.assertEquals(2, testDa.getInternalLength());"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,55,"Assert.assertEquals(2, testDa.getCapacity());"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,75,"ssert.assertEquals(2, testDa.getInternalLength());"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,75,"Assert.assertEquals(2, testDa.getCapacity());"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,93,"ssert.assertEquals(2, testDa.getInternalLength());"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,93,"Assert.assertEquals(2, testDa.getCapacity());"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,108,"ssert.assertEquals(2, testDa.getInternalLength());"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,108,"Assert.assertEquals(2, testDa.getCapacity());"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,160,"ssert.assertEquals(16, ((ResizableDoubleArray) da).getInternalLength());"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,160,"Assert.assertEquals(16, ((ResizableDoubleArray) da).getCapacity());"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,163,"ssert.assertEquals(16, ((ResizableDoubleArray) da).getInternalLength());"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,163,"Assert.assertEquals(16, ((ResizableDoubleArray) da).getCapacity());"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,166,"ssert.assertEquals(16, ((ResizableDoubleArray) da).getInternalLength());"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,166,"Assert.assertEquals(16, ((ResizableDoubleArray) da).getCapacity());"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,169,"ssert.assertEquals(16, ((ResizableDoubleArray) da).getInternalLength());"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,169,"Assert.assertEquals(16, ((ResizableDoubleArray) da).getCapacity());"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,183,"ssert.assertEquals(2, testDa.getInternalLength());"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,183,"Assert.assertEquals(2, testDa.getCapacity());"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,186,"ssert.assertEquals(2, testDa.getInternalLength());"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,186,"Assert.assertEquals(2, testDa.getCapacity());"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,188,"ssert.assertEquals(4, testDa.getInternalLength());"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,188,"Assert.assertEquals(4, testDa.getCapacity());"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,197,"024, ((ResizableDoubleArray) da).getInternalLength());"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,197,"1024, ((ResizableDoubleArray) da).getCapacity());"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,217,"ssert.assertEquals(2, testDa.getInternalLength());"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,217,"Assert.assertEquals(2, testDa.getCapacity());"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,224,"ssert.assertEquals(4, testDa.getInternalLength());  // x,x,x,0"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,224,"Assert.assertEquals(4, testDa.getCapacity());  // x,x,x,0"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,252,"ssert.assertEquals(2, testDa.getInternalLength());"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,252,"Assert.assertEquals(2, testDa.getCapacity());"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,259,"ssert.assertEquals(4, testDa.getInternalLength());  // x,x,x,0"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,259,"Assert.assertEquals(4, testDa.getCapacity());  // x,x,x,0"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,265,"ssert.assertEquals(4, testDa.getInternalLength());  // 0,x,x,x"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,265,"Assert.assertEquals(4, testDa.getCapacity());  // 0,x,x,x"
False,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,271,"ssert.assertEquals(4, testDa.getInternalLength());  // contracted -- x,x,x,0"
True,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java,271,"Assert.assertEquals(4, testDa.getCapacity());  // contracted -- x,x,x,0"
