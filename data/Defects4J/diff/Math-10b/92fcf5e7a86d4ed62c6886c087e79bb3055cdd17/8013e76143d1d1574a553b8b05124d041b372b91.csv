is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,61,"his(max, null);"
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,61,"this(max,"
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,62,new MaxCountExceededCallback() {
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,63,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,64,public void trigger(int max) {
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,65,throw new MaxCountExceededException(max);
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,69, @param cb Function to be called when the maximal count has been reached
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,70, (can be {@code null}).
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,75,* @param cb Function to be called when the maximal count has been reached.
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,76,* @throws NullPointerException if {@code cb} is {@code null}
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,74,aximalCount = max;
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,75,f (cb != null) {
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,76,axCountCallback = cb;
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,77, else {
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,78,axCountCallback = new MaxCountExceededCallback() {
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,79,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,80,ublic void trigger(int max) {
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,81,hrow new MaxCountExceededException(max);
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,80,if (cb == null){
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,81,throw new NullPointerException();
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,83,maximalCount = max;
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,84,maxCountCallback = cb;
False,src/main/java/org/apache/commons/math3/util/IterationManager.java,src/main/java/org/apache/commons/math3/util/IterationManager.java,46,"his(maxIterations, null);"
True,src/main/java/org/apache/commons/math3/util/IterationManager.java,src/main/java/org/apache/commons/math3/util/IterationManager.java,46,this.iterations = new Incrementor(maxIterations);
True,src/main/java/org/apache/commons/math3/util/IterationManager.java,src/main/java/org/apache/commons/math3/util/IterationManager.java,47,this.listeners = new CopyOnWriteArrayList<IterationListener>();
False,src/main/java/org/apache/commons/math3/util/IterationManager.java,src/main/java/org/apache/commons/math3/util/IterationManager.java,54, iterations has been reached (can be {@code null})
True,src/main/java/org/apache/commons/math3/util/IterationManager.java,src/main/java/org/apache/commons/math3/util/IterationManager.java,55,* iterations has been reached
True,src/main/java/org/apache/commons/math3/util/IterationManager.java,src/main/java/org/apache/commons/math3/util/IterationManager.java,56,* @throws NullPointerException if {@code callBack} is {@code null}
True,src/main/java/org/apache/commons/math3/util/IterationManager.java,src/main/java/org/apache/commons/math3/util/IterationManager.java,60,if (callBack == null) {
True,src/main/java/org/apache/commons/math3/util/IterationManager.java,src/main/java/org/apache/commons/math3/util/IterationManager.java,61,throw new NullPointerException();
