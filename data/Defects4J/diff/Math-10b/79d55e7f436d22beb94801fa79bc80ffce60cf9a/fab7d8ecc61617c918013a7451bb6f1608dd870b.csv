is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,28,import org.apache.commons.math3.exception.NotPositiveException;
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,75,inal int columnDimension) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,76,final int columnDimension)
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,77,throws NotStrictlyPositiveException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,96,rotected static <T extends FieldElement<T>> Field<T> extractField(final T[][] d) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,98,protected static <T extends FieldElement<T>> Field<T> extractField(final T[][] d)
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,99,"throws NoDataException, NullArgumentException {"
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,117,rotected static <T extends FieldElement<T>> Field<T> extractField(final T[] d) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,120,protected static <T extends FieldElement<T>> Field<T> extractField(final T[] d)
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,121,throws NoDataException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,180,ublic FieldMatrix<T> add(FieldMatrix<T> m) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,184,public FieldMatrix<T> add(FieldMatrix<T> m)
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,185,throws MatrixDimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,197,ublic FieldMatrix<T> subtract(final FieldMatrix<T> m) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,202,public FieldMatrix<T> subtract(final FieldMatrix<T> m)
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,203,throws MatrixDimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,243,ublic FieldMatrix<T> multiply(final FieldMatrix<T> m) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,249,public FieldMatrix<T> multiply(final FieldMatrix<T> m)
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,250,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,265,ublic FieldMatrix<T> preMultiply(final FieldMatrix<T> m) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,272,public FieldMatrix<T> preMultiply(final FieldMatrix<T> m)
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,273,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,270,ublic FieldMatrix<T> power(final int p) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,278,"public FieldMatrix<T> power(final int p) throws NonSquareMatrixException,"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,279,NotPositiveException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,272,"hrow new IllegalArgumentException(""p must be >= 0"");"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,281,throw new NotPositiveException(p);
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,343,"inal int startColumn, final int endColumn) {"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,352,"final int startColumn, final int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,353,"throws NumberIsTooSmallException, OutOfRangeException {"
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,360,inal int[] selectedColumns) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,370,final int[] selectedColumns)
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,371,"throws NoDataException, NullArgumentException, OutOfRangeException {"
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,385,inal T[][] destination) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,396,final T[][] destination)
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,397,"throws MatrixDimensionMismatchException, NumberIsTooSmallException,"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,398,OutOfRangeException{
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,426,"ublic void copySubMatrix(int[] selectedRows, int[] selectedColumns, T[][] destination) {"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,439,"public void copySubMatrix(int[] selectedRows, int[] selectedColumns, T[][] destination)"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,440,"throws MatrixDimensionMismatchException, NoDataException,"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,441,"NullArgumentException, OutOfRangeException {"
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,447,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,448,"ublic void setSubMatrix(final T[][] subMatrix, final int row, final int column) {"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,463,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,466,"public void setSubMatrix(final T[][] subMatrix, final int row, final int column)"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,467,"throws DimensionMismatchException, NoDataException, NullArgumentException,"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,468,OutOfRangeException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,481,ublic FieldMatrix<T> getRowMatrix(final int row) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,501,public FieldMatrix<T> getRowMatrix(final int row) throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,494,"ublic void setRowMatrix(final int row, final FieldMatrix<T> matrix) {"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,514,"public void setRowMatrix(final int row, final FieldMatrix<T> matrix)"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,515,throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,510,ublic FieldMatrix<T> getColumnMatrix(final int column) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,531,public FieldMatrix<T> getColumnMatrix(final int column)
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,532,throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,524,"ublic void setColumnMatrix(final int column, final FieldMatrix<T> matrix) {"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,546,"public void setColumnMatrix(final int column, final FieldMatrix<T> matrix)"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,547,throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,545,"ublic void setRowVector(final int row, final FieldVector<T> vector) {"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,568,"public void setRowVector(final int row, final FieldVector<T> vector)"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,569,throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,564,"ublic void setColumnVector(final int column, final FieldVector<T> vector) {"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,588,"public void setColumnVector(final int column, final FieldVector<T> vector)"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,589,throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,578,ublic T[] getRow(final int row) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,604,public T[] getRow(final int row) throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,591,"ublic void setRow(final int row, final T[] array) {"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,617,"public void setRow(final int row, final T[] array) throws OutOfRangeException {"
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,604,ublic T[] getColumn(final int column) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,630,public T[] getColumn(final int column) throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,617,"ublic void setColumn(final int column, final T[] array) {"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,643,"public void setColumn(final int column, final T[] array)"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,644,throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,668,ublic T getTrace() {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,695,public T getTrace() throws NonSquareMatrixException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,682,ublic T[] operate(final T[] v) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,709,public T[] operate(final T[] v) throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,703,ublic FieldVector<T> operate(final FieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,730,public FieldVector<T> operate(final FieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,731,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,727,ublic T[] preMultiply(final T[] v) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,755,public T[] preMultiply(final T[] v) throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,748,ublic FieldVector<T> preMultiply(final FieldVector<T> v) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,776,public FieldVector<T> preMultiply(final FieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,777,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,862,"inal int startColumn, final int endColumn) {"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,891,"final int startColumn, final int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,892,"throws NumberIsTooSmallException, OutOfRangeException {"
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,879,"inal int startColumn, final int endColumn) {"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,909,"final int startColumn, final int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,910,"throws NumberIsTooSmallException, OutOfRangeException{"
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1004,rotected void checkRowIndex(final int row) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1035,protected void checkRowIndex(final int row) throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1017,rotected void checkColumnIndex(final int column) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1048,protected void checkColumnIndex(final int column)
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1049,throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1037,"inal int startColumn, final int endColumn) {"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1069,"final int startColumn, final int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1070,"throws NumberIsTooSmallException, OutOfRangeException {"
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1063,"rotected void checkSubMatrixIndex(final int[] selectedRows, final int[] selectedColumns) {"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1096,"protected void checkSubMatrixIndex(final int[] selectedRows, final int[] selectedColumns)"
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1097,"throws NoDataException, NullArgumentException, OutOfRangeException {"
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1088,rotected void checkAdditionCompatible(final FieldMatrix<T> m) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1122,protected void checkAdditionCompatible(final FieldMatrix<T> m)
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1123,throws MatrixDimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1103,rotected void checkSubtractionCompatible(final FieldMatrix<T> m) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1138,protected void checkSubtractionCompatible(final FieldMatrix<T> m)
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1139,throws MatrixDimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1118,rotected void checkMultiplicationCompatible(final FieldMatrix<T> m) {
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1154,protected void checkMultiplicationCompatible(final FieldMatrix<T> m)
True,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java,1155,throws DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,121,* @throws NullArgumentException if {@code manager} is {@code null}
False,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,123,"inal double delta, final boolean check) {"
True,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,124,"final double delta, final boolean check)"
True,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,125,throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,139,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,142,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,144,* @throws NonPositiveDefiniteOperatorException if {@code a} or {@code m} is
True,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,145,* not positive definite
False,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,142,"inal RealLinearOperator m, final RealVector b, final RealVector x0)"
False,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,143,"hrows NullArgumentException, NonSquareOperatorException,"
False,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,144,"imensionMismatchException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,149,"final RealLinearOperator m,"
True,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,150,"final RealVector b,"
True,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,151,final RealVector x0)
True,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,152,"throws NullArgumentException, NonPositiveDefiniteOperatorException,"
True,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,153,"NonSquareOperatorException, DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java,154,"MaxCountExceededException, NonPositiveDefiniteOperatorException {"
False,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,114,ublic EigenDecomposition(final RealMatrix matrix)  {
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,114,public EigenDecomposition(final RealMatrix matrix)
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,115,throws MathArithmeticException {
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,131,* @throws MathArithmeticException  if the decomposition of a general matrix
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,132,* results in a matrix with zero norm
False,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,135,inal double splitTolerance)  {
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,138,final double splitTolerance)
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,139,throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,764,rivate void findEigenVectorsFromSchur(final SchurTransformer schur) {
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,768,private void findEigenVectorsFromSchur(final SchurTransformer schur)
True,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,769,throws MathArithmeticException {
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,23,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,24,import org.apache.commons.math3.exception.NoDataException;
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,25,import org.apache.commons.math3.exception.NotPositiveException;
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,26,import org.apache.commons.math3.exception.NotStrictlyPositiveException;
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,27,import org.apache.commons.math3.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,28,import org.apache.commons.math3.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,29,import org.apache.commons.math3.exception.OutOfRangeException;
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,30,import org.apache.commons.math3.exception.ZeroException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,48, @throws org.apache.commons.math3.exception.NotStrictlyPositiveException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,49, if row or column dimension is not positive.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,56,* @throws NotStrictlyPositiveException if row or column dimension is not
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,57,* positive.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,52,"ieldMatrix<T> createMatrix(final int rowDimension, final int columnDimension);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,60,"FieldMatrix<T> createMatrix(final int rowDimension, final int columnDimension)"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,61,throws NotStrictlyPositiveException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,66, @throws MatrixDimensionMismatchException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,67, if {@code m} is not the same size as this matrix.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,75,* @throws MatrixDimensionMismatchException if {@code m} is not the same
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,76,* size as {@code this} matrix.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,69,ieldMatrix<T> add(FieldMatrix<T> m);
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,78,FieldMatrix<T> add(FieldMatrix<T> m) throws MatrixDimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,76, @throws MatrixDimensionMismatchException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,77, if {@code m} is not the same size as this matrix.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,85,* @throws MatrixDimensionMismatchException if {@code m} is not the same
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,86,* size as {@code this} matrix.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,79,ieldMatrix<T> subtract(FieldMatrix<T> m);
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,88,FieldMatrix<T> subtract(FieldMatrix<T> m) throws MatrixDimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,102, @throws IllegalArgumentException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,103,             if columnDimension(this) != rowDimension(m)
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,111,* @throws DimensionMismatchException if the number of columns of
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,112,* {@code this} matrix is not equal to the number of rows of matrix
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,113,* {@code m}.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,105,ieldMatrix<T> multiply(FieldMatrix<T> m);
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,115,FieldMatrix<T> multiply(FieldMatrix<T> m) throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,112, @throws org.apache.commons.math3.exception.DimensionMismatchException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,113, if the number of columns of {@code m} differ from the number of rows
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,114, of this matrix.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,122,* @throws DimensionMismatchException if the number of columns of {@code m}
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,123,* differs from the number of rows of {@code this} matrix.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,116,ieldMatrix<T> preMultiply(FieldMatrix<T> m);
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,125,FieldMatrix<T> preMultiply(FieldMatrix<T> m) throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,120," Depending on the type of the field elements, T,"
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,121, instability for high powers might occur.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,122, @param      p raise this to power p
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,123, @return     this^p
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,124, @throws     IllegalArgumentException if p < 0
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,125,             NonSquareMatrixException if the matrix is not square
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,129,"* Depending on the type of the field elements, T, instability for high"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,130,* powers might occur.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,132,* @param p raise this to power p
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,133,* @return this^p
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,134,* @throws NotPositiveException if {@code p < 0}
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,135,* @throws NonSquareMatrixException if {@code this matrix} is not square
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,127,ieldMatrix<T> power(final int p);
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,137,"FieldMatrix<T> power(final int p) throws NonSquareMatrixException,"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,138,NotPositiveException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,144, @return the matrix containing the data of the
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,145, specified rows and columns.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,146, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,147, if the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,155,* @return the matrix containing the data of the specified rows and columns.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,156,* @throws NumberIsTooSmallException is {@code endRow < startRow} of
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,157,* {@code endColumn < startColumn}.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,158,* @throws OutOfRangeException if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,149,"ieldMatrix<T> getSubMatrix(int startRow, int endRow, int startColumn, int endColumn);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,160,"FieldMatrix<T> getSubMatrix(int startRow, int endRow, int startColumn, int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,161,"throws NumberIsTooSmallException, OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,159, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,160, if row or column selections are not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,171,* @throws NoDataException if {@code selectedRows} or
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,172,* {@code selectedColumns} is empty
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,173,* @throws NullArgumentException if {@code selectedRows} or
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,174,* {@code selectedColumns} is {@code null}.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,175,* @throws OutOfRangeException if row or column selections are not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,162,"ieldMatrix<T> getSubMatrix(int[] selectedRows, int[] selectedColumns);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,177,"FieldMatrix<T> getSubMatrix(int[] selectedRows, int[] selectedColumns)"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,178,"throws NoDataException, NullArgumentException, OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,174, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,175, if the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,190,* @throws MatrixDimensionMismatchException if the dimensions of
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,191,* {@code destination} do not match those of {@code this}.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,192,* @throws NumberIsTooSmallException is {@code endRow < startRow} of
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,193,* {@code endColumn < startColumn}.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,194,* @throws OutOfRangeException if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,178,"oid copySubMatrix(int startRow, int endRow, int startColumn, int endColumn,"
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,179,[][] destination);
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,197,"void copySubMatrix(int startRow, int endRow, int startColumn, int endColumn,"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,198,T[][] destination)
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,199,"throws MatrixDimensionMismatchException, NumberIsTooSmallException,"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,200,OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,189, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,190, if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,191, @exception IllegalArgumentException if the destination array is too small
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,210,* @throws MatrixDimensionMismatchException if the dimensions of
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,211,* {@code destination} do not match those of {@code this}.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,212,* @throws NoDataException if {@code selectedRows} or
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,213,* {@code selectedColumns} is empty
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,214,* @throws NullArgumentException if {@code selectedRows} or
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,215,* {@code selectedColumns} is {@code null}.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,216,* @throws OutOfRangeException if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,193,"oid copySubMatrix(int[] selectedRows, int[] selectedColumns, T[][] destination);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,218,"void copySubMatrix(int[] selectedRows, int[] selectedColumns, T[][] destination)"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,219,"throws MatrixDimensionMismatchException, NoDataException, NullArgumentException,"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,220,OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,227,"oid setSubMatrix(T[][] subMatrix, int row, int column);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,254,"void setSubMatrix(T[][] subMatrix, int row, int column)"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,255,"throws DimensionMismatchException, MatrixDimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,256,"NullArgumentException, ZeroException;"
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,235, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,236, if the specified row index is invalid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,264,* @throws OutOfRangeException if the specified row index is invalid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,238,ieldMatrix<T> getRowMatrix(int row);
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,266,FieldMatrix<T> getRowMatrix(int row) throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,247, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,248, if the specified row index is invalid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,275,* @throws OutOfRangeException if the specified row index is invalid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,252,"oid setRowMatrix(int row, FieldMatrix<T> matrix);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,279,"void setRowMatrix(int row, FieldMatrix<T> matrix)"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,280,"throws MatrixDimensionMismatchException, OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,260, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,261, if the specified column index is invalid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,288,* @throws OutOfRangeException if the specified column index is invalid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,263,ieldMatrix<T> getColumnMatrix(int column);
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,290,FieldMatrix<T> getColumnMatrix(int column) throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,272, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,273, if the specified column index is invalid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,274, @throws MatrixDimensionMismatchException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,275, if the matrix dimensions do not match one instance column.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,299,* @throws OutOfRangeException if the specified column index is invalid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,300,* @throws MatrixDimensionMismatchException if the matrix dimensions do
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,301,* not match one instance column.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,277,"oid setColumnMatrix(int column, FieldMatrix<T> matrix);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,303,"void setColumnMatrix(int column, FieldMatrix<T> matrix)"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,304,"throws MatrixDimensionMismatchException, OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,285, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,286, if the specified row index is invalid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,312,* @throws OutOfRangeException if the specified row index is invalid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,288,ieldVector<T> getRowVector(int row);
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,314,FieldVector<T> getRowVector(int row) throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,297, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,298, if the specified row index is invalid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,299, @throws MatrixDimensionMismatchException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,300, if the vector dimension does not match one instance row.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,323,* @throws OutOfRangeException if the specified row index is invalid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,324,* @throws MatrixDimensionMismatchException if the vector dimension does not
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,325,* match one instance row.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,302,"oid setRowVector(int row, FieldVector<T> vector);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,327,"void setRowVector(int row, FieldVector<T> vector)"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,328,"throws MatrixDimensionMismatchException, OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,310, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,311, if the specified column index is invalid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,336,* @throws OutOfRangeException if the specified column index is invalid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,313,ieldVector<T> getColumnVector(int column);
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,338,FieldVector<T> getColumnVector(int column) throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,322, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,323, if the specified column index is invalid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,324, @throws MatrixDimensionMismatchException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,325, if the vector dimension does not match one instance column.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,347,* @throws OutOfRangeException if the specified column index is invalid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,348,* @throws MatrixDimensionMismatchException if the vector dimension does not
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,349,* match one instance column.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,327,"oid setColumnVector(int column, FieldVector<T> vector);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,351,"void setColumnVector(int column, FieldVector<T> vector)"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,352,"throws MatrixDimensionMismatchException, OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,334, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,335, if the specified row index is not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,359,* @throws OutOfRangeException if the specified row index is not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,337,[] getRow(int row);
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,361,T[] getRow(int row) throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,346, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,347, if the specified row index is invalid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,348, @throws MatrixDimensionMismatchException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,349, if the array size does not match one instance row.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,370,* @throws OutOfRangeException if the specified row index is invalid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,371,* @throws MatrixDimensionMismatchException if the array size does not match
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,372,* one instance row.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,351,"oid setRow(int row, T[] array);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,374,"void setRow(int row, T[] array) throws MatrixDimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,375,OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,358, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,359, if the specified column index is not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,382,* @throws OutOfRangeException if the specified column index is not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,361,[] getColumn(int column);
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,384,T[] getColumn(int column) throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,369, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,370, if the specified column index is invalid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,371, @throws MatrixDimensionMismatchException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,372, if the array size does not match one instance column.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,392,* @throws OutOfRangeException if the specified column index is invalid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,393,* @throws MatrixDimensionMismatchException if the array size does not match
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,394,* one instance column.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,374,"oid setColumn(int column, T[] array);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,396,"void setColumn(int column, T[] array) throws MatrixDimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,397,OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,382, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,383, if the row or column index is not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,405,* @throws OutOfRangeException if the row or column index is not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,385," getEntry(int row, int column);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,407,"T getEntry(int row, int column) throws OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,393, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,394, if the row or column index is not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,415,* @throws OutOfRangeException if the row or column index is not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,397,"oid setEntry(int row, int column, T value);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,418,"void setEntry(int row, int column, T value) throws OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,406, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,407, if the row or column index is not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,427,* @throws OutOfRangeException if the row or column index is not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,410,"oid addToEntry(int row, int column, T increment);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,430,"void addToEntry(int row, int column, T increment) throws OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,419, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,420, if the row or column index is not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,439,* @throws OutOfRangeException if the row or column index is not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,423,"oid multiplyEntry(int row, int column, T factor);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,442,"void multiplyEntry(int row, int column, T factor) throws OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,437, @throws NonSquareMatrixException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,438, if the matrix is not square.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,456,* @throws NonSquareMatrixException if the matrix is not square.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,440, getTrace();
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,458,T getTrace() throws NonSquareMatrixException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,443, Returns the result of multiplying this by the vector <code>v</code>.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,461,* Returns the result of multiplying this by the vector {@code v}.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,446, @return this*v
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,447, @throws IllegalArgumentException if columnDimension != v.size()
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,464,* @return {@code this * v}
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,465,* @throws DimensionMismatchException if the number of columns of
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,466,* {@code this} matrix is not equal to the size of the vector {@code v}.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,449,[] operate(T[] v);
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,468,T[] operate(T[] v) throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,452, Returns the result of multiplying this by the vector <code>v</code>.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,471,* Returns the result of multiplying this by the vector {@code v}.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,455, @return this*v
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,456, @throws IllegalArgumentException if columnDimension != v.size()
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,474,* @return {@code this * v}
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,475,* @throws DimensionMismatchException if the number of columns of
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,476,* {@code this} matrix is not equal to the size of the vector {@code v}.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,458,ieldVector<T> operate(FieldVector<T> v);
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,478,FieldVector<T> operate(FieldVector<T> v) throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,461, Returns the (row) vector result of premultiplying this by the vector <code>v</code>.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,481,* Returns the (row) vector result of premultiplying this by the vector
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,482,* {@code v}.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,464, @return v*this
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,465, @throws IllegalArgumentException if rowDimension != v.size()
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,485,* @return {@code v * this}
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,486,* @throws DimensionMismatchException if the number of rows of {@code this}
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,487,* matrix is not equal to the size of the vector {@code v}
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,467,[] preMultiply(T[] v);
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,489,T[] preMultiply(T[] v) throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,470, Returns the (row) vector result of premultiplying this by the vector <code>v</code>.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,492,* Returns the (row) vector result of premultiplying this by the vector
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,493,* {@code v}.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,473, @return v*this
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,474, @throws IllegalArgumentException if rowDimension != v.size()
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,496,* @return {@code v * this}
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,497,* @throws DimensionMismatchException if the number of rows of {@code this}
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,498,* matrix is not equal to the size of the vector {@code v}
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,476,ieldVector<T> preMultiply(FieldVector<T> v);
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,500,FieldVector<T> preMultiply(FieldVector<T> v) throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,532, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,533, if the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,556,* @throws OutOfRangeException if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,549,"nt startRow, int endRow, int startColumn, int endColumn);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,572,"int startRow, int endRow, int startColumn, int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,573,throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,561, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,562, if the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,585,* @throws OutOfRangeException if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,578,"nt startRow, int endRow, int startColumn, int endColumn);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,601,"int startRow, int endRow, int startColumn, int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,602,throws OutOfRangeException;
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,634, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,635, if the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,658,* @throws NumberIsTooSmallException if {@code endRow < startRow} or
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,659,* {@code endColumn < startColumn}.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,660,* @throws OutOfRangeException if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,651,"nt startRow, int endRow, int startColumn, int endColumn);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,676,"int startRow, int endRow, int startColumn, int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,677,"throws NumberIsTooSmallException, OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,663, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,664, if the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,689,* @throws NumberIsTooSmallException if {@code endRow < startRow} or
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,690,* {@code endColumn < startColumn}.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,691,* @throws OutOfRangeException if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,680,"nt startRow, int endRow, int startColumn, int endColumn);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,707,"int startRow, int endRow, int startColumn, int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,708,"throws NumberIsTooSmallException, OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,733, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,734, if the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,761,* @throws NumberIsTooSmallException if {@code endRow < startRow} or
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,762,* {@code endColumn < startColumn}.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,763,* @throws OutOfRangeException if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,750,"nt startRow, int endRow, int startColumn, int endColumn);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,779,"int startRow, int endRow, int startColumn, int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,780,"throws NumberIsTooSmallException, OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,761, @throws org.apache.commons.math3.exception.OutOfRangeException
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,762, if the indices are not valid.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,791,* @throws NumberIsTooSmallException if {@code endRow < startRow} or
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,792,* {@code endColumn < startColumn}.
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,793,* @throws OutOfRangeException if the indices are not valid.
False,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,778,"nt startRow, int endRow, int startColumn, int endColumn);"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,809,"int startRow, int endRow, int startColumn, int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,src/main/java/org/apache/commons/math3/linear/FieldMatrix.java,810,"throws NumberIsTooSmallException, OutOfRangeException;"
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,29,mport org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,124,* @throws DimensionMismatchException if {@code data} is not rectangular.
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,127,ublic static RealMatrix createRealMatrix(double[][] data) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,127,public static RealMatrix createRealMatrix(double[][] data)
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,128,"throws NullArgumentException, DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,129,NoDataException {
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,155,ublic static <T extends FieldElement<T>> FieldMatrix<T> createFieldMatrix(T[][] data) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,157,public static <T extends FieldElement<T>> FieldMatrix<T> createFieldMatrix(T[][] data)
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,158,"throws DimensionMismatchException, NoDataException, NullArgumentException {"
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,247,ublic static RealVector createRealVector(double[] data) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,250,public static RealVector createRealVector(double[] data)
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,251,"throws NoDataException, NullArgumentException {"
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,264,ublic static <T extends FieldElement<T>> FieldVector<T> createFieldVector(final T[] data) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,268,public static <T extends FieldElement<T>> FieldVector<T> createFieldVector(final T[] data)
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,269,"throws NoDataException, NullArgumentException, ZeroException {"
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,283,ublic static RealMatrix createRowRealMatrix(double[] rowData) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,288,public static RealMatrix createRowRealMatrix(double[] rowData)
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,289,"throws NoDataException, NullArgumentException {"
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,306,reateRowFieldMatrix(final T[] rowData) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,312,createRowFieldMatrix(final T[] rowData)
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,313,"throws NoDataException, NullArgumentException {"
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,330,ublic static RealMatrix createColumnRealMatrix(double[] columnData) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,337,public static RealMatrix createColumnRealMatrix(double[] columnData)
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,338,"throws NoDataException, NullArgumentException {"
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,353,reateColumnFieldMatrix(final T[] columnData) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,361,createColumnFieldMatrix(final T[] columnData)
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,362,"throws NoDataException, NullArgumentException {"
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,378,"inal int row, final int column) {"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,387,"final int row, final int column)"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,388,throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,390,"ublic static void checkRowIndex(final AnyMatrix m, final int row) {"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,400,"public static void checkRowIndex(final AnyMatrix m, final int row)"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,401,throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,405,"ublic static void checkColumnIndex(final AnyMatrix m, final int column) {"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,416,"public static void checkColumnIndex(final AnyMatrix m, final int column)"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,417,throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,427,"inal int startColumn, final int endColumn) {"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,439,"final int startColumn, final int endColumn)"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,440,"throws NumberIsTooSmallException, OutOfRangeException {"
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,460,inal int[] selectedColumns) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,473,final int[] selectedColumns)
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,474,"throws NoDataException, NullArgumentException, OutOfRangeException {"
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,487, @throws MatrixDimensionMismatchException if the matrices are not addition compatible.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,501,* @throws MatrixDimensionMismatchException if the matrices are not addition
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,502,* compatible.
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,489,"ublic static void checkAdditionCompatible(final AnyMatrix left, final AnyMatrix right) {"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,504,"public static void checkAdditionCompatible(final AnyMatrix left, final AnyMatrix right)"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,505,throws MatrixDimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,502, @throws MatrixDimensionMismatchException if the matrices are not addition compatible.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,518,* @throws MatrixDimensionMismatchException if the matrices are not addition
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,519,* compatible.
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,504,"ublic static void checkSubtractionCompatible(final AnyMatrix left, final AnyMatrix right) {"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,521,"public static void checkSubtractionCompatible(final AnyMatrix left, final AnyMatrix right)"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,522,throws MatrixDimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,517, @throws DimensionMismatchException if matrices are not multiplication compatible.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,535,* @throws DimensionMismatchException if matrices are not multiplication
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,536,* compatible.
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,519,"ublic static void checkMultiplicationCompatible(final AnyMatrix left, final AnyMatrix right) {"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,538,"public static void checkMultiplicationCompatible(final AnyMatrix left, final AnyMatrix right)"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,539,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,835, @exception IllegalArgumentException if the matrix and vector are not conformable
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,836, @exception ArithmeticException there is a zero or near zero on the diagonal of rm
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,838,"ublic static void solveLowerTriangularSystem( RealMatrix rm, RealVector b){"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,856,* @throws DimensionMismatchException if the matrix and vector are not
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,857,* conformable
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,858,* @throws NonSquareMatrixException if the matrix {@code rm} is not square
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,859,* @throws MathArithmeticException if the absolute value of one of the diagonal
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,860,* coefficient of {@code rm} is lower than {@link Precision#SAFE_MIN}
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,862,"public static void solveLowerTriangularSystem(RealMatrix rm, RealVector b)"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,863,"throws DimensionMismatchException, MathArithmeticException,"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,864,NonSquareMatrixException {
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,840,"hrow new MathIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,866,throw new DimensionMismatchException(
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,845,"hrow new MathIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,846,"m.getRowDimension(),rm.getRowDimension(),"
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,847,"m.getRowDimension(),rm.getColumnDimension());"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,871,"throw new NonSquareMatrixException(rm.getRowDimension(),"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,872,rm.getColumnDimension());
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,875, @exception IllegalArgumentException if the matrix and vector are not conformable
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,876, @exception ArithmeticException there is a zero or near zero on the diagonal of rm
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,878,"ublic static void solveUpperTriangularSystem( RealMatrix rm, RealVector b){"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,900,* @throws DimensionMismatchException if the matrix and vector are not
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,901,* conformable
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,902,* @throws NonSquareMatrixException if the matrix {@code rm} is not
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,903,* square
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,904,* @throws MathArithmeticException if the absolute value of one of the diagonal
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,905,* coefficient of {@code rm} is lower than {@link Precision#SAFE_MIN}
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,907,"public static void solveUpperTriangularSystem(RealMatrix rm, RealVector b)"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,908,"throws DimensionMismatchException, MathArithmeticException,"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,909,NonSquareMatrixException {
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,880,"hrow new MathIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,911,throw new DimensionMismatchException(
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,885,"hrow new MathIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,886,"m.getRowDimension(),rm.getRowDimension(),"
False,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,887,"m.getRowDimension(),rm.getColumnDimension());"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,916,"throw new NonSquareMatrixException(rm.getRowDimension(),"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,917,rm.getColumnDimension());
False,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,643,ublic OpenMapRealVector unitVector() {
True,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,643,public OpenMapRealVector unitVector() throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,651,ublic void unitize() {
True,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java,651,public void unitize() throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,324,ublic double cosine(RealVector v) {
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,324,public double cosine(RealVector v) throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,667, vector
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,668, @throws org.apache.commons.math3.exception.DimensionMismatchException
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,669, if {@code v} is not the same size as this vector.
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,667,*         vector
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,668,* @throws DimensionMismatchException if {@code v} is not the same size as
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,669,*         this vector.
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,671,ublic RealVector projection(final RealVector v) {
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,671,public RealVector projection(final RealVector v) throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,713, @throws ArithmeticException if the norm is {@code null}.
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,713,* @throws MathArithmeticException if the norm is zero.
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,715,ublic RealVector unitVector() {
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,715,public RealVector unitVector() throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,727, @throws org.apache.commons.math3.exception.MathArithmeticException
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,728, if the norm is zero.
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,727,* @throws MathArithmeticException if the norm is zero.
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,730,ublic void unitize() {
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,729,public void unitize() throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,1354,ublic double cosine(RealVector w) {
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,1353,public double cosine(RealVector w) throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,1396,ublic RealVector unitVector() {
True,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math3/linear/RealVector.java,1395,public RealVector unitVector() throws MathArithmeticException {
