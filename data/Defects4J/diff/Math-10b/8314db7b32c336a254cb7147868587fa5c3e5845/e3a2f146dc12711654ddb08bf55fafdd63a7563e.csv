is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,251,"* @deprecated as of version 3.1, {@link #getSigma()} should be used"
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,252,* instead. It should be emphasized that {@link #guessParametersErrors()} and
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,253,* {@link #getSigma()} are <em>not</em> strictly equivalent.
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,270,* <p>
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,271,* Returns an estimate of the standard deviation of the parameters. The
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,272,* returned values are the square root of the diagonal coefficients of the
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,273,"* covariance matrix, {@code sd(a[i]) ~= sqrt(C[i][i])}, where {@code a[i]}"
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,274,"* is the optimized value of the {@code i}-th parameter, and {@code C} is"
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,275,* the covariance matrix.
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,276,* </p>
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,278,* @return an estimate of the standard deviation of the optimized parameters
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,279,* @throws org.apache.commons.math3.linear.SingularMatrixException
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,280,* if the covariance matrix cannot be computed.
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,282,public double[] getSigma() {
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,283,double[] sig = new double[cols];
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,284,double[][] cov = getCovariances();
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,285,for (int i = 0; i < sig.length; ++i) {
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,286,sig[i] = FastMath.sqrt(cov[i][i]);
True,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,288,return sig;
True,src/main/java/org/apache/commons/math3/special/Gamma.java,src/main/java/org/apache/commons/math3/special/Gamma.java,329,public static double lanczos(final double x){
True,src/main/java/org/apache/commons/math3/special/Gamma.java,src/main/java/org/apache/commons/math3/special/Gamma.java,330,double sum = 0.0;
True,src/main/java/org/apache/commons/math3/special/Gamma.java,src/main/java/org/apache/commons/math3/special/Gamma.java,331,for (int i = LANCZOS.length - 1; i > 0; --i) {
True,src/main/java/org/apache/commons/math3/special/Gamma.java,src/main/java/org/apache/commons/math3/special/Gamma.java,332,sum = sum + (LANCZOS[i] / (x + i));
True,src/main/java/org/apache/commons/math3/special/Gamma.java,src/main/java/org/apache/commons/math3/special/Gamma.java,334,return sum + LANCZOS[0];
False,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,78,ublic void testGuessParametersErrors() throws IOException {
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,78,public void testGetSigma() throws IOException {
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,88,final int dof = y.length-a.length;
False,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,89,inal double[] actual = optimizer.guessParametersErrors();
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,90,final double[] sig = optimizer.getSigma();
False,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,91,or (int i = 0; i < actual.length; i++) {
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,92,for (int i = 0; i < sig.length; i++) {
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,93,final double actual = FastMath.sqrt(optimizer.getChiSquare()/dof)*sig[i];
False,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,93,"ctual[i], expected[i], 1E-8 * expected[i]);"
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java,95,"actual, expected[i], 1E-8 * expected[i]);"
