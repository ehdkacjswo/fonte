is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,29, @version $Revision: 1.3 $ $Date: 2004/05/24 05:29:05 $
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,29,* @version $Revision: 1.4 $ $Date: 2004/06/01 00:44:24 $
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,83,* (non-Javadoc)
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,84," @see org.apache.commons.math.stat.inference.TTest#pairedTTest(double[], double[], double)"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,84,* Performs a paired t-test</a> evaluating that null hypothesis that the
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,85,* mean of the paired differences between <code>sample1</code> and
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,86,* <code>sample2</code> is 0 in favor of the two-sided alternative that the
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,87,"* mean paired difference is not equal to 0, with significance level"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,88,* <code>alpha</code>.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,89,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,90,* Returns <code>true</code> iff the null hypothesis can be rejected with
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,91,"* confidence <code>1 - alpha</code>.  To perform a 1-sided test, use"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,92,* <code>alpha / 2</code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,93,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,94,* <strong>Usage Note:</strong><br>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,95,* The validity of the test depends on the assumptions of the parametric
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,96,"* t-test procedure, as discussed"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,97,"* <a href=""http://www.basic.nwu.edu/statguidefiles/ttest_unpaired_ass_viol.html"">"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,98,* here</a>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,99,* <p>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,100,* <strong>Preconditions</strong>: <ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,101,* <li>The input array lengths must be the same and their common length
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,102,* must be at least 2.
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,103,* </li>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,104,* <li> <code> 0 < alpha < 0.5 </code>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,105,* </li></ul>
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,107,* @param sample1 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,108,* @param sample2 array of sample data values
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,109,* @param alpha significance level of the test
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,110,* @return true if the null hypothesis can be rejected with
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,111,* confidence 1 - alpha
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,112,* @throws IllegalArgumentException if the preconditions are not met
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,113,* @throws MathException if an error occurs performing the test
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,86,ublic boolean pairedTTest(
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,87,"ouble[] sample1,"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,88,"ouble[] sample2,"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,89,ouble alpha)
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,115,"public boolean pairedTTest(double[] sample1, double[] sample2, double alpha)"
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,91,/ TODO Auto-generated method stub
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,92,eturn false;
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,117,if ((alpha <= 0) || (alpha > 0.5)) {
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,118,"throw new IllegalArgumentException(""bad significance level: "" + alpha);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,120,"return (pairedTTest(sample1, sample2) < alpha);"
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,26, @version $Revision: 1.3 $ $Date: 2004/05/24 05:34:30 $
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,26,* @version $Revision: 1.4 $ $Date: 2004/06/01 00:44:24 $
False,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,240,"ouble[] sample3 = {0d, 2d};"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,240,"double[] sample3 = {5d, 7d, 8d, 10d};"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,241,"double[] sample4 = {0d, 2d};"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,246,"assertEquals(0.001208, testStatistic.pairedTTest(sample1, sample3), 1E-6);"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,247,"assertFalse(testStatistic.pairedTTest(sample1, sample3, .001));"
True,src/test/org/apache/commons/math/stat/inference/TTestTest.java,src/test/org/apache/commons/math/stat/inference/TTestTest.java,248,"assertTrue(testStatistic.pairedTTest(sample1, sample3, .002));"
