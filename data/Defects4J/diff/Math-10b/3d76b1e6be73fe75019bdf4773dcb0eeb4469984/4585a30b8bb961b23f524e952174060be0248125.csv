is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,52, differentiator).</p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,52,* differentiator}.</p>
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,438, @param a number on which evaluation is done
False,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,22,   The core class is {@link DerivativeStructure} which holds the value and
False,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,23,   the differentials of a function. This class handles some arbitrary number
False,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,24,   of free parameters and arbitrary derivation order. It is used both as
False,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,25,   the input and the output type for the {@link UnivariateDifferentiableFunction}
False,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,26,   interface. Any differentiable function should implement this interface.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,22,*   The core class is {@link org.apache.commons.math3.analysis.differentiation.DerivativeStructure
True,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,23,*   DerivativeStructure} which holds the value and the differentials of a function. This class
True,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,24,*   handles some arbitrary number of free parameters and arbitrary derivation order. It is used
True,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,25,*   both as the input and the output type for the {@link
True,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,26,*   org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction
True,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,27,*   UnivariateDifferentiableFunction} interface. Any differentiable function should implement this
True,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,28,*   interface.
False,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,29,   The {@link UnivariateFunctionDifferentiator} interface defines a way to differentiation
False,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,30,   a simple {@link org.apache.commons.math3.analysis.UnivariateFunction
False,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,31,   univariate function} and get a {@link differential function}.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,31,*   The {@link org.apache.commons.math3.analysis.differentiation.UnivariateFunctionDifferentiator
True,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,32,*   UnivariateFunctionDifferentiator} interface defines a way to differentiation a simple {@link
True,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,33,*   org.apache.commons.math3.analysis.UnivariateFunction UnivariateFunction} and get a {@link
True,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,34,*   org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction
True,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,35,*   UnivariateDifferentiableFunction}.
False,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,34,   Similar interfaces also exist for multivariate functions and for vector or
False,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,35,   matrix valued functions.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java,38,*   Similar interfaces also exist for multivariate functions and for vector or matrix valued functions.
False,src/main/java/org/apache/commons/math3/analysis/solvers/NewtonSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/NewtonSolver.java,30," @deprecated as of 3.1, replaced by {@link NewtonRaphsonSolverTest}"
True,src/main/java/org/apache/commons/math3/analysis/solvers/NewtonSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/NewtonSolver.java,30,"* @deprecated as of 3.1, replaced by {@link NewtonRaphsonSolver}"
False,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,80," be the case, a {@link NumberIsTooLargeException} will be thrown by the"
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,80,"* be the case, a {@link org.apache.commons.math3.exception.NumberIsTooLargeException"
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,81,* NumberIsTooLargeException} will be thrown by the
False,src/main/java/org/apache/commons/math3/optimization/package-info.java,src/main/java/org/apache/commons/math3/optimization/package-info.java,43,      org.apache.commons.math3.analysis.MultivariateDifferentiableFunction
False,src/main/java/org/apache/commons/math3/optimization/package-info.java,src/main/java/org/apache/commons/math3/optimization/package-info.java,44,      differentiable multivariate real functions}</li>
False,src/main/java/org/apache/commons/math3/optimization/package-info.java,src/main/java/org/apache/commons/math3/optimization/package-info.java,45,  <li>{@link org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer
True,src/main/java/org/apache/commons/math3/optimization/package-info.java,src/main/java/org/apache/commons/math3/optimization/package-info.java,43,*      org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction
True,src/main/java/org/apache/commons/math3/optimization/package-info.java,src/main/java/org/apache/commons/math3/optimization/package-info.java,44,*      multivariate differentiable real functions}</li>
True,src/main/java/org/apache/commons/math3/optimization/package-info.java,src/main/java/org/apache/commons/math3/optimization/package-info.java,45,*  <li>{@link org.apache.commons.math3.optimization.MultivariateDifferentiableVectorOptimizer
False,src/main/java/org/apache/commons/math3/optimization/package-info.java,src/main/java/org/apache/commons/math3/optimization/package-info.java,47,      org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction
False,src/main/java/org/apache/commons/math3/optimization/package-info.java,src/main/java/org/apache/commons/math3/optimization/package-info.java,48,      differentiable multivariate vectorial functions}</li>
True,src/main/java/org/apache/commons/math3/optimization/package-info.java,src/main/java/org/apache/commons/math3/optimization/package-info.java,47,*      org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction
True,src/main/java/org/apache/commons/math3/optimization/package-info.java,src/main/java/org/apache/commons/math3/optimization/package-info.java,48,*      multivariate differentiable vectorial functions}</li>
True,src/main/java/org/apache/commons/math3/optimization/package-info.java,src/main/java/org/apache/commons/math3/optimization/package-info.java,73,import org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction;
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,259, Generates a random value from the {@link BetaDistribution Beta Distribution}.
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,259,* Generates a random value from the {@link org.apache.commons.math3.distribution.BetaDistribution Beta Distribution}.
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,273, Generates a random value from the {@link BinomialDistribution Binomial Distribution}.
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,273,* Generates a random value from the {@link org.apache.commons.math3.distribution.BinomialDistribution Binomial Distribution}.
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,287, Generates a random value from the {@link CauchyDistribution Cauchy Distribution}.
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,287,* Generates a random value from the {@link org.apache.commons.math3.distribution.CauchyDistribution Cauchy Distribution}.
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,301, Generates a random value from the {@link ChiSquaredDistribution ChiSquare Distribution}.
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,301,* Generates a random value from the {@link org.apache.commons.math3.distribution.ChiSquaredDistribution ChiSquare Distribution}.
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,314, Generates a random value from the {@link FDistribution F Distribution}.
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,314,* Generates a random value from the {@link org.apache.commons.math3.distribution.FDistribution F Distribution}.
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,357, Generates a random value from the {@link HypergeometricDistribution Hypergeometric Distribution}.
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,357,* Generates a random value from the {@link org.apache.commons.math3.distribution.HypergeometricDistribution Hypergeometric Distribution}.
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,377, Generates a random value from the {@link PascalDistribution Pascal Distribution}.
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,377,* Generates a random value from the {@link org.apache.commons.math3.distribution.PascalDistribution Pascal Distribution}.
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,395, Generates a random value from the {@link TDistribution T Distribution}.
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,395,* Generates a random value from the {@link org.apache.commons.math3.distribution.TDistribution T Distribution}.
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,409, Generates a random value from the {@link WeibullDistribution Weibull Distribution}.
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,409,* Generates a random value from the {@link org.apache.commons.math3.distribution.WeibullDistribution Weibull Distribution}.
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,425, Generates a random value from the {@link ZipfDistribution Zipf Distribution}.
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,425,* Generates a random value from the {@link org.apache.commons.math3.distribution.ZipfDistribution Zipf Distribution}.
False,src/main/java/org/apache/commons/math3/special/Gamma.java,src/main/java/org/apache/commons/math3/special/Gamma.java,500," where {@code g} is a constant, returned by {@link #getLanczosG()}."
True,src/main/java/org/apache/commons/math3/special/Gamma.java,src/main/java/org/apache/commons/math3/special/Gamma.java,500,* where {@code g} is the Lanczos constant.
