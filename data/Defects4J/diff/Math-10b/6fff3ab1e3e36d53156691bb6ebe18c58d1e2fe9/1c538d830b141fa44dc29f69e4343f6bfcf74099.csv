is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,23,import org.apache.commons.math.FunctionEvaluationException;
True,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,41,minimizer.setMaxEvaluations(200);
True,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,42,"assertEquals(200, minimizer.getMaxEvaluations());"
True,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,55,assertTrue(minimizer.getEvaluations()    <= 100);
True,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,56,assertTrue(minimizer.getEvaluations()    >=  90);
True,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,57,minimizer.setMaxEvaluations(50);
True,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,58,try {
True,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,59,"minimizer.optimize(f, GoalType.MINIMIZE, 4, 5);"
True,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,60,"fail(""an exception should have been thrown"");"
True,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,61,} catch (FunctionEvaluationException fee) {
True,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,62,// expected
True,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,63,} catch (Exception e) {
True,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,src/test/org/apache/commons/math/optimization/univariate/BrentMinimizerTest.java,64,"fail(""wrong exception caught"");"
