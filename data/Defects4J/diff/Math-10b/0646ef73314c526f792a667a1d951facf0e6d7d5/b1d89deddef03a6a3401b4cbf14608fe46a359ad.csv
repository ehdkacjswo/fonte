is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,15,* limitations under the License.
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,17,package org.apache.commons.math.analysis.polynomials;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,19,import java.util.ArrayList;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,21,import org.apache.commons.math.fraction.Fraction;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,24,* A collection of static methods that operate on or return polynomials.
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,26,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,27,* @since 2.0
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,29,public class PolynomialsUtils {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,31,/** Coefficients for Chebyshev polynomials. */
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,32,private static final ArrayList<Fraction> CHEBYSHEV_COEFFICIENTS;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,34,/** Coefficients for Hermite polynomials. */
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,35,private static final ArrayList<Fraction> HERMITE_COEFFICIENTS;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,37,/** Coefficients for Laguerre polynomials. */
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,38,private static final ArrayList<Fraction> LAGUERRE_COEFFICIENTS;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,40,/** Coefficients for Legendre polynomials. */
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,41,private static final ArrayList<Fraction> LEGENDRE_COEFFICIENTS;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,43,static {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,45,// initialize recurrence for Chebyshev polynomials
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,46,"// T0(X) = 1, T1(X) = 0 + 1 * X"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,47,CHEBYSHEV_COEFFICIENTS = new ArrayList<Fraction>();
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,48,CHEBYSHEV_COEFFICIENTS.add(Fraction.ONE);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,49,CHEBYSHEV_COEFFICIENTS.add(Fraction.ZERO);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,50,CHEBYSHEV_COEFFICIENTS.add(Fraction.ONE);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,52,// initialize recurrence for Hermite polynomials
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,53,"// H0(X) = 1, H1(X) = 0 + 2 * X"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,54,HERMITE_COEFFICIENTS = new ArrayList<Fraction>();
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,55,HERMITE_COEFFICIENTS.add(Fraction.ONE);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,56,HERMITE_COEFFICIENTS.add(Fraction.ZERO);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,57,HERMITE_COEFFICIENTS.add(Fraction.TWO);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,59,// initialize recurrence for Laguerre polynomials
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,60,"// L0(X) = 1, L1(X) = 1 - 1 * X"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,61,LAGUERRE_COEFFICIENTS = new ArrayList<Fraction>();
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,62,LAGUERRE_COEFFICIENTS.add(Fraction.ONE);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,63,LAGUERRE_COEFFICIENTS.add(Fraction.ONE);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,64,LAGUERRE_COEFFICIENTS.add(Fraction.MINUS_ONE);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,66,// initialize recurrence for Legendre polynomials
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,67,"// P0(X) = 1, P1(X) = 0 + 1 * X"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,68,LEGENDRE_COEFFICIENTS = new ArrayList<Fraction>();
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,69,LEGENDRE_COEFFICIENTS.add(Fraction.ONE);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,70,LEGENDRE_COEFFICIENTS.add(Fraction.ZERO);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,71,LEGENDRE_COEFFICIENTS.add(Fraction.ONE);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,76,"* Private constructor, to prevent instantiation."
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,78,private PolynomialsUtils() {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,82,* Create a Chebyshev polynomial of the first kind.
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,83,"* <p><a href=""http://mathworld.wolfram.com/ChebyshevPolynomialoftheFirstKind.html"">Chebyshev"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,84,* polynomials of the first kind</a> are orthogonal polynomials.
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,85,* They can be defined by the following recurrence relations:
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,86,* <pre>
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,87,*  T<sub>0</sub>(X)   = 1
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,88,*  T<sub>1</sub>(X)   = X
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,89,*  T<sub>k+1</sub>(X) = 2X T<sub>k</sub>(X) - T<sub>k-1</sub>(X)
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,90,* </pre></p>
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,91,* @param degree degree of the polynomial
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,92,* @return Chebyshev polynomial of specified degree
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,94,public static PolynomialFunction createChebyshevPolynomial(final int degree) {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,95,"return buildPolynomial(degree, CHEBYSHEV_COEFFICIENTS,"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,96,new RecurrenceCoefficientsGenerator() {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,97,"private final Fraction[] coeffs = { Fraction.ZERO, Fraction.TWO, Fraction.ONE};"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,98,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,99,public Fraction[] generate(int k) {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,100,return coeffs;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,106,* Create a Hermite polynomial.
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,107,"* <p><a href=""http://mathworld.wolfram.com/HermitePolynomial.html"">Hermite"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,108,* polynomials</a> are orthogonal polynomials.
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,109,* They can be defined by the following recurrence relations:
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,110,* <pre>
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,111,*  H<sub>0</sub>(X)   = 1
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,112,*  H<sub>1</sub>(X)   = 2X
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,113,*  H<sub>k+1</sub>(X) = 2X H<sub>k</sub>(X) - 2k H<sub>k-1</sub>(X)
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,114,* </pre></p>
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,116,* @param degree degree of the polynomial
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,117,* @return Hermite polynomial of specified degree
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,119,public static PolynomialFunction createHermitePolynomial(final int degree) {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,120,"return buildPolynomial(degree, HERMITE_COEFFICIENTS,"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,121,new RecurrenceCoefficientsGenerator() {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,122,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,123,public Fraction[] generate(int k) {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,124,return new Fraction[] {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,125,"Fraction.ZERO,"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,126,"Fraction.TWO,"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,127,"new Fraction(2 * k, 1)};"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,133,* Create a Laguerre polynomial.
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,134,"* <p><a href=""http://mathworld.wolfram.com/LaguerrePolynomial.html"">Laguerre"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,135,* polynomials</a> are orthogonal polynomials.
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,136,* They can be defined by the following recurrence relations:
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,137,* <pre>
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,138,*        L<sub>0</sub>(X)   = 1
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,139,*        L<sub>1</sub>(X)   = 1 - X
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,140,*  (k+1) L<sub>k+1</sub>(X) = (2k + 1 - X) L<sub>k</sub>(X) - k L<sub>k-1</sub>(X)
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,141,* </pre></p>
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,142,* @param degree degree of the polynomial
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,143,* @return Laguerre polynomial of specified degree
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,145,public static PolynomialFunction createLaguerrePolynomial(final int degree) {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,146,"return buildPolynomial(degree, LAGUERRE_COEFFICIENTS,"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,147,new RecurrenceCoefficientsGenerator() {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,148,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,149,public Fraction[] generate(int k) {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,150,final int kP1 = k + 1;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,151,return new Fraction[] {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,152,"new Fraction(2 * k + 1, kP1),"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,153,"new Fraction(-1, kP1),"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,154,"new Fraction(k, kP1)};"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,160,* Create a Legendre polynomial.
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,161,"* <p><a href=""http://mathworld.wolfram.com/LegendrePolynomial.html"">Legendre"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,162,* polynomials</a> are orthogonal polynomials.
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,163,* They can be defined by the following recurrence relations:
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,164,* <pre>
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,165,*        P<sub>0</sub>(X)   = 1
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,166,*        P<sub>1</sub>(X)   = X
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,167,*  (k+1) P<sub>k+1</sub>(X) = (2k+1) X P<sub>k</sub>(X) - k P<sub>k-1</sub>(X)
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,168,* </pre></p>
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,169,* @param degree degree of the polynomial
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,170,* @return Legendre polynomial of specified degree
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,172,public static PolynomialFunction createLegendrePolynomial(final int degree) {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,173,"return buildPolynomial(degree, LEGENDRE_COEFFICIENTS,"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,174,new RecurrenceCoefficientsGenerator() {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,175,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,176,public Fraction[] generate(int k) {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,177,final int kP1 = k + 1;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,178,return new Fraction[] {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,179,"Fraction.ZERO,"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,180,"new Fraction(k + kP1, kP1),"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,181,"new Fraction(k, kP1)};"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,186,/** Get the coefficients array for a given degree.
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,187,* @param degree degree of the polynomial
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,188,* @param coefficients list where the computed coefficients are stored
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,189,* @param generator recurrence coefficients generator
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,190,* @return coefficients array
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,192,"private static PolynomialFunction buildPolynomial(final int degree,"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,193,"final ArrayList<Fraction> coefficients,"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,194,final RecurrenceCoefficientsGenerator generator) {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,196,final int maxDegree = (int) Math.floor(Math.sqrt(2 * coefficients.size())) - 1;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,197,synchronized (PolynomialsUtils.class) {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,198,if (degree > maxDegree) {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,199,"computeUpToDegree(degree, maxDegree, generator, coefficients);"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,203,// coefficient  for polynomial 0 is  l [0]
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,204,// coefficients for polynomial 1 are l [1] ... l [2] (degrees 0 ... 1)
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,205,// coefficients for polynomial 2 are l [3] ... l [5] (degrees 0 ... 2)
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,206,// coefficients for polynomial 3 are l [6] ... l [9] (degrees 0 ... 3)
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,207,// coefficients for polynomial 4 are l[10] ... l[14] (degrees 0 ... 4)
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,208,// coefficients for polynomial 5 are l[15] ... l[20] (degrees 0 ... 5)
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,209,// coefficients for polynomial 6 are l[21] ... l[27] (degrees 0 ... 6)
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,211,final int start = degree * (degree + 1) / 2;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,213,final double[] a = new double[degree + 1];
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,214,for (int i = 0; i <= degree; ++i) {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,215,a[i] = coefficients.get(start + i).doubleValue();
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,218,// build the polynomial
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,219,return new PolynomialFunction(a);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,223,/** Compute polynomial coefficients up to a given degree.
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,224,* @param degree maximal degree
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,225,* @param maxDegree current maximal degree
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,226,* @param generator recurrence coefficients generator
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,227,* @param coefficients list where the computed coefficients should be appended
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,229,"private static void computeUpToDegree(final int degree, final int maxDegree,"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,230,"final RecurrenceCoefficientsGenerator generator,"
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,231,final ArrayList<Fraction> coefficients) {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,233,int startK = (maxDegree - 1) * maxDegree / 2;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,234,for (int k = maxDegree; k < degree; ++k) {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,236,// start indices of two previous polynomials Pk(X) and Pk-1(X)
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,237,int startKm1 = startK;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,238,startK += k;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,240,// Pk+1(X) = (a[0] + a[1] X) Pk(X) - a[2] Pk-1(X)
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,241,Fraction[] ai = generator.generate(k);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,243,Fraction ck     = coefficients.get(startK);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,244,Fraction ckm1   = coefficients.get(startKm1);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,246,// degree 0 coefficient
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,247,coefficients.add(ck.multiply(ai[0]).subtract(ckm1.multiply(ai[2])));
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,249,// degree 1 to degree k-1 coefficients
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,250,for (int i = 1; i < k; ++i) {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,251,final Fraction ckPrev = ck;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,252,ck     = coefficients.get(startK + i);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,253,ckm1   = coefficients.get(startKm1 + i);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,254,coefficients.add(ck.multiply(ai[0]).add(ckPrev.multiply(ai[1])).subtract(ckm1.multiply(ai[2])));
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,257,// degree k coefficient
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,258,final Fraction ckPrev = ck;
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,259,ck = coefficients.get(startK + k);
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,260,coefficients.add(ck.multiply(ai[0]).add(ckPrev.multiply(ai[1])));
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,262,// degree k+1 coefficient
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,263,coefficients.add(ck.multiply(ai[1]));
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,269,/** Interface for recurrence coefficients generation. */
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,270,private static interface RecurrenceCoefficientsGenerator {
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,272,* Generate recurrence coefficients.
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,273,* @param k highest degree of the polynomials used in the recurrence
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,274,* @return an array of three coefficients such that
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,275,* P<sub>k+1</sub>(X) = (a[0] + a[1] X) P<sub>k</sub>(X) - a[2] P<sub>k-1</sub>(X)
True,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,src/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java,277,Fraction[] generate(int k);
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,32,"/** A fraction representing ""2 / 1"". */"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,33,"public static final Fraction TWO = new Fraction(2, 1);"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,41,"/** A fraction representing ""-1 / 1"". */"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,42,"public static final Fraction MINUS_ONE = new Fraction(-1, 1);"
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,39,rivate static final long serialVersionUID = -5731055832688548463L;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,45,private static final long serialVersionUID = 3071409609509774764L;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,148,ong p0 = 1;
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,154,long p0 = 1;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,200, @throws ArithmeticException if the denomiator is <code>zero</code>
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,206,* @throws ArithmeticException if the denominator is <code>zero</code>
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,1,/ Licensed to the Apache Software Foundation (ASF) under one
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,2,/ or more contributor license agreements.  See the NOTICE file
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,3,/ distributed with this work for additional information
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,4,/ regarding copyright ownership.  The ASF licenses this file
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,5,"/ to you under the Apache License, Version 2.0 (the"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,6,"/ ""License""); you may not use this file except in compliance"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,7,/ with the License.  You may obtain a copy of the License at
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,9,/   http://www.apache.org/licenses/LICENSE-2.0
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,11,"/ Unless required by applicable law or agreed to in writing,"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,12,/ software distributed under the License is distributed on an
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,13,"/ ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,14,"/ KIND, either express or implied.  See the License for the"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,15,/ specific language governing permissions and limitations
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,16,/ under the License.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,18,ackage org.spaceroots.mantissa.algebra;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,21, This class implements Chebyshev polynomials.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,23, <p>Chebyshev polynomials can be defined by the following recurrence
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,24, relations:
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,25, <pre>
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,26,  T<sub>0</sub>(X)   = 1
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,27,  T<sub>1</sub>(X)   = X
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,28,  T<sub>k+1</sub>(X) = 2X T<sub>k</sub>(X) - T<sub>k-1</sub>(X)
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,29, </pre></p>
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,31, @version $Id$
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,32, @author L. Maisonobe
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,36,ublic class Chebyshev
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,37,xtends OrthogonalPolynomial {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,39,** Generator for the Chebyshev polynomials. */
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,40,rivate static final CoefficientsGenerator generator =
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,41,"ew CoefficientsGenerator(new RationalNumber(1l),"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,42,"ew RationalNumber(0l),"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,43,ew RationalNumber(1l)) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,44,ublic void setRecurrenceCoefficients(int k) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,45,/ the recurrence relation is
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,46,/ Tk+1(X) = 2X Tk(X) - Tk-1(X)
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,47,"etRecurrenceCoefficients(new RationalNumber(0l),"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,48,"ew RationalNumber(2l),"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,49,ew RationalNumber(1l));
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,53,** Simple constructor.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,54, Build a degree 0 Chebyshev polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,56,ublic Chebyshev() {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,57,"uper(0, generator);"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,60,** Simple constructor.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,61, Build a degree d Chebyshev polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,62, @param degree degree of the polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,64,ublic Chebyshev(int degree) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,65,"uper(degree, generator);"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Chebyshev.java,68,rivate static final long serialVersionUID = -893367988717182601L;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,1,/ Licensed to the Apache Software Foundation (ASF) under one
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,2,/ or more contributor license agreements.  See the NOTICE file
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,3,/ distributed with this work for additional information
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,4,/ regarding copyright ownership.  The ASF licenses this file
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,5,"/ to you under the Apache License, Version 2.0 (the"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,6,"/ ""License""); you may not use this file except in compliance"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,7,/ with the License.  You may obtain a copy of the License at
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,9,/   http://www.apache.org/licenses/LICENSE-2.0
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,11,"/ Unless required by applicable law or agreed to in writing,"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,12,/ software distributed under the License is distributed on an
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,13,"/ ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,14,"/ KIND, either express or implied.  See the License for the"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,15,/ specific language governing permissions and limitations
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,16,/ under the License.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,17,ackage org.spaceroots.mantissa.algebra;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,19,mport java.util.ArrayList;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,21,ublic abstract class CoefficientsGenerator {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,23,** Build a generator with coefficients for two polynomials.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,24, <p>The first polynomial must be a degree 0 polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,25," P<sub>0</sub>(X)=a<sub>0,0</sub> and the second polynomial"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,26," must be a degree 1 polynomial P<sub>1</sub>(X)=a<sub>0,1</sub>"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,27," +a<sub>1,1</sub>X</p>"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,28, @param a00 constant term for the degree 0 polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,29, @param a01 constant term for the degree 1 polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,30, @param a11 X term for the degree 1 polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,32,"rotected CoefficientsGenerator(RationalNumber a00,"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,33,"ationalNumber a01, RationalNumber a11) {"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,34, = new ArrayList();
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,35,.add(a00);
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,36,.add(a01);
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,37,.add(a11);
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,38,axDegree = 1;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,41,** Set the recurrence coefficients.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,42," @param b2k b<sub>2,k</sub> coefficient (b<sub>2,k</sub> = a<sub>2,k</sub> / a<sub>1,k</sub>)"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,43," @param b3k b<sub>3,k</sub> coefficient (b<sub>3,k</sub> = a<sub>3,k</sub> / a<sub>1,k</sub>)"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,44," @param b4k b<sub>4,k</sub> coefficient (b<sub>4,k</sub> = a<sub>4,k</sub> / a<sub>1,k</sub>)"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,46,"rotected void setRecurrenceCoefficients(RationalNumber b2k,"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,47,"ationalNumber b3k,"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,48,ationalNumber b4k) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,49,his.b2k = b2k;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,50,his.b3k = b3k;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,51,his.b4k = b4k;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,54,** Set the recurrence coefficients.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,55, The recurrence relation is
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,56,"  <pre>a<sub>1,k</sub> O<sub>k+1</sub>(X) =(a<sub>2,k</sub> + a<sub>3,k</sub> X) O<sub>k</sub>(X) - a<sub>4,k</sub> O<sub>k-1</sub>(X)</pre>"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,57," the method must call {@link #setRecurrenceCoefficients(RationalNumber,"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,58," RationalNumber, RationalNumber)} to provide the coefficients"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,59, @param k index of the current step
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,61,rotected abstract void setRecurrenceCoefficients(int k);
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,63,** Compute all the polynomial coefficients up to a given degree.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,64, @param degree maximal degree
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,66,rivate void computeUpToDegree(int degree) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,68,nt startK = (maxDegree - 1) * maxDegree / 2;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,69,or (int k = maxDegree; k < degree; ++k) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,71,/ start indices of two previous polynomials Ok(X) and Ok-1(X)
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,72,nt startKm1 = startK;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,73,tartK += k;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,75,/ a1k Ok+1(X) = (a2k + a3k X) Ok(X) - a4k Ok-1(X)
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,76,/ we use bik = aik/a1k
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,77,etRecurrenceCoefficients(k);
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,79,ationalNumber ckPrev = null;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,80,ationalNumber ck     = (RationalNumber) l.get(startK);
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,81,ationalNumber ckm1   = (RationalNumber) l.get(startKm1);
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,83,/ degree 0 coefficient
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,84,.add(ck.multiply(b2k).subtract(ckm1.multiply(b4k)));
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,86,/ degree 1 to degree k-1 coefficients
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,87,or (int i = 1; i < k; ++i) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,88,kPrev = ck;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,89,k     = (RationalNumber) l.get(startK + i);
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,90,km1   = (RationalNumber) l.get(startKm1 + i);
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,91,.add(ck.multiply(b2k).add(ckPrev.multiply(b3k)).subtract(ckm1.multiply(b4k)));
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,94,/ degree k coefficient
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,95,kPrev = ck;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,96,k     = (RationalNumber) l.get(startK + k);
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,97,.add(ck.multiply(b2k).add(ckPrev.multiply(b3k)));
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,99,/ degree k+1 coefficient
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,100,.add(ck.multiply(b3k));
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,104,axDegree = degree;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,108,** Get the coefficients array for a given degree.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,109, @param degree degree of the polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,110, @return coefficients array
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,112,ublic RationalNumber[] getCoefficients(int degree) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,114,ynchronized (this) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,115,f (degree > maxDegree) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,116,omputeUpToDegree(degree);
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,120,/ coefficient  for polynomial 0 is  l [0]
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,121,/ coefficients for polynomial 1 are l [1] ... l [2] (degrees 0 ... 1)
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,122,/ coefficients for polynomial 2 are l [3] ... l [5] (degrees 0 ... 2)
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,123,/ coefficients for polynomial 3 are l [6] ... l [9] (degrees 0 ... 3)
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,124,/ coefficients for polynomial 4 are l[10] ... l[14] (degrees 0 ... 4)
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,125,/ coefficients for polynomial 5 are l[15] ... l[20] (degrees 0 ... 5)
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,126,/ coefficients for polynomial 6 are l[21] ... l[27] (degrees 0 ... 6)
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,128,nt start = degree * (degree + 1) / 2;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,130,ationalNumber[] a = new RationalNumber[degree + 1];
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,131,or (int i = 0; i <= degree; ++i) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,132,[i] = (RationalNumber) l.get(start + i);
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,135,eturn a;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,139,** List holding the coefficients of the polynomials computed so far. */
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,140,rivate ArrayList l;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,142,** Maximal degree of the polynomials computed so far. */
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,143,rivate int maxDegree;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,145,"** b<sub>2,k</sub> coefficient to initialize"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,146," (b<sub>2,k</sub> = a<sub>2,k</sub> / a<sub>1,k</sub>). */"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,147,rivate RationalNumber b2k;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,149,"** b<sub>3,k</sub> coefficient to initialize"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,150," (b<sub>3,k</sub> = a<sub>3,k</sub> / a<sub>1,k</sub>). */"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,151,rivate RationalNumber b3k;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,153,"** b<sub>4,k</sub> coefficient to initialize"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,154," (b<sub>4,k</sub> = a<sub>4,k</sub> / a<sub>1,k</sub>). */"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,src/mantissa/src/org/spaceroots/mantissa/algebra/CoefficientsGenerator.java,155,rivate RationalNumber b4k;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,1,/ Licensed to the Apache Software Foundation (ASF) under one
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,2,/ or more contributor license agreements.  See the NOTICE file
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,3,/ distributed with this work for additional information
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,4,/ regarding copyright ownership.  The ASF licenses this file
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,5,"/ to you under the Apache License, Version 2.0 (the"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,6,"/ ""License""); you may not use this file except in compliance"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,7,/ with the License.  You may obtain a copy of the License at
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,9,/   http://www.apache.org/licenses/LICENSE-2.0
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,11,"/ Unless required by applicable law or agreed to in writing,"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,12,/ software distributed under the License is distributed on an
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,13,"/ ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,14,"/ KIND, either express or implied.  See the License for the"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,15,/ specific language governing permissions and limitations
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,16,/ under the License.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,18,ackage org.spaceroots.mantissa.algebra;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,21, This class implements Hermite polynomials.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,23, <p>Hermite polynomials can be defined by the following recurrence
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,24, relations:
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,25, <pre>
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,26,  H<sub>0</sub>(X)   = 1
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,27,  H<sub>1</sub>(X)   = 2X
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,28,  H<sub>k+1</sub>(X) = 2X H<sub>k</sub>(X) - 2k H<sub>k-1</sub>(X)
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,29, </pre></p>
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,31, @version $Id$
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,32, @author L. Maisonobe
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,35,ublic class Hermite
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,36,xtends OrthogonalPolynomial {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,38,** Generator for the Hermite polynomials. */
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,39,rivate static final CoefficientsGenerator generator =
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,40,"ew CoefficientsGenerator(new RationalNumber(1l),"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,41,"ew RationalNumber(0l),"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,42,ew RationalNumber(2l)) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,43,ublic void setRecurrenceCoefficients(int k) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,44,/ the recurrence relation is
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,45,/ Hk+1(X) = 2X Hk(X) - 2k Hk-1(X)
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,46,"etRecurrenceCoefficients(new RationalNumber(0l),"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,47,"ew RationalNumber(2l),"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,48,ew RationalNumber(k * 2l));
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,52,** Simple constructor.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,53, Build a degree 0 Hermite polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,55,ublic Hermite() {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,56,"uper(0, generator);"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,59,** Simple constructor.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,60, Build a degree d Hermite polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,61, @param degree degree of the polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,63,ublic Hermite(int degree) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,64,"uper(degree, generator);"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Hermite.java,67,rivate static final long serialVersionUID = 7910082423686662133L;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,1,/ Licensed to the Apache Software Foundation (ASF) under one
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,2,/ or more contributor license agreements.  See the NOTICE file
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,3,/ distributed with this work for additional information
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,4,/ regarding copyright ownership.  The ASF licenses this file
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,5,"/ to you under the Apache License, Version 2.0 (the"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,6,"/ ""License""); you may not use this file except in compliance"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,7,/ with the License.  You may obtain a copy of the License at
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,9,/   http://www.apache.org/licenses/LICENSE-2.0
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,11,"/ Unless required by applicable law or agreed to in writing,"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,12,/ software distributed under the License is distributed on an
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,13,"/ ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,14,"/ KIND, either express or implied.  See the License for the"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,15,/ specific language governing permissions and limitations
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,16,/ under the License.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,18,ackage org.spaceroots.mantissa.algebra;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,21, This class implements Laguerre polynomials.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,23, <p>Laguerre polynomials can be defined by the following recurrence
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,24, relations:
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,25, <pre>
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,26,        L<sub>0</sub>(X)   = 1
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,27,        L<sub>1</sub>(X)   = 1 - X
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,28,  (k+1) L<sub>k+1</sub>(X) = (2k + 1 - X) L<sub>k</sub>(X) - k L<sub>k-1</sub>(X)
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,29, </pre></p>
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,31, @version $Id$
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,32, @author L. Maisonobe
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,35,ublic class Laguerre
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,36,xtends OrthogonalPolynomial {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,38,** Generator for the Laguerre polynomials. */
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,39,rivate static final CoefficientsGenerator generator =
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,40,"ew CoefficientsGenerator(new RationalNumber(1l),"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,41,"ew RationalNumber(1l),"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,42,ew RationalNumber(-1l)) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,43,ublic void setRecurrenceCoefficients(int k) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,44,/ the recurrence relation is
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,45,/ (k+1) Lk+1(X) = (2k + 1 - X) Lk(X) - k Lk-1(X)
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,46,ong kP1 = k + 1;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,47,"etRecurrenceCoefficients(new RationalNumber(2 * k + 1, kP1),"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,48,"ew RationalNumber(-1l, kP1),"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,49,"ew RationalNumber(k, kP1));"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,53,** Simple constructor.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,54, Build a degree 0 Laguerre polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,56,ublic Laguerre() {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,57,"uper(0, generator);"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,60,** Simple constructor.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,61, Build a degree d Laguerre polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,62, @param degree degree of the polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,64,ublic Laguerre(int degree) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,65,"uper(degree, generator);"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Laguerre.java,68,rivate static final long serialVersionUID = 3213856667479179710L;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,1,/ Licensed to the Apache Software Foundation (ASF) under one
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,2,/ or more contributor license agreements.  See the NOTICE file
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,3,/ distributed with this work for additional information
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,4,/ regarding copyright ownership.  The ASF licenses this file
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,5,"/ to you under the Apache License, Version 2.0 (the"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,6,"/ ""License""); you may not use this file except in compliance"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,7,/ with the License.  You may obtain a copy of the License at
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,9,/   http://www.apache.org/licenses/LICENSE-2.0
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,11,"/ Unless required by applicable law or agreed to in writing,"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,12,/ software distributed under the License is distributed on an
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,13,"/ ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,14,"/ KIND, either express or implied.  See the License for the"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,15,/ specific language governing permissions and limitations
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,16,/ under the License.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,18,ackage org.spaceroots.mantissa.algebra;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,21, This class implements Legendre polynomials.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,23, <p>Legendre polynomials can be defined by the following recurrence
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,24, relations:
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,25, <pre>
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,26,        P<sub>0</sub>(X)   = 1
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,27,        P<sub>1</sub>(X)   = X
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,28,  (k+1) P<sub>k+1</sub>(X) = (2k+1) X P<sub>k</sub>(X) - k P<sub>k-1</sub>(X)
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,29, </pre></p>
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,31, @version $Id$
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,32, @author L. Maisonobe
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,36,ublic class Legendre
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,37,xtends OrthogonalPolynomial {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,39,** Generator for the Legendre polynomials. */
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,40,rivate static final CoefficientsGenerator generator =
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,41,"ew CoefficientsGenerator(new RationalNumber(1l),"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,42,"ew RationalNumber(0l),"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,43,ew RationalNumber(1l)) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,44,ublic void setRecurrenceCoefficients(int k) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,45,/ the recurrence relation is
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,46,/ (k+1) Pk+1(X) = (2k+1) X Pk(X) - k Pk-1(X)
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,47,ong kP1 = k + 1;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,48,"etRecurrenceCoefficients(new RationalNumber(0l),"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,49,"ew RationalNumber(2 * k + 1, kP1),"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,50,"ew RationalNumber(k, kP1));"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,54,** Simple constructor.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,55, Build a degree 0 Legendre polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,57,ublic Legendre() {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,58,"uper(0, generator);"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,61,** Simple constructor.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,62, Build a degree d Legendre polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,63, @param degree degree of the polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,65,ublic Legendre(int degree) {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,66,"uper(degree, generator);"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,src/mantissa/src/org/spaceroots/mantissa/algebra/Legendre.java,69,rivate static final long serialVersionUID = 4014485393845978429L;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,1,/ Licensed to the Apache Software Foundation (ASF) under one
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,2,/ or more contributor license agreements.  See the NOTICE file
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,3,/ distributed with this work for additional information
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,4,/ regarding copyright ownership.  The ASF licenses this file
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,5,"/ to you under the Apache License, Version 2.0 (the"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,6,"/ ""License""); you may not use this file except in compliance"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,7,/ with the License.  You may obtain a copy of the License at
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,9,/   http://www.apache.org/licenses/LICENSE-2.0
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,11,"/ Unless required by applicable law or agreed to in writing,"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,12,/ software distributed under the License is distributed on an
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,13,"/ ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,14,"/ KIND, either express or implied.  See the License for the"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,15,/ specific language governing permissions and limitations
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,16,/ under the License.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,18,ackage org.spaceroots.mantissa.algebra;
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,21, This class is the base class for orthogonal polynomials.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,23, <p>Orthogonal polynomials can be defined by recurrence relations like:
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,24, <pre>
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,25,      O<sub>0</sub>(X)   = some 0 degree polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,26,      O<sub>1</sub>(X)   = some first degree polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,27,"  a<sub>1,k</sub> O<sub>k+1</sub>(X) = (a<sub>2,k</sub> + a<sub>3,k</sub> X) O<sub>k</sub>(X) - a<sub>4,k</sub> O<sub>k-1</sub>(X)"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,28, </pre>
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,29," where a<sub>1,k</sub>, a<sub>2,k</sub>, a<sub>3,k</sub> and"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,30," a<sub>4,k</sub> are simple expressions which either are"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,31, constants or depend on k.</p>
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,33, @version $Id$
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,34, @author L. Maisonobe
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,37,ublic abstract class OrthogonalPolynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,38,xtends Polynomial.Rational {
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,40,** Simple constructor.
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,41, Build a degree d orthogonal polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,42, @param degree degree of the polynomial
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,43, @param generator coefficients generator for the current type of polynomials
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,45,"rotected OrthogonalPolynomial(int degree, CoefficientsGenerator generator) {"
False,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,src/mantissa/src/org/spaceroots/mantissa/algebra/OrthogonalPolynomial.java,46,       = generator.getCoefficients(degree);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/AllTests.java,31,uite.addTest(ChebyshevTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/AllTests.java,32,uite.addTest(HermiteTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/AllTests.java,33,uite.addTest(LegendreTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/AllTests.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/AllTests.java,34,uite.addTest(LaguerreTest.suite());
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,1,/ Licensed to the Apache Software Foundation (ASF) under one
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,2,/ or more contributor license agreements.  See the NOTICE file
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,3,/ distributed with this work for additional information
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,4,/ regarding copyright ownership.  The ASF licenses this file
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,5,"/ to you under the Apache License, Version 2.0 (the"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,6,"/ ""License""); you may not use this file except in compliance"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,7,/ with the License.  You may obtain a copy of the License at
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,9,/   http://www.apache.org/licenses/LICENSE-2.0
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,11,"/ Unless required by applicable law or agreed to in writing,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,12,/ software distributed under the License is distributed on an
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,13,"/ ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,14,"/ KIND, either express or implied.  See the License for the"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,15,/ specific language governing permissions and limitations
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,16,/ under the License.
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,18,ackage org.spaceroots.mantissa.algebra;
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,20,mport junit.framework.*;
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,22,ublic class ChebyshevTest
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,23,xtends TestCase {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,25,ublic ChebyshevTest(String name) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,26,uper(name);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,29,ublic void testOne() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,30,ssertTrue(new Chebyshev().isOne());
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,33,ublic void testFirstPolynomials() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,35,"heckPolynomial(new Chebyshev(3), ""-3 x + 4 x^3"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,36,"heckPolynomial(new Chebyshev(2), ""-1 + 2 x^2"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,37,"heckPolynomial(new Chebyshev(1), ""x"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,38,"heckPolynomial(new Chebyshev(0), ""1"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,40,"heckPolynomial(new Chebyshev(7), ""-7 x + 56 x^3 - 112 x^5 + 64 x^7"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,41,"heckPolynomial(new Chebyshev(6), ""-1 + 18 x^2 - 48 x^4 + 32 x^6"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,42,"heckPolynomial(new Chebyshev(5), ""5 x - 20 x^3 + 16 x^5"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,43,"heckPolynomial(new Chebyshev(4), ""1 - 8 x^2 + 8 x^4"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,47,ublic void testBounds() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,48,or (int k = 0; k < 12; ++k) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,49,rthogonalPolynomial Tk = new Chebyshev(k);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,50,or (double x = -1.0; x <= 1.0; x += 0.02) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,51,ssertTrue(Math.abs(Tk.valueAt(x)) < (1.0 + 1.0e-12));
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,56,ublic void testDifferentials() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,57,or (int k = 0; k < 12; ++k) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,59,olynomial.Rational Tk0 = new Chebyshev(k);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,60,olynomial.Rational Tk1 = (Polynomial.Rational) Tk0.getDerivative();
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,61,olynomial.Rational Tk2 = (Polynomial.Rational) Tk1.getDerivative();
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,63,olynomial.Rational g0 = new Polynomial.Rational(k * k);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,64,"olynomial.Rational g1 = new Polynomial.Rational(-1l, 0l);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,65,"olynomial.Rational g2 = new Polynomial.Rational(-1l, 0l, 1l);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,67,olynomial.Rational Tk0g0 = Tk0.multiply(g0);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,68,olynomial.Rational Tk1g1 = Tk1.multiply(g1);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,69,olynomial.Rational Tk2g2 = Tk2.multiply(g2);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,71,olynomial.Rational d = Tk0g0.add(Tk1g1.add(Tk2g2));
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,72,ssertTrue(d.isZero());
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,77,"ublic void checkPolynomial(Polynomial.Rational p, String reference) {"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,78,ssertTrue(p.toString().equals(reference));
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,81,ublic static Test suite() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/ChebyshevTest.java,82,eturn new TestSuite(ChebyshevTest.class);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,1,/ Licensed to the Apache Software Foundation (ASF) under one
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,2,/ or more contributor license agreements.  See the NOTICE file
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,3,/ distributed with this work for additional information
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,4,/ regarding copyright ownership.  The ASF licenses this file
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,5,"/ to you under the Apache License, Version 2.0 (the"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,6,"/ ""License""); you may not use this file except in compliance"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,7,/ with the License.  You may obtain a copy of the License at
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,9,/   http://www.apache.org/licenses/LICENSE-2.0
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,11,"/ Unless required by applicable law or agreed to in writing,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,12,/ software distributed under the License is distributed on an
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,13,"/ ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,14,"/ KIND, either express or implied.  See the License for the"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,15,/ specific language governing permissions and limitations
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,16,/ under the License.
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,18,ackage org.spaceroots.mantissa.algebra;
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,20,mport junit.framework.*;
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,22,ublic class HermiteTest
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,23,xtends TestCase {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,25,ublic HermiteTest(String name) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,26,uper(name);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,29,ublic void testOne() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,30,ssertTrue(new Hermite().isOne());
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,33,ublic void testFirstPolynomials() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,35,"heckPolynomial(new Hermite(3), ""-12 x + 8 x^3"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,36,"heckPolynomial(new Hermite(2), ""-2 + 4 x^2"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,37,"heckPolynomial(new Hermite(1), ""2 x"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,38,"heckPolynomial(new Hermite(0), ""1"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,40,"heckPolynomial(new Hermite(7), ""-1680 x + 3360 x^3 - 1344 x^5 + 128 x^7"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,41,"heckPolynomial(new Hermite(6), ""-120 + 720 x^2 - 480 x^4 + 64 x^6"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,42,"heckPolynomial(new Hermite(5), ""120 x - 160 x^3 + 32 x^5"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,43,"heckPolynomial(new Hermite(4), ""12 - 48 x^2 + 16 x^4"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,47,ublic void testDifferentials() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,48,or (int k = 0; k < 12; ++k) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,50,olynomial.Rational Hk0 = new Hermite(k);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,51,olynomial.Rational Hk1 = (Polynomial.Rational) Hk0.getDerivative();
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,52,olynomial.Rational Hk2 = (Polynomial.Rational) Hk1.getDerivative();
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,54,olynomial.Rational g0 = new Polynomial.Rational(2l * k);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,55,"olynomial.Rational g1 = new Polynomial.Rational(-2l, 0l);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,56,olynomial.Rational g2 = new Polynomial.Rational(1l);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,58,olynomial.Rational Hk0g0 = Hk0.multiply(g0);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,59,olynomial.Rational Hk1g1 = Hk1.multiply(g1);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,60,olynomial.Rational Hk2g2 = Hk2.multiply(g2);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,62,olynomial.Rational d = Hk0g0.add(Hk1g1.add(Hk2g2));
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,63,ssertTrue(d.isZero());
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,68,"ublic void checkPolynomial(Polynomial.Rational p, String reference) {"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,69,ssertTrue(p.toString().equals(reference));
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,72,ublic static Test suite() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/HermiteTest.java,73,eturn new TestSuite(HermiteTest.class);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,1,/ Licensed to the Apache Software Foundation (ASF) under one
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,2,/ or more contributor license agreements.  See the NOTICE file
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,3,/ distributed with this work for additional information
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,4,/ regarding copyright ownership.  The ASF licenses this file
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,5,"/ to you under the Apache License, Version 2.0 (the"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,6,"/ ""License""); you may not use this file except in compliance"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,7,/ with the License.  You may obtain a copy of the License at
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,9,/   http://www.apache.org/licenses/LICENSE-2.0
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,11,"/ Unless required by applicable law or agreed to in writing,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,12,/ software distributed under the License is distributed on an
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,13,"/ ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,14,"/ KIND, either express or implied.  See the License for the"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,15,/ specific language governing permissions and limitations
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,16,/ under the License.
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,18,ackage org.spaceroots.mantissa.algebra;
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,20,mport junit.framework.*;
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,22,ublic class LaguerreTest
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,23,xtends TestCase {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,25,ublic LaguerreTest(String name) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,26,uper(name);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,29,ublic void testOne() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,30,ssertTrue(new Laguerre().isOne());
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,33,ublic void testFirstPolynomials() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,35,"heckLaguerre(new Laguerre(3), 6l, ""6 - 18 x + 9 x^2 - x^3"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,36,"heckLaguerre(new Laguerre(2), 2l, ""2 - 4 x + x^2"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,37,"heckLaguerre(new Laguerre(1), 1l, ""1 - x"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,38,"heckLaguerre(new Laguerre(0), 1l, ""1"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,40,"heckLaguerre(new Laguerre(7), 5040l,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,41,"5040 - 35280 x + 52920 x^2 - 29400 x^3"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,42," "" + 7350 x^4 - 882 x^5 + 49 x^6 - x^7"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,43,"heckLaguerre(new Laguerre(6),  720l,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,44,"720 - 4320 x + 5400 x^2 - 2400 x^3 + 450 x^4"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,45," "" - 36 x^5 + x^6"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,46,"heckLaguerre(new Laguerre(5),  120l,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,47,"120 - 600 x + 600 x^2 - 200 x^3 + 25 x^4 - x^5"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,48,"heckLaguerre(new Laguerre(4),   24l,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,49,"24 - 96 x + 72 x^2 - 16 x^3 + x^4"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,53,ublic void testDifferentials() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,54,or (int k = 0; k < 12; ++k) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,56,olynomial.Rational Lk0 = new Laguerre(k);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,57,olynomial.Rational Lk1 = (Polynomial.Rational) Lk0.getDerivative();
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,58,olynomial.Rational Lk2 = (Polynomial.Rational) Lk1.getDerivative();
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,60,olynomial.Rational g0 = new Polynomial.Rational(k);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,61,"olynomial.Rational g1 = new Polynomial.Rational(-1l, 1l);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,62,"olynomial.Rational g2 = new Polynomial.Rational(1l, 0l);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,64,olynomial.Rational Lk0g0 = Lk0.multiply(g0);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,65,olynomial.Rational Lk1g1 = Lk1.multiply(g1);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,66,olynomial.Rational Lk2g2 = Lk2.multiply(g2);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,68,olynomial.Rational d = Lk0g0.add(Lk1g1.add(Lk2g2));
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,69,ssertTrue(d.isZero());
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,74,"ublic void checkLaguerre(Laguerre p, long denominator, String reference) {"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,75,ssertTrue(p.multiply(denominator).toString().equals(reference));
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,78,ublic static Test suite() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LaguerreTest.java,79,eturn new TestSuite(LaguerreTest.class);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,1,/ Licensed to the Apache Software Foundation (ASF) under one
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,2,/ or more contributor license agreements.  See the NOTICE file
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,3,/ distributed with this work for additional information
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,4,/ regarding copyright ownership.  The ASF licenses this file
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,5,"/ to you under the Apache License, Version 2.0 (the"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,6,"/ ""License""); you may not use this file except in compliance"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,7,/ with the License.  You may obtain a copy of the License at
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,9,/   http://www.apache.org/licenses/LICENSE-2.0
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,11,"/ Unless required by applicable law or agreed to in writing,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,12,/ software distributed under the License is distributed on an
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,13,"/ ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,14,"/ KIND, either express or implied.  See the License for the"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,15,/ specific language governing permissions and limitations
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,16,/ under the License.
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,18,ackage org.spaceroots.mantissa.algebra;
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,20,mport junit.framework.*;
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,22,ublic class LegendreTest
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,23,xtends TestCase {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,25,ublic LegendreTest(String name) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,26,uper(name);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,29,ublic void testOne() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,30,ssertTrue(new Legendre().isOne());
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,33,ublic void testFirstPolynomials() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,35,"heckLegendre(new Legendre(3),  2l, ""-3 x + 5 x^3"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,36,"heckLegendre(new Legendre(2),  2l, ""-1 + 3 x^2"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,37,"heckLegendre(new Legendre(1),  1l, ""x"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,38,"heckLegendre(new Legendre(0),  1l, ""1"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,40,"heckLegendre(new Legendre(7), 16l, ""-35 x + 315 x^3 - 693 x^5 + 429 x^7"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,41,"heckLegendre(new Legendre(6), 16l, ""-5 + 105 x^2 - 315 x^4 + 231 x^6"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,42,"heckLegendre(new Legendre(5),  8l, ""15 x - 70 x^3 + 63 x^5"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,43,"heckLegendre(new Legendre(4),  8l, ""3 - 30 x^2 + 35 x^4"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,47,ublic void testDifferentials() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,48,or (int k = 0; k < 12; ++k) {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,50,olynomial.Rational Pk0 = new Legendre(k);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,51,olynomial.Rational Pk1 = (Polynomial.Rational) Pk0.getDerivative();
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,52,olynomial.Rational Pk2 = (Polynomial.Rational) Pk1.getDerivative();
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,54,olynomial.Rational g0 = new Polynomial.Rational(k * (k + 1));
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,55,"olynomial.Rational g1 = new Polynomial.Rational(-2l, 0l);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,56,"olynomial.Rational g2 = new Polynomial.Rational(-1l, 0l, 1l);"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,58,olynomial.Rational Pk0g0 = Pk0.multiply(g0);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,59,olynomial.Rational Pk1g1 = Pk1.multiply(g1);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,60,olynomial.Rational Pk2g2 = Pk2.multiply(g2);
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,62,olynomial.Rational d = Pk0g0.add(Pk1g1.add(Pk2g2));
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,63,ssertTrue(d.isZero());
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,68,ublic void testHighDegree() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,69,"heckLegendre(new Legendre(40), 274877906944l,"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,70,"34461632205"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,71," "" - 28258538408100 x^2"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,72," "" + 3847870979902950 x^4"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,73," "" - 207785032914759300 x^6"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,74," "" + 5929294332103310025 x^8"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,75," "" - 103301483474866556880 x^10"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,76," "" + 1197358103913226000200 x^12"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,77," "" - 9763073770369381232400 x^14"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,78," "" + 58171647881784229843050 x^16"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,79," "" - 260061484647976556945400 x^18"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,80," "" + 888315281771246239250340 x^20"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,81," "" - 2345767627188139419665400 x^22"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,82," "" + 4819022625419112503443050 x^24"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,83," "" - 7710436200670580005508880 x^26"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,84," "" + 9566652323054238154983240 x^28"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,85," "" - 9104813935044723209570256 x^30"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,86," "" + 6516550296251767619752905 x^32"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,87," "" - 3391858621221953912598660 x^34"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,88," "" + 1211378079007840683070950 x^36"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,89," "" - 265365894974690562152100 x^38"""
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,90," "" + 26876802183334044115405 x^40"");"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,93,"ublic void checkLegendre(Legendre p, long denominator, String reference) {"
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,94,ssertTrue(p.multiply(denominator).toString().equals(reference));
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,97,ublic static Test suite() {
False,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,src/mantissa/tests-src/org/spaceroots/mantissa/algebra/LegendreTest.java,98,eturn new TestSuite(LegendreTest.class);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,17,package org.apache.commons.math.analysis.polynomials;
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,19,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,22,* Tests the PolynomialsUtils class.
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,24,* @version $Revision$ $Date$
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,26,public class PolynomialsUtilsTest extends TestCase {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,28,public void testFirstChebyshevPolynomials() {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,30,"checkPolynomial(PolynomialsUtils.createChebyshevPolynomial(3), ""-3.0 x + 4.0 x^3"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,31,"checkPolynomial(PolynomialsUtils.createChebyshevPolynomial(2), ""-1.0 + 2.0 x^2"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,32,"checkPolynomial(PolynomialsUtils.createChebyshevPolynomial(1), ""x"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,33,"checkPolynomial(PolynomialsUtils.createChebyshevPolynomial(0), ""1.0"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,35,"checkPolynomial(PolynomialsUtils.createChebyshevPolynomial(7), ""-7.0 x + 56.0 x^3 - 112.0 x^5 + 64.0 x^7"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,36,"checkPolynomial(PolynomialsUtils.createChebyshevPolynomial(6), ""-1.0 + 18.0 x^2 - 48.0 x^4 + 32.0 x^6"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,37,"checkPolynomial(PolynomialsUtils.createChebyshevPolynomial(5), ""5.0 x - 20.0 x^3 + 16.0 x^5"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,38,"checkPolynomial(PolynomialsUtils.createChebyshevPolynomial(4), ""1.0 - 8.0 x^2 + 8.0 x^4"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,42,public void testChebyshevBounds() {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,43,for (int k = 0; k < 12; ++k) {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,44,PolynomialFunction Tk = PolynomialsUtils.createChebyshevPolynomial(k);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,45,for (double x = -1.0; x <= 1.0; x += 0.02) {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,46,"assertTrue(k + "" "" + Tk.value(x), Math.abs(Tk.value(x)) < (1.0 + 1.0e-12));"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,51,public void testChebyshevDifferentials() {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,52,for (int k = 0; k < 12; ++k) {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,54,PolynomialFunction Tk0 = PolynomialsUtils.createChebyshevPolynomial(k);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,55,PolynomialFunction Tk1 = Tk0.polynomialDerivative();
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,56,PolynomialFunction Tk2 = Tk1.polynomialDerivative();
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,58,PolynomialFunction g0 = new PolynomialFunction(new double[] { k * k });
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,59,"PolynomialFunction g1 = new PolynomialFunction(new double[] { 0, -1});"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,60,"PolynomialFunction g2 = new PolynomialFunction(new double[] { 1, 0, -1 });"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,62,PolynomialFunction Tk0g0 = Tk0.multiply(g0);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,63,PolynomialFunction Tk1g1 = Tk1.multiply(g1);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,64,PolynomialFunction Tk2g2 = Tk2.multiply(g2);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,66,checkNullPolynomial(Tk0g0.add(Tk1g1.add(Tk2g2)));
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,71,public void testFirstHermitePolynomials() {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,73,"checkPolynomial(PolynomialsUtils.createHermitePolynomial(3), ""-12.0 x + 8.0 x^3"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,74,"checkPolynomial(PolynomialsUtils.createHermitePolynomial(2), ""-2.0 + 4.0 x^2"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,75,"checkPolynomial(PolynomialsUtils.createHermitePolynomial(1), ""2.0 x"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,76,"checkPolynomial(PolynomialsUtils.createHermitePolynomial(0), ""1.0"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,78,"checkPolynomial(PolynomialsUtils.createHermitePolynomial(7), ""-1680.0 x + 3360.0 x^3 - 1344.0 x^5 + 128.0 x^7"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,79,"checkPolynomial(PolynomialsUtils.createHermitePolynomial(6), ""-120.0 + 720.0 x^2 - 480.0 x^4 + 64.0 x^6"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,80,"checkPolynomial(PolynomialsUtils.createHermitePolynomial(5), ""120.0 x - 160.0 x^3 + 32.0 x^5"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,81,"checkPolynomial(PolynomialsUtils.createHermitePolynomial(4), ""12.0 - 48.0 x^2 + 16.0 x^4"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,85,public void testHermiteDifferentials() {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,86,for (int k = 0; k < 12; ++k) {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,88,PolynomialFunction Hk0 = PolynomialsUtils.createHermitePolynomial(k);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,89,PolynomialFunction Hk1 = Hk0.polynomialDerivative();
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,90,PolynomialFunction Hk2 = Hk1.polynomialDerivative();
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,92,PolynomialFunction g0 = new PolynomialFunction(new double[] { 2 * k });
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,93,"PolynomialFunction g1 = new PolynomialFunction(new double[] { 0, -2 });"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,94,PolynomialFunction g2 = new PolynomialFunction(new double[] { 1 });
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,96,PolynomialFunction Hk0g0 = Hk0.multiply(g0);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,97,PolynomialFunction Hk1g1 = Hk1.multiply(g1);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,98,PolynomialFunction Hk2g2 = Hk2.multiply(g2);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,100,checkNullPolynomial(Hk0g0.add(Hk1g1.add(Hk2g2)));
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,105,public void testFirstLaguerrePolynomials() {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,107,"checkPolynomial(PolynomialsUtils.createLaguerrePolynomial(3), 6l, ""6.0 - 18.0 x + 9.0 x^2 - x^3"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,108,"checkPolynomial(PolynomialsUtils.createLaguerrePolynomial(2), 2l, ""2.0 - 4.0 x + x^2"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,109,"checkPolynomial(PolynomialsUtils.createLaguerrePolynomial(1), 1l, ""1.0 - x"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,110,"checkPolynomial(PolynomialsUtils.createLaguerrePolynomial(0), 1l, ""1.0"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,112,"checkPolynomial(PolynomialsUtils.createLaguerrePolynomial(7), 5040l,"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,113,"""5040.0 - 35280.0 x + 52920.0 x^2 - 29400.0 x^3"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,114,"+ "" + 7350.0 x^4 - 882.0 x^5 + 49.0 x^6 - x^7"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,115,"checkPolynomial(PolynomialsUtils.createLaguerrePolynomial(6),  720l,"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,116,"""720.0 - 4320.0 x + 5400.0 x^2 - 2400.0 x^3 + 450.0 x^4"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,117,"+ "" - 36.0 x^5 + x^6"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,118,"checkPolynomial(PolynomialsUtils.createLaguerrePolynomial(5),  120l,"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,119,"""120.0 - 600.0 x + 600.0 x^2 - 200.0 x^3 + 25.0 x^4 - x^5"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,120,"checkPolynomial(PolynomialsUtils.createLaguerrePolynomial(4),   24l,"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,121,"""24.0 - 96.0 x + 72.0 x^2 - 16.0 x^3 + x^4"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,125,public void testLaguerreDifferentials() {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,126,for (int k = 0; k < 12; ++k) {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,128,PolynomialFunction Lk0 = PolynomialsUtils.createLaguerrePolynomial(k);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,129,PolynomialFunction Lk1 = Lk0.polynomialDerivative();
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,130,PolynomialFunction Lk2 = Lk1.polynomialDerivative();
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,132,PolynomialFunction g0 = new PolynomialFunction(new double[] { k });
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,133,"PolynomialFunction g1 = new PolynomialFunction(new double[] { 1, -1 });"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,134,"PolynomialFunction g2 = new PolynomialFunction(new double[] { 0, 1 });"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,136,PolynomialFunction Lk0g0 = Lk0.multiply(g0);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,137,PolynomialFunction Lk1g1 = Lk1.multiply(g1);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,138,PolynomialFunction Lk2g2 = Lk2.multiply(g2);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,140,checkNullPolynomial(Lk0g0.add(Lk1g1.add(Lk2g2)));
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,145,public void testFirstLegendrePolynomials() {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,147,"checkPolynomial(PolynomialsUtils.createLegendrePolynomial(3),  2l, ""-3.0 x + 5.0 x^3"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,148,"checkPolynomial(PolynomialsUtils.createLegendrePolynomial(2),  2l, ""-1.0 + 3.0 x^2"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,149,"checkPolynomial(PolynomialsUtils.createLegendrePolynomial(1),  1l, ""x"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,150,"checkPolynomial(PolynomialsUtils.createLegendrePolynomial(0),  1l, ""1.0"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,152,"checkPolynomial(PolynomialsUtils.createLegendrePolynomial(7), 16l, ""-35.0 x + 315.0 x^3 - 693.0 x^5 + 429.0 x^7"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,153,"checkPolynomial(PolynomialsUtils.createLegendrePolynomial(6), 16l, ""-5.0 + 105.0 x^2 - 315.0 x^4 + 231.0 x^6"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,154,"checkPolynomial(PolynomialsUtils.createLegendrePolynomial(5),  8l, ""15.0 x - 70.0 x^3 + 63.0 x^5"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,155,"checkPolynomial(PolynomialsUtils.createLegendrePolynomial(4),  8l, ""3.0 - 30.0 x^2 + 35.0 x^4"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,159,public void testLegendreDifferentials() {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,160,for (int k = 0; k < 12; ++k) {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,162,PolynomialFunction Pk0 = PolynomialsUtils.createLegendrePolynomial(k);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,163,PolynomialFunction Pk1 = Pk0.polynomialDerivative();
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,164,PolynomialFunction Pk2 = Pk1.polynomialDerivative();
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,166,PolynomialFunction g0 = new PolynomialFunction(new double[] { k * (k + 1) });
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,167,"PolynomialFunction g1 = new PolynomialFunction(new double[] { 0, -2 });"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,168,"PolynomialFunction g2 = new PolynomialFunction(new double[] { 1, 0, -1 });"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,170,PolynomialFunction Pk0g0 = Pk0.multiply(g0);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,171,PolynomialFunction Pk1g1 = Pk1.multiply(g1);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,172,PolynomialFunction Pk2g2 = Pk2.multiply(g2);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,174,checkNullPolynomial(Pk0g0.add(Pk1g1.add(Pk2g2)));
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,179,public void testHighDegreeLegendre() {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,180,try {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,181,PolynomialsUtils.createLegendrePolynomial(40);
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,182,"fail(""an exception should have been thrown"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,183,} catch (ArithmeticException ae) {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,184,// expected
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,186,"//        checkPolynomial(PolynomialsUtils.createLegendrePolynomial(40), 274877906944l,"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,187,"//                        ""34461632205.0"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,188,"//                      + "" - 28258538408100.0 x^2"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,189,"//                      + "" + 3847870979902950.0 x^4"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,190,"//                      + "" - 207785032914759300.0 x^6"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,191,"//                      + "" + 5929294332103310025.0 x^8"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,192,"//                      + "" - 103301483474866556880.0 x^10"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,193,"//                      + "" + 1197358103913226000200.0 x^12"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,194,"//                      + "" - 9763073770369381232400.0 x^14"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,195,"//                      + "" + 58171647881784229843050.0 x^16"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,196,"//                      + "" - 260061484647976556945400.0 x^18"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,197,"//                      + "" + 888315281771246239250340.0 x^20"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,198,"//                      + "" - 2345767627188139419665400.0 x^22"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,199,"//                      + "" + 4819022625419112503443050.0 x^24"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,200,"//                      + "" - 7710436200670580005508880.0 x^26"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,201,"//                      + "" + 9566652323054238154983240.0 x^28"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,202,"//                      + "" - 9104813935044723209570256.0 x^30"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,203,"//                      + "" + 6516550296251767619752905.0 x^32"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,204,"//                      + "" - 3391858621221953912598660.0 x^34"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,205,"//                      + "" + 1211378079007840683070950.0 x^36"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,206,"//                      + "" - 265365894974690562152100.0 x^38"""
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,207,"//                      + "" + 26876802183334044115405.0 x^40"");"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,210,"private void checkPolynomial(PolynomialFunction p, long denominator, String reference) {"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,211,PolynomialFunction q = new PolynomialFunction(new double[] { denominator});
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,212,"assertEquals(reference, p.multiply(q).toString());"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,215,"private void checkPolynomial(PolynomialFunction p, String reference) {"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,216,"assertEquals(reference, p.toString());"
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,219,private void checkNullPolynomial(PolynomialFunction p) {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,220,for (double coefficient : p.getCoefficients()) {
True,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,src/test/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java,221,"assertEquals(0.0, coefficient, 1.0e-13);"
