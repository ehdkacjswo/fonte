is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,29, preferable to solve M<sup>-1</sup> &middot; A &middot; x = M<sup>-1</sup>
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,30," &middot; b, where M approximates in some way A, while remaining comparatively"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,31, easier to invert. M (not M<sup>-1</sup>!) is called the
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,29,* preferable to solve either
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,30,* <center>
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,31,* (M &middot; A) &middot; x = M &middot; b
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,32,* </center>
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,33,"* (left preconditioning), or"
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,34,* <center>
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,35,"* (A &middot; M) &middot; y = b, &nbsp;&nbsp;&nbsp;&nbsp;followed by"
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,36,* M &middot; y = x
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,37,* </center>
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,38,"* (right preconditioning), where M approximates in some way A<sup>-1</sup>,"
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,39,* while matrix-vector products of the type M &middot; y remain comparatively
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,40,"* easy to compute. In this library, M (not M<sup>-1</sup>!) is called the"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,35, Concrete implementations of this abstract class must be provided with
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,36," M<sup>-1</sup>, the inverse of the preconditioner, as a"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,37, {@link RealLinearOperator}.
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,44,* Concrete implementations of this abstract class must be provided with the
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,45,"* preconditioner M, as a {@link RealLinearOperator}."
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,71," @param minv the inverse of the preconditioner, M<sup>-1</sup>"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,72, (can be {@code null})
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,79,"* @param m the preconditioner, M (can be {@code null})"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,77, @throws NonSquareOperatorException if {@code a} or {@code minv} is not
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,84,* @throws NonSquareOperatorException if {@code a} or {@code m} is not
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,79," @throws DimensionMismatchException if {@code minv}, {@code b} or"
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,86,"* @throws DimensionMismatchException if {@code m}, {@code b} or"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,87,"inal RealLinearOperator minv, final RealVector b, final RealVector x0)"
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,94,"final RealLinearOperator m, final RealVector b, final RealVector x0)"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,91,"eturn solveInPlace(a, minv, b, x0.copy());"
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,98,"return solveInPlace(a, m, b, x0.copy());"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,123," @param minv the inverse of the preconditioner, M<sup>-1</sup>"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,124, (can be {@code null})
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,130,"* @param m the preconditioner, M (can be {@code null})"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,128, @throws NonSquareOperatorException if {@code a} or {@code minv} is not
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,134,* @throws NonSquareOperatorException if {@code a} or {@code m} is not
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,130," @throws DimensionMismatchException if {@code minv}, {@code b} or"
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,136,"* @throws DimensionMismatchException if {@code m}, {@code b} or"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,134,"inal RealLinearOperator minv, final RealVector b, final RealVector x0)"
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,140,"final RealLinearOperator m, final RealVector b, final RealVector x0)"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,138,f (minv != null) {
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,139,f (minv.getColumnDimension() != minv.getRowDimension()) {
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,140,"hrow new NonSquareOperatorException(minv.getColumnDimension(),"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,141,inv.getRowDimension());
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,144,if (m != null) {
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,145,if (m.getColumnDimension() != m.getRowDimension()) {
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,146,"throw new NonSquareOperatorException(m.getColumnDimension(),"
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,147,m.getRowDimension());
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,143,f (minv.getRowDimension() != a.getRowDimension()) {
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,144,"hrow new DimensionMismatchException(minv.getRowDimension(),"
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,149,if (m.getRowDimension() != a.getRowDimension()) {
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,150,"throw new DimensionMismatchException(m.getRowDimension(),"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,155," @param minv the inverse of the preconditioner, M<sup>-1</sup>"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,156, (can be {@code null})
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,161,"* @param m the preconditioner, M (can be {@code null})"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,160, @throws NonSquareOperatorException if {@code a} or {@code minv} is not
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,165,* @throws NonSquareOperatorException if {@code a} or {@code m} is not
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,162, @throws DimensionMismatchException if {@code minv} or {@code b} have
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,167,* @throws DimensionMismatchException if {@code m} or {@code b} have
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,169,"ublic RealVector solve(RealLinearOperator a, RealLinearOperator minv,"
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,174,"public RealVector solve(RealLinearOperator a, RealLinearOperator m,"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,174,"eturn solveInPlace(a, minv, b, x);"
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,179,"return solveInPlace(a, m, b, x);"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,182," @param minv the inverse of the preconditioner, M<sup>-1</sup>"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,183, (can be {@code null})
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,187,"* @param m the preconditioner, M (can be {@code null})"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,189, @throws NonSquareOperatorException if {@code a} or {@code minv} is not
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,193,* @throws NonSquareOperatorException if {@code a} or {@code m} is not
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,191," @throws DimensionMismatchException if {@code minv}, {@code b} or"
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,195,"* @throws DimensionMismatchException if {@code m}, {@code b} or"
False,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,199,"ealLinearOperator minv, RealVector b, RealVector x0) throws"
True,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math3/linear/PreconditionedIterativeLinearSolver.java,203,"RealLinearOperator m, RealVector b, RealVector x0) throws"
