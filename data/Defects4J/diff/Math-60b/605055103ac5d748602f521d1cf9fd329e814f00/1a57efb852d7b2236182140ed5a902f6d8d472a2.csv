is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,414,"utBuffer.append(""DescriptiveStatistics:\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,415,"utBuffer.append(""n: "" + getN() + ""\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,416,"utBuffer.append(""min: "" + getMin() + ""\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,417,"utBuffer.append(""max: "" + getMax() + ""\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,418,"utBuffer.append(""mean: "" + getMean() + ""\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,419,"utBuffer.append(""std dev: "" + getStandardDeviation() + ""\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,420,"utBuffer.append(""median: "" + getPercentile(50) + ""\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,421,"utBuffer.append(""skewness: "" + getSkewness() + ""\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,422,"utBuffer.append(""kurtosis: "" + getKurtosis() + ""\n"");"
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,414,"String endl = ""\n"";"
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,415,"outBuffer.append(""DescriptiveStatistics:"").append(endl);"
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,416,"outBuffer.append(""n: "").append(getN()).append(endl);"
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,417,"outBuffer.append(""min: "").append(getMin()).append(endl);"
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,418,"outBuffer.append(""max: "").append(getMax()).append(endl);"
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,419,"outBuffer.append(""mean: "").append(getMean()).append(endl);"
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,420,"outBuffer.append(""std dev: "").append(getStandardDeviation())"
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,421,.append(endl);
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,422,"outBuffer.append(""median: "").append(getPercentile(50)).append(endl);"
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,423,"outBuffer.append(""skewness: "").append(getSkewness()).append(endl);"
True,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,424,"outBuffer.append(""kurtosis: "").append(getKurtosis()).append(endl);"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,15, limitations under the License.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,3,* contributor license agreements. See the NOTICE file distributed with this
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,4,* work for additional information regarding copyright ownership. The ASF
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,5,"* licenses this file to You under the Apache License, Version 2.0 (the"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,6,"* ""License""); you may not use this file except in compliance with the License."
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,7,* You may obtain a copy of the License at
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,8,* http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,9,"* or agreed to in writing, software distributed under the License is"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,10,"* distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,11,"* KIND, either express or implied. See the License for the specific language"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,12,* governing permissions and limitations under the License.
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,34, <p>Computes summary statistics for a stream of data values added using the
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,31,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,32,* Computes summary statistics for a stream of data values added using the
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,36," memory, so this class can be used to compute statistics for very large"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,37, data streams.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,39, <p>The {@link StorelessUnivariateStatistic} instances used to maintain
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,40, summary state and compute statistics are configurable via setters.
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,41," For example, the default implementation for the variance can be overridden by"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,42, calling {@link #setVarianceImpl(StorelessUnivariateStatistic)}. Actual
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,43, parameters to these methods must implement the
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,44, {@link StorelessUnivariateStatistic} interface and configuration must be
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,45, completed before <code>addValue</code> is called. No configuration is
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,46," necessary to use the default, commons-math provided implementations.</p>"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,48, <p>Note: This class is not thread-safe. Use
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,34,"* memory, so this class can be used to compute statistics for very large data"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,35,* streams.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,36,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,37,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,38,* The {@link StorelessUnivariateStatistic} instances used to maintain summary
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,39,"* state and compute statistics are configurable via setters. For example, the"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,40,* default implementation for the variance can be overridden by calling
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,41,* {@link #setVarianceImpl(StorelessUnivariateStatistic)}. Actual parameters to
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,42,* these methods must implement the {@link StorelessUnivariateStatistic}
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,43,* interface and configuration must be completed before <code>addValue</code>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,44,"* is called. No configuration is necessary to use the default, commons-math"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,45,* provided implementations.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,46,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,47,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,48,* Note: This class is not thread-safe. Use
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,50, threads is required.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,52, @version $Revision$ $Date$
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,50,* threads is required.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,51,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,52,"* @version $Revision$ $Date: 2008-02-10 13:28:59 -0600 (Sun, 10 Feb"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,53,*          2008) $
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,62, @param cls the type of <code>SummaryStatistics</code> object to
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,63,        create.
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,64, @return a new instance.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,62,* @param cls the type of <code>SummaryStatistics</code> object to create.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,63,* @return a new instance.
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,67,            created.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,66,*         created.
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,69,            constructor is not accessible.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,68,*         constructor is not accessible.
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,71,ublic static SummaryStatistics newInstance(Class cls) throws
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,72,"nstantiationException, IllegalAccessException {"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,70,"public static SummaryStatistics newInstance(Class cls) throws InstantiationException, IllegalAccessException {"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,80, @deprecated to be removed in commons-math 2.0
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,77,* @deprecated to be removed in commons-math 2.0
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,86,nstance = (SummaryStatistics) dc.newInstance(
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,87,"ummaryStatistics.class,"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,88,"org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl"");"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,89, catch(Throwable t) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,83,"instance = (SummaryStatistics)dc.newInstance(SummaryStatistics.class, ""org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl"");"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,84,} catch (Throwable t) {
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,159, @return Current values of statistics
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,153,* @return Current values of statistics
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,162,"eturn new StatisticalSummaryValues(getMean(), getVariance(), getN(),"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,163,"etMax(), getMin(), getSum());"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,156,"return new StatisticalSummaryValues(getMean(), getVariance(), getN(), getMax(), getMin(), getSum());"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,169, @param value  the value to add
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,161,* @param value the value to add
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,181,eanImpl.increment(value);
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,173,meanImpl.increment(value);
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,211,  Double.NaN is returned if no values have been added.</p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,203,* Double.NaN is returned if no values have been added.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,204,* </p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,222,  Double.NaN is returned if no values have been added.</p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,214,* Double.NaN is returned if no values have been added.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,215,* </p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,227,f (mean == meanImpl) {
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,228,eturn new Mean(secondMoment).getResult();
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,229, else {
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,230,eturn meanImpl.getResult();
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,219,if (mean == meanImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,220,return new Mean(secondMoment).getResult();
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,221,} else {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,222,return meanImpl.getResult();
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,237,  Double.NaN is returned if no values have been added.</p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,229,* Double.NaN is returned if no values have been added.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,230,* </p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,256,  Double.NaN is returned if no values have been added.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,258, @return the variance
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,248,* Double.NaN is returned if no values have been added.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,249,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,250,* @return the variance
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,271,  Double.NaN is returned if no values have been added.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,273, @return the maximum
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,263,* Double.NaN is returned if no values have been added.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,264,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,265,* @return the maximum
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,282,  Double.NaN is returned if no values have been added.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,284, @return the minimum
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,274,* Double.NaN is returned if no values have been added.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,275,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,276,* @return the minimum
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,293,  Double.NaN is returned if no values have been added.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,295, @return the geometric mean
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,285,* Double.NaN is returned if no values have been added.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,286,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,287,* @return the geometric mean
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,304,  Double.NaN is returned if no values have been added.</p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,296,* Double.NaN is returned if no values have been added.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,297,* </p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,314, Generates a text report displaying
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,315, summary statistics from values that
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,306,* Generates a text report displaying summary statistics from values that
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,322,"utBuffer.append(""SummaryStatistics:\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,323,"utBuffer.append(""n: "" + getN() + ""\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,324,"utBuffer.append(""min: "" + getMin() + ""\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,325,"utBuffer.append(""max: "" + getMax() + ""\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,326,"utBuffer.append(""mean: "" + getMean() + ""\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,327,"utBuffer.append(""geometric mean: "" + getGeometricMean() + ""\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,328,"utBuffer.append(""variance: "" + getVariance() + ""\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,329,"utBuffer.append(""sum of squares: "" + getSumsq() + ""\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,330,"utBuffer.append(""standard deviation: "" + getStandardDeviation() + ""\n"");"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,331,"utBuffer.append(""sum of logs: "" + getSumOfLogs() + ""\n"");"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,313,"String endl = ""\n"";"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,314,"outBuffer.append(""SummaryStatistics:"").append(endl);"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,315,"outBuffer.append(""n: "").append(getN()).append(endl);"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,316,"outBuffer.append(""min: "").append(getMin()).append(endl);"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,317,"outBuffer.append(""max: "").append(getMax()).append(endl);"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,318,"outBuffer.append(""mean: "").append(getMean()).append(endl);"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,319,"outBuffer.append(""geometric mean: "").append(getGeometricMean())"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,320,.append(endl);
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,321,"outBuffer.append(""variance: "").append(getVariance()).append(endl);"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,322,"outBuffer.append(""sum of squares: "").append(getSumsq()).append(endl);"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,323,"outBuffer.append(""standard deviation: "").append(getStandardDeviation())"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,324,.append(endl);
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,325,"outBuffer.append(""sum of logs: "").append(getSumOfLogs()).append(endl);"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,356, Returns true iff <code>object</code> is a <code>SummaryStatistics</code>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,357, instance and all statistics have the same values as this.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,350,* Returns true iff <code>object</code> is a
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,351,* <code>SummaryStatistics</code> instance and all statistics have the
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,352,* same values as this.
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,362,f (object == this ) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,357,if (object == this) {
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,368,ummaryStatistics stat = (SummaryStatistics) object;
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,369,"eturn (MathUtils.equals(stat.getGeometricMean(),"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,370,his.getGeometricMean()) &&
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,371,"athUtils.equals(stat.getMax(), this.getMax()) &&"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,372,"athUtils.equals(stat.getMean(),this.getMean()) &&"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,373,"athUtils.equals(stat.getMin(),this.getMin()) &&"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,374,"athUtils.equals(stat.getN(), this.getN()) &&"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,375,"athUtils.equals(stat.getSum(), this.getSum()) &&"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,376,"athUtils.equals(stat.getSumsq(),this.getSumsq()) &&"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,377,"athUtils.equals(stat.getVariance(),this.getVariance()));"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,363,SummaryStatistics stat = (SummaryStatistics)object;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,364,"return (MathUtils.equals(stat.getGeometricMean(), this.getGeometricMean()) && MathUtils.equals(stat.getMax(), this.getMax())"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,365,"&& MathUtils.equals(stat.getMean(), this.getMean()) && MathUtils.equals(stat.getMin(), this.getMin()) && MathUtils.equals(stat.getN(), this.getN())"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,366,"&& MathUtils.equals(stat.getSum(), this.getSum()) && MathUtils.equals(stat.getSumsq(), this.getSumsq()) && MathUtils.equals(stat.getVariance(),"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,367,this.getVariance()));
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,410, <p>Sets the implementation for the Sum.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,411," <p>This method must be activated before any data has been added - i.e.,"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,412, before {@link #addValue(double) addValue} has been used to add data;
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,413, otherwise an IllegalStateException will be thrown.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,415, @param sumImpl the StorelessUnivariateStatistic instance to use
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,416, for computing the Sum
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,417, @throws IllegalStateException if data has already been added
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,418,  (i.e if n > 0)
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,398,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,399,* Sets the implementation for the Sum.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,400,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,401,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,402,"* This method must be activated before any data has been added - i.e.,"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,403,* before {@link #addValue(double) addValue} has been used to add data;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,404,* otherwise an IllegalStateException will be thrown.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,405,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,406,* @param sumImpl the StorelessUnivariateStatistic instance to use for
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,407,*        computing the Sum
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,408,* @throws IllegalStateException if data has already been added (i.e if n >
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,409,*         0)
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,437, <p>Sets the implementation for the sum of squares.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,438," <p>This method must be activated before any data has been added - i.e.,"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,439, before {@link #addValue(double) addValue} has been used to add data;
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,440, otherwise an IllegalStateException will be thrown.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,442, @param sumsqImpl the StorelessUnivariateStatistic instance to use
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,443, for computing the sum of squares
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,444, @throws IllegalStateException if data has already been added
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,445,  (i.e if n > 0)
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,427,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,428,* Sets the implementation for the sum of squares.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,429,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,430,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,431,"* This method must be activated before any data has been added - i.e.,"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,432,* before {@link #addValue(double) addValue} has been used to add data;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,433,* otherwise an IllegalStateException will be thrown.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,434,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,435,* @param sumsqImpl the StorelessUnivariateStatistic instance to use for
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,436,*        computing the sum of squares
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,437,* @throws IllegalStateException if data has already been added (i.e if n >
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,438,*         0)
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,448,ublic void setSumsqImpl(
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,449,torelessUnivariateStatistic sumsqImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,441,public void setSumsqImpl(StorelessUnivariateStatistic sumsqImpl) {
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,465, <p>Sets the implementation for the minimum.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,466," <p>This method must be activated before any data has been added - i.e.,"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,467, before {@link #addValue(double) addValue} has been used to add data;
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,468, otherwise an IllegalStateException will be thrown.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,470, @param minImpl the StorelessUnivariateStatistic instance to use
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,471, for computing the minimum
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,472, @throws IllegalStateException if data has already been added
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,473,  (i.e if n > 0)
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,456,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,457,* Sets the implementation for the minimum.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,458,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,459,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,460,"* This method must be activated before any data has been added - i.e.,"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,461,* before {@link #addValue(double) addValue} has been used to add data;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,462,* otherwise an IllegalStateException will be thrown.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,463,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,464,* @param minImpl the StorelessUnivariateStatistic instance to use for
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,465,*        computing the minimum
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,466,* @throws IllegalStateException if data has already been added (i.e if n >
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,467,*         0)
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,492, <p>Sets the implementation for the maximum.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,493," <p>This method must be activated before any data has been added - i.e.,"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,494, before {@link #addValue(double) addValue} has been used to add data;
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,495, otherwise an IllegalStateException will be thrown.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,497, @param maxImpl the StorelessUnivariateStatistic instance to use
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,498, for computing the maximum
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,499, @throws IllegalStateException if data has already been added
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,500,  (i.e if n > 0)
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,485,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,486,* Sets the implementation for the maximum.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,487,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,488,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,489,"* This method must be activated before any data has been added - i.e.,"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,490,* before {@link #addValue(double) addValue} has been used to add data;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,491,* otherwise an IllegalStateException will be thrown.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,492,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,493,* @param maxImpl the StorelessUnivariateStatistic instance to use for
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,494,*        computing the maximum
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,495,* @throws IllegalStateException if data has already been added (i.e if n >
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,496,*         0)
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,519, <p>Sets the implementation for the sum of logs.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,520," <p>This method must be activated before any data has been added - i.e.,"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,521, before {@link #addValue(double) addValue} has been used to add data;
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,522, otherwise an IllegalStateException will be thrown.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,524, @param sumLogImpl the StorelessUnivariateStatistic instance to use
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,525, for computing the log sum
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,526, @throws IllegalStateException if data has already been added
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,527,  (i.e if n > 0)
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,514,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,515,* Sets the implementation for the sum of logs.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,516,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,517,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,518,"* This method must be activated before any data has been added - i.e.,"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,519,* before {@link #addValue(double) addValue} has been used to add data;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,520,* otherwise an IllegalStateException will be thrown.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,521,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,522,* @param sumLogImpl the StorelessUnivariateStatistic instance to use for
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,523,*        computing the log sum
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,524,* @throws IllegalStateException if data has already been added (i.e if n >
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,525,*         0)
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,530,ublic void setSumLogImpl(
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,531,torelessUnivariateStatistic sumLogImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,528,public void setSumLogImpl(StorelessUnivariateStatistic sumLogImpl) {
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,548, <p>Sets the implementation for the geometric mean.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,549," <p>This method must be activated before any data has been added - i.e.,"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,550, before {@link #addValue(double) addValue} has been used to add data;
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,551, otherwise an IllegalStateException will be thrown.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,553, @param geoMeanImpl the StorelessUnivariateStatistic instance to use
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,554, for computing the geometric mean
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,555, @throws IllegalStateException if data has already been added
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,556,  (i.e if n > 0)
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,544,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,545,* Sets the implementation for the geometric mean.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,546,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,547,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,548,"* This method must be activated before any data has been added - i.e.,"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,549,* before {@link #addValue(double) addValue} has been used to add data;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,550,* otherwise an IllegalStateException will be thrown.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,551,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,552,* @param geoMeanImpl the StorelessUnivariateStatistic instance to use for
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,553,*        computing the geometric mean
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,554,* @throws IllegalStateException if data has already been added (i.e if n >
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,555,*         0)
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,559,ublic void setGeoMeanImpl(
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,560,torelessUnivariateStatistic geoMeanImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,558,public void setGeoMeanImpl(StorelessUnivariateStatistic geoMeanImpl) {
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,576, <p>Sets the implementation for the mean.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,577," <p>This method must be activated before any data has been added - i.e.,"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,578, before {@link #addValue(double) addValue} has been used to add data;
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,579, otherwise an IllegalStateException will be thrown.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,581, @param meanImpl the StorelessUnivariateStatistic instance to use
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,582, for computing the mean
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,583, @throws IllegalStateException if data has already been added
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,584,  (i.e if n > 0)
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,573,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,574,* Sets the implementation for the mean.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,575,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,576,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,577,"* This method must be activated before any data has been added - i.e.,"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,578,* before {@link #addValue(double) addValue} has been used to add data;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,579,* otherwise an IllegalStateException will be thrown.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,580,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,581,* @param meanImpl the StorelessUnivariateStatistic instance to use for
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,582,*        computing the mean
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,583,* @throws IllegalStateException if data has already been added (i.e if n >
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,584,*         0)
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,587,ublic void setMeanImpl(
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,588,torelessUnivariateStatistic meanImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,587,public void setMeanImpl(StorelessUnivariateStatistic meanImpl) {
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,604, <p>Sets the implementation for the variance.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,605," <p>This method must be activated before any data has been added - i.e.,"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,606, before {@link #addValue(double) addValue} has been used to add data;
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,607, otherwise an IllegalStateException will be thrown.</p>
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,609, @param varianceImpl the StorelessUnivariateStatistic instance to use
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,610, for computing the variance
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,611, @throws IllegalStateException if data has already been added
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,612,  (i.e if n > 0)
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,602,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,603,* Sets the implementation for the variance.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,604,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,605,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,606,"* This method must be activated before any data has been added - i.e.,"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,607,* before {@link #addValue(double) addValue} has been used to add data;
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,608,* otherwise an IllegalStateException will be thrown.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,609,* </p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,610,* @param varianceImpl the StorelessUnivariateStatistic instance to use for
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,611,*        computing the variance
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,612,* @throws IllegalStateException if data has already been added (i.e if n >
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,613,*         0)
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,615,ublic void setVarianceImpl(
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,616,torelessUnivariateStatistic varianceImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,616,public void setVarianceImpl(StorelessUnivariateStatistic varianceImpl) {
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,626,hrow new IllegalStateException(
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,627,"Implementations must be configured before values are added."");"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,626,"throw new IllegalStateException(""Implementations must be configured before values are added."");"
