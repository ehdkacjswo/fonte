is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,37, The maximal number of denominator digits that can be requested for double to fraction
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,38, conversion.
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,39, <p>
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,40," When <code>d</code> digits are requested, an integer threshold is"
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,41," initialized with the value 10<sup>d</sup>. Therefore, <code>d</code>"
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,42, cannot be larger than this constant. Since the java language uses 32 bits
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,43," signed integers, the value for this constant is 9."
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,44, </p>
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,46," @see #Fraction(double,int)"
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,48,ublic static final int MAX_DENOMINATOR_DIGITS = 9;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,92, Convert a number of denominator digits to a denominator max value.
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,93, @param denominatorDigits The maximum number of denominator digits.
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,94, @return the maximal value for denominator
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,95, @throws IllegalArgumentException if more than {@link #MAX_DENOMINATOR_DIGITS}
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,96,         are requested
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,98,rivate static int maxDenominator(int denominatorDigits)
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,99,hrows IllegalArgumentException
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,101,f (denominatorDigits > MAX_DENOMINATOR_DIGITS) {
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,102,"hrow new IllegalArgumentException(""too many digits requested"");"
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,104,"eturn (int)Math.pow(10, denominatorDigits);"
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,118, @param denominatorDigits The maximum number of denominator digits.
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,88,* @param maxDenominator The maximum allowed value for denominator
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,121, @throws IllegalArgumentException if more than {@link #MAX_DENOMINATOR_DIGITS}
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,122,         are requested
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,124,"ublic Fraction(double value, int denominatorDigits)"
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,125,"hrows FractionConversionException, IllegalArgumentException"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,92,"public Fraction(double value, int maxDenominator)"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,93,throws FractionConversionException
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,127,"his(value, 0, maxDenominator(denominatorDigits), 100);"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,95,"this(value, 0, maxDenominator, 100);"
False,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,126,"ssertFraction(2, 5, new Fraction(0.4, 1));"
False,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,127,"ssertFraction(2, 5, new Fraction(0.4, 2));"
False,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,128,"ssertFraction(2, 5, new Fraction(0.4, 3));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,126,"assertFraction(2, 5, new Fraction(0.4,   9));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,127,"assertFraction(2, 5, new Fraction(0.4,  99));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,128,"assertFraction(2, 5, new Fraction(0.4, 999));"
False,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,130,"ssertFraction(3, 5,      new Fraction(0.6152, 1));"
False,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,131,"ssertFraction(8, 13,     new Fraction(0.6152, 2));"
False,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,132,"ssertFraction(510, 829,  new Fraction(0.6152, 3));"
False,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,133,"ssertFraction(769, 1250, new Fraction(0.6152, 4));"
False,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,135,ry {
False,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,136,"ew Fraction(0.6152, 15);"
False,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,137,"ail(""an exception should have been thrown"");"
False,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,138, catch (IllegalArgumentException iae) {
False,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,139,/ expected behavior
False,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,140, catch (Exception e) {
False,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,141,"ail(""wrong exception caught"");"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,130,"assertFraction(3, 5,      new Fraction(0.6152,    9));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,131,"assertFraction(8, 13,     new Fraction(0.6152,   99));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,132,"assertFraction(510, 829,  new Fraction(0.6152,  999));"
True,src/test/org/apache/commons/math/fraction/FractionTest.java,src/test/org/apache/commons/math/fraction/FractionTest.java,133,"assertFraction(769, 1250, new Fraction(0.6152, 9999));"
