is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,315,/** All long-representable factorials */
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,316,private static final long[] factorials = new long[]
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,317,"{1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800,"
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,318,"479001600, 6227020800l, 87178291200l, 1307674368000l, 20922789888000l,"
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,319,"355687428096000l, 6402373705728000l, 121645100408832000l,"
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,320,2432902008176640000l};
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,338,ong result = Math.round(factorialDouble(n));
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,339,f (result == Long.MAX_VALUE) {
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,345,if (n < 0) {
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,346,"throw new IllegalArgumentException(""must have n >= 0 for n!"");"
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,348,if (n > 20) {
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,341,"result too large to represent in a long integer"");"
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,350,"""factorial value is too large to fit in a long"");"
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,343,eturn result;
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,352,return factorials[n];
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,379,if (n < 21) {
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,380,return factorial(n);
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,402,if (n < 21) {
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,403,return Math.log(factorial(n));
False,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,235,or (int i = 1; i < 10; i++) {
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,235,for (int i = 1; i < 21; i++) {
