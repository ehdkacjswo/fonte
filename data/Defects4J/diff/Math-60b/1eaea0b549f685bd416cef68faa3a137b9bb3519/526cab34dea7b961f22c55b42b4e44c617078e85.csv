is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,19,import org.apache.commons.math.util.DummyLocalizable;
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,20,import org.apache.commons.math.util.Localizable;
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,21,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,28,rivate static final long serialVersionUID = 4883703247677159141L;
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,32,private static final long serialVersionUID = -1111352570797662604L;
False,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,34,"uper(""Convergence failed"");"
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,38,super(LocalizedFormats.CONVERGENCE_FAILED);
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,47,"* @deprecated as of 2.2 replaced by {@link #ConvergenceException(Localizable, Object...)}"
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,49,@Deprecated
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,51,"this(new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,55,* Constructs an exception with specified formatted detail message.
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,56,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,57,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,58,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,59,* @since 2.2
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,61,"public ConvergenceException(Localizable pattern, Object ... arguments) {"
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,80,"* @deprecated as of 2.2 replaced by {@link #ConvergenceException(Throwable, Localizable, Object...)}"
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,82,@Deprecated
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,84,"this(cause, new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,88,* Constructs an exception with specified formatted detail message and root cause.
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,89,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,90,* @param cause  the exception or error that caused this exception to be thrown
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,91,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,92,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,93,* @since 2.2
True,src/main/java/org/apache/commons/math/ConvergenceException.java,src/main/java/org/apache/commons/math/ConvergenceException.java,95,"public ConvergenceException(Throwable cause, Localizable pattern, Object ... arguments) {"
True,src/main/java/org/apache/commons/math/DimensionMismatchException.java,src/main/java/org/apache/commons/math/DimensionMismatchException.java,19,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/DimensionMismatchException.java,src/main/java/org/apache/commons/math/DimensionMismatchException.java,42,"uper(""dimension mismatch {0} != {1}"", dimension1, dimension2);"
True,src/main/java/org/apache/commons/math/DimensionMismatchException.java,src/main/java/org/apache/commons/math/DimensionMismatchException.java,44,"super(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, dimension1, dimension2);"
True,src/main/java/org/apache/commons/math/DuplicateSampleAbscissaException.java,src/main/java/org/apache/commons/math/DuplicateSampleAbscissaException.java,19,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/DuplicateSampleAbscissaException.java,src/main/java/org/apache/commons/math/DuplicateSampleAbscissaException.java,37,"uper(""Abscissa {0} is duplicated at both indices {1} and {2}"","
True,src/main/java/org/apache/commons/math/DuplicateSampleAbscissaException.java,src/main/java/org/apache/commons/math/DuplicateSampleAbscissaException.java,39,"super(LocalizedFormats.DUPLICATED_ABSCISSA,"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,20,import org.apache.commons.math.util.DummyLocalizable;
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,21,import org.apache.commons.math.util.Localizable;
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,22,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,32,rivate static final long serialVersionUID = -4305020489115478365L;
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,34,** Message for failed evaluation. */
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,35,rivate static final String FAILED_EVALUATION_MESSAGE =
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,36,"evaluation failed for argument = {0}"";"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,35,private static final long serialVersionUID = 1384427981840836868L;
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,48,"uper(FAILED_EVALUATION_MESSAGE, argument);"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,47,"super(LocalizedFormats.EVALUATION_FAILED, argument);"
False,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,60,"uper(FAILED_EVALUATION_MESSAGE, new ArrayRealVector(argument));"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,59,"super(LocalizedFormats.EVALUATION_FAILED, new ArrayRealVector(argument));"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,73,"this(argument, new DummyLocalizable(pattern), argument);"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,77,* Constructs an exception with specified formatted detail message.
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,78,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,79,* @param argument  the failing function argument
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,80,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,81,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,82,* @since 2.2
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,84,"public FunctionEvaluationException(double argument,"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,85,"Localizable pattern, Object ... arguments) {"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,100,"this(argument, new DummyLocalizable(pattern), argument);"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,104,* Constructs an exception with specified formatted detail message.
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,105,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,106,* @param argument  the failing function argument
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,107,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,108,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,109,* @since 2.2
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,111,"public FunctionEvaluationException(double[] argument,"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,112,"Localizable pattern, Object ... arguments) {"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,153,"this(cause, argument, new DummyLocalizable(pattern), argument);"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,157,* Constructs an exception with specified formatted detail message and root cause.
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,158,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,159,* @param cause  the exception or error that caused this exception to be thrown
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,160,* @param argument  the failing function argument
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,161,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,162,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,163,* @since 2.2
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,165,"public FunctionEvaluationException(Throwable cause,"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,166,"double argument, Localizable pattern,"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,167,Object ... arguments) {
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,184,"this(cause, argument, new DummyLocalizable(pattern), argument);"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,188,* Constructs an exception with specified formatted detail message and root cause.
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,189,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,190,* @param cause  the exception or error that caused this exception to be thrown
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,191,* @param argument  the failing function argument
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,192,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,193,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,194,* @since 2.2
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,196,"public FunctionEvaluationException(Throwable cause,"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,197,"double[] argument, Localizable pattern,"
True,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,src/main/java/org/apache/commons/math/FunctionEvaluationException.java,198,Object ... arguments) {
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,21,import org.apache.commons.math.util.DummyLocalizable;
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,22,import org.apache.commons.math.util.Localizable;
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,48,"this(new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,52,* Constructs an exception with specified formatted detail message.
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,53,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,54,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,55,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,56,* @since 2.2
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,58,"public MathConfigurationException(Localizable pattern, Object ... arguments) {"
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,79,"this(cause, new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,83,* Constructs an exception with specified formatted detail message and root cause.
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,84,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,85,* @param cause  the exception or error that caused this exception to be thrown
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,86,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,87,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,88,* @since 2.2
True,src/main/java/org/apache/commons/math/MathConfigurationException.java,src/main/java/org/apache/commons/math/MathConfigurationException.java,90,"public MathConfigurationException(Throwable cause, Localizable pattern, Object ... arguments) {"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,23,mport java.util.MissingResourceException;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,24,mport java.util.ResourceBundle;
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,24,import org.apache.commons.math.util.DummyLocalizable;
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,25,import org.apache.commons.math.util.Localizable;
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,26,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,39,rivate static final long serialVersionUID = -9004610152740737812L;
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,41,private static final long serialVersionUID = 7428019509644517071L;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,44,rivate final String pattern;
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,46,private final Localizable pattern;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,56,his.pattern   = null;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,57,his.arguments = new Object[0];
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,58,this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,59,"this.arguments = new Object[] { """" };"
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,68,"* @deprecated as of 2.2 replaced by {@link #MathException(Localizable, Object...)}"
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,70,@Deprecated
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,72,"this(new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,76,* Constructs a new <code>MathException</code> with specified
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,77,* formatted detail message.
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,78,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,79,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,80,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,82,"public MathException(Localizable pattern, Object ... arguments) {"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,81,his.pattern   = getMessage();
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,82,his.arguments = new Object[0];
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,96,this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,97,"this.arguments = new Object[] { (rootCause == null) ? """" : rootCause.getMessage() };"
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,109,"* @deprecated as of 2.2 replaced by {@link #MathException(Throwable, Localizable, Object...)}"
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,111,@Deprecated
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,96,uper(rootCause);
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,97,his.pattern   = pattern;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,98,his.arguments = (arguments == null) ? new Object[0] : arguments.clone();
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,113,"this(rootCause, new DummyLocalizable(pattern), arguments);"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,102, Translate a string to a given locale.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,103, @param s string to translate
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,104, @param locale locale into which to translate the string
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,105, @return translated string or original string
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,106, for unsupported locales or unknown strings
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,117,* Constructs a new <code>MathException</code> with specified
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,118,* formatted detail message and nested <code>Throwable</code> root cause.
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,119,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,120,* @param rootCause the exception or error that caused this exception
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,121,* to be thrown.
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,122,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,123,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,124,* @since 1.2
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,108,"rivate static String translate(String s, Locale locale) {"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,109,ry {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,110,esourceBundle bundle =
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,111,"esourceBundle.getBundle(""org.apache.commons.math.MessagesResources"", locale);"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,112,f (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,113,/ the value of the resource is the translated string
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,114,eturn bundle.getString(s);
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,117, catch (MissingResourceException mre) {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,118,/ do nothing here
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,121,/ the locale is not supported or the resource is unknown
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,122,/ don't translate and fall back to using the string as is
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,123,eturn s;
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,126,"public MathException(Throwable rootCause, Localizable pattern, Object ... arguments) {"
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,127,super(rootCause);
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,128,this.pattern   = pattern;
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,129,this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,136,* @deprecated as of 2.2 replaced by {@link #getLocalizablePattern()}
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,138,@Deprecated
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,140,return pattern.getSourceString();
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,143,/** Gets the localizable pattern used to build the message of this throwable.
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,145,* @return the localizable pattern used to build the message of this throwable
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,146,* @since 2.2
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,148,public Localizable getLocalizablePattern() {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,153,"eturn (pattern == null) ? """" : new MessageFormat(translate(pattern, locale), locale).format(arguments);"
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,169,if (pattern != null) {
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,170,"return new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);"
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,172,"return """";"
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,27,mport java.util.MissingResourceException;
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,29,mport java.util.ResourceBundle;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,29,import org.apache.commons.math.util.DummyLocalizable;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,30,import org.apache.commons.math.util.Localizable;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,31,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,40,rivate static final long serialVersionUID = -5128983364075381060L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,42,private static final long serialVersionUID = 9058794795027570002L;
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,45,rivate final String pattern;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,47,private final Localizable pattern;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,60,"* @deprecated as of 2.2 replaced by {@link #MathRuntimeException(Localizable, Object...)}"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,62,@Deprecated
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,64,"this(new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,68,* Constructs a new <code>MathRuntimeException</code> with specified
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,69,* formatted detail message.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,70,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,71,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,72,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,73,* @since 2.2
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,75,"public MathRuntimeException(final Localizable pattern, final Object ... arguments) {"
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,73,his.pattern   = getMessage();
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,74,his.arguments = new Object[0];
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,89,this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,90,"this.arguments = new Object[] { (rootCause == null) ? """" : rootCause.getMessage() };"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,101,"* @deprecated as of 2.2 replaced by {@link #MathRuntimeException(Throwable, Localizable, Object...)}"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,103,@Deprecated
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,88,uper(rootCause);
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,89,his.pattern   = pattern;
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,90,his.arguments = (arguments == null) ? new Object[0] : arguments.clone();
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,106,"this(rootCause, new DummyLocalizable(pattern), arguments);"
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,94, Translate a string to a given locale.
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,95, @param s string to translate
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,96, @param locale locale into which to translate the string
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,97, @return translated string or original string
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,98, for unsupported locales or unknown strings
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,100,"rivate static String translate(final String s, final Locale locale) {"
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,101,ry {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,102,esourceBundle bundle =
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,103,"esourceBundle.getBundle(""org.apache.commons.math.MessagesResources"", locale);"
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,104,f (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,105,/ the value of the resource is the translated string
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,106,eturn bundle.getString(s);
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,109, catch (MissingResourceException mre) {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,110,/ do nothing here
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,113,/ the locale is not supported or the resource is unknown
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,114,/ don't translate and fall back to using the string as is
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,115,eturn s;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,110,* Constructs a new <code>MathRuntimeException</code> with specified
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,111,* formatted detail message and nested <code>Throwable</code> root cause.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,112,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,113,* @param rootCause the exception or error that caused this exception
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,114,* to be thrown.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,115,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,116,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,117,* @since 2.2
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,119,"public MathRuntimeException(final Throwable rootCause,"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,120,"final Localizable pattern, final Object ... arguments) {"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,121,super(rootCause);
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,122,this.pattern   = pattern;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,123,this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,132,* @since 2.2
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,126,"rivate static String buildMessage(final Locale locale, final String pattern,"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,134,"private static String buildMessage(final Locale locale, final Localizable pattern,"
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,128,"eturn (pattern == null) ? """" : new MessageFormat(translate(pattern, locale), locale).format(arguments);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,136,"return new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,141,* @return the pattern used to build the message of this throwable
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,142,* @deprecated as of 2.2 replaced by {@link #getLocalizablePattern()}
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,144,@Deprecated
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,145,public String getPattern() {
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,146,return pattern.getSourceString();
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,149,/** Gets the localizable pattern used to build the message of this throwable.
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,133, @return the pattern used to build the message of this throwable
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,151,* @return the localizable pattern used to build the message of this throwable
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,152,* @since 2.2
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,135,ublic String getPattern() {
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,154,public Localizable getLocalizablePattern() {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,154,"eturn buildMessage(locale, pattern, arguments);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,173,if (pattern != null) {
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,174,"return buildMessage(locale, pattern, arguments);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,176,"return """";"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,223,"return createArithmeticException(new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,227,* Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,228,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,229,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,230,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,231,* @return built exception
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,232,* @since 2.2
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,234,"public static ArithmeticException createArithmeticException(final Localizable pattern,"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,235,final Object ... arguments) {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,204,rivate static final long serialVersionUID = 7705628723242533939L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,239,private static final long serialVersionUID = 5305498554076846637L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,265,"return createArrayIndexOutOfBoundsException(new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,269,* Constructs a new <code>ArrayIndexOutOfBoundsException</code> with specified formatted detail message.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,270,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,271,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,272,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,273,* @return built exception
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,274,* @since 2.2
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,276,"public static ArrayIndexOutOfBoundsException createArrayIndexOutOfBoundsException(final Localizable pattern,"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,277,final Object ... arguments) {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,233,rivate static final long serialVersionUID = -3394748305449283486L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,281,private static final long serialVersionUID = 6718518191249632175L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,307,"return createEOFException(new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,311,* Constructs a new <code>EOFException</code> with specified formatted detail message.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,312,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,313,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,314,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,315,* @return built exception
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,317,"public static EOFException createEOFException(final Localizable pattern,"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,318,final Object ... arguments) {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,262,rivate static final long serialVersionUID = 279461544586092584L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,322,private static final long serialVersionUID = 6067985859347601503L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,365,"return createIllegalArgumentException(new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,369,* Constructs a new <code>IllegalArgumentException</code> with specified formatted detail message.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,370,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,371,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,372,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,373,* @return built exception
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,374,* @since 2.2
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,376,"public static IllegalArgumentException createIllegalArgumentException(final Localizable pattern,"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,377,final Object ... arguments) {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,308,rivate static final long serialVersionUID = -6555453980658317913L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,381,private static final long serialVersionUID = -4284649691002411505L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,420,"return createIllegalStateException(new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,424,* Constructs a new <code>IllegalStateException</code> with specified formatted detail message.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,425,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,426,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,427,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,428,* @return built exception
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,429,* @since 2.2
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,431,"public static IllegalStateException createIllegalStateException(final Localizable pattern,"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,432,final Object ... arguments) {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,350,rivate static final long serialVersionUID = -95247648156277208L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,436,private static final long serialVersionUID = 6880901520234515725L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,462,"return createConcurrentModificationException(new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,466,* Constructs a new <code>ConcurrentModificationException</code> with specified formatted detail message.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,467,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,468,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,469,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,470,* @return built exception
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,471,* @since 2.2
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,473,"public static ConcurrentModificationException createConcurrentModificationException(final Localizable pattern,"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,474,final Object ... arguments) {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,379,rivate static final long serialVersionUID = 6134247282754009421L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,478,private static final long serialVersionUID = -1878427236170442052L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,504,"return createNoSuchElementException(new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,508,* Constructs a new <code>NoSuchElementException</code> with specified formatted detail message.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,509,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,510,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,511,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,512,* @return built exception
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,513,* @since 2.2
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,515,"public static NoSuchElementException createNoSuchElementException(final Localizable pattern,"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,516,final Object ... arguments) {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,408,rivate static final long serialVersionUID = 7304273322489425799L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,520,private static final long serialVersionUID = 1632410088350355086L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,546,"return createNullPointerException(new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,550,* Constructs a new <code>NullPointerException</code> with specified formatted detail message.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,551,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,552,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,553,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,554,* @return built exception
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,555,* @since 2.2
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,557,"public static NullPointerException createNullPointerException(final Localizable pattern,"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,558,final Object ... arguments) {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,437,rivate static final long serialVersionUID = -3075660477939965216L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,562,private static final long serialVersionUID = 451965530686593945L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,591,"return createParseException(offset, new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,595,* Constructs a new <code>ParseException</code> with specified
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,596,* formatted detail message.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,597,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,598,* @param offset offset at which error occurred
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,599,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,600,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,601,* @return built exception
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,602,* @since 2.2
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,604,"public static ParseException createParseException(final int offset,"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,605,"final Localizable pattern,"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,606,final Object ... arguments) {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,469,rivate static final long serialVersionUID = -1103502177342465975L;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,610,private static final long serialVersionUID = 8153587599409010120L;
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,492,"inal String pattern  = ""internal error, please fill a bug report at {0}"";"
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,503,"eturn buildMessage(Locale.US, pattern, argument);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,643,"return buildMessage(Locale.US, LocalizedFormats.INTERNAL_ERROR, argument);"
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,509,"eturn buildMessage(Locale.getDefault(), pattern, argument);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,649,"return buildMessage(Locale.getDefault(), LocalizedFormats.INTERNAL_ERROR, argument);"
True,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,21,import org.apache.commons.math.util.DummyLocalizable;
True,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,22,import org.apache.commons.math.util.Localizable;
True,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,38, Constructs an exception with specified formatted detail message.
False,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,39, Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,41,* Constructs an exception with a default detail message.
False,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,43,"uper(""Maximal number of evaluations ({0}) exceeded"", maxEvaluations);"
True,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,45,"super(LocalizedFormats.MAX_EVALUATIONS_EXCEEDED, maxEvaluations);"
True,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,55,"* @deprecated as of 2.2 replaced by {@link #MaxEvaluationsExceededException(int, Localizable, Object...)}"
True,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,57,@Deprecated
True,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,60,"this(maxEvaluations, new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,64,* Constructs an exception with specified formatted detail message.
True,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,65,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,66,* @param maxEvaluations the exceeded maximal number of evaluations
True,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,67,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,68,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,69,* @since 2.2
True,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,71,"public MaxEvaluationsExceededException(final int maxEvaluations,"
True,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java,72,"final Localizable pattern, final Object ... arguments) {"
True,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,21,import org.apache.commons.math.util.DummyLocalizable;
True,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,22,import org.apache.commons.math.util.Localizable;
True,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,38, Constructs an exception with specified formatted detail message.
False,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,39, Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,41,* Constructs an exception with a default detail message.
False,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,43,"uper(""Maximal number of iterations ({0}) exceeded"", maxIterations);"
True,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,45,"super(LocalizedFormats.MAX_ITERATIONS_EXCEEDED, maxIterations);"
True,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,55,"* @deprecated as of 2.2 replaced by {@link #MaxIterationsExceededException(int, Localizable, Object...)}"
True,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,57,@Deprecated
True,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,60,"this(maxIterations, new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,64,* Constructs an exception with specified formatted detail message.
True,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,65,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,66,* @param maxIterations the exceeded maximal number of iterations
True,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,67,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,68,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,69,* @since 2.2
True,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,71,"public MaxIterationsExceededException(final int maxIterations,"
True,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,src/main/java/org/apache/commons/math/MaxIterationsExceededException.java,72,"final Localizable pattern, final Object ... arguments) {"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,18,ackage org.apache.commons.math;
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,20,mport java.util.ListResourceBundle;
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,23, French localization message resources for the commons-math library.
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,24, @version $Revision$ $Date$
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,25, @since 1.2
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,27,ublic class MessagesResources_fr
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,28,xtends ListResourceBundle {
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,30,** Non-translated/translated messages arrays. */
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,31,rivate static final Object[][] CONTENTS = {
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,33,/ org.apache.commons.math.util.MathUtils
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,34," ""must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,35,"n doit \u00eatre sup\u00e9rieur ou \u00e9gal \u00e0 k "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,36,"pour le coefficient du bin\u00f4me (n,k), or n = {0}, k = {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,37," ""must have n >= 0 for binomial coefficient (n,k), got n = {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,38,"n doit \u00eatre positif pour le coefficient du bin\u00f4me (n,k), or n = {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,39," ""must have n >= 0 for n!, got n = {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,40,"n doit \u00eatre positif pour le calcul de n!, or n = {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,41," ""overflow: gcd({0}, {1}) is 2^31"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,42,"d\u00e9passement de capacit\u00e9 : le PGCD de {0} et {1} vaut 2^31"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,43," ""overflow: gcd({0}, {1}) is 2^63"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,44,"d\u00e9passement de capacit\u00e9 : le PGCD de {0} et {1} vaut 2^63"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,45," ""overflow: lcm({0}, {1}) is 2^31"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,46,"d\u00e9passement de capacit\u00e9 : le MCM de {0} et {1} vaut 2^31"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,47," ""overflow: lcm({0}, {1}) is 2^63"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,48,"d\u00e9passement de capacit\u00e9 : le MCM de {0} et {1} vaut 2^63"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,49," ""cannot raise an integral value to a negative power ({0}^{1})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,50,"impossible d''\u00e9lever une valeur enti\u00e8re "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,51,"\u00e0 une puissance n\u00e9gative ({0}^{1})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,52," ""invalid rounding method {0}, valid methods: {1} ({2}), {3} ({4}), {5} ({6}), {7} ({8}), {9} ({10}), {11} ({12}), {13} ({14}), {15} ({16})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,53,"m\u00e9thode d''arondi {0} invalide, m\u00e9thodes valides : {1} ({2}), {3} ({4}), {5} ({6}), {7} ({8}), {9} ({10}), {11} ({12}), {13} ({14}), {15} ({16})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,54," ""Cannot normalize to an infinite value"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,55,"impossible de normaliser vers une valeur infinie"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,56," ""Cannot normalize to NaN"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,57,"impossible de normaliser vers NaN"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,58," ""Array contains an infinite element, {0} at index {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,59,"le tableau contient l''\u00e9l\u00e9ment infini {0} \u00e0 l''index {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,61,/ org.apache.commons.math.FunctionEvaluationException
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,62," ""evaluation failed for argument = {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,63,"erreur d''\u00e9valuation pour l''argument {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,65,/ org.apache.commons.math.DuplicateSampleAbscissaException
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,66," ""Abscissa {0} is duplicated at both indices {1} and {2}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,67,"Abscisse {0} dupliqu\u00e9e aux indices {1} et {2}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,69,/ org.apache.commons.math.ConvergenceException
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,70," ""Convergence failed"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,71,"\u00c9chec de convergence"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,73,/ org.apache.commons.math.ArgumentOutsideDomainException
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,74," ""Argument {0} outside domain [{1} ; {2}]"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,75,"Argument {0} hors du domaine [{1} ; {2}]"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,77,/ org.apache.commons.math.MaxIterationsExceededException
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,78," ""Maximal number of iterations ({0}) exceeded"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,79,"Nombre maximal d''it\u00e9rations ({0}) d\u00e9pass\u00e9"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,81,/ org.apache.commons.math.MaxEvaluationsExceededException
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,82," ""Maximal number of evaluations ({0}) exceeded"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,83,"Nombre maximal d''\u00e9valuations ({0}) d\u00e9pass\u00e9"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,85,/ org.apache.commons.math.analysis.interpolation.SplineInterpolator
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,86,/ org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,87,/ org.apache.commons.math.DimensionMismatchException
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,88,/ org.apache.commons.math.optimization.LeastSquaresConverter
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,89,/ org.apache.commons.math.optimization.direct.DirectSearchOptimizer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,90,/ org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,91,/ org.apache.commons.math.ode.ContinuousOutputModel
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,92,/ org.apache.commons.math.random.UncorrelatedRandomVectorGenerator
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,93,/ org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,94,/ org.apache.commons.math.stat.inference.ChiSquareTestImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,95,/ org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatingFunction
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,96," ""dimension mismatch {0} != {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,97,"dimensions incompatibles {0} != {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,99,/ org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatingFunction
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,100," ""no data"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,101,"aucune donn\u00e9e"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,103,/ org.apache.commons.math.analysis.interpolation.MicrosphereInterpolator
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,104," ""brightness exponent should be positive or null, but got {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,105,"l''exposant de brillance devrait \u00eatre positif ou null, or e = {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,106," ""number of microsphere elements must be positive, but got {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,107,"le nombre d''\u00e9l\u00e9ments de la microsph\u00e8re devrait \u00eatre positif, or n = {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,109,/ org.apache.commons.math.linear.decomposition.NotPositiveDefiniteMatrixException
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,110," ""not positive definite matrix"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,111,"matrice non d\u00e9finie positive"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,113,/ org.apache.commons.math.linear.decomposition.NotSymmetricMatrixException
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,114," ""not symmetric matrix"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,115,"matrice non symm\u00e9trique"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,117,/ org.apache.commons.math.fraction.FractionConversionException
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,118," ""Unable to convert {0} to fraction after {1} iterations"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,119,"Impossible de convertir {0} en fraction apr\u00e8s {1} it\u00e9rations"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,120," ""Overflow trying to convert {0} to fraction ({1}/{2})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,121,"D\u00e9passement de capacit\u00e9 lors de la conversion de {0} en fraction ({1}/{2})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,123,/ org.apache.commons.math.fraction.BigFraction
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,124," ""numerator is null"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,125,"le num\u00e9rateur est null"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,126," ""denimonator is null"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,127,"le d\u00e9nominateur est null"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,128," ""denominator must be different from 0"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,129,"le d\u00e9nominateur doit \u00eatre diff\u00e9rent de 0"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,130," ""cannot convert NaN value"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,131,"les valeurs NaN ne peuvent \u00eatre converties"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,132," ""cannot convert infinite value"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,133,"les valeurs infinies ne peuvent \u00eatre converties"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,135,/ org.apache.commons.math.fraction.AbstractFormat
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,136," ""denominator format can not be null"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,137,"le format du d\u00e9nominateur ne doit pas \u00eatre nul"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,138," ""numerator format can not be null"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,139,"le format du num\u00e9rateur ne doit pas \u00eatre nul"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,141,/ org.apache.commons.math.fraction.FractionFormat
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,142," ""cannot convert given object to a fraction number: {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,143,"impossible de convertir l''objet sous forme d''un nombre rationnel : {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,145,/ org.apache.commons.math.fraction.FractionFormat
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,146,/ org.apache.commons.math.fraction.BigFractionFormat
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,147," ""unparseable fraction number: \""{0}\"""","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,148,"\u00e9chec d''analyse du nombre rationnel \""{0}\"""" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,149," ""cannot format given object as a fraction number"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,150,"impossible de formater l''objet sous forme d''un nombre rationnel"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,152,/ org.apache.commons.math.fraction.ProperFractionFormat
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,153,/ org.apache.commons.math.fraction.ProperBigFractionFormat
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,154," ""whole format can not be null"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,155,"le format complet ne doit pas \u00eatre nul"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,157,/ org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,158," ""function is null"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,159,"la fonction est nulle"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,160," ""bad value for maximum iterations number: {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,161,"valeur invalide pour le nombre maximal d''it\u00e9rations : {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,162," ""invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,163,"param\u00e8tres d''encadrement invalides : borne inf\u00e9rieure = {0}, valeur initiale = {1}, borne sup\u00e9rieure = {2}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,164," ""number of iterations={0}, maximum iterations={1}, initial={2}, lower bound={3}, upper bound={4},"" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,165," final a value={5}, final b value={6}, f(a)={7}, f(b)={8}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,166,"nombre d''it\u00e9rations = {0}, it\u00e9rations maximum = {1}, valeur initiale = {2},"" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,167," borne inf\u00e9rieure = {3}, borne sup\u00e9rieure = {4},"" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,168," valeur a finale = {5}, valeur b finale = {6}, f(a) = {7}, f(b) = {8}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,170,/ org.apache.commons.math.analysis.solvers.LaguerreSolver
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,171," ""polynomial degree must be positive: degree={0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,172,"le polyn\u00f4me doit \u00eatre de degr\u00e9 positif : degr\u00e9 = {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,174,/ org.apache.commons.math.analysis.solvers.SecantSolver
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,175," ""function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,176,"les valeurs de la fonctions aux bornes sont de m\u00eame signe, bornes : [{0}, {1}], valeurs : [{2}, {3}]"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,178,/ org.apache.commons.math.analysis.interpolation.SplineInterpolator
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,179,/ org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,180," ""{0} points are required, got only {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,181,"{0} sont n\u00e9cessaires, seuls {1} ont \u00e9t\u00e9 fournis"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,183,/ org.apache.commons.math.analysis.interpolation.SplineInterpolator
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,184," ""points {0} and {1} are not strictly increasing ({2} >= {3})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,185,"les points {0} et {1} ne sont pas strictement croissants ({2} >= {3})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,186," ""points {0} and {1} are not strictly decreasing ({2} <= {3})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,187,"les points {0} et {1} ne sont pas strictement d\u00e9croissants ({2} <= {3})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,188," ""points {0} and {1} are not increasing ({2} > {3})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,189,"les points {0} et {1} ne sont pas croissants ({2} > {3})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,190," ""points {0} and {1} are not decreasing ({2} < {3})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,191,"les points {0} et {1} ne sont pas d\u00e9croissants ({2} < {3})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,193,/ org.apache.commons.math.analysis.interpolation.LoessInterpolator
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,194," ""bandwidth must be in the interval [0,1], but got {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,195,"la largeur de bande doit \u00eatre dans l''intervalle [0, 1], alors qu'elle vaut {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,196," ""the number of robustness iterations must be non-negative, but got {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,197,"le nombre d''it\u00e9rations robuste ne peut \u00eatre n\u00e9gatif, alors qu''il est de {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,198," ""Loess expects the abscissa and ordinate arrays to be of the same size, "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,199,"but got {0} abscissae and {1} ordinatae"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,200,"la r\u00e9gression Loess n\u00e9cessite autant d''abscisses que d''ordonn\u00e9es, "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,201,"mais {0} abscisses et {1} ordonn\u00e9es ont \u00e9t\u00e9 fournies"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,202," ""Loess expects at least 1 point"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,203,"la r\u00e9gression Loess n\u00e9cessite au moins un point"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,204," ""the bandwidth must be large enough to accomodate at least 2 points. There are {0} "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,205," data points, and bandwidth must be at least {1}  but it is only {2}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,206,"la largeur de bande doit \u00eatre assez grande pour supporter au moins 2 points. Il y a {0}"" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,207,"donn\u00e9es et la largeur de bande doit \u00eatre au moins de {1}, or elle est seulement de {2}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,208," ""all abscissae must be finite real numbers, but {0}-th is {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,209,"toutes les abscisses doivent \u00eatre des nombres r\u00e9els finis, mais l''abscisse {0} vaut {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,210," ""all ordinatae must be finite real numbers, but {0}-th is {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,211,"toutes les ordonn\u00e9es doivent \u00eatre des nombres r\u00e9els finis, mais l''ordonn\u00e9e {0} vaut {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,212," ""all weights must be finite real numbers, but {0}-th is {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,213,"tous les poids doivent \u00eatre des nombres r\u00e9els finis, mais le poids {0} vaut {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,214," ""the abscissae array must be sorted in a strictly increasing order, "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,215,"but the {0}-th element is {1} whereas {2}-th is {3}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,216,"les abscisses doivent \u00eatre en ordre strictement croissant, "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,217,"mais l''\u00e9l\u00e9ment {0} vaut {1} alors que l''\u00e9l\u00e9ment {2} vaut {3}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,219,/ org.apache.commons.math.util.ContinuedFraction
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,220," ""Continued fraction convergents diverged to +/- infinity for value {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,221,"Divergence de fraction continue \u00e0 l''infini pour la valeur {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,222," ""Continued fraction convergents failed to converge for value {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,223,"\u00c9chec de convergence de fraction continue pour la valeur {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,224," ""Continued fraction diverged to NaN for value {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,225,"Divergence de fraction continue \u00e0 NaN pour la valeur {0}""},"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,227,/ org.apache.commons.math.util.DefaultTransformer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,228," ""Conversion Exception in Transformation, Object is null"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,229,"Exception de conversion dans une transformation, l''objet est nul"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,230," ""Conversion Exception in Transformation: {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,231,"Exception de conversion dans une transformation : {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,233,/ org.apache.commons.math.optimization.MultiStartOptimizer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,234," ""no optimum computed yet"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,235,"aucun optimum n''a encore \u00e9t\u00e9 calcul\u00e9"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,237,/ org.apache.commons.math.optimization.direct.DirectSearchOptimizer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,238," ""simplex must contain at least one point"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,239,"le simplex doit contenir au moins un point"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,240," ""equal vertices {0} and {1} in simplex configuration"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,241,"sommets {0} et {1} \u00e9gaux dans la configuration du simplex"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,243,/ org.apache.commons.math.estimation.AbstractEstimation
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,244," ""maximal number of evaluations exceeded ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,245,"nombre maximal d''\u00e9valuations d\u00e9pass\u00e9 ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,247,/ org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,248," ""unable to compute covariances: singular problem"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,249,"impossible de calculer les covariances : probl\u00e8me singulier""},"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,250," ""no degrees of freedom ({0} measurements, {1} parameters)"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,251,"aucun degr\u00e9 de libert\u00e9 ({0} mesures, {1} param\u00e8tres)"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,253,/ org.apache.commons.math.optimization.general.GaussNewtonOptimizer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,254," ""unable to solve: singular problem"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,255,"r\u00e9solution impossible : probl\u00e8me singulier"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,257,/ org.apache.commons.math.optimization.general.LevenbergMarquardtEstimator
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,258," ""cost relative tolerance is too small ({0}), no further reduction in the sum of squares is possible"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,259,"trop petite tol\u00e9rance relative sur le co\u00fbt ({0}), aucune r\u00e9duction de la somme des carr\u00e9s n''est possible"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,260," ""parameters relative tolerance is too small ({0}), no further improvement in the approximate solution is possible"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,261,"trop petite tol\u00e9rance relative sur les param\u00e8tres ({0}), aucune am\u00e9lioration de la solution approximative n''est possible"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,262," ""orthogonality tolerance is too small ({0}), solution is orthogonal to the jacobian"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,263,"trop petite tol\u00e9rance sur l''orthogonalit\u00e9 ({0}), la solution est orthogonale \u00e0 la jacobienne"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,264," ""unable to perform Q.R decomposition on the {0}x{1} jacobian matrix"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,265,"impossible de calculer la factorisation Q.R de la matrice jacobienne {0}x{1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,267,/ org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,268," ""unable to bracket optimum in line search"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,269,"impossible d''encadrer l''optimum lors de la recherche lin\u00e9aire"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,271,/ org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,272," ""unable to first guess the harmonic coefficients"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,273,"impossible de faire une premi\u00e8re estimation des coefficients harmoniques"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,275,/ org.apache.commons.math.optimization.fitting.HarmonicCoefficientsGuesser
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,276," ""sample contains {0} observed points, at least {1} are required"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,277,"l''\u00e9chantillon ne contient que {0} points alors qu''au moins {1} sont n\u00e9cessaires"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,279,/ org.apache.commons.math.optimization.linear.NoFeasibleSolutionException
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,280," ""no feasible solution"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,281,"aucune solution r\u00e9alisable"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,283,/ org.apache.commons.math.optimization.linear.UnboundedSolutionException
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,284," ""unbounded solution"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,285,"solution non born\u00e9e"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,287,/ org.apache.commons.math.geometry.CardanEulerSingularityException
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,288," ""Cardan angles singularity"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,289,"singularit\u00e9 d''angles de Cardan"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,290," ""Euler angles singularity"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,291,"singularit\u00e9 d''angles d''Euler"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,293,/ org.apache.commons.math.geometry.Rotation
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,294," ""a {0}x{1} matrix cannot be a rotation matrix"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,295,"une matrice {0}x{1} ne peut pas \u00eatre une matrice de rotation"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,296," ""the closest orthogonal matrix has a negative determinant {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,297,"la matrice orthogonale la plus proche a un d\u00e9terminant n\u00e9gatif {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,298," ""unable to orthogonalize matrix in {0} iterations"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,299,"impossible de rendre la matrice orthogonale en {0} it\u00e9rations"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,301,/ org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,302," ""minimal step size ({0,number,0.00E00}) reached, integration needs {1,number,0.00E00}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,303,"pas minimal ({0,number,0.00E00}) atteint, l''int\u00e9gration n\u00e9cessite {1,number,0.00E00}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,304," ""dimensions mismatch: state vector has dimension {0}, absolute tolerance vector has dimension {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,305,"incompatibilit\u00e9 de dimensions entre le vecteur d''\u00e9tat ({0}), et le vecteur de tol\u00e9rance absolue ({1})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,306," ""dimensions mismatch: state vector has dimension {0}, relative tolerance vector has dimension {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,307,"incompatibilit\u00e9 de dimensions entre le vecteur d''\u00e9tat ({0}), et le vecteur de tol\u00e9rance relative ({1})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,309,"/ org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator,"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,310,/ org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,311," ""dimensions mismatch: ODE problem has dimension {0}, initial state vector has dimension {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,312,"incompatibilit\u00e9 de dimensions entre le probl\u00e8me ODE ({0}), et le vecteur d''\u00e9tat initial ({1})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,313," ""dimensions mismatch: ODE problem has dimension {0}, final state vector has dimension {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,314,"incompatibilit\u00e9 de dimensions entre le probl\u00e8me ODE ({0}), et le vecteur d''\u00e9tat final ({1})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,315," ""too small integration interval: length = {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,316,"intervalle d''int\u00e9gration trop petit : {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,318,/ org.apache.commons.math.ode.MultistepIntegrator
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,319," ""{0} method needs at least one previous point"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,320,"la m\u00e9thode {0} n\u00e9cessite au moins un point pr\u00e9c\u00e9dent"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,322,/ org.apache.commons.math.ode.ContinuousOutputModel
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,323,/ org.apache.commons.math.optimization.direct.DirectSearchOptimizer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,324," ""unexpected exception caught"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,325,"exception inattendue lev\u00e9e"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,326," ""propagation direction mismatch"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,327,"directions de propagation incoh\u00e9rentes"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,328," ""{0} wide hole between models time ranges"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,329,"trou de longueur {0} entre les domaines temporels des mod\u00e8les"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,331,/ org.apache.commons.math.optimization.direct.DirectSearchOptimizer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,332," ""none of the {0} start points lead to convergence"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,333,"aucun des {0} points de d\u00e9part n''aboutit \u00e0 une convergence""  },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,335,/ org.apache.commons.math.random.ValueServer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,336," ""unknown mode {0}, known modes: {1} ({2}), {3} ({4}), {5} ({6}), {7} ({8}), {9} ({10}) and {11} ({12})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,337,"mode {0} inconnu, modes connus : {1} ({2}), {3} ({4}), {5} ({6}), {7} ({8}), {9} ({10}) et {11} ({12})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,338," ""digest not initialized"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,339,"mod\u00e8le empirique non initialis\u00e9"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,341,/ org.apache.commons.math.random.EmpiricalDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,342," ""distribution not loaded"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,343,"aucune distribution n''a \u00e9t\u00e9 charg\u00e9e"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,344," ""no bin selected"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,345,"aucun compartiment s\u00e9lectionn\u00e9"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,346," ""input data comes from unsupported datasource: {0}, supported sources: {1}, {2}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,347,"les donn\u00e9es d''entr\u00e9e proviennent "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,348,"d''une source non support\u00e9e : {0}, sources support\u00e9es : {1}, {2}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,350,/ org.apache.commons.math.random.EmpiricalDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,351,/ org.apache.commons.math.random.ValueServer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,352," ""URL {0} contains no data"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,353,"l''adresse {0} ne contient aucune donn\u00e9e"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,355,/ org.apache.commons.math.random.AbstractRandomGenerator
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,356,/ org.apache.commons.math.random.BitsStreamGenerator
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,357," ""upper bound must be positive ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,358,"la borne sup\u00e9rieure doit \u00eatre positive ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,360,/ org.apache.commons.math.random.RandomDataImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,361," ""length must be positive ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,362,"la longueur doit \u00eatre positive ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,363," ""upper bound ({0}) must be greater than lower bound ({1})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,364,"la borne sup\u00e9rieure ({0}) doit \u00eatre sup\u00e9rieure"" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,365," \u00e0 la borne inf\u00e9rieure ({1})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,366," ""permutation k ({0}) exceeds n ({1})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,367,"la permutation k ({0}) d\u00e9passe n ({1})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,368," ""permutation k ({0}) must be positive"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,369,"la permutation k ({0}) doit \u00eatre positive"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,370," ""sample size ({0}) exceeds collection size ({1})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,371,"la taille de l''\u00e9chantillon ({0}) d\u00e9passe la taille de la collection ({1})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,373,/ org.apache.commons.math.linear.decomposition.EigenDecompositionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,374," ""cannot solve degree {0} equation"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,375,"impossible de r\u00e9soudre une \u00e9quation de degr\u00e9 {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,376," ""eigen decomposition of assymetric matrices not supported yet"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,377,"la d\u00e9composition en valeurs/vecteurs propres de matrices "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,378,"non sym\u00e9triques n''est pas encore disponible"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,380,/ org.apache.commons.math.linear.decomposition.NonSquareMatrixException
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,381,/ org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,382," ""a {0}x{1} matrix was provided instead of a square matrix"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,383,"une matrice {0}x{1} a \u00e9t\u00e9 fournie \u00e0 la place d''une matrice carr\u00e9e"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,385,/ org.apache.commons.math.linear.decomposition.SingularMatrixException
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,386," ""matrix is singular"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,387,"matrice singuli\u00e8re"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,389,/ org.apache.commons.math.linear.decomposition.SingularValueDecompositionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,390," ""cutoff singular value is {0}, should be at most {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,391,"la valeur singuli\u00e8re de coupure vaut {0}, elle ne devrait pas d\u00e9passer {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,393,/ org.apache.commons.math.linear.decomposition.CholeskyDecompositionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,394,/ org.apache.commons.math.linear.decomposition.EigenDecompositionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,395,/ org.apache.commons.math.linear.decomposition.LUDecompositionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,396,/ org.apache.commons.math.linear.decomposition.QRDecompositionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,397,/ org.apache.commons.math.linear.decomposition.SingularValueDecompositionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,398," ""dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,399,"dimensions incoh\u00e9rentes : {0}x{1} \u00e0 la place de {2}x{3}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,401,/ org.apache.commons.math.linear.decomposition.CholeskyDecompositionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,402,/ org.apache.commons.math.linear.decomposition.EigenDecompositionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,403,/ org.apache.commons.math.linear.decomposition.LUDecompositionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,404,/ org.apache.commons.math.linear.decomposition.QRDecompositionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,405,/ org.apache.commons.math.linear.decomposition.SingularValueDecompositionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,406,/ org.apache.commons.math.linear.ArrayRealVector
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,407,/ org.apache.commons.math.linear.SparseRealVector
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,408," ""vector length mismatch: got {0} but expected {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,409,"taille de vecteur invalide : {0} au lieu de {1} attendue"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,411,/ org.apache.commons.math.linear.ArrayRealVector
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,412,/ org.apache.commons.math.linear.ArrayFieldVector
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,413,/ org.apache.commons.math.linear.SparseRealVector
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,414," ""index {0} out of allowed range [{1}, {2}]"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,415,"index {0} hors de la plage autoris\u00e9e [{1}, {2}]"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,416," ""vector must have at least one element"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,417,"un vecteur doit comporter au moins un \u00e9l\u00e9ment"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,418," ""position {0} and size {1} don't fit to the size of the input array {2}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,419,"la position {0} et la taille {1} sont incompatibles avec la taille du tableau d''entr\u00e9e {2}""},"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,421,/ org.apache.commons.math.linear.AbstractRealMatrix
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,422,/ org.apache.commons.math.linear.AbstractFieldMatrix
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,423," ""invalid row dimension: {0} (must be positive)"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,424,"nombre de lignes invalide : {0} (doit \u00eatre positif)"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,425," ""invalid column dimension: {0} (must be positive)"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,426,"nombre de colonnes invalide : {0} (doit \u00eatre positif)"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,427," ""matrix must have at least one row"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,428,"une matrice doit comporter au moins une ligne"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,429," ""matrix must have at least one column"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,430,"une matrice doit comporter au moins une colonne"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,432,/ org.apache.commons.math.linear.AbstractRealMatrix
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,433,/ org.apache.commons.math.linear.AbstractFieldMatrix
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,434,/ org.apache.commons.math.stat.inference.ChiSquareTestImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,435," ""some rows have length {0} while others have length {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,436,"certaines lignes ont une longueur de {0} alors que d''autres ont une longueur de {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,438,/ org.apache.commons.math.linear.MatrixUtils
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,439," ""row index {0} out of allowed range [{1}, {2}]"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,440,"index de ligne {0} hors de la plage autoris\u00e9e [{1}, {2}]"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,441," ""column index {0} out of allowed range [{1}, {2}]"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,442,"index de colonne {0} hors de la plage autoris\u00e9e [{1}, {2}]"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,443," ""initial row {0} after final row {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,444,"ligne initiale {0} apr\u00e8s la ligne finale {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,445," ""initial column {0} after final column {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,446,"colonne initiale {0} apr\u00e8s la colonne finale {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,447," ""empty selected row index array"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,448,"tableau des indices de lignes s\u00e9lectionn\u00e9es vide"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,449," ""empty selected column index array"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,450,"tableau des indices de colonnes s\u00e9lectionn\u00e9es vide"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,451," ""{0}x{1} and {2}x{3} matrices are not addition compatible"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,452,"les dimensions {0}x{1} et {2}x{3} sont incompatibles pour l'addition matricielle"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,453," ""{0}x{1} and {2}x{3} matrices are not subtraction compatible"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,454,"les dimensions {0}x{1} et {2}x{3} sont incompatibles pour la soustraction matricielle"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,455," ""{0}x{1} and {2}x{3} matrices are not multiplication compatible"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,456,"les dimensions {0}x{1} et {2}x{3} sont incompatibles pour la multiplication matricielle"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,458,/ org.apache.commons.math.linear.BlockRealMatrix
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,459," ""wrong array shape (block length = {0}, expected {1})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,460,"forme de tableau erron\u00e9e (bloc de longueur {0} au lieu des {1} attendus)"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,462,/ org.apache.commons.math.complex.Complex
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,463," ""cannot compute nth root for null or negative n: {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,464,"impossible de calculer la racine ni\u00e8me pour n n\u00e9gatif ou nul : {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,466,/ org.apache.commons.math.complex.ComplexFormat
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,467," ""unparseable complex number: \""{0}\"""","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,468,"\u00e9chec d''analyse du nombre complexe \""{0}\"""" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,469," ""cannot format a {0} instance as a complex number"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,470,"impossible de formater une instance de {0} comme un nombre complexe"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,471," ""empty string for imaginary character"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,472,"cha\u00eene vide pour le caract\u00e8 imaginaire"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,473," ""null imaginary format"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,474,"format imaginaire nul"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,475," ""null real format"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,476,"format r\u00e9el nul"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,478,/ org.apache.commons.math.complex.ComplexUtils
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,479," ""negative complex module {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,480,"module n\u00e9gatif ({0}) pour un nombre complexe"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,482,/ org.apache.commons.math.geometry.Vector3DFormat
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,483," ""unparseable 3D vector: \""{0}\"""","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,484,"\u00e9chec d''analyse du vecteur de dimension 3 \""{0}\"""" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,485," ""cannot format a {0} instance as a 3D vector"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,486,"impossible de formater une instance de {0} comme un vecteur de dimension 3"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,488,/ org.apache.commons.math.linear.RealVectorFormat
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,489," ""unparseable real vector: \""{0}\"""","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,490,"\u00e9chec d''analyse du vecteur r\u00e9el \""{0}\"""" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,491," ""cannot format a {0} instance as a real vector"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,492,"impossible de formater une instance de {0} comme un vecteur r\u00e9el"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,494,/ org.apache.commons.math.util.ResizableDoubleArray
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,495," ""the index specified: {0} is larger than the current maximal index {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,496,"l''index sp\u00e9cifi\u00e9 ({0}) d\u00e9passe l''index maximal courant ({1})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,497," ""elements cannot be retrieved from a negative array index {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,498,"impossible d''extraire un \u00e9l\u00e9ment \u00e0 un index n\u00e9gatif ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,499," ""cannot set an element at a negative index {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,500,"impossible de mettre un \u00e9l\u00e9ment \u00e0 un index n\u00e9gatif ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,501," ""cannot substitute an element from an empty array"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,502,"impossible de substituer un \u00e9l\u00e9ment dans un tableau vide"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,503," ""contraction criteria ({0}) smaller than the expansion factor ({1}).  This would "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,504,"lead to a never ending loop of expansion and contraction as a newly expanded "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,505,"internal storage array would immediately satisfy the criteria for contraction."","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,506,"crit\u00e8re de contraction ({0}) inf\u00e9rieur au facteur d''extension. Ceci "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,507,"induit une boucle infinie d''extensions/contractions car tout tableau de stockage "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,508,"fra\u00eechement \u00e9tendu respecte imm\u00e9diatement le crit\u00e8re de contraction.""},"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,509," ""contraction criteria smaller than one ({0}).  This would lead to a never ending "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,510,"loop of expansion and contraction as an internal storage array length equal "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,511,"to the number of elements would satisfy the contraction criteria."","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,512,"crit\u00e8re de contraction inf\u00e9rieur \u00e0 un ({0}). Ceci induit une boucle "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,513,"infinie d''extensions/contractions car tout tableau de stockage de longueur \u00e9gale "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,514,"au nombre d''\u00e9l\u00e9ments respecte le crit\u00e8re de contraction."" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,515," ""expansion factor smaller than one ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,516,"facteur d''extension inf\u00e9rieur \u00e0 un ({0})""},"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,517," ""cannot discard {0} elements from a {1} elements array"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,518,"impossible d''enlever {0} \u00e9l\u00e9ments d''un tableau en contenant {1}""},"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,519," ""cannot discard a negative number of elements ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,520,"impossible d''enlever un nombre d''\u00e9l\u00e9ments{0} n\u00e9gatif""},"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,521," ""unsupported expansion mode {0}, supported modes are {1} ({2}) and {3} ({4})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,522,"mode d''extension {0} no support\u00e9, les modes support\u00e9s sont {1} ({2}) et {3} ({4})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,523," ""initial capacity ({0}) is not positive"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,524,"la capacit\u00e9 initiale ({0}) n''est pas positive"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,525," ""index ({0}) is not positive"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,526,"l''indice ({0}) n''est pas positif"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,528,/ org.apache.commons.math.analysis.polynomials.PolynomialFunction
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,529,/ org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonForm
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,530," ""empty polynomials coefficients array"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,531,"tableau de coefficients polyn\u00f4miaux vide"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,533,/ org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonForm
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,534," ""array sizes should have difference 1 ({0} != {1} + 1)"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,535,"les tableaux devraient avoir une diff\u00e9rence de taille de 1 ({0} != {1} + 1)"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,537,/ org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,538," ""identical abscissas x[{0}] == x[{1}] == {2} cause division by zero"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,539,"division par z\u00e9ro caus\u00e9e par les abscisses identiques x[{0}] == x[{1}] == {2}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,541,/ org.apache.commons.math.analysis.polynomials.PolynomialSplineFunction
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,542," ""spline partition must have at least {0} points, got {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,543,"une partiction spline n\u00e9cessite au moins {0} points, seuls {1} ont \u00e9t\u00e9 fournis"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,544," ""knot values must be strictly increasing"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,545,"les n\u0153uds d''interpolation doivent \u00eatre strictement croissants"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,546," ""number of polynomial interpolants must match the number of segments ({0} != {1} - 1)"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,547,"le nombre d''interpolants polyn\u00f4miaux doit correspondre au nombre de segments ({0} != {1} - 1)"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,549,/ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,550," ""function to solve cannot be null"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,551,"la fonction \u00e0 r\u00e9soudre ne peux pas \u00eatre nulle"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,552," ""invalid interval, initial value parameters:  lower={0}, initial={1}, upper={2}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,553,"param\u00e8tres de l''intervalle initial invalides : borne inf = {0}, valeur initiale = {1}, borne sup = {2}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,555,/ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,556,/ org.apache.commons.math.analysis.solvers.BrentSolver
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,557," ""function values at endpoints do not have different signs.  Endpoints: [{0}, {1}], Values: [{2}, {3}]"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,558,"les valeurs de la fonction aux bornes n''ont pas des signes diff\u00e9rents. Bornes : [{0}, {1}], valeurs : [{2}, {3}]"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,560,/ org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,561,/ org.apache.commons.math.analysis.integration.UnivariateRealIntegratorImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,562,/ org.apache.commons.math.transform.FastFourierTransformer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,563," ""endpoints do not specify an interval: [{0}, {1}]"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,564,"les extr\u00e9mit\u00e9s ne constituent pas un intervalle : [{0}, {1}]"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,566,/ org.apache.commons.math.analysis.solvers.LaguerreSolver
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,567," ""function is not polynomial"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,568,"la fonction n''est pas p\u00f4lynomiale"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,570,/ org.apache.commons.math.analysis.solvers.NewtonSolver
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,571," ""function is not differentiable"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,572,"la fonction n''est pas diff\u00e9rentiable"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,574,/ org.apache.commons.math.analysis.integration.UnivariateRealIntegratorImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,575," ""invalid iteration limits: min={0}, max={1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,576,"limites d''it\u00e9rations invalides : min = {0}, max = {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,578,/ org.apache.commons.math.analysis.integration.LegendreGaussIntegrator
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,579," ""{0} points Legendre-Gauss integrator not supported,"" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,580," number of points must be in the {1}-{2} range"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,581,"int\u00e9grateur de Legendre-Gauss non support\u00e9 en {0} points, "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,582,"le nombre de points doit \u00eatre entre {1} et {2}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,584,/ org.apache.commons.math.fraction.Fraction
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,585," ""zero denominator in fraction {0}/{1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,586,"d\u00e9nominateur null dans le nombre rationnel {0}/{1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,587," ""overflow in fraction {0}/{1}, cannot negate"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,588,"d\u00e9passement de capacit\u00e9 pour la fraction {0}/{1}, son signe ne peut \u00eatre chang\u00e9"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,589," ""overflow, numerator too large after multiply: {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,590,"d\u00e9passement de capacit\u00e9 pour le num\u00e9rateur apr\u00e8s multiplication : {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,591," ""the fraction to divide by must not be zero: {0}/{1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,592,"division par un nombre rationnel nul : {0}/{1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,593," ""null fraction"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,594,"fraction nulle"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,596,/ org.apache.commons.math.geometry.Rotation
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,597," ""zero norm for rotation axis"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,598,"norme nulle pour un axe de rotation"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,599," ""zero norm for rotation defining vector"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,600,"norme nulle pour un axe de d\u00e9finition de rotation"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,602,/ org.apache.commons.math.geometry.Vector3D
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,603,/ org.apache.commons.math.linear.ArrayRealVector
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,604," ""cannot normalize a zero norm vector"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,605,"impossible de normer un vecteur de norme nulle"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,606," ""zero norm"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,607,"norme nulle"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,609,/ org.apache.commons.math.ConvergingAlgorithmImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,610," ""no result available"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,611,"aucun r\u00e9sultat n''est disponible"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,613,/ org.apache.commons.math.linear.BigMatrixImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,614," ""first {0} rows are not initialized yet"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,615,"les {0} premi\u00e8res lignes ne sont pas encore initialis\u00e9es"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,616," ""first {0} columns are not initialized yet"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,617,"les {0} premi\u00e8res colonnes ne sont pas encore initialis\u00e9es"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,619,/ org.apache.commons.math.stat.Frequency
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,620," ""class ({0}) does not implement Comparable"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,621,"la classe ({0}) n''implante pas l''interface Comparable"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,622," ""instance of class {0} not comparable to existing values"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,623,"l''instance de la classe {0} n''est pas comparable aux valeurs existantes"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,625,/ org.apache.commons.math.stat.StatUtils
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,626," ""input arrays must have the same positive length ({0} and {1})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,627,"les tableaux d''entr\u00e9e doivent avoir la m\u00eame taille positive ({0} et {1})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,628," ""input arrays must have the same length and at least two elements ({0} and {1})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,629,"les tableaux d''entr\u00e9e doivent avoir la m\u00eame taille"" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,630," et au moins deux \u00e9l\u00e9ments ({0} et {1})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,632,/ org.apache.commons.math.stat.correlation.Covariance
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,633," ""arrays must have the same length and both must have at "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,634,"least two elements. xArray has size {0}, yArray has {1} elements"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,635,"les tableaux doivent avoir la m\u00eame taille "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,636,"et comporter au moins deux \u00e9l\u00e9ments. "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,637,"xArray a une taille de {0}, yArray a {1} \u00e9l\u00e9ments""},"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,638," ""insufficient data: only {0} rows and {1} columns."","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,639,"donn\u00e9es insuffisantes : seulement {0} lignes et {1} colonnes."" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,641,/ org.apache.commons.math.stat.correlation.PearsonsCorrelation
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,642," ""covariance matrix is null"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,643,"la matrice de covariance est nulle"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,644," ""invalid array dimensions. xArray has size {0}; yArray has {1} elements"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,645,"dimensions de tableaux invalides. xArray a une taille de {0}, "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,646,"yArray a {1} \u00e9l\u00e9ments"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,648,/ org.apache.commons.math.stat.descriptive.DescriptiveStatistics
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,649," ""window size must be positive ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,650,"la taille de la fen\u00eatre doit \u00eatre positive ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,651," ""percentile implementation {0} does not support {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,652,"l''implantation de pourcentage {0} ne dispose pas de la m\u00e9thode {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,653," ""cannot access {0} method in percentile implementation {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,654,"acc\u00e8s impossible \u00e0 la m\u00e9thode {0}"" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,655," dans l''implantation de pourcentage {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,656," ""out of bounds quantile value: {0}, must be in (0, 100]"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,657,"valeur de quantile {0} hors bornes, doit \u00eatre dans l''intervalle ]0, 100]"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,659,/ org.apache.commons.math.stat.descriptive.moment.Variance
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,660,/ org.apache.commons.math.stat.descriptive.moment.SemiVariance
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,661,/ org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,662,/ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,663," ""input values array is null"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,664,"le tableau des valeurs d''entr\u00e9es est nul"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,666,/ org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,667," ""start position cannot be negative ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,668,"la position de d\u00e9part ne peut pas \u00eatre n\u00e9gative"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,669," ""length cannot be negative ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,670,"la longueur ne peut pas \u00eatre n\u00e9gative"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,671," ""subarray ends after array end"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,672,"le sous-tableau se termine apr\u00e8s la fin du tableau"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,674,/ org.apache.commons.math.stat.descriptive.moment.GeometricMean
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,675,/ org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,676,/ org.apache.commons.math.stat.descriptive.SummaryStatistics
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,677," ""{0} values have been added before statistic is configured"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,678,"{0} valeurs ont \u00e9t\u00e9 ajout\u00e9es "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,679,"avant que la statistique ne soit configur\u00e9e"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,681,/ org.apache.commons.math.stat.descriptive.moment.Kurtosis
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,682," ""statistics constructed from external moments cannot be incremented"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,683,"les statistiques bas\u00e9es sur des moments externes ne peuvent pas \u00eatre incr\u00e9ment\u00e9es"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,684," ""statistics constructed from external moments cannot be cleared"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,685,"les statistiques bas\u00e9es sur des moments externes ne peuvent pas \u00eatre remises \u00e0 z\u00e9ro"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,687,/ org.apache.commons.math.stat.inference.ChiSquareTestImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,688," ""expected array length = {0}, must be at least 2"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,689,"le tableau des valeurs attendues a une longueur de {0}, elle devrait \u00eatre au moins de 2"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,690," ""observed array length = {0}, must be at least 2"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,691,"le tableau des valeurs observ\u00e9es a une longueur de {0}, elle devrait \u00eatre au moins de 2"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,692," ""observed counts are all 0 in first observed array"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,693,"aucune occurrence dans le premier tableau des observations"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,694," ""observed counts are all 0 in second observed array"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,695,"aucune occurrence dans le second tableau des observations"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,696," ""observed counts are both zero for entry {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,697,"les occurrences observ\u00e9es sont toutes deux nulles pour l'entr\u00e9e {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,698," ""invalid row dimension: {0} (must be at least 2)"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,699,"nombre de lignes invalide : {0} (doit \u00eatre au moins de 2)"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,700," ""invalid column dimension: {0} (must be at least 2)"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,701,"nombre de colonnes invalide : {0} (doit \u00eatre au moins de 2)"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,702," ""element {0} is not positive: {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,703,"l''\u00e9l\u00e9ment {0} n''est pas positif : {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,704," ""element {0} is negative: {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,705,"l''\u00e9l\u00e9ment {0} est n\u00e9gatif : {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,706," ""element ({0}, {1}) is negative: {2}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,707,"l''\u00e9l\u00e9ment ({0}, {1}) est n\u00e9gatif : {2}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,709,/ org.apache.commons.math.stat.inference.OneWayAnovaImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,710," ""two or more categories required, got {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,711,"deux cat\u00e9gories ou plus sont n\u00e9cessaires, il y en a {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,712," ""two or more values required in each category, one has {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,713,"deux valeurs ou plus sont n\u00e9cessaires pour chaque cat\u00e9gorie, une cat\u00e9gorie en a {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,715,/ org.apache.commons.math.stat.inference.TTestImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,716," ""insufficient data for t statistic, needs at least 2, got {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,717,"deux valeurs ou plus sont n\u00e9cessaires pour la statistique t, il y en a {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,719,/ org.apache.commons.math.stat.inference.ChiSquareTestImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,720,/ org.apache.commons.math.stat.inference.TTestImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,721,/ org.apache.commons.math.stat.inference.OneWayAnovaImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,722,/ org.apache.commons.math.stat.Regression
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,723," ""out of bounds significance level {0}, must be between {1} and {2}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,724,"niveau de signification {0} hors domaine, doit \u00eatre entre {1} et {2}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,726,/ org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,727," ""not enough data ({0} rows) for this many predictors ({1} predictors)"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,728,"pas assez de donn\u00e9es ({0} lignes) pour {1} pr\u00e9dicteurs"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,730,/ org.apache.commons.math.distribution.AbstractContinuousDistribution
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,731,/ org.apache.commons.math.distribution.AbstractIntegerDistribution
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,732,/ org.apache.commons.math.distribution.ExponentialDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,733,/ org.apache.commons.math.distribution.BinomialDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,734,/ org.apache.commons.math.distribution.CauchyDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,735,/ org.apache.commons.math.distribution.PascalDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,736,/ org.apache.commons.math.distribution.WeibullDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,737," ""{0} out of [{1}, {2}] range"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,738,"{0} hors du domaine [{1}, {2}]"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,740,/ org.apache.commons.math.distribution.AbstractDistribution
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,741,/ org.apache.commons.math.distribution.AbstractIntegerDistribution
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,742," ""lower endpoint ({0}) must be less than or equal to upper endpoint ({1})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,743,"la borne inf\u00e9rieure ({0}) devrait \u00eatre inf\u00e9rieure "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,744,"ou \u00e9gale \u00e0 la borne sup\u00e9rieure ({1})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,746,/ org.apache.commons.math.distribution.AbstractContinuousDistribution
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,747," ""Cumulative probability function returned NaN for argument {0} p = {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,748,"Fonction de probabilit\u00e9 cumulative retourn\u00e9 NaN \u00e0 l''argument de {0} p = {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,749," ""This distribution does not have a density function implemented"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,750,"La fonction de densit\u00e9 pour cette distribution n'a pas \u00e9t\u00e9 mis en oeuvre"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,752,/ org.apache.commons.math.distribution.AbstractIntegerDistribution
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,753," ""Discrete cumulative probability function returned NaN for argument {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,754,"Discr\u00e8tes fonction de probabilit\u00e9 cumulative retourn\u00e9 NaN \u00e0 l''argument de {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,756,/ org.apache.commons.math.distribution.AbstractIntegerDistribution
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,757,/ org.apache.commons.math.distribution.AbstractContinuousDistribution
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,758," ""Sample size must be positive"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,759,"La taille de l'\u00e9chantillon doit \u00eatre positive"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,761,/ org.apache.commons.math.distribution.BinomialDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,762," ""number of trials must be non-negative ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,763,"le nombre d''essais ne doit pas \u00eatre n\u00e9gatif ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,765,/ org.apache.commons.math.distribution.ExponentialDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,766,/ org.apache.commons.math.random.RandomDataImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,767," ""mean must be positive ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,768,"la moyenne doit \u00eatre positive ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,770,/ org.apache.commons.math.distribution.FDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,771,/ org.apache.commons.math.distribution.TDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,772," ""degrees of freedom must be positive ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,773,"les degr\u00e9s de libert\u00e9 doivent \u00eatre positifs ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,775,/ org.apache.commons.math.distribution.GammaDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,776," ""alpha must be positive ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,777,"alpha doit \u00eatre positif ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,778," ""beta must be positive ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,779,"beta doit \u00eatre positif ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,781,/ org.apache.commons.math.distribution.HypergeometricDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,782," ""number of successes ({0}) must be less than or equal to population size ({1})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,783,"le nombre de succ\u00e8s doit \u00eatre inf\u00e9rieur "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,784,"ou \u00e9gal \u00e0 la taille de la population ({1})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,785," ""sample size ({0}) must be less than or equal to population size ({1})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,786,"la taille de l''\u00e9chantillon doit \u00eatre inf\u00e9rieure "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,787,"ou \u00e9gale \u00e0 la taille de la population ({1})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,788," ""population size must be positive ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,789,"la taille de la population doit \u00eatre positive ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,791,/ org.apache.commons.math.distribution.HypergeometricDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,792,/ org.apache.commons.math.random.RandomDataImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,793," ""sample size must be positive ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,794,"la taille de l''\u00e9chantillon doit \u00eatre positive ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,796,/ org.apache.commons.math.distribution.HypergeometricDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,797,/ org.apache.commons.math.distribution.PascalDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,798," ""number of successes must be non-negative ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,799,"le nombre de succ\u00e8s ne doit pas \u00eatre n\u00e9gatif ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,801,/ org.apache.commons.math.distribution.NormalDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,802,/ org.apache.commons.math.random.RandomDataImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,803," ""standard deviation must be positive ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,804,"l''\u00e9cart type doit \u00eatre positif ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,806,/ org.apache.commons.math.distribution.PoissonDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,807,/ org.apache.commons.math.random.RandomDataImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,808," ""the Poisson mean must be positive ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,809,"la moyenne de Poisson doit \u00eatre positive ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,811,/ org.apache.commons.math.distribution.WeibullDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,812," ""shape must be positive ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,813,"le facteur de forme doit \u00eatre positif ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,815,/ org.apache.commons.math.distribution.WeibullDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,816,/ org.apache.commons.math.distribution.CauchyDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,817," ""scale must be positive ({0})"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,818,"l''\u00e9chelle doit \u00eatre positive ({0})"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,820,/ org.apache.commons.math.distribution.ZipfDistributionImpl
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,821," ""invalid number of elements {0} (must be positive)"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,822,"nombre d''\u00e9l\u00e9ments {0} invalide (doit \u00eatre positif)"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,823," ""invalid exponent {0} (must be positive)"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,824,"exposant {0} invalide (doit \u00eatre positif)"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,826,/ org.apache.commons.math.transform.FastHadamardTransformer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,827," ""{0} is not a power of 2"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,828,"{0} n''est pas une puissance de 2"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,830,/ org.apache.commons.math.transform.FastFourierTransformer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,831," ""cannot compute 0-th root of unity, indefinite result"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,832,"impossible de calculer la racine z\u00e9roi\u00e8me de l''unit\u00e9, "" +"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,833,"r\u00e9sultat ind\u00e9fini"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,834," ""roots of unity have not been computed yet"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,835,"les racines de l''unit\u00e9 n''ont pas encore \u00e9t\u00e9 calcul\u00e9es"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,836," ""out of range root of unity index {0} (must be in [{1};{2}])"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,837,"index de racine de l''unit\u00e9 hors domaine (devrait \u00eatre dans [{1}; {2}])"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,838," ""number of sample is not positive: {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,839,"le nombre d''\u00e9chantillons n''est pas positif : {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,840," ""{0} is not a power of 2, consider padding for fix"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,841,"{0} n''est pas une puissance de 2, ajoutez des \u00e9l\u00e9ments pour corriger"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,842," ""some dimensions don't match: {0} != {1}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,843,"certaines dimensions sont incoh\u00e9rentes : {0} != {1}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,845,/ org.apache.commons.math.transform.FastCosineTransformer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,846," ""{0} is not a power of 2 plus one"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,847,"{0} n''est pas une puissance de 2 plus un"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,849,/ org.apache.commons.math.transform.FastSineTransformer
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,850," ""first element is not 0: {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,851,"le premier \u00e9l\u00e9ment n''est pas nul : {0}"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,853,/ org.apache.commons.math.util.OpenIntToDoubleHashMap
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,854," ""map has been modified while iterating"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,855,"la table d''adressage a \u00e9t\u00e9 modifi\u00e9e pendant l''it\u00e9ration"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,856," ""iterator exhausted"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,857,"it\u00e9ration achev\u00e9e"" },"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,859,/ org.apache.commons.math.MathRuntimeException
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,860," ""internal error, please fill a bug report at {0}"","
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,861,"erreur interne, veuillez signaler l''erreur \u00e0 {0}"" }"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,866, Simple constructor.
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,868,ublic MessagesResources_fr() {
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,872, Get the non-translated/translated messages arrays from this resource bundle.
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,873, @return non-translated/translated messages arrays
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,875,Override
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,876,ublic Object[][] getContents() {
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,877,eturn CONTENTS.clone();
True,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,116,"invalid iteration limits: min={0}, max={1}"","
True,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java,117,"LocalizedFormats.INVALID_ITERATIONS_LIMITS,"
True,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,107,"invalid iteration limits: min={0}, max={1}"","
True,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java,108,"LocalizedFormats.INVALID_ITERATIONS_LIMITS,"
True,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,138,"invalid iteration limits: min={0}, max={1}"","
True,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java,139,"LocalizedFormats.INVALID_ITERATIONS_LIMITS,"
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,22,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,69,"hrow MathRuntimeException.createIllegalArgumentException(""function is null"");"
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,70,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FUNCTION);
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,111,"hrow MathRuntimeException.createIllegalStateException(""no result available"");"
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,112,throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_RESULT_AVAILABLE);
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,174,"invalid iteration limits: min={0}, max={1}"","
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,175,"LocalizedFormats.INVALID_ITERATIONS_LIMITS,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,19,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,101,"hrow MathRuntimeException.createIllegalArgumentException(""no data"");"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,102,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NO_DATA);
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,160,"hrow MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,161,", xval[0], xval[xval.length - 1]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,161,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,162,"LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,163,"x, xval[0], xval[xval.length - 1]);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,165,"hrow MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,166,", yval[0], yval[yval.length - 1]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,167,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,168,"LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,169,"y, yval[0], yval[yval.length - 1]);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,233,"hrow MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,236,"throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,238,"hrow MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,241,"throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,376,"hrow MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,379,"throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,380,"hrow MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java,383,"throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,22,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,42,"hrow MathRuntimeException.createIllegalArgumentException(""no data"");"
True,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java,43,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NO_DATA);
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,24,import org.apache.commons.math.util.Localizable;
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,148,"hrow new MathException(""bandwidth must be in the interval [0,1], but got {0}"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,150,"throw new MathException(LocalizedFormats.BANDWIDTH_OUT_OF_INTERVAL,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,153,"hrow new MathException(""the number of robustness iterations must "" +"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,154,"be non-negative, but got {0}"","
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,155,obustnessIters);
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,155,"throw new MathException(LocalizedFormats.NEGATIVE_ROBUSTNESS_ITERATIONS, robustnessIters);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,201,hrow new MathException(
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,202,"Loess expects the abscissa and ordinate arrays "" +"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,203,"to be of the same size, "" +"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,204,"but got {0} abscissae and {1} ordinatae"","
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,205,"val.length, yval.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,201,"throw new MathException(LocalizedFormats.MISMATCHED_LOESS_ABSCISSA_ORDINATE_ARRAYS,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,202,"xval.length, yval.length);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,211,"hrow new MathException(""Loess expects at least 1 point"");"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,208,throw new MathException(LocalizedFormats.LOESS_EXPECTS_AT_LEAST_ONE_POINT);
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,214,"heckAllFiniteReal(xval, ""all abscissae must be finite real numbers, but {0}-th is {1}"");"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,215,"heckAllFiniteReal(yval, ""all ordinatae must be finite real numbers, but {0}-th is {1}"");"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,216,"heckAllFiniteReal(weights, ""all weights must be finite real numbers, but {0}-th is {1}"");"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,211,"checkAllFiniteReal(xval, LocalizedFormats.NON_REAL_FINITE_ABSCISSA);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,212,"checkAllFiniteReal(yval, LocalizedFormats.NON_REAL_FINITE_ORDINATE);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,213,"checkAllFiniteReal(weights, LocalizedFormats.NON_REAL_FINITE_WEIGHT);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,231,hrow new MathException(
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,232,"the bandwidth must be large enough to "" +"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,233,"accomodate at least 2 points. There are {0} "" +"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,234," data points, and bandwidth must be at least {1} "" +"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,235," but it is only {2}"","
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,236,", 2.0 / n, bandwidth);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,228,"throw new MathException(LocalizedFormats.TOO_SMALL_BANDWIDTH,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,229,"n, 2.0 / n, bandwidth);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,368,hrow new MathException(
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,369,"Loess expects the abscissa and ordinate arrays "" +"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,370,"to be of the same size, "" +"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,371,"but got {0} abscissae and {1} ordinatae"","
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,372,"val.length, yval.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,361,"throw new MathException(LocalizedFormats.MISMATCHED_LOESS_ABSCISSA_ORDINATE_ARRAYS,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,362,"xval.length, yval.length);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,445,"rivate static void checkAllFiniteReal(final double[] values, final String pattern)"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,435,"private static void checkAllFiniteReal(final double[] values, final Localizable pattern)"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,467,hrow new MathException(
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,468,"the abscissae array must be sorted in a strictly "" +"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,469,"increasing order, but the {0}-th element is {1} "" +"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,470,"whereas {2}-th is {3}"","
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,471," - 1, xval[i - 1], i, xval[i]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,457,"throw new MathException(LocalizedFormats.OUT_OF_ORDER_ABSCISSA_ARRAY,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,458,"i - 1, xval[i - 1], i, xval[i]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,30,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,153,"hrow MathRuntimeException.createIllegalArgumentException(""no data"");"
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java,154,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NO_DATA);
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,103,"brightness exponent should be positive or null, but got {0}"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,104,"LocalizedFormats.NEGATIVE_BRIGHTNESS_EXPONENT,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,117,"number of microsphere elements must be positive, but got {0}"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java,118,"LocalizedFormats.NON_POSITIVE_MICROSPHERE_ELEMENTS,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingBicubicSplineInterpolator.java,22,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingBicubicSplineInterpolator.java,51,"hrow MathRuntimeException.createIllegalArgumentException(""no data"");"
True,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingBicubicSplineInterpolator.java,52,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NO_DATA);
True,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,22,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,74,"hrow MathRuntimeException.createIllegalArgumentException(""no data"");"
True,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,75,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NO_DATA);
True,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,22,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,61,"dimension mismatch {0} != {1}"", x.length, y.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,62,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, x.length, y.length);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,66,"{0} points are required, got only {1}"", 3, x.length);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,67,"LocalizedFormats.WRONG_NUMBER_OF_POINTS, 3, x.length);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,75,"points {0} and {1} are not strictly increasing ({2} >= {3})"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,76,"LocalizedFormats.NOT_STRICTLY_INCREASING_NUMBER_OF_POINTS,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,19,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,159,"hrow MathRuntimeException.createIllegalArgumentException(""no data"");"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,160,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NO_DATA);
False,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,310,"hrow MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
False,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,311,", xval[0], xval[xval.length - 1]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,311,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,312,"LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,313,"x, xval[0], xval[xval.length - 1]);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,315,"hrow MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
False,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,316,", yval[0], yval[yval.length - 1]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,317,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,318,"LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,319,"y, yval[0], yval[yval.length - 1]);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,320,"hrow MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
False,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,321,", zval[0], zval[zval.length - 1]);"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,323,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,324,"LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,325,"z, zval[0], zval[zval.length - 1]);"
False,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,452,"hrow MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,456,"throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,456,"hrow MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,460,"throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,460,"hrow MathRuntimeException.createIllegalArgumentException(""{0} out of [{1}, {2}] range"","
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java,464,"throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,22,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,41,"hrow MathRuntimeException.createIllegalArgumentException(""no data"");"
True,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,42,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NO_DATA);
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,36,** Message for empty coefficients array. */
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,37,rivate static final String EMPTY_ARRAY_MESSAGE =
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,38,"empty polynomials coefficients array"";"
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,69,hrow MathRuntimeException.createIllegalArgumentException(EMPTY_ARRAY_MESSAGE);
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,66,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,129,hrow MathRuntimeException.createIllegalArgumentException(EMPTY_ARRAY_MESSAGE);
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,126,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,238,hrow MathRuntimeException.createIllegalArgumentException(EMPTY_ARRAY_MESSAGE);
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,235,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,93,"hrow new FunctionEvaluationException(e, z, e.getPattern(), e.getArguments());"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,94,"throw new FunctionEvaluationException(e, z, e.getLocalizablePattern(), e.getArguments());"
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,300,"dimension mismatch {0} != {1}"", x.length, y.length);"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,301,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, x.length, y.length);"
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,305,"{0} points are required, got only {1}"", 2, x.length);"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java,306,"LocalizedFormats.WRONG_NUMBER_OF_POINTS, 2, x.length);"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,22,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,212,"empty polynomials coefficients array"");"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,213,LocalizedFormats.EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY);
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,216,"array sizes should have difference 1 ({0} != {1} + 1)"","
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java,217,"LocalizedFormats.ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1,"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,100,"spline partition must have at least {0} points, got {1}"","
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,101,"LocalizedFormats.NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION,"
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,105,"number of polynomial interpolants must match the number of segments ({0} != {1} - 1)"","
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,106,"LocalizedFormats.POLYNOMIAL_INTERPOLANTS_MISMATCH_SEGMENTS,"
False,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,110,"knot values must be strictly increasing"");"
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,111,LocalizedFormats.NOT_STRICTLY_INCREASING_KNOT_VALUES);
True,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,46,** Error message for non-bracketing interval. */
False,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,47,rivate static final String NON_BRACKETING_MESSAGE =
False,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,48,"function values at endpoints do not have different signs.  "" +"
False,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,49,"Endpoints: [{0}, {1}], Values: [{2}, {3}]"";"
False,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,137,"invalid interval, initial value parameters:  lower={0}, initial={1}, upper={2}"","
True,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,133,"LocalizedFormats.INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS,"
False,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,173,"ON_BRACKETING_MESSAGE, min, max, yMin, yMax);"
True,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,169,"LocalizedFormats.SAME_SIGN_AT_ENDPOINTS, min, max, yMin, yMax);"
False,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,220,"ON_BRACKETING_MESSAGE, min, max, yMin, yMax);"
True,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java,216,"LocalizedFormats.SAME_SIGN_AT_ENDPOINTS, min, max, yMin, yMax);"
True,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,26,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,41,** Message for non-polynomial function. */
False,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,42,rivate static final String NON_POLYNOMIAL_FUNCTION_MESSAGE =
False,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,43,"function is not polynomial"";"
False,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,45,** Message for non-positive degree. */
False,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,46,rivate static final String NON_POSITIVE_DEGREE_MESSAGE =
False,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,47,"polynomial degree must be positive: degree={0}"";"
False,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,72,hrow MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
True,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,65,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.FUNCTION_NOT_POLYNOMIAL);
False,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,175,hrow MathRuntimeException.createIllegalArgumentException(NON_POLYNOMIAL_FUNCTION_MESSAGE);
True,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,168,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.FUNCTION_NOT_POLYNOMIAL);
False,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,268,"ON_POSITIVE_DEGREE_MESSAGE, n);"
True,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,261,"LocalizedFormats.NON_POSITIVE_POLYNOMIAL_DEGREE, n);"
False,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,316,"ON_POSITIVE_DEGREE_MESSAGE, n);"
True,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java,309,"LocalizedFormats.NON_POSITIVE_POLYNOMIAL_DEGREE, n);"
True,src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java,132,"hrow MathRuntimeException.createIllegalArgumentException(""function is not differentiable"");"
True,src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java,133,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.FUNCTION_NOT_DIFFERENTIABLE);
True,src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,130,"function values at endpoints do not have different signs, "" +"
False,src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,131,"endpoints: [{0}, {1}], values: [{2}, {3}]"","
False,src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,132,"in, max, y0, y1);"
True,src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java,131,"LocalizedFormats.SAME_SIGN_AT_ENDPOINTS, min, max, y0, y1);"
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,76,"hrow MathRuntimeException.createIllegalArgumentException(""function to solve cannot be null"");"
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,77,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FUNCTION);
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,103,"hrow MathRuntimeException.createIllegalStateException(""no result available"");"
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,104,throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_RESULT_AVAILABLE);
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,227,"invalid interval, initial value parameters:  lower={0}, initial={1}, upper={2}"","
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,228,"LocalizedFormats.INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS,"
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,250,"function values at endpoints do not have different signs.  "" +"
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,251,"Endpoints: [{0}, {1}], Values: [{2}, {3}]"","
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,251,"LocalizedFormats.SAME_SIGN_AT_ENDPOINTS,"
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,31,** Message for null function.*/
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,32,rivate static final String NULL_FUNCTION_MESSAGE =
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,33,"function is null"";"
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,176,hrow MathRuntimeException.createIllegalArgumentException(NULL_FUNCTION_MESSAGE);
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,173,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FUNCTION);
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,180,"bad value for maximum iterations number: {0}"", maximumIterations);"
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,177,"LocalizedFormats.INVALID_MAX_ITERATIONS, maximumIterations);"
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,184,"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}"","
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,181,"LocalizedFormats.INVALID_BRACKETING_PARAMETERS,"
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,205,"number of iterations={0}, maximum iterations={1}, "" +"
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,206,"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, "" +"
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,207,"final b value={6}, f(a)={7}, f(b)={8}"","
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,202,"LocalizedFormats.FAILED_BRACKETING,"
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,233,hrow MathRuntimeException.createIllegalArgumentException(NULL_FUNCTION_MESSAGE);
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,228,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FUNCTION);
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,26,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,944,"cannot compute nth root for null or negative n: {0}"","
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,945,"LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N,"
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,28,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,195,"cannot format a {0} instance as a complex number"","
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,196,"LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX,"
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,352,"empty string for imaginary character"");"
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,353,LocalizedFormats.EMPTY_STRING_FOR_IMAGINARY_CHARACTER);
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,366,"null imaginary format"");"
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,367,LocalizedFormats.NULL_IMAGINARY_FORMAT);
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,380,"null real format"");"
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,381,LocalizedFormats.NULL_REAL_FORMAT);
True,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,21,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,65,"negative complex module {0}"", r);"
True,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,66,"LocalizedFormats.NEGATIVE_COMPLEX_MODULE, r);"
True,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,29,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,72,"This distribution does not have a density function implemented"");"
True,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,73,LocalizedFormats.NO_DENSITY_FOR_THIS_DISTRIBUTION);
False,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,90,"{0} out of [{1}, {2}] range"", p, 0.0, 1.0);"
True,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,91,"LocalizedFormats.OUT_OF_RANGE_SIMPLE, p, 0.0, 1.0);"
False,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,102,"hrow new FunctionEvaluationException(ex, x, ex.getPattern(), ex.getArguments());"
True,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,103,"throw new FunctionEvaluationException(ex, x, ex.getLocalizablePattern(), ex.getArguments());"
False,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,106,"Cumulative probability function returned NaN for argument {0} p = {1}"", x, p);"
True,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,107,"LocalizedFormats.CUMULATIVE_PROBABILITY_RETURNED_NAN, x, p);"
False,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,179,"athRuntimeException.createIllegalArgumentException(""Sample size must be positive"");"
True,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,180,"MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE, sampleSize);"
True,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,63,"lower endpoint ({0}) must be less than or equal to upper endpoint ({1})"","
True,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java,64,"LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,"
True,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,37,** Message for endpoints in wrong order. */
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,38,rivate static final String WRONG_ORDER_ENDPOINTS_MESSAGE =
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,39,"lower endpoint ({0}) must be less than or equal to upper endpoint ({1})"";"
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,41,** Message for out of range point. */
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,42,rivate static final String OUT_OF_RANGE_POINT =
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,43,"{0} out of [{1}, {2}] range"";"
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,45,** Serializable version identifier */
True,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,38,/** Serializable version identifier */
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,98,"RONG_ORDER_ENDPOINTS_MESSAGE, x0, x1);"
True,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,91,"LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT, x0, x1);"
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,155,"RONG_ORDER_ENDPOINTS_MESSAGE, x0, x1);"
True,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,148,"LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT, x0, x1);"
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,174,"UT_OF_RANGE_POINT, p, 0.0, 1.0);"
True,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,167,"LocalizedFormats.OUT_OF_RANGE_SIMPLE, p, 0.0, 1.0);"
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,253,"athRuntimeException.createIllegalArgumentException(""Sample size must be positive"");"
True,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,246,"MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE, sampleSize);"
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,277,"hrow new FunctionEvaluationException(ex, argument, ex.getPattern(), ex.getArguments());"
True,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,270,"throw new FunctionEvaluationException(ex, argument, ex.getLocalizablePattern(), ex.getArguments());"
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,281,"Discrete cumulative probability function returned NaN for argument {0}"", argument);"
True,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,274,"LocalizedFormats.DISCRETE_CUMULATIVE_PROBABILITY_RETURNED_NAN, argument);"
True,src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,95,"number of trials must be non-negative ({0})"", trials);"
True,src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,96,"LocalizedFormats.NEGATIVE_NUMBER_OF_TRIALS, trials);"
False,src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,122,"{0} out of [{1}, {2}] range"", p, 0.0, 1.0);"
True,src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,123,"LocalizedFormats.OUT_OF_RANGE_SIMPLE, p, 0.0, 1.0);"
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,139,"{0} out of [{1}, {2}] range"", p, 0.0, 1.0);"
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,140,"LocalizedFormats.OUT_OF_RANGE_SIMPLE, p, 0.0, 1.0);"
False,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,185,"scale must be positive ({0})"", s);"
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,186,"LocalizedFormats.NOT_POSITIVE_SCALE, s);"
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,86,"mean must be positive ({0})"", newMean);"
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,87,"LocalizedFormats.NOT_POSITIVE_MEAN, newMean);"
False,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,168,"{0} out of [{1}, {2}] range"", p, 0.0, 1.0);"
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,169,"LocalizedFormats.OUT_OF_RANGE_SIMPLE, p, 0.0, 1.0);"
True,src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java,41,** Message for non positive degrees of freddom. */
False,src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java,42,rivate static final String NON_POSITIVE_DEGREES_OF_FREEDOM_MESSAGE =
False,src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java,43,"degrees of freedom must be positive ({0})"";"
False,src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java,225,"ON_POSITIVE_DEGREES_OF_FREEDOM_MESSAGE, degreesOfFreedom);"
True,src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java,222,"LocalizedFormats.NOT_POSITIVE_DEGREES_OF_FREEDOM, degreesOfFreedom);"
False,src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java,259,"ON_POSITIVE_DEGREES_OF_FREEDOM_MESSAGE, degreesOfFreedom);"
True,src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java,256,"LocalizedFormats.NOT_POSITIVE_DEGREES_OF_FREEDOM, degreesOfFreedom);"
True,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,148,"alpha must be positive ({0})"","
True,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,149,"LocalizedFormats.NOT_POSITIVE_ALPHA,"
False,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,181,"beta must be positive ({0})"","
True,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,182,"LocalizedFormats.NOT_POSITIVE_BETA,"
True,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,59,"number of successes ({0}) must be less than or equal to population size ({1})"","
True,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,60,"LocalizedFormats.NUMBER_OF_SUCCESS_LARGER_THAN_POPULATION_SIZE,"
False,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,65,"sample size ({0}) must be less than or equal to population size ({1})"","
True,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,66,"LocalizedFormats.SAMPLE_SIZE_LARGER_THAN_POPULATION_SIZE,"
False,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,252,"number of successes must be non-negative ({0})"", num);"
True,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,253,"LocalizedFormats.NEGATIVE_NUMBER_OF_SUCCESSES, num);"
False,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,277,"population size must be positive ({0})"", size);"
True,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,278,"LocalizedFormats.NOT_POSITIVE_POPULATION_SIZE, size);"
False,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,302,"sample size must be positive ({0})"", size);"
True,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,303,"LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE, size);"
True,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,26,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,141,"standard deviation must be positive ({0})"","
True,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,142,"LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION,"
True,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,91,"number of successes must be non-negative ({0})"","
True,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,92,"LocalizedFormats.NEGATIVE_NUMBER_OF_SUCCESSES,"
False,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,117,"{0} out of [{1}, {2}] range"", p, 0.0, 1.0);"
True,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,118,"LocalizedFormats.OUT_OF_RANGE_SIMPLE, p, 0.0, 1.0);"
True,src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java,171,"the Poisson mean must be positive ({0})"", p);"
True,src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java,172,"LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);"
True,src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java,90,"degrees of freedom must be positive ({0})"","
True,src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java,91,"LocalizedFormats.NOT_POSITIVE_DEGREES_OF_FREEDOM,"
True,src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,152,"{0} out of [{1}, {2}] range"", p, 0.0, 1.0);"
True,src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,153,"LocalizedFormats.OUT_OF_RANGE_SIMPLE, p, 0.0, 1.0);"
False,src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,179,"shape must be positive ({0})"","
True,src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,180,"LocalizedFormats.NOT_POSITIVE_SHAPE,"
False,src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,201,"scale must be positive ({0})"","
True,src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java,202,"LocalizedFormats.NOT_POSITIVE_SCALE,"
True,src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java,90,"invalid number of elements {0} (must be positive)"","
False,src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java,91,);
True,src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java,91,"LocalizedFormats.INSUFFICIENT_DIMENSION, n, 0);"
False,src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java,130,"invalid exponent {0} (must be positive)"","
True,src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java,130,"LocalizedFormats.NOT_POSITIVE_EXPONENT,"
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,26,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,153,"hrow new EstimationException(""maximal number of evaluations exceeded ({0})"","
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,154,"throw new EstimationException(LocalizedFormats.MAX_EVALUATIONS_EXCEEDED,"
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,240,"hrow new EstimationException(""unable to compute covariances: singular problem"");"
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,241,throw new EstimationException(LocalizedFormats.UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM);
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,260,"no degrees of freedom ({0} measurements, {1} parameters)"","
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,261,"LocalizedFormats.NO_DEGREES_OF_FREEDOM,"
True,src/main/java/org/apache/commons/math/estimation/EstimationException.java,src/main/java/org/apache/commons/math/estimation/EstimationException.java,21,import org.apache.commons.math.util.DummyLocalizable;
True,src/main/java/org/apache/commons/math/estimation/EstimationException.java,src/main/java/org/apache/commons/math/estimation/EstimationException.java,22,import org.apache.commons.math.util.Localizable;
True,src/main/java/org/apache/commons/math/estimation/EstimationException.java,src/main/java/org/apache/commons/math/estimation/EstimationException.java,47,"this(new DummyLocalizable(specifier), parts);"
True,src/main/java/org/apache/commons/math/estimation/EstimationException.java,src/main/java/org/apache/commons/math/estimation/EstimationException.java,51,* Simple constructor.
True,src/main/java/org/apache/commons/math/estimation/EstimationException.java,src/main/java/org/apache/commons/math/estimation/EstimationException.java,52,* Build an exception by translating and formating a message
True,src/main/java/org/apache/commons/math/estimation/EstimationException.java,src/main/java/org/apache/commons/math/estimation/EstimationException.java,53,* @param specifier format specifier (to be translated)
True,src/main/java/org/apache/commons/math/estimation/EstimationException.java,src/main/java/org/apache/commons/math/estimation/EstimationException.java,54,* @param parts to insert in the format (no translation)
True,src/main/java/org/apache/commons/math/estimation/EstimationException.java,src/main/java/org/apache/commons/math/estimation/EstimationException.java,56,"public EstimationException(Localizable specifier, Object ... parts) {"
True,src/main/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,src/main/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,28,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,src/main/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,216,"hrow new EstimationException(""unable to solve: singular problem"");"
True,src/main/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,src/main/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,217,throw new EstimationException(LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM);
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,22,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,824,"unable to perform Q.R decomposition on the {0}x{1} jacobian matrix"","
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,826,"LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN,"
True,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,27,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,122,"denominator format can not be null"");"
True,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,123,LocalizedFormats.NULL_DENOMINATOR_FORMAT);
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,136,"numerator format can not be null"");"
True,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,137,LocalizedFormats.NULL_NUMERATOR_FORMAT);
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,83,** Message for zero denominator. */
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,84,rivate static final String FORBIDDEN_ZERO_DENOMINATOR =
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,85,"denominator must be different from 0"";"
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,126,"hrow MathRuntimeException.createNullPointerException(""numerator is null"");"
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,123,throw MathRuntimeException.createNullPointerException(LocalizedFormats.NULL_NUMERATOR);
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,129,"hrow MathRuntimeException.createNullPointerException(""denominator is null"");"
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,126,throw MathRuntimeException.createNullPointerException(LocalizedFormats.NULL_DENOMINATOR);
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,132,hrow MathRuntimeException.createArithmeticException(FORBIDDEN_ZERO_DENOMINATOR);
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,129,throw MathRuntimeException.createArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,182,"hrow MathRuntimeException.createIllegalArgumentException(""cannot convert NaN value"");"
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,179,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NAN_VALUE_CONVERSION);
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,185,"hrow MathRuntimeException.createIllegalArgumentException(""cannot convert infinite value"");"
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,182,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,622,hrow MathRuntimeException.createArithmeticException(FORBIDDEN_ZERO_DENOMINATOR);
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,619,throw MathRuntimeException.createArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,675,hrow MathRuntimeException.createArithmeticException(FORBIDDEN_ZERO_DENOMINATOR);
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,672,throw MathRuntimeException.createArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);
True,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,29,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,177,"cannot format given object as a fraction number"");"
True,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,178,LocalizedFormats.CANNOT_FORMAT_OBJECT_TO_FRACTION);
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,80,** Message for zero denominator. */
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,81,rivate static final String ZERO_DENOMINATOR_MESSAGE =
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,82,"zero denominator in fraction {0}/{1}"";"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,84,** Message for overflow. */
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,85,rivate static final String OVERFLOW_MESSAGE =
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,86,"overflow in fraction {0}/{1}, cannot negate"";"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,88,** Message for null fraction. */
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,89,rivate static final String NULL_FRACTION =
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,90,"null fraction"";"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,268,"ERO_DENOMINATOR_MESSAGE, num, den);"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,257,"LocalizedFormats.ZERO_DENOMINATOR_IN_FRACTION, num, den);"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,273,"VERFLOW_MESSAGE, num, den);"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,262,"LocalizedFormats.OVERFLOW_IN_FRACTION, num, den);"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,416,"VERFLOW_MESSAGE, numerator, denominator);"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,405,"LocalizedFormats.OVERFLOW_IN_FRACTION, numerator, denominator);"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,487,hrow MathRuntimeException.createIllegalArgumentException(NULL_FRACTION);
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,476,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FRACTION);
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,524,"hrow MathRuntimeException.createArithmeticException(""overflow, numerator too large after multiply: {0}"","
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,513,"throw MathRuntimeException.createArithmeticException(LocalizedFormats.NUMERATOR_OVERFLOW_AFTER_MULTIPLY,"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,544,hrow MathRuntimeException.createIllegalArgumentException(NULL_FRACTION);
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,533,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FRACTION);
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,579,hrow MathRuntimeException.createIllegalArgumentException(NULL_FRACTION);
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,568,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FRACTION);
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,583,"the fraction to divide by must not be zero: {0}/{1}"","
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,572,"LocalizedFormats.ZERO_FRACTION_TO_DIVIDE_BY,"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,612,"ERO_DENOMINATOR_MESSAGE, numerator, denominator);"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,601,"LocalizedFormats.ZERO_DENOMINATOR_IN_FRACTION, numerator, denominator);"
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,625,"VERFLOW_MESSAGE, numerator, denominator);"
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,614,"LocalizedFormats.OVERFLOW_IN_FRACTION, numerator, denominator);"
True,src/main/java/org/apache/commons/math/fraction/FractionConversionException.java,src/main/java/org/apache/commons/math/fraction/FractionConversionException.java,21,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/fraction/FractionConversionException.java,src/main/java/org/apache/commons/math/fraction/FractionConversionException.java,41,"uper(""Unable to convert {0} to fraction after {1} iterations"", value, maxIterations);"
True,src/main/java/org/apache/commons/math/fraction/FractionConversionException.java,src/main/java/org/apache/commons/math/fraction/FractionConversionException.java,42,"super(LocalizedFormats.FAILED_FRACTION_CONVERSION, value, maxIterations);"
False,src/main/java/org/apache/commons/math/fraction/FractionConversionException.java,src/main/java/org/apache/commons/math/fraction/FractionConversionException.java,52,"uper(""Overflow trying to convert {0} to fraction ({1}/{2})"", value, p, q);"
True,src/main/java/org/apache/commons/math/fraction/FractionConversionException.java,src/main/java/org/apache/commons/math/fraction/FractionConversionException.java,53,"super(LocalizedFormats.FRACTION_CONVERSION_OVERFLOW, value, p, q);"
True,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,28,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,183,"cannot convert given object to a fraction number: {0}"","
True,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,184,"LocalizedFormats.CANNOT_CONVERT_OBJECT_TO_FRACTION,"
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,188,"cannot format given object as a fraction number"");"
True,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,189,LocalizedFormats.CANNOT_FORMAT_OBJECT_TO_FRACTION);
True,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,236,"whole format can not be null"");"
True,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,237,LocalizedFormats.NULL_WHOLE_FORMAT);
True,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,229,"whole format can not be null"");"
True,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,230,LocalizedFormats.NULL_WHOLE_FORMAT);
True,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,21,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,41,"uper(isCardan ? ""Cardan angles singularity"" : ""Euler angles singularity"");"
True,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,42,super(isCardan ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : LocalizedFormats.EULER_ANGLES_SINGULARITY);
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,21,import org.apache.commons.math.util.Localizable;
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,42,"* @deprecated as of 2.2 replaced by {@link #NotARotationMatrixException(Localizable, Object...)}"
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,44,@Deprecated
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,50,* Simple constructor.
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,51,* Build an exception by translating and formating a message
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,52,* @param specifier format specifier (to be translated)
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,53,* @param parts to insert in the format (no translation)
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,54,* @since 2.2
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,56,"public NotARotationMatrixException(Localizable specifier, Object ... parts) {"
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,57,"super(specifier, parts);"
True,src/main/java/org/apache/commons/math/geometry/Rotation.java,src/main/java/org/apache/commons/math/geometry/Rotation.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/geometry/Rotation.java,src/main/java/org/apache/commons/math/geometry/Rotation.java,175,"hrow MathRuntimeException.createArithmeticException(""zero norm for rotation axis"");"
True,src/main/java/org/apache/commons/math/geometry/Rotation.java,src/main/java/org/apache/commons/math/geometry/Rotation.java,176,throw MathRuntimeException.createArithmeticException(LocalizedFormats.ZERO_NORM_FOR_ROTATION_AXIS);
False,src/main/java/org/apache/commons/math/geometry/Rotation.java,src/main/java/org/apache/commons/math/geometry/Rotation.java,225,"a {0}x{1} matrix cannot be a rotation matrix"","
True,src/main/java/org/apache/commons/math/geometry/Rotation.java,src/main/java/org/apache/commons/math/geometry/Rotation.java,226,"LocalizedFormats.ROTATION_MATRIX_DIMENSIONS,"
False,src/main/java/org/apache/commons/math/geometry/Rotation.java,src/main/java/org/apache/commons/math/geometry/Rotation.java,238,"the closest orthogonal matrix has a negative determinant {0}"","
True,src/main/java/org/apache/commons/math/geometry/Rotation.java,src/main/java/org/apache/commons/math/geometry/Rotation.java,239,"LocalizedFormats.CLOSEST_ORTHOGONAL_MATRIX_HAS_NEGATIVE_DETERMINANT,"
False,src/main/java/org/apache/commons/math/geometry/Rotation.java,src/main/java/org/apache/commons/math/geometry/Rotation.java,319,"hrow MathRuntimeException.createIllegalArgumentException(""zero norm for rotation defining vector"");"
True,src/main/java/org/apache/commons/math/geometry/Rotation.java,src/main/java/org/apache/commons/math/geometry/Rotation.java,320,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR);
False,src/main/java/org/apache/commons/math/geometry/Rotation.java,src/main/java/org/apache/commons/math/geometry/Rotation.java,450,"hrow MathRuntimeException.createIllegalArgumentException(""zero norm for rotation defining vector"");"
True,src/main/java/org/apache/commons/math/geometry/Rotation.java,src/main/java/org/apache/commons/math/geometry/Rotation.java,451,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR);
False,src/main/java/org/apache/commons/math/geometry/Rotation.java,src/main/java/org/apache/commons/math/geometry/Rotation.java,1038,"unable to orthogonalize matrix in {0} iterations"","
True,src/main/java/org/apache/commons/math/geometry/Rotation.java,src/main/java/org/apache/commons/math/geometry/Rotation.java,1039,"LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX,"
True,src/main/java/org/apache/commons/math/geometry/Vector3D.java,src/main/java/org/apache/commons/math/geometry/Vector3D.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/geometry/Vector3D.java,src/main/java/org/apache/commons/math/geometry/Vector3D.java,286,"hrow MathRuntimeException.createArithmeticException(""cannot normalize a zero norm vector"");"
True,src/main/java/org/apache/commons/math/geometry/Vector3D.java,src/main/java/org/apache/commons/math/geometry/Vector3D.java,287,throw MathRuntimeException.createArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);
False,src/main/java/org/apache/commons/math/geometry/Vector3D.java,src/main/java/org/apache/commons/math/geometry/Vector3D.java,310,"hrow MathRuntimeException.createArithmeticException(""zero norm"");"
True,src/main/java/org/apache/commons/math/geometry/Vector3D.java,src/main/java/org/apache/commons/math/geometry/Vector3D.java,311,throw MathRuntimeException.createArithmeticException(LocalizedFormats.ZERO_NORM);
False,src/main/java/org/apache/commons/math/geometry/Vector3D.java,src/main/java/org/apache/commons/math/geometry/Vector3D.java,340,"hrow MathRuntimeException.createArithmeticException(""zero norm"");"
True,src/main/java/org/apache/commons/math/geometry/Vector3D.java,src/main/java/org/apache/commons/math/geometry/Vector3D.java,341,throw MathRuntimeException.createArithmeticException(LocalizedFormats.ZERO_NORM);
True,src/main/java/org/apache/commons/math/geometry/Vector3DFormat.java,src/main/java/org/apache/commons/math/geometry/Vector3DFormat.java,28,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/geometry/Vector3DFormat.java,src/main/java/org/apache/commons/math/geometry/Vector3DFormat.java,244,"hrow MathRuntimeException.createIllegalArgumentException(""cannot format a {0} instance as a 3D vector"","
True,src/main/java/org/apache/commons/math/geometry/Vector3DFormat.java,src/main/java/org/apache/commons/math/geometry/Vector3DFormat.java,245,"throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR,"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,26,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,67,f (rowDimension <= 0 ) {
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,68,if (rowDimension < 1 ) {
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,69,"invalid row dimension {0} (must be positive)"","
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,70,owDimension);
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,70,"LocalizedFormats.INSUFFICIENT_DIMENSION, rowDimension, 1);"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,72,f (columnDimension <= 0) {
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,72,if (columnDimension < 1) {
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,74,"invalid column dimension {0} (must be positive)"","
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,75,olumnDimension);
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,74,"LocalizedFormats.INSUFFICIENT_DIMENSION, columnDimension, 1);"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,90,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one row"");"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,89,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_ROW);
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,93,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one column"");"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,92,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,108,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one row"");"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,107,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_ROW);
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,341,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,340,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,383,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,382,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,404,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one row"");"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,403,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_ROW);
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,409,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one column"");"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,408,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,415,"some rows have length {0} while others have length {1}"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,414,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,457,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,456,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,490,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,489,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,513,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,512,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,536,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,535,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,568,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,567,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,600,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,599,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,679,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,678,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,706,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,705,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,731,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,730,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,759,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,758,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,1057,"hrow new MatrixIndexException(""initial row {0} after final row {1}"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,1056,"throw new MatrixIndexException(LocalizedFormats.INITIAL_ROW_AFTER_FINAL_ROW,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,1064,"hrow new MatrixIndexException(""initial column {0} after final column {1}"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,1063,"throw new MatrixIndexException(LocalizedFormats.INITIAL_COLUMN_AFTER_FINAL_COLUMN,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,1082,"hrow new MatrixIndexException(""empty selected row index array"");"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,1081,throw new MatrixIndexException(LocalizedFormats.EMPTY_SELECTED_ROW_INDEX_ARRAY);
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,1084,"hrow new MatrixIndexException(""empty selected column index array"");"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,1083,throw new MatrixIndexException(LocalizedFormats.EMPTY_SELECTED_COLUMN_INDEX_ARRAY);
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,1104,"{0}x{1} and {2}x{3} matrices are not addition compatible"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,1103,"LocalizedFormats.NOT_ADDITION_COMPATIBLE_MATRICES,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,1119,"{0}x{1} and {2}x{3} matrices are not subtraction compatible"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,1118,"LocalizedFormats.NOT_SUBTRACTION_COMPATIBLE_MATRICES,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,1133,"{0}x{1} and {2}x{3} matrices are not multiplication compatible"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,1132,"LocalizedFormats.NOT_MULTIPLICATION_COMPATIBLE_MATRICES,"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,21,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,56,f (rowDimension <= 0 ) {
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,57,if (rowDimension < 1 ) {
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,58,"invalid row dimension {0} (must be positive)"","
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,59,owDimension);
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,59,"LocalizedFormats.INSUFFICIENT_DIMENSION, rowDimension, 1);"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,63,"invalid column dimension {0} (must be positive)"","
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,64,olumnDimension);
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,63,"LocalizedFormats.INSUFFICIENT_DIMENSION, columnDimension, 1);"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,314,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,313,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,356,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,355,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,377,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one row"");"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,376,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_ROW);
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,382,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one column"");"
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,381,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,388,"some rows have length {0} while others have length {1}"","
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,387,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,432,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,431,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,465,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,464,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,488,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,487,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,511,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,510,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,543,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,542,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,575,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,574,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,680,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,679,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,707,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,706,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,732,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,731,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,760,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java,759,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,28,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,59,"vector length mismatch: got {0} but expected {1}"","
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,60,", n);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,60,"LocalizedFormats.VECTOR_LENGTH_MISMATCH, d, n);"
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,42,** Message for at least one row. */
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,43,rivate static final String AT_LEAST_ONE_ROW_MESSAGE =
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,44,"matrix must have at least one row"";"
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,46,** Message for at least one column. */
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,47,rivate static final String AT_LEAST_ONE_COLUMN_MESSAGE =
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,48,"matrix must have at least one column"";"
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,50,** Message for different rows lengths. */
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,51,rivate static final String DIFFERENT_ROWS_LENGTHS_MESSAGE =
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,52,"some rows have length {0} while others have length {1}"";"
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,54,** Message for no entry at selected indices. */
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,55,rivate static final String NO_ENTRY_MESSAGE =
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,56,"no entry at indices ({0}, {1}) in a {2}x{3} matrix"";"
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,58,** Message for vector lengths mismatch. */
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,59,rivate static final String VECTOR_LENGTHS_MISMATCH =
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,60,"vector length mismatch: got {0} but expected {1}"";"
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,135,T_LEAST_ONE_ROW_MESSAGE);
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,116,LocalizedFormats.AT_LEAST_ONE_ROW);
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,140,T_LEAST_ONE_COLUMN_MESSAGE);
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,121,LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,145,"IFFERENT_ROWS_LENGTHS_MESSAGE, nCols, d[r].length);"
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,126,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS, nCols, d[r].length);"
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,330,"first {0} rows are not initialized yet"", row);"
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,311,"LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET, row);"
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,334,"first {0} columns are not initialized yet"", column);"
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,315,"LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET, column);"
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,339,T_LEAST_ONE_ROW_MESSAGE);
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,320,LocalizedFormats.AT_LEAST_ONE_ROW);
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,345,T_LEAST_ONE_COLUMN_MESSAGE);
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,326,LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,351,"IFFERENT_ROWS_LENGTHS_MESSAGE, nCols, subMatrix[i].length);"
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,332,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS, nCols, subMatrix[i].length);"
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,369,"O_ENTRY_MESSAGE, row, column, getRowDimension(), getColumnDimension());"
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,350,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY, row, column, getRowDimension(), getColumnDimension());"
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,381,"O_ENTRY_MESSAGE, row, column, getRowDimension(), getColumnDimension());"
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,362,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY, row, column, getRowDimension(), getColumnDimension());"
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,393,"O_ENTRY_MESSAGE, row, column, getRowDimension(), getColumnDimension());"
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,374,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY, row, column, getRowDimension(), getColumnDimension());"
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,405,"O_ENTRY_MESSAGE, row, column, getRowDimension(), getColumnDimension());"
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,386,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY, row, column, getRowDimension(), getColumnDimension());"
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,429,"ECTOR_LENGTHS_MISMATCH, v.length, nCols);"
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,410,"LocalizedFormats.VECTOR_LENGTH_MISMATCH, v.length, nCols);"
False,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,452,"ECTOR_LENGTHS_MISMATCH, v.length, nRows);"
True,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java,433,"LocalizedFormats.VECTOR_LENGTH_MISMATCH, v.length, nRows);"
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,57,** Message for at least one row. */
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,58,rivate static final String AT_LEAST_ONE_ROW_MESSAGE =
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,59,"matrix must have at least one row"";"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,61,** Message for at least one column. */
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,62,rivate static final String AT_LEAST_ONE_COLUMN_MESSAGE =
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,63,"matrix must have at least one column"";"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,65,** Message for different rows lengths. */
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,66,rivate static final String DIFFERENT_ROWS_LENGTHS_MESSAGE =
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,67,"some rows have length {0} while others have length {1}"";"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,69,** Message for no entry at selected indices. */
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,70,rivate static final String NO_ENTRY_MESSAGE =
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,71,"no entry at indices ({0}, {1}) in a {2}x{3} matrix"";"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,73,** Message for vector lengths mismatch. */
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,74,rivate static final String VECTOR_LENGTHS_MISMATCH =
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,75,"vector length mismatch: got {0} but expected {1}"";"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,144,T_LEAST_ONE_ROW_MESSAGE);
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,125,LocalizedFormats.AT_LEAST_ONE_ROW);
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,149,T_LEAST_ONE_COLUMN_MESSAGE);
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,130,LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,154,"IFFERENT_ROWS_LENGTHS_MESSAGE, nCols, d[r].length);"
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,135,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS, nCols, d[r].length);"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,338,"first {0} rows are not initialized yet"", row);"
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,319,"LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET, row);"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,342,"first {0} columns are not initialized yet"", column);"
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,323,"LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET, column);"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,347,T_LEAST_ONE_ROW_MESSAGE);
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,328,LocalizedFormats.AT_LEAST_ONE_ROW);
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,353,T_LEAST_ONE_COLUMN_MESSAGE);
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,334,LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,359,"IFFERENT_ROWS_LENGTHS_MESSAGE, nCols, subMatrix[i].length);"
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,340,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS, nCols, subMatrix[i].length);"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,377,"O_ENTRY_MESSAGE, row, column, getRowDimension(), getColumnDimension());"
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,358,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY, row, column, getRowDimension(), getColumnDimension());"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,389,"O_ENTRY_MESSAGE, row, column, getRowDimension(), getColumnDimension());"
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,370,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY, row, column, getRowDimension(), getColumnDimension());"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,401,"O_ENTRY_MESSAGE, row, column, getRowDimension(), getColumnDimension());"
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,382,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY, row, column, getRowDimension(), getColumnDimension());"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,413,"O_ENTRY_MESSAGE, row, column, getRowDimension(), getColumnDimension());"
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,394,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY, row, column, getRowDimension(), getColumnDimension());"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,437,"ECTOR_LENGTHS_MISMATCH, v.length, nCols);"
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,418,"LocalizedFormats.VECTOR_LENGTH_MISMATCH, v.length, nCols);"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,460,"ECTOR_LENGTHS_MISMATCH, v.length, nRows);"
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,441,"LocalizedFormats.VECTOR_LENGTH_MISMATCH, v.length, nRows);"
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,26,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,91,"vector must have at least one element"");"
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,92,LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT);
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,116,"vector must have at least one element"");"
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,117,LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT);
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,129,"position {0} and size {1} don't fit to the size of the input array {2}"","
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,130,"LocalizedFormats.POSITION_SIZE_MISMATCH_INPUT_ARRAY,"
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,218,"vector must have at least one element"");"
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,219,LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT);
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,718,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,719,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,33,** Message for non fitting position and size. */
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,34,rivate static final String NON_FITTING_POSITION_AND_SIZE_MESSAGE =
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,35,"position {0} and size {1} don't fit to the size of the input array {2}"";"
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,106,"hrow MathRuntimeException.createIllegalArgumentException(""vector must have at least one element"");"
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,103,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,120,"ON_FITTING_POSITION_AND_SIZE_MESSAGE, pos, size, d.length);"
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,117,"LocalizedFormats.POSITION_SIZE_MISMATCH_INPUT_ARRAY, pos, size, d.length);"
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,146,"ON_FITTING_POSITION_AND_SIZE_MESSAGE, pos, size, d.length);"
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,143,"LocalizedFormats.POSITION_SIZE_MISMATCH_INPUT_ARRAY, pos, size, d.length);"
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,913,"hrow MathRuntimeException.createArithmeticException(""zero norm"");"
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,910,throw MathRuntimeException.createArithmeticException(LocalizedFormats.ZERO_NORM);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,923,"hrow MathRuntimeException.createArithmeticException(""cannot normalize a zero norm vector"");"
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,920,throw MathRuntimeException.createArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);
False,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,1138,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,src/main/java/org/apache/commons/math/linear/ArrayRealVector.java,1135,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,104,f (rowDimension <= 0 ) {
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,105,if (rowDimension < 1 ) {
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,106,"invalid row dimension {0} (must be positive)"","
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,107,owDimension);
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,107,"LocalizedFormats.INSUFFICIENT_DIMENSION, rowDimension, 1);"
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,109,f (columnDimension <= 0) {
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,109,if (columnDimension < 1) {
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,111,"invalid column dimension {0} (must be positive)"","
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,112,olumnDimension);
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,111,"LocalizedFormats.INSUFFICIENT_DIMENSION, columnDimension, 1);"
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,159,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one row"");"
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,158,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_ROW);
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,164,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one column"");"
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,163,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,169,"some rows have length {0} while others have length {1}"","
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,168,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,192,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one row"");"
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,191,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_ROW);
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,197,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one column"");"
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,196,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,202,"some rows have length {0} while others have length {1}"","
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,201,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,222,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one row"");"
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,221,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_ROW);
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,227,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one column"");"
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,226,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,232,"some rows have length {0} while others have length {1}"","
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,231,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,607,"hrow new MatrixIndexException(""initial row {0} after final row {1}"","
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,606,"throw new MatrixIndexException(LocalizedFormats.INITIAL_ROW_AFTER_FINAL_ROW,"
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,614,"hrow new MatrixIndexException(""initial column {0} after final column {1}"","
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,613,"throw new MatrixIndexException(LocalizedFormats.INITIAL_COLUMN_AFTER_FINAL_COLUMN,"
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,646,"hrow new MatrixIndexException(""empty selected row index array"");"
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,645,throw new MatrixIndexException(LocalizedFormats.EMPTY_SELECTED_ROW_INDEX_ARRAY);
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,648,"hrow new MatrixIndexException(""empty selected column index array"");"
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,647,throw new MatrixIndexException(LocalizedFormats.EMPTY_SELECTED_COLUMN_INDEX_ARRAY);
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,706,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one row"");"
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,705,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_ROW);
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,711,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one column"");"
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,710,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,717,"some rows have length {0} while others have length {1}"","
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,716,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,725,"first {0} rows are not initialized yet"","
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,724,"LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,"
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,730,"first {0} columns are not initialized yet"","
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,729,"LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,"
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,884,"no entry at indices ({0}, {1}) in a {2}x{3} matrix"","
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,883,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY,"
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,1030,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,1029,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,1072,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,1071,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,1102,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,1101,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,1147,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,1146,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,221,"some rows have length {0} while others have length {1}"","
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,222,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,812,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one column"");"
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,813,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,820,"some rows have length {0} while others have length {1}"","
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,821,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,920,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,921,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1009,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1010,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1137,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1138,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1188,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1189,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1219,"no entry at indices ({0}, {1}) in a {2}x{3} matrix"","
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1220,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1236,"no entry at indices ({0}, {1}) in a {2}x{3} matrix"","
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1237,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1254,"no entry at indices ({0}, {1}) in a {2}x{3} matrix"","
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1255,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1272,"no entry at indices ({0}, {1}) in a {2}x{3} matrix"","
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1273,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1337,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1338,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1383,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,1384,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,170,"wrong array shape (block length = {0}, expected {1})"","
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,171,"LocalizedFormats.WRONG_BLOCK_LENGTH,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,216,"some rows have length {0} while others have length {1}"","
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,217,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,838,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one column"");"
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,839,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,846,"some rows have length {0} while others have length {1}"","
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,847,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,946,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,947,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1035,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1036,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1163,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1164,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1214,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1215,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1245,"no entry at indices ({0}, {1}) in a {2}x{3} matrix"","
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1246,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1262,"no entry at indices ({0}, {1}) in a {2}x{3} matrix"","
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1263,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1279,"no entry at indices ({0}, {1}) in a {2}x{3} matrix"","
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1280,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1296,"no entry at indices ({0}, {1}) in a {2}x{3} matrix"","
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1297,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1361,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1362,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1405,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,1406,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
True,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,21,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,215,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,216,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,254,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,255,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,303,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,304,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
True,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,22,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,105,"eigen decomposition of assymetric matrices not supported yet"");"
True,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,106,LocalizedFormats.ASSYMETRIC_EIGEN_NOT_SUPPORTED);
False,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,294,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,295,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,336,"vector length mismatch: got {0} but expected {1}"", b"
True,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,337,"LocalizedFormats.VECTOR_LENGTH_MISMATCH, b"
False,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,379,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,380,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
True,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,266,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,267,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,312,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,313,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,368,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,369,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
True,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,21,import org.apache.commons.math.util.DummyLocalizable;
True,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,22,import org.apache.commons.math.util.Localizable;
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,31,rivate static final long serialVersionUID = 1135533765052675495L;
True,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,33,private static final long serialVersionUID = -2068020346562029801L;
True,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,42,"this(new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,46,* Construct an exception with the given message.
True,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,47,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,48,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,49,* @since 2.2
True,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,51,"public InvalidMatrixException(final Localizable pattern, final Object ... arguments) {"
True,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,21,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,39,** Message for vector length mismatch. */
False,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,40,rivate static final String VECTOR_LENGTH_MISMATCH_MESSAGE =
False,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,41,"vector length mismatch: got {0} but expected {1}"";"
False,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,269,"ECTOR_LENGTH_MISMATCH_MESSAGE, b.length, m);"
True,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,266,"LocalizedFormats.VECTOR_LENGTH_MISMATCH, b.length, m);"
False,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,313,"ECTOR_LENGTH_MISMATCH_MESSAGE, b.getDimension(), m);"
True,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,310,"LocalizedFormats.VECTOR_LENGTH_MISMATCH, b.getDimension(), m);"
False,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,367,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,364,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
True,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,21,import org.apache.commons.math.util.DummyLocalizable;
True,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,22,import org.apache.commons.math.util.Localizable;
False,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,30,rivate static final long serialVersionUID = -2382324504109300625L;
True,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,32,private static final long serialVersionUID = 8120540015829487660L;
True,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,40,"this(new DummyLocalizable(pattern), arguments);"
True,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,44,* Constructs a new instance with specified formatted detail message.
True,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,45,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,46,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,47,* @since 2.0
True,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,src/main/java/org/apache/commons/math/linear/MatrixIndexException.java,49,"public MatrixIndexException(final Localizable pattern, final Object ... arguments) {"
True,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,32,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,355,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one column"");"
True,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,356,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,454,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one row"");"
True,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,455,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_ROW);
False,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,567,"hrow new MatrixIndexException(""initial row {0} after final row {1}"","
True,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,568,"throw new MatrixIndexException(LocalizedFormats.INITIAL_ROW_AFTER_FINAL_ROW,"
False,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,574,"hrow new MatrixIndexException(""initial column {0} after final column {1}"","
True,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,575,"throw new MatrixIndexException(LocalizedFormats.INITIAL_COLUMN_AFTER_FINAL_COLUMN,"
False,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,595,"hrow new MatrixIndexException(""empty selected row index array"");"
True,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,596,throw new MatrixIndexException(LocalizedFormats.EMPTY_SELECTED_ROW_INDEX_ARRAY);
False,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,597,"hrow new MatrixIndexException(""empty selected column index array"");"
True,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,598,throw new MatrixIndexException(LocalizedFormats.EMPTY_SELECTED_COLUMN_INDEX_ARRAY);
False,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,619,"{0}x{1} and {2}x{3} matrices are not addition compatible"","
True,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,620,"LocalizedFormats.NOT_ADDITION_COMPATIBLE_MATRICES,"
False,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,636,"{0}x{1} and {2}x{3} matrices are not subtraction compatible"","
True,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,637,"LocalizedFormats.NOT_SUBTRACTION_COMPATIBLE_MATRICES,"
False,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,652,"{0}x{1} and {2}x{3} matrices are not multiplication compatible"","
True,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,653,"LocalizedFormats.NOT_MULTIPLICATION_COMPATIBLE_MATRICES,"
True,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,21,import org.apache.commons.math.util.Localizable;
True,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,36,"* @deprecated as of 2.2 replaced by {@link #MatrixVisitorException(Localizable, Object...)}"
True,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,38,@Deprecated
True,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,44,* Constructs a new instance with specified formatted detail message.
True,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,45,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,46,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,47,* @since 2.2
True,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,49,"public MatrixVisitorException(final Localizable pattern, final Object[] arguments) {"
True,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java,50,"super(pattern, arguments);"
True,src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java,src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java,20,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java,src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java,37,"uper(""a {0}x{1} matrix was provided instead of a square matrix"","
False,src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java,src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java,38,"ows, columns);"
True,src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java,src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java,39,"super(LocalizedFormats.NON_SQUARE_MATRIX, rows, columns);"
True,src/main/java/org/apache/commons/math/linear/NotPositiveDefiniteMatrixException.java,src/main/java/org/apache/commons/math/linear/NotPositiveDefiniteMatrixException.java,21,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/NotPositiveDefiniteMatrixException.java,src/main/java/org/apache/commons/math/linear/NotPositiveDefiniteMatrixException.java,39,"uper(""not positive definite matrix"");"
True,src/main/java/org/apache/commons/math/linear/NotPositiveDefiniteMatrixException.java,src/main/java/org/apache/commons/math/linear/NotPositiveDefiniteMatrixException.java,40,super(LocalizedFormats.NOT_POSITIVE_DEFINITE_MATRIX);
True,src/main/java/org/apache/commons/math/linear/NotSymmetricMatrixException.java,src/main/java/org/apache/commons/math/linear/NotSymmetricMatrixException.java,21,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/NotSymmetricMatrixException.java,src/main/java/org/apache/commons/math/linear/NotSymmetricMatrixException.java,39,"uper(""not symmetric matrix"");"
True,src/main/java/org/apache/commons/math/linear/NotSymmetricMatrixException.java,src/main/java/org/apache/commons/math/linear/NotSymmetricMatrixException.java,40,super(LocalizedFormats.NOT_SYMMETRIC_MATRIX);
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,22,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,735,"hrow  MathRuntimeException.createArithmeticException(""cannot normalize a zero norm vector"");"
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,736,throw  MathRuntimeException.createArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);
True,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,293,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,294,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,364,"dimensions mismatch: got {0}x{1} but expected {2}x{3}"","
True,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,365,"LocalizedFormats.DIMENSIONS_MISMATCH_2x2,"
True,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,125,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one row"");"
True,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,126,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_ROW);
False,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,129,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one column"");"
True,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,130,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,134,"some rows have length {0} while others have length {1}"","
True,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,135,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,319,"first {0} rows are not initialized yet"","
True,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,320,"LocalizedFormats.FIRST_ROWS_NOT_INITIALIZED_YET,"
False,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,324,"first {0} columns are not initialized yet"","
True,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,325,"LocalizedFormats.FIRST_COLUMNS_NOT_INITIALIZED_YET,"
False,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,329,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one row"");"
True,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,330,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_ROW);
False,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,334,"hrow MathRuntimeException.createIllegalArgumentException(""matrix must have at least one column"");"
True,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,335,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.AT_LEAST_ONE_COLUMN);
False,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,340,"some rows have length {0} while others have length {1}"","
True,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,341,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,359,"no entry at indices ({0}, {1}) in a {2}x{3} matrix"","
True,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,360,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY,"
False,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,372,"no entry at indices ({0}, {1}) in a {2}x{3} matrix"","
True,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,373,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY,"
False,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,385,"no entry at indices ({0}, {1}) in a {2}x{3} matrix"","
True,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,386,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY,"
False,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,398,"no entry at indices ({0}, {1}) in a {2}x{3} matrix"","
True,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,399,"LocalizedFormats.NO_SUCH_MATRIX_ENTRY,"
False,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,423,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,424,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
False,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,447,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,448,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
True,src/main/java/org/apache/commons/math/linear/RealVectorFormat.java,src/main/java/org/apache/commons/math/linear/RealVectorFormat.java,30,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/RealVectorFormat.java,src/main/java/org/apache/commons/math/linear/RealVectorFormat.java,249,"cannot format a {0} instance as a real vector"","
True,src/main/java/org/apache/commons/math/linear/RealVectorFormat.java,src/main/java/org/apache/commons/math/linear/RealVectorFormat.java,250,"LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_REAL_VECTOR,"
True,src/main/java/org/apache/commons/math/linear/SingularMatrixException.java,src/main/java/org/apache/commons/math/linear/SingularMatrixException.java,20,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/SingularMatrixException.java,src/main/java/org/apache/commons/math/linear/SingularMatrixException.java,35,"uper(""matrix is singular"");"
True,src/main/java/org/apache/commons/math/linear/SingularMatrixException.java,src/main/java/org/apache/commons/math/linear/SingularMatrixException.java,37,super(LocalizedFormats.SINGULAR_MATRIX);
True,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,21,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,222,"cutoff singular value is {0}, should be at most {1}"","
True,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,223,"LocalizedFormats.TOO_LARGE_CUTOFF_SINGULAR_VALUE,"
True,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,568,"vector length mismatch: got {0} but expected {1}"","
True,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,569,"LocalizedFormats.VECTOR_LENGTH_MISMATCH,"
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,29,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,200,"dimensions mismatch: ODE problem has dimension {0},"" +"
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,201," initial state vector has dimension {1}"","
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,202,"de.getDimension(), y0.length);"
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,201,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, ode.getDimension(), y0.length);"
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,207,"dimensions mismatch: ODE problem has dimension {0},"" +"
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,208," final state vector has dimension {1}"","
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,209,"de.getDimension(), y.length);"
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,206,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, ode.getDimension(), y.length);"
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,214,"too small integration interval: length = {0}"","
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,211,"LocalizedFormats.TOO_SMALL_INTEGRATION_INTERVAL,"
True,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,27,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,137,"dimension mismatch {0} != {1}"","
True,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,138,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,"
False,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,143,"propagation direction mismatch"");"
True,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,144,LocalizedFormats.PROPAGATION_DIRECTION_MISMATCH);
False,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,153,"{0} wide hole between models time ranges"", Math.abs(gap));"
True,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,154,"LocalizedFormats.HOLE_BETWEEN_MODELS_TIME_RANGES, Math.abs(gap));"
True,src/main/java/org/apache/commons/math/ode/DerivativeException.java,src/main/java/org/apache/commons/math/ode/DerivativeException.java,21,import org.apache.commons.math.util.DummyLocalizable;
True,src/main/java/org/apache/commons/math/ode/DerivativeException.java,src/main/java/org/apache/commons/math/ode/DerivativeException.java,22,import org.apache.commons.math.util.Localizable;
True,src/main/java/org/apache/commons/math/ode/DerivativeException.java,src/main/java/org/apache/commons/math/ode/DerivativeException.java,41,"* @deprecated as of 2.2 replaced by {@link #DerivativeException(Localizable, Object...)}"
True,src/main/java/org/apache/commons/math/ode/DerivativeException.java,src/main/java/org/apache/commons/math/ode/DerivativeException.java,43,@Deprecated
True,src/main/java/org/apache/commons/math/ode/DerivativeException.java,src/main/java/org/apache/commons/math/ode/DerivativeException.java,45,"this(new DummyLocalizable(specifier), parts);"
True,src/main/java/org/apache/commons/math/ode/DerivativeException.java,src/main/java/org/apache/commons/math/ode/DerivativeException.java,48,/** Simple constructor.
True,src/main/java/org/apache/commons/math/ode/DerivativeException.java,src/main/java/org/apache/commons/math/ode/DerivativeException.java,49,* Build an exception by translating and formating a message
True,src/main/java/org/apache/commons/math/ode/DerivativeException.java,src/main/java/org/apache/commons/math/ode/DerivativeException.java,50,* @param specifier format specifier (to be translated)
True,src/main/java/org/apache/commons/math/ode/DerivativeException.java,src/main/java/org/apache/commons/math/ode/DerivativeException.java,51,* @param parts to insert in the format (no translation)
True,src/main/java/org/apache/commons/math/ode/DerivativeException.java,src/main/java/org/apache/commons/math/ode/DerivativeException.java,53,"public DerivativeException(final Localizable specifier, final Object ... parts) {"
False,src/main/java/org/apache/commons/math/ode/DerivativeException.java,src/main/java/org/apache/commons/math/ode/DerivativeException.java,44,** Build an instance from an underlying cause.
True,src/main/java/org/apache/commons/math/ode/DerivativeException.java,src/main/java/org/apache/commons/math/ode/DerivativeException.java,57,/** Build an instance from an underlying cause.
True,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,21,import org.apache.commons.math.util.Localizable;
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,34,** Simple constructor.
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,35, Build an exception by translating and formating a message
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,36, @param specifier format specifier (to be translated)
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,37, @param parts to insert in the format (no translation)
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,39,"ublic IntegratorException(final String specifier, final Object ... parts) {"
False,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,40,"uper(specifier, parts);"
True,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,35,/** Simple constructor.
True,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,36,* Build an exception by translating and formating a message
True,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,37,* @param specifier format specifier (to be translated)
True,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,38,* @param parts to insert in the format (no translation)
True,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,39,"* @deprecated as of 2.2 replaced by {@link #IntegratorException(Localizable, Object...)}"
True,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,41,@Deprecated
True,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,42,"public IntegratorException(final String specifier, final Object ... parts) {"
True,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,43,"super(specifier, parts);"
True,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,46,/** Simple constructor.
True,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,47,* Build an exception by translating and formating a message
True,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,48,* @param specifier format specifier (to be translated)
True,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,49,* @param parts to insert in the format (no translation)
True,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,51,"public IntegratorException(final Localizable specifier, final Object ... parts) {"
True,src/main/java/org/apache/commons/math/ode/IntegratorException.java,src/main/java/org/apache/commons/math/ode/IntegratorException.java,52,"super(specifier, parts);"
True,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,27,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,116,"{0} method needs at least one previous point"","
True,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,117,"LocalizedFormats.INTEGRATION_METHOD_NEEDS_AT_LEAST_ONE_PREVIOUS_POINT,"
True,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,21,import org.apache.commons.math.util.Localizable;
True,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,38,"* @deprecated as of 2.2 replaced by {@link #EventException(Localizable, Object...)}"
True,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,40,@Deprecated
True,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,45,/** Simple constructor.
True,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,46,* Build an exception by translating and formating a message
True,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,47,* @param specifier format specifier (to be translated)
True,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,48,* @param parts to insert in the format (no translation)
True,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,49,* @since 2.2
True,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,51,"public EventException(final Localizable specifier, final Object ... parts) {"
True,src/main/java/org/apache/commons/math/ode/events/EventException.java,src/main/java/org/apache/commons/math/ode/events/EventException.java,52,"super(specifier, parts);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,37,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,351,"dimension mismatch {0} != {1}"", arrayDimension, expected);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,352,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, arrayDimension, expected);"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,175,"dimensions mismatch: state vector has dimension {0},"" +"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,176," absolute tolerance vector has dimension {1}"","
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,177,"0.length, vecAbsoluteTolerance.length);"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,176,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, y0.length, vecAbsoluteTolerance.length);"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,182,"dimensions mismatch: state vector has dimension {0},"" +"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,183," relative tolerance vector has dimension {1}"","
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,184,"0.length, vecRelativeTolerance.length);"
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,181,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, y0.length, vecRelativeTolerance.length);"
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,286,"minimal step size ({0,number,0.00E00}) reached, integration needs {1,number,0.00E00}"","
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,283,"LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION,"
True,src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,116,"dimension mismatch {0} != {1}"","
True,src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,117,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,"
False,src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,149,"dimension mismatch {0} != {1}"","
True,src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,150,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,"
False,src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,164,"hrow new FunctionEvaluationException(point, ""dimension mismatch {0} != {1}"","
True,src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,165,"throw new FunctionEvaluationException(point, LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,"
True,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,27,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,120,"hrow MathRuntimeException.createIllegalStateException(""no optimum computed yet"");"
True,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,121,throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);
False,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,218,"none of the {0} start points lead to convergence"","
True,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,219,"LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,"
True,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,27,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,124,"hrow MathRuntimeException.createIllegalStateException(""no optimum computed yet"");"
True,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,125,throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);
False,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,228,"none of the {0} start points lead to convergence"","
True,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,229,"LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,"
True,src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,27,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,115,"hrow MathRuntimeException.createIllegalStateException(""no optimum computed yet"");"
True,src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,116,throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);
False,src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,206,"none of the {0} start points lead to convergence"","
True,src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,207,"LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,"
True,src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,193,"hrow MathRuntimeException.createIllegalStateException(""no optimum computed yet"");"
True,src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,194,throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);
False,src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,219,"hrow MathRuntimeException.createIllegalStateException(""no optimum computed yet"");"
True,src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,220,throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);
False,src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,302,"none of the {0} start points lead to convergence"","
True,src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,303,"LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,"
True,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,21,import org.apache.commons.math.util.DummyLocalizable;
True,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,22,import org.apache.commons.math.util.Localizable;
False,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,33,rivate static final long serialVersionUID = -357696069587075016L;
True,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,35,private static final long serialVersionUID = -4605887730798282127L;
True,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,42,"* @deprecated as of 2.2 replaced by {@link #OptimizationException(Localizable, Object...)}"
True,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,44,@Deprecated
True,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,46,"this(new DummyLocalizable(specifier), parts);"
True,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,50,* Simple constructor.
True,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,51,* Build an exception by translating and formating a message
True,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,52,* @param specifier format specifier (to be translated)
True,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,53,* @param parts to insert in the format (no translation)
True,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,54,* @since 2.2
True,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,src/main/java/org/apache/commons/math/optimization/OptimizationException.java,56,"public OptimizationException(Localizable specifier, Object ... parts) {"
True,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,34,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,90,** Message for equal vertices. */
False,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,91,rivate static final String EQUAL_VERTICES_MESSAGE =
False,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,92,"equal vertices {0} and {1} in simplex configuration"";"
False,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,94,** Message for dimension mismatch. */
False,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,95,rivate static final String DIMENSION_MISMATCH_MESSAGE =
False,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,96,"dimension mismatch {0} != {1}"";"
False,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,157,"QUAL_VERTICES_MESSAGE, j, j + 1);"
True,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,150,"LocalizedFormats.EQUAL_VERTICES_IN_SIMPLEX, j, j + 1);"
False,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,181,"simplex must contain at least one point"");"
True,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,174,LocalizedFormats.SIMPLEX_NEED_ONE_POINT);
False,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,194,"IMENSION_MISMATCH_MESSAGE, refI.length, n);"
True,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,187,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, refI.length, n);"
False,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,207,"QUAL_VERTICES_MESSAGE, i, j);"
True,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,200,"LocalizedFormats.EQUAL_VERTICES_IN_SIMPLEX, i, j);"
False,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,369,"IMENSION_MISMATCH_MESSAGE, n, startConfiguration.length);"
True,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,362,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, n, startConfiguration.length);"
True,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java,21,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java,241,"hrow new OptimizationException(""unable to first guess the harmonic coefficients"");"
True,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java,242,throw new OptimizationException(LocalizedFormats.UNABLE_TO_FIRST_GUESS_HARMONIC_COEFFICIENTS);
True,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java,85,"hrow new OptimizationException(""sample contains {0} observed points, at least {1} are required"","
True,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java,86,"throw new OptimizationException(LocalizedFormats.INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE,"
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,34,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,186,"hrow new FunctionEvaluationException(point, ""dimension mismatch {0} != {1}"","
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,187,"throw new FunctionEvaluationException(point, LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,"
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,213,"hrow new FunctionEvaluationException(point, ""dimension mismatch {0} != {1}"","
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,214,"throw new FunctionEvaluationException(point, LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,"
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,293,"hrow new OptimizationException(""unable to compute covariances: singular problem"");"
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,294,throw new OptimizationException(LocalizedFormats.UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM);
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,311,"no degrees of freedom ({0} measurements, {1} parameters)"","
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,312,"LocalizedFormats.NO_DEGREES_OF_FREEDOM,"
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,330,"hrow new OptimizationException(""dimension mismatch {0} != {1}"","
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,331,"throw new OptimizationException(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,"
True,src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java,29,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java,119,"hrow new OptimizationException(""unable to solve: singular problem"");"
True,src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java,120,throw new OptimizationException(LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM);
True,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,454,"hrow new OptimizationException(""cost relative tolerance is too small ({0}),"" +"
False,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,455," no further reduction in the"" +"
False,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,456," sum of squares is possible"","
True,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,455,"throw new OptimizationException(LocalizedFormats.TOO_SMALL_COST_RELATIVE_TOLERANCE,"
False,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,459,"hrow new OptimizationException(""parameters relative tolerance is too small"" +"
False,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,460," ({0}), no further improvement in"" +"
False,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,461," the approximate solution is possible"","
True,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,458,"throw new OptimizationException(LocalizedFormats.TOO_SMALL_PARAMETERS_RELATIVE_TOLERANCE,"
False,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,464,"hrow new OptimizationException(""orthogonality tolerance is too small ({0}),"" +"
False,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,465," solution is orthogonal to the jacobian"","
True,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,461,"throw new OptimizationException(LocalizedFormats.TOO_SMALL_ORTHOGONALITY_TOLERANCE,"
False,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,818,hrow new OptimizationException(
False,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,819,"unable to perform Q.R decomposition on the {0}x{1} jacobian matrix"","
True,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java,814,"throw new OptimizationException(LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN,"
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,29,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,236,"hrow new OptimizationException(""unable to bracket optimum in line search"");"
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,237,throw new OptimizationException(LocalizedFormats.UNABLE_TO_BRACKET_OPTIMUM_IN_LINE_SEARCH);
True,src/main/java/org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.java,src/main/java/org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.java,21,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.java,src/main/java/org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.java,37,"uper(""no feasible solution"");"
True,src/main/java/org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.java,src/main/java/org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.java,38,super(LocalizedFormats.NO_FEASIBLE_SOLUTION);
True,src/main/java/org/apache/commons/math/optimization/linear/UnboundedSolutionException.java,src/main/java/org/apache/commons/math/optimization/linear/UnboundedSolutionException.java,21,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/optimization/linear/UnboundedSolutionException.java,src/main/java/org/apache/commons/math/optimization/linear/UnboundedSolutionException.java,37,"uper(""unbounded solution"");"
True,src/main/java/org/apache/commons/math/optimization/linear/UnboundedSolutionException.java,src/main/java/org/apache/commons/math/optimization/linear/UnboundedSolutionException.java,38,super(LocalizedFormats.UNBOUNDED_SOLUTION);
True,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,26,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,72,"hrow MathRuntimeException.createIllegalStateException(""no result available"");"
True,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,73,throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_RESULT_AVAILABLE);
True,src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java,20,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java,158,"upper bound must be positive ({0})"", n);"
True,src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java,src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java,159,"LocalizedFormats.NOT_POSITIVE_UPPER_BOUND, n);"
True,src/main/java/org/apache/commons/math/random/BitsStreamGenerator.java,src/main/java/org/apache/commons/math/random/BitsStreamGenerator.java,20,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/random/BitsStreamGenerator.java,src/main/java/org/apache/commons/math/random/BitsStreamGenerator.java,126,"upper bound must be positive ({0})"", n);"
True,src/main/java/org/apache/commons/math/random/BitsStreamGenerator.java,src/main/java/org/apache/commons/math/random/BitsStreamGenerator.java,127,"LocalizedFormats.NOT_POSITIVE_UPPER_BOUND, n);"
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,33,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,141,"hrow MathRuntimeException.createEOFException(""URL {0} contains no data"","
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,142,"throw MathRuntimeException.createEOFException(LocalizedFormats.URL_CONTAINS_NO_DATA,"
False,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,373,"hrow MathRuntimeException.createIllegalStateException(""distribution not loaded"");"
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,374,throw MathRuntimeException.createIllegalStateException(LocalizedFormats.DISTRIBUTION_NOT_LOADED);
False,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,393,"hrow new MathRuntimeException(""no bin selected"");"
True,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,394,throw new MathRuntimeException(LocalizedFormats.NO_BIN_SELECTED);
True,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,42,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,151,"length must be positive ({0})"", len);"
True,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,152,"LocalizedFormats.NOT_POSITIVE_LENGTH, len);"
False,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,197,"upper bound ({0}) must be greater than lower bound ({1})"","
True,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,198,"LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,"
False,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,217,"upper bound ({0}) must be greater than lower bound ({1})"","
True,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,218,"LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,"
False,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,247,"length must be positive ({0})"", len);"
True,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,248,"LocalizedFormats.NOT_POSITIVE_LENGTH, len);"
False,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,308,"upper bound ({0}) must be greater than lower bound ({1})"","
True,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,309,"LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,"
False,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,329,"upper bound ({0}) must be greater than lower bound ({1})"","
True,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,330,"LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,"
False,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,355,"the Poisson mean must be positive ({0})"", mean);"
True,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,356,"LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, mean);"
False,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,459,"standard deviation must be positive ({0})"", sigma);"
True,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,460,"LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION, sigma);"
False,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,480,"mean must be positive ({0})"", mean);"
True,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,481,"LocalizedFormats.NOT_POSITIVE_MEAN, mean);"
False,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,509,"upper bound ({0}) must be greater than lower bound ({1})"","
True,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,510,"LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,"
False,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,833,"permutation k ({0}) exceeds n ({1})"", k, n);"
True,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,834,"LocalizedFormats.PERMUTATION_EXCEEDS_N, k, n);"
False,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,837,"permutation k ({0}) must be positive"", k);"
True,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,838,"LocalizedFormats.NOT_POSITIVE_PERMUTATION, k);"
False,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,870,"sample size ({0}) exceeds collection size ({1})"");"
True,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,871,LocalizedFormats.SAMPLE_SIZE_EXCEEDS_COLLECTION_SIZE);
False,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,874,"sample size must be positive ({0})"", k);"
True,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,875,"LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE, k);"
True,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,58,"dimension mismatch {0} != {1}"","
True,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,59,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,"
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,26,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,316,"hrow MathRuntimeException.createIllegalStateException(""digest not initialized"");"
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,317,throw MathRuntimeException.createIllegalStateException(LocalizedFormats.DIGEST_NOT_INITIALIZED);
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,349,"hrow MathRuntimeException.createEOFException(""URL {0} contains no data"","
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,350,"throw MathRuntimeException.createEOFException(LocalizedFormats.URL_CONTAINS_NO_DATA,"
True,src/main/java/org/apache/commons/math/stat/Frequency.java,src/main/java/org/apache/commons/math/stat/Frequency.java,26,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/Frequency.java,src/main/java/org/apache/commons/math/stat/Frequency.java,117,"class ({0}) does not implement Comparable"","
True,src/main/java/org/apache/commons/math/stat/Frequency.java,src/main/java/org/apache/commons/math/stat/Frequency.java,118,"LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE,"
False,src/main/java/org/apache/commons/math/stat/Frequency.java,src/main/java/org/apache/commons/math/stat/Frequency.java,147,"instance of class {0} not comparable to existing values"","
True,src/main/java/org/apache/commons/math/stat/Frequency.java,src/main/java/org/apache/commons/math/stat/Frequency.java,148,"LocalizedFormats.INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES,"
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,31,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,567,f ((n  != sample2.length) || (n < 1)) {
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,568,if (n  != sample2.length) {
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,569,"input arrays must have the same positive length ({0} and {1})"","
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,570,", sample2.length);"
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,570,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, n, sample2.length);"
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,572,if (n < 1) {
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,573,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,574,"LocalizedFormats.INSUFFICIENT_DIMENSION, sample2.length, 1);"
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,612,f (n < 2 || n != sample2.length) {
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,616,if (n != sample2.length) {
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,617,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,618,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, n, sample2.length);"
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,620,if (n < 2) {
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,614,"input arrays must have the same length and at least two elements ({0} and {1})"","
False,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,615,", sample2.length);"
True,src/main/java/org/apache/commons/math/stat/StatUtils.java,src/main/java/org/apache/commons/math/stat/StatUtils.java,622,"LocalizedFormats.INSUFFICIENT_DIMENSION, n, 2);"
True,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,224,f(length == yArray.length && length > 1) {
True,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,225,if (length != yArray.length) {
True,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,226,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,227,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, length, yArray.length);"
True,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,228,} else if (length < 2) {
True,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,229,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,230,"LocalizedFormats.INSUFFICIENT_DIMENSION, length, 2);"
True,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,231,} else {
False,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,233,lse {
False,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,234,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,235,"arrays must have the same length and both must have at "" +"
False,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,236,"least two elements. xArray has size {0}, yArray has {1} elements"","
False,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,237,"ength, yArray.length);"
False,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,269,"insufficient data: only {0} rows and {1} columns."","
True,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math/stat/correlation/Covariance.java,270,"LocalizedFormats.INSUFFICIENT_ROWS_AND_COLUMNS,"
True,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,26,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,94,"hrow MathRuntimeException.createIllegalArgumentException(""covariance matrix is null"");"
True,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,95,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_COVARIANCE_MATRIX);
False,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,226,f(xArray.length == yArray.length && xArray.length > 1) {
True,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,227,if (xArray.length != yArray.length) {
True,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,228,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,229,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, xArray.length, yArray.length);"
True,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,230,} else if (xArray.length < 2) {
True,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,231,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,232,"LocalizedFormats.INSUFFICIENT_DIMENSION, xArray.length, 2);"
True,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,233,} else {
False,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,232,lse {
False,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,233,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,234,"invalid array dimensions. xArray has size {0}; yArray has {1} elements"","
False,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,235,"Array.length, yArray.length);"
False,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,277,"insufficient data: only {0} rows and {1} columns."","
True,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,279,"LocalizedFormats.INSUFFICIENT_ROWS_AND_COLUMNS,"
True,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,148,f (xArray.length == yArray.length && xArray.length > 1) {
True,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,149,if (xArray.length != yArray.length) {
True,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,150,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,151,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, xArray.length, yArray.length);"
True,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,152,} else if (xArray.length < 2) {
True,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,153,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,154,"LocalizedFormats.INSUFFICIENT_DIMENSION, xArray.length, 2);"
True,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,155,} else {
False,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,152,lse {
False,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,153,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,154,"invalid array dimensions. xArray has size {0}; yArray has {1} elements"","
False,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java,155,"Array.length, yArray.length);"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,20,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,58,"hrow MathRuntimeException.createIllegalArgumentException(""input values array is null"");"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,59,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,126,"hrow MathRuntimeException.createIllegalArgumentException(""input values array is null"");"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,127,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,20,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,80,"hrow MathRuntimeException.createIllegalArgumentException(""input values array is null"");"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,81,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,85,"start position cannot be negative ({0})"", begin);"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,86,"LocalizedFormats.NEGATIVE_START_POSITION, begin);"
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,90,"length cannot be negative ({0})"", length);"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,91,"LocalizedFormats.NEGATIVE_LENGTH, length);"
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,95,"subarray ends after array end"");"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,96,LocalizedFormats.SUBARRAY_ENDS_AFTER_ARRAY_END);
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,34,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,71,** Message for unsupported setQuantile. */
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,72,rivate static final String UNSUPPORTED_METHOD_MESSAGE =
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,73,"percentile implementation {0} does not support {1}"";"
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,75,** Message for illegal accesson setquantile. */
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,76,rivate static final String ILLEGAL_ACCESS_MESSAGE =
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,77,"cannot access {0} method in percentile implementation {1}"";"
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,317,"window size must be positive ({0})"", windowSize);"
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,310,"LocalizedFormats.NOT_POSITIVE_WINDOW_SIZE, windowSize);"
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,396,"NSUPPORTED_METHOD_MESSAGE,"
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,389,"LocalizedFormats.PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD,"
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,400,"LLEGAL_ACCESS_MESSAGE,"
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,393,"LocalizedFormats.PERCENTILE_IMPLEMENTATION_CANNOT_ACCESS_METHOD,"
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,583,"LLEGAL_ACCESS_MESSAGE,"
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,576,"LocalizedFormats.PERCENTILE_IMPLEMENTATION_CANNOT_ACCESS_METHOD,"
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,33,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,616,"{0} values have been added before statistic is configured"","
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,617,"LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC,"
True,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,31,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,631,"{0} values have been added before statistic is configured"","
True,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,632,"LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC,"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,197,"{0} values have been added before statistic is configured"","
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,198,"LocalizedFormats.VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC,"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,98,"statistics constructed from external moments cannot be incremented"");"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,99,LocalizedFormats.CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS);
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,132,"statistics constructed from external moments cannot be cleared"");"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java,133,LocalizedFormats.CANNOT_CLEAR_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,178,"hrow MathRuntimeException.createIllegalArgumentException(""input values array is null"");"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,179,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,216,"hrow MathRuntimeException.createIllegalArgumentException(""input values array is null"");"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,217,throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,202,"out of bounds quantile value: {0}, must be in (0, 100]"", p);"
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,203,"LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE, p);"
False,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,251,"out of bounds quantile value: {0}, must be in (0, 100]"", p);"
True,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java,252,"LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE, p);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,68,"expected array length = {0}, must be at least 2"","
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,69,xpected.length);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,69,"LocalizedFormats.INSUFFICIENT_DIMENSION, expected.length, 2);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,73,"dimension mismatch {0} != {1}"", expected.length, observed.length);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,73,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, expected.length, observed.length);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,139,"out of bounds significance level {0}, must be between {1} and {2}"","
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,139,"LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,207,"out of bounds significance level {0}, must be between {1} and {2}"","
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,207,"LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,226,"observed array length = {0}, must be at least 2"","
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,227,bserved1.length);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,226,"LocalizedFormats.INSUFFICIENT_DIMENSION, observed1.length, 2);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,231,"dimension mismatch {0} != {1}"","
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,230,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,251,"observed counts are all 0 in first observed array"");"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,250,"LocalizedFormats.OBSERVED_COUNTS_ALL_ZERO, 1);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,255,"observed counts are all 0 in second observed array"");"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,254,"LocalizedFormats.OBSERVED_COUNTS_ALL_ZERO, 2);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,270,"observed counts are both zero for entry {0}"", i);"
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,269,"LocalizedFormats.OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY, i);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,314,"out of bounds significance level {0}, must be between {1} and {2}"","
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,313,"LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,332,"invalid row dimension: {0} (must be at least 2)"","
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,333,n.length);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,331,"LocalizedFormats.INSUFFICIENT_DIMENSION, in.length, 2);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,338,"invalid column dimension: {0} (must be at least 2)"","
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,339,n[0].length);
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,336,"LocalizedFormats.INSUFFICIENT_DIMENSION, in[0].length, 2);"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,360,"some rows have length {0} while others have length {1}"","
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,357,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,376,"element {0} is not positive: {1}"","
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,373,"LocalizedFormats.NOT_POSITIVE_ELEMENT_AT_INDEX,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,392,"element {0} is negative: {1}"","
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,389,"LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX,"
False,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,409,"element ({0}, {1}) is negative: {2}"","
True,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,406,"LocalizedFormats.NEGATIVE_ELEMENT_AT_2D_INDEX,"
True,src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java,src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java,27,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java,src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java,105,"out of bounds significance level {0}, must be between {1} and {2}"","
True,src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java,src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java,106,"LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
False,src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java,src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java,128,"two or more categories required, got {0}"","
True,src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java,src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java,129,"LocalizedFormats.TWO_OR_MORE_CATEGORIES_REQUIRED,"
False,src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java,src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java,136,"two or more values required in each category, one has {0}"","
True,src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java,src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java,137,"LocalizedFormats.TWO_OR_MORE_VALUES_IN_CATEGORY_REQUIRED,"
True,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,36,** Message for insufficient data. */
False,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,37,rivate static final String INSUFFICIENT_DATA_MESSAGE =
False,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,38,"insufficient data for t statistic, needs at least 2, got {0}"";"
False,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,1033,"out of bounds significance level {0}, must be between {1} and {2}"","
True,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,1030,"LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
False,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,1046,"NSUFFICIENT_DATA_MESSAGE,"
True,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,1043,"LocalizedFormats.INSUFFICIENT_DATA_FOR_T_STATISTIC,"
False,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,1059,"NSUFFICIENT_DATA_MESSAGE,"
True,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,1056,"LocalizedFormats.INSUFFICIENT_DATA_FOR_T_STATISTIC,"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,91,"dimension mismatch {0} != {1}"","
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,92,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE,"
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,96,"not enough data ({0} rows) for this many predictors ({1} predictors)"","
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,97,"LocalizedFormats.NOT_ENOUGH_DATA_FOR_NUMBER_OF_PREDICTORS,"
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,112,"dimension mismatch {0} != {1}"", x.length, covariance.length);"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,113,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, x.length, covariance.length);"
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,116,"a {0}x{1} matrix was provided instead of a square matrix"","
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,117,"LocalizedFormats.NON_SQUARE_MATRIX,"
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,25,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,551,"out of bounds significance level {0}, must be between {1} and {2}"","
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,552,"LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL,"
True,src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java,226,"{0} is not a power of 2 plus one"","
True,src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java,227,"LocalizedFormats.NOT_POWER_OF_TWO_PLUS_ONE,"
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,26,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,51,** Message for not power of 2. */
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,52,rivate static final String NOT_POWER_OF_TWO_MESSAGE =
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,53,"{0} is not a power of 2, consider padding for fix"";"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,55,** Message for dimension mismatch. */
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,56,rivate static final String DIMENSION_MISMATCH_MESSAGE =
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,57,"some dimensions don't match: {0} != {1}"";"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,59,** Message for not computed roots of unity. */
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,60,rivate static final String MISSING_ROOTS_OF_UNITY_MESSAGE =
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,61,"roots of unity have not been computed yet"";"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,451,"number of sample is not positive: {0}"","
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,440,"LocalizedFormats.NOT_POSITIVE_NUMBER_OF_SAMPLES,"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,513,"OT_POWER_OF_TWO_MESSAGE, d.length);"
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,502,"LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING, d.length);"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,526,"OT_POWER_OF_TWO_MESSAGE, o.length);"
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,515,"LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING, o.length);"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,680,"IMENSION_MISMATCH_MESSAGE, 0, dimensionSize.length);"
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,669,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, 0, dimensionSize.length);"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,686,"IMENSION_MISMATCH_MESSAGE, vector.length, dimensionSize.length);"
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,675,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, vector.length, dimensionSize.length);"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,709,"IMENSION_MISMATCH_MESSAGE, 0, dimensionSize.length);"
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,698,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, 0, dimensionSize.length);"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,715,"IMENSION_MISMATCH_MESSAGE, vector.length,dimensionSize.length);"
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,704,"LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, vector.length,dimensionSize.length);"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,830,hrow MathRuntimeException.createIllegalStateException(
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,831,ISSING_ROOTS_OF_UNITY_MESSAGE);
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,819,throw MathRuntimeException.createIllegalStateException(LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET);
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,850,"cannot compute 0-th root of unity, indefinite result"");"
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,838,LocalizedFormats.CANNOT_COMPUTE_0TH_ROOT_OF_UNITY);
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,894,hrow MathRuntimeException.createIllegalStateException(
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,895,ISSING_ROOTS_OF_UNITY_MESSAGE);
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,882,throw MathRuntimeException.createIllegalStateException(LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET);
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,917,hrow MathRuntimeException.createIllegalStateException(
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,918,ISSING_ROOTS_OF_UNITY_MESSAGE);
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,904,throw MathRuntimeException.createIllegalStateException(LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET);
True,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,22,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,163,"{0} is not a power of 2"","
True,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,164,"LocalizedFormats.NOT_POWER_OF_TWO,"
False,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,214,"{0} is not a power of 2"","
True,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java,215,"LocalizedFormats.NOT_POWER_OF_TWO,"
True,src/main/java/org/apache/commons/math/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math/transform/FastSineTransformer.java,23,import org.apache.commons.math.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math/transform/FastSineTransformer.java,220,"first element is not 0: {0}"","
True,src/main/java/org/apache/commons/math/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math/transform/FastSineTransformer.java,221,"LocalizedFormats.FIRST_ELEMENT_NOT_ZERO,"
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,154,"Continued fraction convergents diverged to +/- infinity for value {0}"","
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,154,"LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,"
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,178,"Continued fraction convergents diverged to +/- infinity for value {0}"","
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,178,"LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,"
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,186,"Continued fraction diverged to NaN for value {0}"","
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,186,"LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,"
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,201,"Continued fraction convergents failed to converge for value {0}"","
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,201,"LocalizedFormats.NON_CONVERGENT_CONTINUED_FRACTION,"
False,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,47,"hrow new MathException(""Conversion Exception in Transformation, Object is null"");"
True,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,47,throw new MathException(LocalizedFormats.NULL_OBJECT_TRANSFORMATION);
False,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,58,"Conversion Exception in Transformation: {0}"", e.getMessage());"
True,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,58,"LocalizedFormats.CANNOT_TRANSFORM_TO_DOUBLE, e.getMessage());"
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,17,package org.apache.commons.math.util;
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,19,import java.util.Locale;
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,22,"* Dummy implementation of the {@link Localizable} interface, without localization."
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,24,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,25,* @since 2.2
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,27,public class DummyLocalizable implements Localizable {
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,29,/** Serializable version identifier. */
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,30,private static final long serialVersionUID = 8843275624471387299L;
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,32,/** Source string. */
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,33,private final String source;
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,35,/** Simple constructor. */
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,36,public DummyLocalizable(final String source) {
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,37,this.source = source;
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,40,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,41,public String getSourceString() {
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,42,return source;
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,45,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,46,public String getLocalizedString(Locale locale) {
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,47,return source;
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,50,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,51,public String toString() {
True,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,src/main/java/org/apache/commons/math/util/DummyLocalizable.java,52,return source;
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,17,package org.apache.commons.math.util;
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,19,import java.io.Serializable;
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,20,import java.util.Locale;
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,23,* Interface for localizable strings.
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,25,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,26,* @since 2.2
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,28,public interface Localizable extends Serializable {
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,31,* Get the source (non-localized) string.
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,32,* @return source string
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,34,String getSourceString();
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,37,* Get the localized string.
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,38,* @param locale locale into which to get the string
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,39,* @return localized string or the source string if no localized version is available
True,src/main/java/org/apache/commons/math/util/Localizable.java,src/main/java/org/apache/commons/math/util/Localizable.java,41,String getLocalizedString(Locale locale);
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,17,package org.apache.commons.math.util;
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,19,import java.util.Locale;
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,20,import java.util.MissingResourceException;
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,21,import java.util.ResourceBundle;
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,24,* Enumeration for localized messages formats used for exemple
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,25,* in exceptions messages.
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,26,* <p>
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,27,* The constants in this enumeration represent the available
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,28,* formats as localized strings. These formats are intended to be
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,29,"* localized using simple properties files, using the constant"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,30,* name as the key and the property value as the message format.
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,31,* The source English format is provided in the constants themselves
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,32,* to serve both as a reminder for developers to understand the parameters
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,33,"* needed by each format, as a basis for translators to create"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,34,"* localized properties files, and as a default format if some"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,35,* translation is missing.
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,36,* </p>
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,37,* @since 2.1
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,38,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,40,public enum LocalizedFormats implements Localizable {
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,42,// CHECKSTYLE: stop MultipleVariableDeclarations
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,44,"ARGUMENT_OUTSIDE_DOMAIN(""Argument {0} outside domain [{1} ; {2}]""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,45,"ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1(""array sizes should have difference 1 ({0} != {1} + 1)""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,46,"ASSYMETRIC_EIGEN_NOT_SUPPORTED(""eigen decomposition of assymetric matrices not supported yet""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,47,"AT_LEAST_ONE_COLUMN(""matrix must have at least one column""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,48,"AT_LEAST_ONE_ROW(""matrix must have at least one row""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,49,"BANDWIDTH_OUT_OF_INTERVAL(""bandwidth must be in the interval [0,1], but got {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,50,"BINOMIAL_INVALID_PARAMETERS_ORDER(""must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,51,"BINOMIAL_NEGATIVE_PARAMETER(""must have n >= 0 for binomial coefficient (n,k), got n = {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,52,"CANNOT_CLEAR_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS(""statistics constructed from external moments cannot be cleared""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,53,"CANNOT_COMPUTE_0TH_ROOT_OF_UNITY(""cannot compute 0-th root of unity, indefinite result""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,54,"CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N(""cannot compute nth root for null or negative n: {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,55,"CANNOT_CONVERT_OBJECT_TO_FRACTION(""cannot convert given object to a fraction number: {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,56,"CANNOT_DISCARD_NEGATIVE_NUMBER_OF_ELEMENTS(""cannot discard a negative number of elements ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,57,"CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR(""cannot format a {0} instance as a 3D vector""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,58,"CANNOT_FORMAT_INSTANCE_AS_COMPLEX(""cannot format a {0} instance as a complex number""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,59,"CANNOT_FORMAT_INSTANCE_AS_REAL_VECTOR(""cannot format a {0} instance as a real vector""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,60,"CANNOT_FORMAT_OBJECT_TO_FRACTION(""cannot format given object as a fraction number""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,61,"CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS(""statistics constructed from external moments cannot be incremented""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,62,"CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR(""cannot normalize a zero norm vector""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,63,"CANNOT_RETRIEVE_AT_NEGATIVE_INDEX(""elements cannot be retrieved from a negative array index {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,64,"CANNOT_SET_AT_NEGATIVE_INDEX(""cannot set an element at a negative index {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,65,"CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY(""cannot substitute an element from an empty array""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,66,"CANNOT_TRANSFORM_TO_DOUBLE(""Conversion Exception in Transformation: {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,67,"CARDAN_ANGLES_SINGULARITY(""Cardan angles singularity""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,68,"CLASS_DOESNT_IMPLEMENT_COMPARABLE(""class ({0}) does not implement Comparable""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,69,"CLOSEST_ORTHOGONAL_MATRIX_HAS_NEGATIVE_DETERMINANT(""the closest orthogonal matrix has a negative determinant {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,70,"COLUMN_INDEX_OUT_OF_RANGE(""column index {0} out of allowed range [{1}, {2}]""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,71,"CONTINUED_FRACTION_INFINITY_DIVERGENCE(""Continued fraction convergents diverged to +/- infinity for value {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,72,"CONTINUED_FRACTION_NAN_DIVERGENCE(""Continued fraction diverged to NaN for value {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,73,"CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR(""contraction criteria ({0}) smaller than the expansion factor ({1}).  This would lead to a never ending loop of expansion and contraction as a newly expanded internal storage array would immediately satisfy the criteria for contraction.""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,74,"CONTRACTION_CRITERIA_SMALLER_THAN_ONE(""contraction criteria smaller than one ({0}).  This would lead to a never ending loop of expansion and contraction as an internal storage array length equal to the number of elements would satisfy the contraction criteria.""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,75,"CONVERGENCE_FAILED(""convergence failed""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,76,"CUMULATIVE_PROBABILITY_RETURNED_NAN(""Cumulative probability function returned NaN for argument {0} p = {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,77,"DIFFERENT_ROWS_LENGTHS(""some rows have length {0} while others have length {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,78,"DIGEST_NOT_INITIALIZED(""digest not initialized""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,79,"DIMENSIONS_MISMATCH_2x2(""dimensions mismatch: got {0}x{1} but expected {2}x{3}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,80,"DIMENSIONS_MISMATCH_SIMPLE(""dimensions mismatch {0} != {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,81,"DISCRETE_CUMULATIVE_PROBABILITY_RETURNED_NAN(""Discrete cumulative probability function returned NaN for argument {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,82,"DISTRIBUTION_NOT_LOADED(""distribution not loaded""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,83,"DUPLICATED_ABSCISSA(""Abscissa {0} is duplicated at both indices {1} and {2}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,84,"EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY(""empty polynomials coefficients array""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,85,"EMPTY_SELECTED_COLUMN_INDEX_ARRAY(""empty selected column index array""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,86,"EMPTY_SELECTED_ROW_INDEX_ARRAY(""empty selected row index array""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,87,"EMPTY_STRING_FOR_IMAGINARY_CHARACTER(""empty string for imaginary character""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,88,"ENDPOINTS_NOT_AN_INTERVAL(""endpoints do not specify an interval: [{0}, {1}]""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,89,"EQUAL_VERTICES_IN_SIMPLEX(""equal vertices {0} and {1} in simplex configuration""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,90,"EULER_ANGLES_SINGULARITY(""Euler angles singularity""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,91,"EVALUATION_FAILED(""evaluation failed for argument = {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,92,"EXPANSION_FACTOR_SMALLER_THAN_ONE(""expansion factor smaller than one ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,93,"FACTORIAL_NEGATIVE_PARAMETER(""must have n >= 0 for n!, got n = {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,94,"FAILED_BRACKETING(""number of iterations={0}, maximum iterations={1}, initial={2}, lower bound={3}, upper bound={4}, final a value={5}, final b value={6}, f(a)={7}, f(b)={8}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,95,"FAILED_FRACTION_CONVERSION(""Unable to convert {0} to fraction after {1} iterations""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,96,"FIRST_COLUMNS_NOT_INITIALIZED_YET(""first {0} columns are not initialized yet""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,97,"FIRST_ELEMENT_NOT_ZERO(""first element is not 0: {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,98,"FIRST_ROWS_NOT_INITIALIZED_YET(""first {0} rows are not initialized yet""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,99,"FRACTION_CONVERSION_OVERFLOW(""Overflow trying to convert {0} to fraction ({1}/{2})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,100,"FUNCTION_NOT_DIFFERENTIABLE(""function is not differentiable""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,101,"FUNCTION_NOT_POLYNOMIAL(""function is not polynomial""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,102,"GCD_OVERFLOW_32_BITS(""overflow: gcd({0}, {1}) is 2^31""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,103,"GCD_OVERFLOW_64_BITS(""overflow: gcd({0}, {1}) is 2^63""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,104,"HOLE_BETWEEN_MODELS_TIME_RANGES(""{0} wide hole between models time ranges""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,105,"IDENTICAL_ABSCISSAS_DIVISION_BY_ZERO(""identical abscissas x[{0}] == x[{1}] == {2} cause division by zero""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,106,"INDEX_LARGER_THAN_MAX(""the index specified: {0} is larger than the current maximal index {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,107,"INDEX_NOT_POSITIVE(""index ({0}) is not positive""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,108,"INDEX_OUT_OF_RANGE(""index {0} out of allowed range [{1}, {2}]""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,109,"INFINITE_ARRAY_ELEMENT(""Array contains an infinite element, {0} at index {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,110,"INFINITE_VALUE_CONVERSION(""cannot convert infinite value""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,111,"INITIAL_CAPACITY_NOT_POSITIVE(""initial capacity ({0}) is not positive""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,112,"INITIAL_COLUMN_AFTER_FINAL_COLUMN(""initial column {0} after final column {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,113,"INITIAL_ROW_AFTER_FINAL_ROW(""initial row {0} after final row {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,114,"INPUT_DATA_FROM_UNSUPPORTED_DATASOURCE(""input data comes from unsupported datasource: {0}, supported sources: {1}, {2}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,115,"INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES(""instance of class {0} not comparable to existing values""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,116,"INSUFFICIENT_DATA_FOR_T_STATISTIC(""insufficient data for t statistic, needs at least 2, got {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,117,"INSUFFICIENT_DIMENSION(""insufficient dimension {0}, must be at least {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,118,"INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE(""sample contains {0} observed points, at least {1} are required""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,119,"INSUFFICIENT_ROWS_AND_COLUMNS(""insufficient data: only {0} rows and {1} columns.""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,120,"INTEGRATION_METHOD_NEEDS_AT_LEAST_ONE_PREVIOUS_POINT(""{0} method needs at least one previous point""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,121,"INTERNAL_ERROR(""internal error, please fill a bug report at {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,122,"INVALID_BRACKETING_PARAMETERS(""invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,123,"INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS(""invalid interval, initial value parameters:  lower={0}, initial={1}, upper={2}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,124,"INVALID_ITERATIONS_LIMITS(""invalid iteration limits: min={0}, max={1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,125,"INVALID_MAX_ITERATIONS(""bad value for maximum iterations number: {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,126,"INVALID_ROUNDING_METHOD(""invalid rounding method {0}, valid methods: {1} ({2}), {3} ({4}), {5} ({6}), {7} ({8}), {9} ({10}), {11} ({12}), {13} ({14}), {15} ({16})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,127,"ITERATOR_EXHAUSTED(""iterator exhausted""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,128,"LCM_OVERFLOW_32_BITS(""overflow: lcm({0}, {1}) is 2^31""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,129,"LCM_OVERFLOW_64_BITS(""overflow: lcm({0}, {1}) is 2^63""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,130,"LOESS_EXPECTS_AT_LEAST_ONE_POINT(""Loess expects at least 1 point""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,131,"LOWER_BOUND_NOT_BELOW_UPPER_BOUND(""upper bound ({0}) must be greater than lower bound ({1})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,132,"LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT(""lower endpoint ({0}) must be less than or equal to upper endpoint ({1})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,133,"MAP_MODIFIED_WHILE_ITERATING(""map has been modified while iterating""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,134,"MAX_EVALUATIONS_EXCEEDED(""maximal number of evaluations ({0}) exceeded""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,135,"MAX_ITERATIONS_EXCEEDED(""maximal number of iterations ({0}) exceeded""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,136,"MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION(""minimal step size ({0,number,0.00E00}) reached, integration needs {1,number,0.00E00}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,137,"MISMATCHED_LOESS_ABSCISSA_ORDINATE_ARRAYS(""Loess expects the abscissa and ordinate arrays to be of the same size, but got {0} abscissae and {1} ordinatae""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,138,"NAN_VALUE_CONVERSION(""cannot convert NaN value""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,139,"NEGATIVE_BRIGHTNESS_EXPONENT(""brightness exponent should be positive or null, but got {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,140,"NEGATIVE_COMPLEX_MODULE(""negative complex module {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,141,"NEGATIVE_ELEMENT_AT_2D_INDEX(""element ({0}, {1}) is negative: {2}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,142,"NEGATIVE_ELEMENT_AT_INDEX(""element {0} is negative: {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,143,"NEGATIVE_LENGTH(""length cannot be negative ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,144,"NEGATIVE_NUMBER_OF_SUCCESSES(""number of successes must be non-negative ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,145,"NEGATIVE_NUMBER_OF_TRIALS(""number of trials must be non-negative ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,146,"NEGATIVE_ROBUSTNESS_ITERATIONS(""the number of robustness iterations must be non-negative, but got {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,147,"NEGATIVE_START_POSITION(""start position cannot be negative ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,148,"NON_CONVERGENT_CONTINUED_FRACTION(""Continued fraction convergents failed to converge for value {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,149,"NON_POSITIVE_MICROSPHERE_ELEMENTS(""number of microsphere elements must be positive, but got {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,150,"NON_POSITIVE_POLYNOMIAL_DEGREE(""polynomial degree must be positive: degree={0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,151,"NON_REAL_FINITE_ABSCISSA(""all abscissae must be finite real numbers, but {0}-th is {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,152,"NON_REAL_FINITE_ORDINATE(""all ordinatae must be finite real numbers, but {0}-th is {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,153,"NON_REAL_FINITE_WEIGHT(""all weights must be finite real numbers, but {0}-th is {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,154,"NON_SQUARE_MATRIX(""a {0}x{1} matrix was provided instead of a square matrix""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,155,"NORMALIZE_INFINITE(""Cannot normalize to an infinite value""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,156,"NORMALIZE_NAN(""Cannot normalize to NaN""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,157,"NOT_ADDITION_COMPATIBLE_MATRICES(""{0}x{1} and {2}x{3} matrices are not addition compatible""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,158,"NOT_DECREASING_NUMBER_OF_POINTS(""points {0} and {1} are not decreasing ({2} < {3})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,159,"NOT_ENOUGH_DATA_FOR_NUMBER_OF_PREDICTORS(""not enough data ({0} rows) for this many predictors ({1} predictors)""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,160,"NOT_ENOUGH_POINTS_IN_SPLINE_PARTITION(""spline partition must have at least {0} points, got {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,161,"NOT_INCREASING_NUMBER_OF_POINTS(""points {0} and {1} are not increasing ({2} > {3})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,162,"NOT_MULTIPLICATION_COMPATIBLE_MATRICES(""{0}x{1} and {2}x{3} matrices are not multiplication compatible""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,163,"NOT_POSITIVE_ALPHA(""alpha must be positive ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,164,"NOT_POSITIVE_BETA(""beta must be positive ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,165,"NOT_POSITIVE_COLUMNDIMENSION(""invalid column dimension: {0} (must be positive)""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,166,"NOT_POSITIVE_DEFINITE_MATRIX(""not positive definite matrix""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,167,"NOT_POSITIVE_DEGREES_OF_FREEDOM(""degrees of freedom must be positive ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,168,"NOT_POSITIVE_ELEMENT_AT_INDEX(""element {0} is not positive: {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,169,"NOT_POSITIVE_EXPONENT(""invalid exponent {0} (must be positive)""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,170,"NOT_POSITIVE_LENGTH(""length must be positive ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,171,"NOT_POSITIVE_MEAN(""mean must be positive ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,172,"NOT_POSITIVE_NUMBER_OF_SAMPLES(""number of sample is not positive: {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,173,"NOT_POSITIVE_PERMUTATION(""permutation k ({0}) must be positive""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,174,"NOT_POSITIVE_POISSON_MEAN(""the Poisson mean must be positive ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,175,"NOT_POSITIVE_POPULATION_SIZE(""population size must be positive ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,176,"NOT_POSITIVE_ROW_DIMENSION(""invalid row dimension: {0} (must be positive)""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,177,"NOT_POSITIVE_SAMPLE_SIZE(""sample size must be positive ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,178,"NOT_POSITIVE_SCALE(""scale must be positive ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,179,"NOT_POSITIVE_SHAPE(""shape must be positive ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,180,"NOT_POSITIVE_STANDARD_DEVIATION(""standard deviation must be positive ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,181,"NOT_POSITIVE_UPPER_BOUND(""upper bound must be positive ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,182,"NOT_POSITIVE_WINDOW_SIZE(""window size must be positive ({0})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,183,"NOT_POWER_OF_TWO(""{0} is not a power of 2""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,184,"NOT_POWER_OF_TWO_CONSIDER_PADDING(""{0} is not a power of 2, consider padding for fix""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,185,"NOT_POWER_OF_TWO_PLUS_ONE(""{0} is not a power of 2 plus one""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,186,"NOT_STRICTLY_DECREASING_NUMBER_OF_POINTS(""points {0} and {1} are not strictly decreasing ({2} <= {3})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,187,"NOT_STRICTLY_INCREASING_KNOT_VALUES(""knot values must be strictly increasing""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,188,"NOT_STRICTLY_INCREASING_NUMBER_OF_POINTS(""points {0} and {1} are not strictly increasing ({2} >= {3})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,189,"NOT_SUBTRACTION_COMPATIBLE_MATRICES(""{0}x{1} and {2}x{3} matrices are not subtraction compatible""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,190,"NOT_SYMMETRIC_MATRIX(""not symmetric matrix""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,191,"NO_BIN_SELECTED(""no bin selected""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,192,"NO_CONVERGENCE_WITH_ANY_START_POINT(""none of the {0} start points lead to convergence""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,193,"NO_DATA(""no data""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,194,"NO_DEGREES_OF_FREEDOM(""no degrees of freedom ({0} measurements, {1} parameters)""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,195,"NO_DENSITY_FOR_THIS_DISTRIBUTION(""This distribution does not have a density function implemented""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,196,"NO_FEASIBLE_SOLUTION(""no feasible solution""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,197,"NO_OPTIMUM_COMPUTED_YET(""no optimum computed yet""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,198,"NO_RESULT_AVAILABLE(""no result available""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,199,"NO_SUCH_MATRIX_ENTRY(""no entry at indices ({0}, {1}) in a {2}x{3} matrix""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,200,"NULL_COVARIANCE_MATRIX(""covariance matrix is null""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,201,"NULL_DENOMINATOR(""denominator is null""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,202,"NULL_DENOMINATOR_FORMAT(""denominator format can not be null""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,203,"NULL_FRACTION(""null fraction""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,204,"NULL_FUNCTION(""function is null""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,205,"NULL_IMAGINARY_FORMAT(""null imaginary format""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,206,"NULL_INPUT_ARRAY(""input values array is null""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,207,"NULL_NUMERATOR(""numerator is null""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,208,"NULL_NUMERATOR_FORMAT(""numerator format can not be null""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,209,"NULL_OBJECT_TRANSFORMATION(""Conversion Exception in Transformation, Object is null""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,210,"NULL_REAL_FORMAT(""null real format""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,211,"NULL_WHOLE_FORMAT(""whole format can not be null""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,212,"NUMBER_OF_SUCCESS_LARGER_THAN_POPULATION_SIZE(""number of successes ({0}) must be less than or equal to population size ({1})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,213,"NUMERATOR_OVERFLOW_AFTER_MULTIPLY(""overflow, numerator too large after multiply: {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,214,"N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED(""{0} points Legendre-Gauss integrator not supported, number of points must be in the {1}-{2} range""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,215,"OBSERVED_COUNTS_ALL_ZERO(""observed counts are all 0 in observed array {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,216,"OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY(""observed counts are both zero for entry {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,217,"OUT_OF_BOUNDS_QUANTILE_VALUE(""out of bounds quantile value: {0}, must be in (0, 100]""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,218,"OUT_OF_BOUND_SIGNIFICANCE_LEVEL(""out of bounds significance level {0}, must be between {1} and {2}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,219,"OUT_OF_ORDER_ABSCISSA_ARRAY(""the abscissae array must be sorted in a strictly increasing order, but the {0}-th element is {1} whereas {2}-th is {3}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,220,"OUT_OF_RANGE_ROOT_OF_UNITY_INDEX(""out of range root of unity index {0} (must be in [{1};{2}])""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,221,"OUT_OF_RANGE_SIMPLE(""{0} out of [{1}, {2}] range""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,222,"OVERFLOW_IN_FRACTION(""overflow in fraction {0}/{1}, cannot negate""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,223,"PERCENTILE_IMPLEMENTATION_CANNOT_ACCESS_METHOD(""cannot access {0} method in percentile implementation {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,224,"PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD(""percentile implementation {0} does not support {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,225,"PERMUTATION_EXCEEDS_N(""permutation k ({0}) exceeds n ({1})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,226,"POLYNOMIAL_INTERPOLANTS_MISMATCH_SEGMENTS(""number of polynomial interpolants must match the number of segments ({0} != {1} - 1)""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,227,"POSITION_SIZE_MISMATCH_INPUT_ARRAY(""position {0} and size {1} don't fit to the size of the input array {2}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,228,"POWER_NEGATIVE_PARAMETERS(""cannot raise an integral value to a negative power ({0}^{1})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,229,"PROPAGATION_DIRECTION_MISMATCH(""propagation direction mismatch""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,230,"ROOTS_OF_UNITY_NOT_COMPUTED_YET(""roots of unity have not been computed yet""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,231,"ROTATION_MATRIX_DIMENSIONS(""a {0}x{1} matrix cannot be a rotation matrix""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,232,"ROW_INDEX_OUT_OF_RANGE(""row index {0} out of allowed range [{1}, {2}]""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,233,"SAME_SIGN_AT_ENDPOINTS(""function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,234,"SAMPLE_SIZE_EXCEEDS_COLLECTION_SIZE(""sample size ({0}) exceeds collection size ({1})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,235,"SAMPLE_SIZE_LARGER_THAN_POPULATION_SIZE(""sample size ({0}) must be less than or equal to population size ({1})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,236,"SIMPLEX_NEED_ONE_POINT(""simplex must contain at least one point""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,237,"SIMPLE_MESSAGE(""{0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,238,"SINGULAR_MATRIX(""matrix is singular""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,239,"SUBARRAY_ENDS_AFTER_ARRAY_END(""subarray ends after array end""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,240,"TOO_LARGE_CUTOFF_SINGULAR_VALUE(""cutoff singular value is {0}, should be at most {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,241,"TOO_MANY_ELEMENTS_TO_DISCARD_FROM_ARRAY(""cannot discard {0} elements from a {1} elements array""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,242,"TOO_SMALL_BANDWIDTH(""the bandwidth must be large enough to accomodate at least 2 points. There are {0}  data points, and bandwidth must be at least {1}  but it is only {2}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,243,"TOO_SMALL_COST_RELATIVE_TOLERANCE(""cost relative tolerance is too small ({0}), no further reduction in the sum of squares is possible""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,244,"TOO_SMALL_INTEGRATION_INTERVAL(""too small integration interval: length = {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,245,"TOO_SMALL_ORTHOGONALITY_TOLERANCE(""orthogonality tolerance is too small ({0}), solution is orthogonal to the jacobian""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,246,"TOO_SMALL_PARAMETERS_RELATIVE_TOLERANCE(""parameters relative tolerance is too small ({0}), no further improvement in the approximate solution is possible""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,247,"TWO_OR_MORE_CATEGORIES_REQUIRED(""two or more categories required, got {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,248,"TWO_OR_MORE_VALUES_IN_CATEGORY_REQUIRED(""two or more values required in each category, one has {0}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,249,"UNABLE_TO_BRACKET_OPTIMUM_IN_LINE_SEARCH(""unable to bracket optimum in line search""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,250,"UNABLE_TO_COMPUTE_COVARIANCE_SINGULAR_PROBLEM(""unable to compute covariances: singular problem""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,251,"UNABLE_TO_FIRST_GUESS_HARMONIC_COEFFICIENTS(""unable to first guess the harmonic coefficients""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,252,"UNABLE_TO_ORTHOGONOLIZE_MATRIX(""unable to orthogonalize matrix in {0} iterations""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,253,"UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN(""unable to perform Q.R decomposition on the {0}x{1} jacobian matrix""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,254,"UNABLE_TO_SOLVE_SINGULAR_PROBLEM(""unable to solve: singular problem""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,255,"UNBOUNDED_SOLUTION(""unbounded solution""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,256,"UNKNOWN_MODE(""unknown mode {0}, known modes: {1} ({2}), {3} ({4}), {5} ({6}), {7} ({8}), {9} ({10}) and {11} ({12})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,257,"UNPARSEABLE_3D_VECTOR(""unparseable 3D vector: \""{0}\""""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,258,"UNPARSEABLE_COMPLEX_NUMBER(""unparseable complex number: \""{0}\""""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,259,"UNPARSEABLE_FRACTION_NUMBER(""unparseable fraction number: \""{0}\""""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,260,"UNPARSEABLE_REAL_VECTOR(""unparseable real vector: \""{0}\""""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,261,"UNSUPPORTED_EXPANSION_MODE(""unsupported expansion mode {0}, supported modes are {1} ({2}) and {3} ({4})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,262,"URL_CONTAINS_NO_DATA(""URL {0} contains no data""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,263,"VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC(""{0} values have been added before statistic is configured""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,264,"VECTOR_LENGTH_MISMATCH(""vector length mismatch: got {0} but expected {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,265,"VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT(""vector must have at least one element""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,266,"WRONG_BLOCK_LENGTH(""wrong array shape (block length = {0}, expected {1})""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,267,"WRONG_NUMBER_OF_POINTS(""{0} points are required, got only {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,268,"ZERO_DENOMINATOR(""denominator must be different from 0""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,269,"ZERO_DENOMINATOR_IN_FRACTION(""zero denominator in fraction {0}/{1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,270,"ZERO_FRACTION_TO_DIVIDE_BY(""the fraction to divide by must not be zero: {0}/{1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,271,"ZERO_NORM(""zero norm""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,272,"ZERO_NORM_FOR_ROTATION_AXIS(""zero norm for rotation axis""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,273,"ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR(""zero norm for rotation defining vector"");"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,275,// CHECKSTYLE: resume MultipleVariableDeclarations
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,278,/** Source English format. */
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,279,private final String sourceFormat;
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,281,/** Simple constructor.
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,282,* @param sourceFormat source English format to use when no
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,283,* localized version is available
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,285,private LocalizedFormats(final String sourceFormat) {
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,286,this.sourceFormat = sourceFormat;
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,289,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,290,public String getSourceString() {
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,291,return sourceFormat;
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,294,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,295,public String getLocalizedString(final Locale locale) {
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,296,try {
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,297,ResourceBundle bundle =
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,298,"ResourceBundle.getBundle(""META-INF/localization/LocalizedFormats"", locale);"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,299,if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,300,// the value of the resource is the translated format
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,301,return bundle.getString(toString());
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,304,} catch (MissingResourceException mre) {
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,305,// do nothing here
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,308,// either the locale is not supported or the resource is unknown
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,309,// don't translate and fall back to using the source format
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,310,return sourceFormat;
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,365,"must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,365,"LocalizedFormats.BINOMIAL_INVALID_PARAMETERS_ORDER,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,370,"must have n >= 0 for binomial coefficient (n,k), got n = {0}"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,370,"LocalizedFormats.BINOMIAL_NEGATIVE_PARAMETER,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,596,"must have n >= 0 for n!, got n = {0}"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,596,"LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,629,"must have n >= 0 for n!, got n = {0}"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,629,"LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,654,"must have n >= 0 for n!, got n = {0}"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,654,"LocalizedFormats.FACTORIAL_NEGATIVE_PARAMETER,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,702,"overflow: gcd({0}, {1}) is 2^31"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,702,"LocalizedFormats.GCD_OVERFLOW_32_BITS,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,728,"overflow: gcd({0}, {1}) is 2^31"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,728,"LocalizedFormats.GCD_OVERFLOW_32_BITS,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,791,"overflow: gcd({0}, {1}) is 2^63"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,791,"LocalizedFormats.GCD_OVERFLOW_64_BITS,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,817,"overflow: gcd({0}, {1}) is 2^63"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,817,"LocalizedFormats.GCD_OVERFLOW_64_BITS,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,967,"overflow: lcm({0}, {1}) is 2^31"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,967,"LocalizedFormats.LCM_OVERFLOW_32_BITS,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1002,"overflow: lcm({0}, {1}) is 2^63"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1002,"LocalizedFormats.LCM_OVERFLOW_64_BITS,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1233,"Cannot normalize to an infinite value"");"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1233,LocalizedFormats.NORMALIZE_INFINITE);
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1237,"Cannot normalize to NaN"");"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1237,LocalizedFormats.NORMALIZE_NAN);
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1245,"Array contains an infinite element, {0} at index {1}"", values[i], i);"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1245,"LocalizedFormats.INFINITE_ARRAY_ELEMENT, values[i], i);"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1591,"cannot raise an integral value to a negative power ({0}^{1})"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1591,"LocalizedFormats.POWER_NEGATIVE_PARAMETERS,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1621,"cannot raise an integral value to a negative power ({0}^{1})"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1621,"LocalizedFormats.POWER_NEGATIVE_PARAMETERS,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1651,"cannot raise an integral value to a negative power ({0}^{1})"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1651,"LocalizedFormats.POWER_NEGATIVE_PARAMETERS,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1681,"cannot raise an integral value to a negative power ({0}^{1})"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1681,"LocalizedFormats.POWER_NEGATIVE_PARAMETERS,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1711,"cannot raise an integral value to a negative power ({0}^{1})"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1711,"LocalizedFormats.POWER_NEGATIVE_PARAMETERS,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1731,"cannot raise an integral value to a negative power ({0}^{1})"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1731,"LocalizedFormats.POWER_NEGATIVE_PARAMETERS,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1761,"cannot raise an integral value to a negative power ({0}^{1})"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1761,"LocalizedFormats.POWER_NEGATIVE_PARAMETERS,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1887,"hrow MathRuntimeException.createIllegalArgumentException(""points {0} and {1} are not strictly increasing ({2} >= {3})"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1887,"throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_STRICTLY_INCREASING_NUMBER_OF_POINTS,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1892,"hrow MathRuntimeException.createIllegalArgumentException(""points {0} and {1} are not increasing ({2} > {3})"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1892,"throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_INCREASING_NUMBER_OF_POINTS,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1899,"hrow MathRuntimeException.createIllegalArgumentException(""points {0} and {1} are not strictly decreasing ({2} <= {3})"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1899,"throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_STRICTLY_DECREASING_NUMBER_OF_POINTS,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1904,"hrow MathRuntimeException.createIllegalArgumentException(""points {0} and {1} are not decreasing ({2} < {3})"","
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1904,"throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_DECREASING_NUMBER_OF_POINTS,"
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,53,** Message for map modification during iteration. */
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,54,rivate static final String CONCURRENT_MODIFICATION_MESSAGE =
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,55,"map has been modified while iterating"";"
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,57,** Message for exhausted iterator. */
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,58,rivate static final String EXHAUSTED_ITERATOR_MESSAGE =
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,59,"iterator exhausted"";"
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,537,hrow MathRuntimeException.createConcurrentModificationException(
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,538,ONCURRENT_MODIFICATION_MESSAGE);
True,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,529,throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,541,hrow MathRuntimeException.createNoSuchElementException(EXHAUSTED_ITERATOR_MESSAGE);
True,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,532,throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,555,hrow MathRuntimeException.createConcurrentModificationException(
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,556,ONCURRENT_MODIFICATION_MESSAGE);
True,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,546,throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,559,hrow MathRuntimeException.createNoSuchElementException(EXHAUSTED_ITERATOR_MESSAGE);
True,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,549,throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,573,hrow MathRuntimeException.createConcurrentModificationException(
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,574,ONCURRENT_MODIFICATION_MESSAGE);
True,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,563,throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,588,hrow MathRuntimeException.createNoSuchElementException(EXHAUSTED_ITERATOR_MESSAGE);
True,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,577,throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,56,** Message for map modification during iteration. */
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,57,rivate static final String CONCURRENT_MODIFICATION_MESSAGE =
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,58,"map has been modified while iterating"";"
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,60,** Message for exhausted iterator. */
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,61,rivate static final String EXHAUSTED_ITERATOR_MESSAGE =
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,62,"iterator exhausted"";"
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,549,hrow MathRuntimeException.createConcurrentModificationException(
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,550,ONCURRENT_MODIFICATION_MESSAGE);
True,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,541,throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,553,hrow MathRuntimeException.createNoSuchElementException(EXHAUSTED_ITERATOR_MESSAGE);
True,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,544,throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,567,hrow MathRuntimeException.createConcurrentModificationException(
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,568,ONCURRENT_MODIFICATION_MESSAGE);
True,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,558,throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,571,hrow MathRuntimeException.createNoSuchElementException(EXHAUSTED_ITERATOR_MESSAGE);
True,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,561,throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,585,hrow MathRuntimeException.createConcurrentModificationException(
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,586,ONCURRENT_MODIFICATION_MESSAGE);
True,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,575,throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,600,hrow MathRuntimeException.createNoSuchElementException(EXHAUSTED_ITERATOR_MESSAGE);
True,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,589,throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,324,"cannot substitute an element from an empty array"");"
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,324,LocalizedFormats.CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY);
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,365,"expansion factor smaller than one ({0})"","
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,365,"LocalizedFormats.EXPANSION_FACTOR_SMALLER_THAN_ONE,"
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,452,"cannot discard {0} elements from a {1} elements array"","
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,452,"LocalizedFormats.TOO_MANY_ELEMENTS_TO_DISCARD_FROM_ARRAY,"
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,456,"cannot discard a negative number of elements ({0})"","
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,456,"LocalizedFormats.CANNOT_DISCARD_NEGATIVE_NUMBER_OF_ELEMENTS,"
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,536,"the index specified: {0} is larger than the current maximal index {1}"","
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,536,"LocalizedFormats.INDEX_LARGER_THAN_MAX,"
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,542,"elements cannot be retrieved from a negative array index {0}"","
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,542,"LocalizedFormats.CANNOT_RETRIEVE_AT_NEGATIVE_INDEX,"
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,671,"cannot set an element at a negative index {0}"","
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,671,"LocalizedFormats.CANNOT_SET_AT_NEGATIVE_INDEX,"
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,713,"unsupported expansion mode {0}, supported modes are {1} ({2}) and {3} ({4})"","
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,713,"LocalizedFormats.UNSUPPORTED_EXPANSION_MODE,"
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,736,"initial capacity ({0}) is not positive"","
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,736,"LocalizedFormats.INITIAL_CAPACITY_NOT_POSITIVE,"
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,754,"index ({0}) is not positive"","
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,754,"LocalizedFormats.INDEX_NOT_POSITIVE,"
True,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,38,"tring pattern = ""a {0}x{1} matrix cannot be a rotation matrix"";"
True,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,40,LocalizedFormats pattern = LocalizedFormats.ROTATION_MATRIX_DIMENSIONS;
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,42,"ssertEquals(pattern, ex.getPattern());"
True,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,44,"assertEquals(pattern, ex.getLocalizablePattern());"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,59,"tring pattern = ""a {0}x{1} matrix cannot be a rotation matrix"";"
True,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,61,LocalizedFormats pattern = LocalizedFormats.ROTATION_MATRIX_DIMENSIONS;
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,65,"ssertEquals(pattern, ex.getPattern());"
True,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,67,"assertEquals(pattern, ex.getLocalizablePattern());"
True,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,22,import org.apache.commons.math.util.LocalizedFormats;
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,49,"tring pattern = ""evaluation failed for argument = {0}"";"
True,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,51,LocalizedFormats pattern = LocalizedFormats.EVALUATION_FAILED;
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,53,"ssertEquals(pattern, ex.getPattern());"
True,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,55,"assertEquals(pattern, ex.getLocalizablePattern());"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,63,"tring pattern = ""evaluation failed for argument = {0}"";"
True,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,65,LocalizedFormats pattern = LocalizedFormats.EVALUATION_FAILED;
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,68,"ssertEquals(pattern, ex.getPattern());"
True,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,70,"assertEquals(pattern, ex.getLocalizablePattern());"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,81,"tring pattern = ""evaluation failed for argument = {0}"";"
True,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,83,LocalizedFormats pattern = LocalizedFormats.EVALUATION_FAILED;
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,87,"ssertEquals(pattern, ex.getPattern());"
True,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,89,"assertEquals(pattern, ex.getLocalizablePattern());"
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,97,"tring pattern = ""evaluation failed for argument = {0}"";"
True,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,99,LocalizedFormats pattern = LocalizedFormats.EVALUATION_FAILED;
False,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,104,"ssertEquals(pattern, ex.getPattern());"
True,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java,106,"assertEquals(pattern, ex.getLocalizablePattern());"
True,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,24,import org.apache.commons.math.util.LocalizedFormats;
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,37,"tring pattern = ""a {0}x{1} matrix cannot be a rotation matrix"";"
True,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,39,LocalizedFormats pattern = LocalizedFormats.ROTATION_MATRIX_DIMENSIONS;
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,41,"ssertEquals(pattern, ex.getPattern());"
True,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,43,"assertEquals(pattern, ex.getLocalizablePattern());"
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,58,"tring pattern = ""a {0}x{1} matrix cannot be a rotation matrix"";"
True,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,60,LocalizedFormats pattern = LocalizedFormats.ROTATION_MATRIX_DIMENSIONS;
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,64,"ssertEquals(pattern, ex.getPattern());"
True,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,66,"assertEquals(pattern, ex.getLocalizablePattern());"
True,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,27,import org.apache.commons.math.util.DummyLocalizable;
True,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,28,import org.apache.commons.math.util.Localizable;
True,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,29,import org.apache.commons.math.util.LocalizedFormats;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,40,"tring pattern = ""a {0}x{1} matrix cannot be a rotation matrix"";"
True,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,44,LocalizedFormats pattern = LocalizedFormats.ROTATION_MATRIX_DIMENSIONS;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,44,"ssertEquals(pattern, ex.getPattern());"
True,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,48,"assertEquals(pattern, ex.getLocalizablePattern());"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,61,"tring pattern = ""a {0}x{1} matrix cannot be a rotation matrix"";"
True,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,65,LocalizedFormats pattern = LocalizedFormats.ROTATION_MATRIX_DIMENSIONS;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,67,"ssertEquals(pattern, ex.getPattern());"
True,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,71,"assertEquals(pattern, ex.getLocalizablePattern());"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,80,"tring outMsg = ""outer message"";"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,81,"tring inMsg = ""inner message"";"
True,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,84,"Localizable outMsg = new DummyLocalizable(""outer message"");"
True,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,85,"Localizable inMsg = new DummyLocalizable(""inner message"");"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,105,"tring outMsg = ""outer message"";"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,106,"tring inMsg = ""inner message"";"
True,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,109,"Localizable outMsg = new DummyLocalizable(""outer message"");"
True,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,110,"Localizable inMsg = new DummyLocalizable(""inner message"");"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,134,ssertTrue(stack2.indexOf(inMsg) != -1);
True,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,138,assertTrue(stack2.indexOf(inMsg.getSourceString()) != -1);
True,src/test/java/org/apache/commons/math/MaxIterationsExceededExceptionTest.java,src/test/java/org/apache/commons/math/MaxIterationsExceededExceptionTest.java,22,import org.apache.commons.math.util.LocalizedFormats;
False,src/test/java/org/apache/commons/math/MaxIterationsExceededExceptionTest.java,src/test/java/org/apache/commons/math/MaxIterationsExceededExceptionTest.java,41,"Continued fraction convergents failed to converge for value {0}"","
True,src/test/java/org/apache/commons/math/MaxIterationsExceededExceptionTest.java,src/test/java/org/apache/commons/math/MaxIterationsExceededExceptionTest.java,43,"LocalizedFormats.NON_CONVERGENT_CONTINUED_FRACTION,"
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,36,import org.apache.commons.math.util.LocalizedFormats;
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,54,"hrow new DerivativeException(""{0}"", ""oops"");"
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,55,"throw new DerivativeException(LocalizedFormats.SIMPLE_MESSAGE, ""oops"");"
False,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,220,"hrow new EventException(""Evaluation failed for argument = {0}"", t);"
True,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java,221,"throw new EventException(LocalizedFormats.EVALUATION_FAILED, t);"
False,src/test/java/org/apache/commons/math/util/TestBean.java,src/test/java/org/apache/commons/math/util/TestBean.java,62,"hrow new MathRuntimeException(""?"");"
True,src/test/java/org/apache/commons/math/util/TestBean.java,src/test/java/org/apache/commons/math/util/TestBean.java,62,"throw new MathRuntimeException(LocalizedFormats.SIMPLE_MESSAGE, ""?"");"
