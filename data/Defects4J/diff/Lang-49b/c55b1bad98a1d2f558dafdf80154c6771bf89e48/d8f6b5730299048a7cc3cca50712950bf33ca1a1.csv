is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,66," @version $Id: RandomStringUtils.java,v 1.10 2003/04/09 14:13:03 bayard Exp $"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,66,"* @version $Id: RandomStringUtils.java,v 1.11 2003/05/14 02:50:43 bayard Exp $"
False,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,316,"eturn random(count, 0, set.length - 1, false, false, set);"
True,src/java/org/apache/commons/lang/RandomStringUtils.java,src/java/org/apache/commons/lang/RandomStringUtils.java,316,"return random(count, 0, set.length, false, false, set);"
False,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,65," @version $Id: RandomStringUtilsTest.java,v 1.5 2003/04/09 14:13:03 bayard Exp $"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,65,"* @version $Id: RandomStringUtilsTest.java,v 1.6 2003/05/14 02:50:43 bayard Exp $"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,171,* Test homogeneity of random strings generated --
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,172,"* i.e., test that characters show up with expected frequencies"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,173,* in generated strings.  Will fail randomly about 1 in 1000 times.
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,174,* Repeated failures indicate a problem.
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,176,public void testRandomStringUtilsHomog() {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,177,"String set = ""abc"";"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,178,char[] chars = set.toCharArray();
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,179,"String gen = """";"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,180,"int[] counts = {0,0,0};"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,181,"int[] expected = {200,200,200};"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,182,for (int i = 0; i< 100; i++) {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,183,"gen = RandomStringUtils.random(6,chars);"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,184,for (int j = 0; j < 6; j++) {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,185,switch (gen.charAt(j)) {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,186,case 'a': {counts[0]++; break;}
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,187,case 'b': {counts[1]++; break;}
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,188,case 'c': {counts[2]++; break;}
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,189,"default: {fail(""generated character not in set"");}"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,193,"// Perform chi-square test with df = 3-1 = 2, testing at .001 level"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,194,"assertTrue(""test homogeneity -- will fail about 1 in 1000 times"","
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,195,"chiSquare(expected,counts) < 13.82);"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,198,//FIXME: add similar tests for other functions
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,201,* Computes Chi-Square statistic given observed and expected counts
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,202,* @param observed array of observed frequency counts
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,203,* @param expected array of exptected frequency counts
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,205,"private double chiSquare(int[] expected, int[] observed) {"
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,206,double sumSq = 0.0d;
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,207,double dev = 0.0d;
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,208,for (int i = 0; i< observed.length; i++) {
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,209,dev = (double)(observed[i] - expected[i]);
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,210,sumSq += dev*dev/(double)expected[i];
True,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,src/test/org/apache/commons/lang/RandomStringUtilsTest.java,212,return sumSq;
