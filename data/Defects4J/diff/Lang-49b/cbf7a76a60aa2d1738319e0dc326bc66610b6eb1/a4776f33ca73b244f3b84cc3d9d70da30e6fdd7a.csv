is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,84," @version $Id: ArrayUtils.java,v 1.37 2004/01/30 02:12:22 ggregory Exp $"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,84,"* @version $Id: ArrayUtils.java,v 1.38 2004/01/31 09:57:39 scolebourne Exp $"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,88, An empty immutable <code>boolean</code> array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,89,* An empty immutable <code>Object</code> array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,90,ublic static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,91,public static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,92, An empty immutable <code>Boolean</code> array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,93,* An empty immutable <code>Class</code> array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,94,ublic static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,95,public static final Class[] EMPTY_CLASS_ARRAY = new Class[0];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,96, An empty immutable <code>byte</code> array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,97,* An empty immutable <code>String</code> array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,98,ublic static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,99,public static final String[] EMPTY_STRING_ARRAY = new String[0];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,100, An empty immutable <code>Byte</code> array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,101,* An empty immutable <code>long</code> array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,102,ublic static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,103,public static final long[] EMPTY_LONG_ARRAY = new long[0];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,104, An empty immutable <code>char</code> array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,105,* An empty immutable <code>Long</code> array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,106,ublic static final char[] EMPTY_CHAR_ARRAY = new char[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,107,public static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,108, An empty immutable <code>Character</code> array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,109,* An empty immutable <code>int</code> array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,110,ublic static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,111,public static final int[] EMPTY_INT_ARRAY = new int[0];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,112, An empty immutable <code>Class</code> array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,113,* An empty immutable <code>Integer</code> array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,114,ublic static final Class[] EMPTY_CLASS_ARRAY = new Class[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,115,public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,117,* An empty immutable <code>short</code> array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,119,public static final short[] EMPTY_SHORT_ARRAY = new short[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,121,* An empty immutable <code>Short</code> array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,123,public static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,125,* An empty immutable <code>byte</code> array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,127,public static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,129,* An empty immutable <code>Byte</code> array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,131,public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY = new Byte[0];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,132, An empty immutable <code>int</code> array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,149,* An empty immutable <code>boolean</code> array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,134,ublic static final int[] EMPTY_INT_ARRAY = new int[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,151,public static final boolean[] EMPTY_BOOLEAN_ARRAY = new boolean[0];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,136, An empty immutable <code>Integer</code> array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,153,* An empty immutable <code>Boolean</code> array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,138,ublic static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY = new Integer[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,155,public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY = new Boolean[0];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,140, An empty immutable <code>long</code> array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,157,* An empty immutable <code>char</code> array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,142,ublic static final long[] EMPTY_LONG_ARRAY = new long[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,159,public static final char[] EMPTY_CHAR_ARRAY = new char[0];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,144, An empty immutable <code>Long</code> array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,161,* An empty immutable <code>Character</code> array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,146,ublic static final Long[] EMPTY_LONG_OBJECT_ARRAY = new Long[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,163,public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY = new Character[0];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,149, An empty immutable <code>Object</code> array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,151,ublic static final Object[] EMPTY_OBJECT_ARRAY = new Object[0];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,153, An empty immutable <code>short</code> array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,155,ublic static final short[] EMPTY_SHORT_ARRAY = new short[0];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,157, An empty immutable <code>Short</code> array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,159,ublic static final Short[] EMPTY_SHORT_OBJECT_ARRAY = new Short[0];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,161, An empty immutable <code>String</code> array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,166,* <p>ArrayUtils instances should NOT be constructed in standard programming.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,167,"* Instead, the class should be used as <code>ArrayUtils.clone(new int[] {2})</code>.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,169,* <p>This constructor is public to permit tools that require a JavaBean instance
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,170,* to operate.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,163,ublic static final String[] EMPTY_STRING_ARRAY = new String[0];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,172,public ArrayUtils() {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,175,// Basic methods handling multi-dimensional arrays
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,166, <p>Inserts the specified element at the specified position in the array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,167, Shifts the element currently at that position (if any) and any subsequent
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,168, elements to the right (adds one to their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,178,"* <p>Outputs an array as a String, treating <code>null</code> as an empty array.</p>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,170, <p>This method returns a new array with the same elements of the input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,171, array plus the given element on the specified position. The component
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,172, type of the returned array is always the same as that of the input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,173, array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,180,"* <p>Multi-dimensional arrays are handled correctly, including"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,181,* multi-dimensional primitive arrays.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,175," <p>If the input array is <code>null</code>, a new one element array is returned"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,176,  whose component type is the same as the element.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,178, <pre>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,179," ArrayUtils.add(null, 0, null)      = [null]"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,180," ArrayUtils.add(null, 0, ""a"")       = [""a""]"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,181," ArrayUtils.add([""a""], 1, null)     = [""a"", null]"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,182," ArrayUtils.add([""a""], 1, ""b"")      = [""a"", ""b""]"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,183," ArrayUtils.add([""a"", ""b""], 3, ""c"") = [""a"", ""b"", ""c""]"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,184, </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,183,"* <p>The format is that of Java source code, for example <code>{a,b}</code>.</p>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,186," @param array  the array to add the element to, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,187, @param index  the position of the new object
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,188, @param element  the object to add
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,189, @return A new array containing the existing elements and the new element
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,190, @throws IndexOutOfBoundsException if the index is out of range
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,191, (index < 0 || index > array.length).
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,185,"* @param array  the array to get a toString for, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,186,"* @return a String representation of the array, '{}' if null array input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,193,"ublic static Object[] add(final Object[] array, final int index, final Object element) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,194,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,195,f (index != 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,196,"hrow new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,198,"bject joinedArray = Array.newInstance(element != null ? element.getClass() : Object.class, 1);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,199,"rray.set(joinedArray, 0, element);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,200,eturn (Object[]) joinedArray;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,202,nt length = array.length;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,203,f (index > length || index < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,204,"hrow new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,206,"bject result = Array.newInstance(array.getClass().getComponentType(), length + 1);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,207,"ystem.arraycopy(array, 0, result, 0, index);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,208,"rray.set(result, index, element);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,209,f (index < length) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,210,"ystem.arraycopy(array, index, result, index + 1, length - index);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,212,eturn (Object[]) result;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,188,public static String toString(final Object array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,189,"return toString(array, ""{}"");"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,216, <p>Adds the element to the end of the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,193,* <p>Outputs an array as a String handling <code>null</code>s.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,218, <p>The new array contains the same elements of the input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,219, array plus the given element in the last position. The component type of
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,220, the new array is  the same as that of the input array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,195,"* <p>Multi-dimensional arrays are handled correctly, including"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,196,* multi-dimensional primitive arrays.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,222," <p>If the input array is <code>null</code>, a new one element array is returned"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,223,  whose component type is the same as the element.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,225, <pre>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,226," ArrayUtils.add(null, null)      = [null]"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,227," ArrayUtils.add(null, ""a"")       = [""a""]"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,228," ArrayUtils.add([""a""], null)     = [""a"", null]"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,229," ArrayUtils.add([""a""], ""b"")      = [""a"", ""b""]"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,230," ArrayUtils.add([""a"", ""b""], ""c"") = [""a"", ""b"", ""c""]"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,231, </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,198,"* <p>The format is that of Java source code, for example <code>{a,b}</code>.</p>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,233," @param array  the array to ""add"" the element to, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,234, @param element  the object to add
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,235, @return A new array containing the existing elements and the new element
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,236, @since 2.1
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,238,"ublic static Object[] add(Object[] array, Object element) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,239,bject joinedArray;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,240,nt elementPos;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,241,f (array != null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,242,"oinedArray = Array.newInstance(array.getClass().getComponentType(), array.length + 1);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,243,"ystem.arraycopy(array, 0, joinedArray, 0, array.length);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,244,lementPos = array.length;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,245, else {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,246,"/ null input array, use the element type"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,247,"oinedArray = Array.newInstance(element != null ? element.getClass() : Object.class, 1);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,248,lementPos = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,200,"* @param array  the array to get a toString for, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,201,* @param stringIfNull  the String to return if the array is <code>null</code>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,202,* @return a String representation of the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,204,"public static String toString(final Object array, final String stringIfNull) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,205,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,206,return stringIfNull;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,250,"rray.set(joinedArray, elementPos, element);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,251,eturn (Object[]) joinedArray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,208,"return new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,255, <p>Clones an array returning a typecast result and handling
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,256, <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,258, <p>This method returns <code>null</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,212,* <p>Get a hashCode for an array handling multi-dimensional arrays correctly.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,260," @param array  the array to clone, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,261," @return the cloned array, <code>null</code> if <code>null</code> input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,214,* <p>Multi-dimensional primitive arrays are also handled correctly by this method.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,216,"* @param array  the array to get a hashCode for, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,217,"* @return a hashCode for the array, zero if null array input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,263,ublic static boolean[] clone(final boolean[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,264,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,265,eturn null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,267,eturn (boolean[]) array.clone();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,219,public static int hashCode(final Object array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,220,return new HashCodeBuilder().append(array).toHashCode();
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,271, <p>Clones an array returning a typecast result and handling
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,272, <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,274, <p>This method returns <code>null</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,224,"* <p>Compares two arrays, using equals(), handling multi-dimensional arrays"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,225,* correctly.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,276," @param array  the array to clone, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,277," @return the cloned array, <code>null</code> if <code>null</code> input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,227,* <p>Multi-dimensional primitive arrays are also handled correctly by this method.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,229,"* @param array1  the left hand array to compare, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,230,"* @param array2  the right hand array to compare, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,231,* @return <code>true</code> if the arrays are equal
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,279,ublic static byte[] clone(final byte[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,280,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,281,eturn null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,283,eturn (byte[]) array.clone();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,233,"public static boolean isEquals(final Object array1, final Object array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,234,"return new EqualsBuilder().append(array1, array2).isEquals();"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,237,// To map
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,287, <p>Clones an array returning a typecast result and handling
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,288, <code>null</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,240,* <p>Converts the given array into a {@link java.util.Map}. Each element of the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,241,"* must be either a {@link java.util.Map.Entry} or an Array, containing at least two"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,242,"* elements, where the first element is used as key and the second as"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,243,* value.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,290, <p>This method returns <code>null</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,245,* <p>This method can be used to initialize:</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,246,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,247,* // Create a Map mapping colors.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,248,* Map colorMap = MapUtils.toMap(new String[][] {{
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,249,"*     {""RED"", ""#FF0000""},"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,250,"*     {""GREEN"", ""#00FF00""},"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,251,"*     {""BLUE"", ""#0000FF""}});"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,252,* </pre>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,292," @param array  the array to clone, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,293," @return the cloned array, <code>null</code> if <code>null</code> input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,254,* <p>This method returns <code>null</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,256,* @param array  an array whose elements are either a {@link java.util.Map.Entry} or
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,257,"*  an Array containing at least two elements, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,258,* @return a <code>Map</code> that was created from the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,259,* @throws IllegalArgumentException  if one element of this Array is
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,260,*  itself an Array containing less then two elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,261,* @throws IllegalArgumentException  if the array contains elements other
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,262,*  than {@link java.util.Map.Entry} and an Array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,295,ublic static char[] clone(final char[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,264,public static Map toMap(final Object[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,299,eturn (char[]) array.clone();
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,303, <p>Clones an array returning a typecast result and handling
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,304, <code>null</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,268,final Map map = new HashMap((int) (array.length * 1.5));
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,269,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,270,Object object = array[i];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,271,if (object instanceof Map.Entry) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,272,Map.Entry entry = (Map.Entry) object;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,273,"map.put(entry.getKey(), entry.getValue());"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,274,} else if (object instanceof Object[]) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,275,Object[] entry = (Object[]) object;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,276,if (entry.length < 2) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,277,"throw new IllegalArgumentException(""Array element "" + i + "", '"""
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,278,+ object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,279,"+ ""', has a length less than 2"");"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,281,"map.put(entry[0], entry[1]);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,282,} else {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,283,"throw new IllegalArgumentException(""Array element "" + i + "", '"""
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,284,+ object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,285,"+ ""', is neither of type Map.Entry nor an Array"");"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,288,return map;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,291,// Clone
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,294,* <p>Shallow clones an array returning a typecast result and handling
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,295,* <code>null</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,297,"* <p>The objects in the array are not cloned, thus there is no special"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,298,* handling for multi-dimensional arrays.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,308," @param array  the array to clone, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,302,"* @param array  the array to shallow clone, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,311,ublic static double[] clone(final double[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,305,public static Object[] clone(final Object[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,315,eturn (double[]) array.clone();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,309,return (Object[]) array.clone();
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,327,ublic static float[] clone(final float[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,321,public static long[] clone(final long[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,331,eturn (float[]) array.clone();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,325,return (long[]) array.clone();
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,359,ublic static long[] clone(final long[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,353,public static short[] clone(final short[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,363,eturn (long[]) array.clone();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,357,return (short[]) array.clone();
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,366,/ Clone
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,369, <p>Shallow clones an array returning a typecast result and handling
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,361,* <p>Clones an array returning a typecast result and handling
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,372," <p>The objects in the array are not cloned, thus there is no special"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,373, handling for multi-dimensional arrays.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,377," @param array  the array to shallow clone, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,366,"* @param array  the array to clone, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,380,ublic static Object[] clone(final Object[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,369,public static char[] clone(final char[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,384,eturn (Object[]) array.clone();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,373,return (char[]) array.clone();
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,396,ublic static short[] clone(final short[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,385,public static byte[] clone(final byte[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,400,eturn (short[]) array.clone();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,389,return (byte[]) array.clone();
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,404, <p>Checks if the value is in the given array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,393,* <p>Clones an array returning a typecast result and handling
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,394,* <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,406, <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,396,* <p>This method returns <code>null</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,408, @param array  the array to search through
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,409, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,410, @return <code>true</code> if the array contains the object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,398,"* @param array  the array to clone, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,399,"* @return the cloned array, <code>null</code> if <code>null</code> input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,412,"ublic static boolean contains(final boolean[] array, final boolean valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,413,"eturn (indexOf(array, valueToFind) != -1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,401,public static double[] clone(final double[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,402,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,403,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,405,return (double[]) array.clone();
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,417, <p>Checks if the value is in the given array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,409,* <p>Clones an array returning a typecast result and handling
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,410,* <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,419, <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,412,* <p>This method returns <code>null</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,421, @param array  the array to search through
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,422, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,423, @return <code>true</code> if the array contains the object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,414,"* @param array  the array to clone, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,415,"* @return the cloned array, <code>null</code> if <code>null</code> input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,425,"ublic static boolean contains(final byte[] array, final byte valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,426,"eturn (indexOf(array, valueToFind) != -1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,417,public static float[] clone(final float[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,418,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,419,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,421,return (float[]) array.clone();
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,430, <p>Checks if the value is in the given array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,425,* <p>Clones an array returning a typecast result and handling
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,426,* <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,432, <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,428,* <p>This method returns <code>null</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,434, @param array  the array to search through
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,435, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,436, @return <code>true</code> if the array contains the object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,430,"* @param array  the array to clone, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,431,"* @return the cloned array, <code>null</code> if <code>null</code> input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,438,"ublic static boolean contains(final double[] array, final double valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,439,"eturn (indexOf(array, valueToFind) != -1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,433,public static boolean[] clone(final boolean[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,434,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,435,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,437,return (boolean[]) array.clone();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,440,// Subarrays
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,443, <p>Checks if a value falling within the given tolerance is in the
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,444, given array.  If the array contains a value within the inclusive range
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,445, defined by (value - tolerance) to (value + tolerance).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,443,* <p>Produces a new array containing the elements between
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,444,* the start and end indices.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,447, <p>The method returns <code>false</code> if a <code>null</code> array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,448, is passed in.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,446,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,447,* Null array input produces null output.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,450, @param array  the array to search
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,451, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,452, @param tolerance  the array contains the tolerance of the search
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,453, @return true if value falling within tolerance is in array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,449,* <p>The component type of the subarray is always the same as
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,450,"* that of the input array. Thus, if the input is an array of type"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,451,"* <code>Date</code>, the following usage is envisaged:</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,453,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,454,"* Date[] someDates = (Date[])ArrayUtils.subarray(allDates, 2, 5);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,455,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,457,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,458,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,459,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,460,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,461,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,462,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,463,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,464,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,465,* @return a new array containing the elements between
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,466,*      the start and end indices.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,455,"ublic static boolean contains(final double[] array, final double valueToFind, final double tolerance) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,456,"eturn (indexOf(array, valueToFind, 0, tolerance) != -1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,468,"public static Object[] subarray(Object[] array, int startIndexInclusive, int endIndexExclusive) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,469,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,470,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,472,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,473,startIndexInclusive = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,475,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,476,endIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,478,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,479,Class type = array.getClass().getComponentType();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,480,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,481,"return (Object[]) Array.newInstance(type, 0);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,483,"Object[] subarray = (Object[]) Array.newInstance(type, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,484,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,485,return subarray;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,460, <p>Checks if the value is in the given array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,489,* <p>Produces a new <code>long</code> array containing the elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,490,* between the start and end indices.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,462, <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,464, @param array  the array to search through
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,465, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,466, @return <code>true</code> if the array contains the object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,492,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,493,* Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,495,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,496,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,497,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,498,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,499,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,500,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,501,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,502,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,503,* @return a new array containing the elements between
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,504,*      the start and end indices.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,468,"ublic static boolean contains(final float[] array, final float valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,469,"eturn (indexOf(array, valueToFind) != -1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,506,"public static long[] subarray(long[] array, int startIndexInclusive, int endIndexExclusive) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,507,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,508,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,510,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,511,startIndexInclusive = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,513,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,514,endIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,516,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,517,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,518,return EMPTY_LONG_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,521,long[] subarray = new long[newSize];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,522,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,523,return subarray;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,473, <p>Checks if the value is in the given array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,527,* <p>Produces a new <code>int</code> array containing the elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,528,* between the start and end indices.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,475, <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,477, @param array  the array to search through
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,478, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,479, @return <code>true</code> if the array contains the object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,530,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,531,* Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,533,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,534,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,535,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,536,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,537,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,538,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,539,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,540,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,541,* @return a new array containing the elements between
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,542,*      the start and end indices.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,481,"ublic static boolean contains(final int[] array, final int valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,482,"eturn (indexOf(array, valueToFind) != -1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,544,"public static int[] subarray(int[] array, int startIndexInclusive, int endIndexExclusive) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,545,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,546,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,548,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,549,startIndexInclusive = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,551,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,552,endIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,554,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,555,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,556,return EMPTY_INT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,559,int[] subarray = new int[newSize];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,560,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,561,return subarray;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,486, <p>Checks if the value is in the given array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,565,* <p>Produces a new <code>short</code> array containing the elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,566,* between the start and end indices.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,488, <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,490, @param array  the array to search through
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,491, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,492, @return <code>true</code> if the array contains the object
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,494,"ublic static boolean contains(final long[] array, final long valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,495,"eturn (indexOf(array, valueToFind) != -1);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,499, <p>Checks if the object is in the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,501, <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,503, @param array  the array to search through
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,504, @param objectToFind  the object to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,505, @return <code>true</code> if the array contains the object
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,507,"ublic static boolean contains(final Object[] array, final Object objectToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,508,"eturn (indexOf(array, objectToFind) != -1);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,512, <p>Checks if the value is in the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,514, <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,516, @param array  the array to search through
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,517, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,518, @return <code>true</code> if the array contains the object
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,520,"ublic static boolean contains(final short[] array, final short valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,521,"eturn (indexOf(array, valueToFind) != -1);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,525, <p>Get a hashCode for an array handling multi-dimensional arrays correctly.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,527, <p>Multi-dimensional primitive arrays are also handled correctly by this method.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,529," @param array  the array to get a hashCode for, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,530," @return a hashCode for the array, zero if null array input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,532,ublic static int hashCode(final Object array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,533,eturn new HashCodeBuilder().append(array).toHashCode();
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,536,/ boolean IndexOf
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,539, <p>Find the index of the given value in the array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,541, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,543," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,544, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,545," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,546,  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,548,"ublic static int indexOf(final boolean[] array, final boolean valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,549,"eturn indexOf(array, valueToFind, 0);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,553, <p>Find the index of the given value in the array starting at the given index.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,555, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,568,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,569,* Null array input produces null output.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,557, <p>A negative startIndex is treated as zero. A startIndex larger than the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,558, length will return -1.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,560," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,561, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,562, @param startIndex  the index to start searching at
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,563," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,564,  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,571,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,572,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,573,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,574,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,575,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,576,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,577,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,578,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,579,* @return a new array containing the elements between
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,580,*      the start and end indices.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,566,"ublic static int indexOf(final boolean[] array, final boolean valueToFind, int startIndex) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,567,f (ArrayUtils.isEmpty(array)) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,568,eturn -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,582,"public static short[] subarray(short[] array, int startIndexInclusive, int endIndexExclusive) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,583,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,584,return null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,570,f (startIndex < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,571,tartIndex = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,586,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,587,startIndexInclusive = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,573,or (int i = startIndex; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,574,f (valueToFind == array[i]) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,575,eturn i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,589,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,590,endIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,592,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,593,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,594,return EMPTY_SHORT_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,578,eturn -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,581,/ byte IndexOf
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,584, <p>Find the index of the given value in the array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,586, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,588," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,589, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,590," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,591,  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,593,"ublic static int indexOf(final byte[] array, final byte valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,594,"eturn indexOf(array, valueToFind, 0);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,597,short[] subarray = new short[newSize];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,598,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,599,return subarray;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,598, <p>Find the index of the given value in the array starting at the given index.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,603,* <p>Produces a new <code>char</code> array containing the elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,604,* between the start and end indices.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,600, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,606,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,607,* Null array input produces null output.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,602, <p>A negative startIndex is treated as zero. A startIndex larger than the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,603, length will return -1.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,605," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,606, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,607, @param startIndex  the index to start searching at
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,608," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,609,  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,609,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,610,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,611,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,612,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,613,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,614,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,615,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,616,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,617,* @return a new array containing the elements between
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,618,*      the start and end indices.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,611,"ublic static int indexOf(final byte[] array, final byte valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,620,"public static char[] subarray(char[] array, int startIndexInclusive, int endIndexExclusive) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,613,eturn -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,622,return null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,615,f (startIndex < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,616,tartIndex = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,624,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,625,startIndexInclusive = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,618,or (int i = startIndex; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,619,f (valueToFind == array[i]) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,620,eturn i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,627,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,628,endIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,630,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,631,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,632,return EMPTY_CHAR_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,623,eturn -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,626,/ double IndexOf
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,629, <p>Find the index of the given value in the array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,631, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,633," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,634, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,635," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,636,  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,638,"ublic static int indexOf(final double[] array, final double valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,639,"eturn indexOf(array, valueToFind, 0);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,643, <p>Find the index of the given value within a given tolerance in the array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,644, This method will return the index of the first value which falls between the region
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,645, defined by valueToFind - tolerance and valueToFind + tolerance.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,647, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,649," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,650, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,651, @param tolerance tolerance of the search
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,652," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,653,  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,655,"ublic static int indexOf(final double[] array, final double valueToFind, final double tolerance) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,656,"eturn indexOf(array, valueToFind, 0, tolerance);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,635,char[] subarray = new char[newSize];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,636,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,637,return subarray;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,660, <p>Find the index of the given value in the array starting at the given index.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,641,* <p>Produces a new <code>byte</code> array containing the elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,642,* between the start and end indices.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,662, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,644,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,645,* Null array input produces null output.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,664, <p>A negative startIndex is treated as zero. A startIndex larger than the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,665, length will return -1.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,667," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,668, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,669, @param startIndex  the index to start searching at
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,670," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,671,  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,647,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,648,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,649,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,650,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,651,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,652,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,653,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,654,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,655,* @return a new array containing the elements between
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,656,*      the start and end indices.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,673,"ublic static int indexOf(final double[] array, final double valueToFind, int startIndex) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,674,f (ArrayUtils.isEmpty(array)) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,675,eturn -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,677,f (startIndex < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,678,tartIndex = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,680,or (int i = startIndex; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,681,f (valueToFind == array[i]) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,682,eturn i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,658,"public static byte[] subarray(byte[] array, int startIndexInclusive, int endIndexExclusive) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,659,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,660,return null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,685,eturn -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,689, <p>Find the index of the given value in the array starting at the given index.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,690, This method will return the index of the first value which falls between the region
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,691, defined by valueToFind - tolerance and valueToFind + tolerance.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,693, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,695, <p>A negative startIndex is treated as zero. A startIndex larger than the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,696, length will return -1.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,698," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,699, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,700, @param startIndex  the index to start searching at
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,701, @param tolerance tolerance of the search
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,702," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,703,  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,705,"ublic static int indexOf(final double[] array, final double valueToFind, int startIndex, double tolerance) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,706,f (ArrayUtils.isEmpty(array)) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,707,eturn -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,662,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,663,startIndexInclusive = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,709,f (startIndex < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,710,tartIndex = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,665,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,666,endIndexExclusive = array.length;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,712,ouble min = valueToFind - tolerance;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,713,ouble max = valueToFind + tolerance;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,714,or (int i = startIndex; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,715,f (array[i] >= min && array[i] <= max) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,716,eturn i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,668,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,669,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,670,return EMPTY_BYTE_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,719,eturn -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,722,/ float IndexOf
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,725, <p>Find the index of the given value in the array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,727, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,729," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,730, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,731," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,732,  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,734,"ublic static int indexOf(final float[] array, final float valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,735,"eturn indexOf(array, valueToFind, 0);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,673,byte[] subarray = new byte[newSize];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,674,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,675,return subarray;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,739, <p>Find the index of the given value in the array starting at the given index.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,679,* <p>Produces a new <code>double</code> array containing the elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,680,* between the start and end indices.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,741, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,682,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,683,* Null array input produces null output.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,743, <p>A negative startIndex is treated as zero. A startIndex larger than the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,744, length will return -1.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,746," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,747, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,748, @param startIndex  the index to start searching at
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,749," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,750,  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,685,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,686,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,687,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,688,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,689,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,690,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,691,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,692,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,693,* @return a new array containing the elements between
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,694,*      the start and end indices.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,752,"ublic static int indexOf(final float[] array, final float valueToFind, int startIndex) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,753,f (ArrayUtils.isEmpty(array)) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,754,eturn -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,696,"public static double[] subarray(double[] array, int startIndexInclusive, int endIndexExclusive) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,697,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,698,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,700,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,701,startIndexInclusive = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,756,f (startIndex < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,757,tartIndex = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,703,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,704,endIndexExclusive = array.length;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,759,or (int i = startIndex; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,760,f (valueToFind == array[i]) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,761,eturn i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,706,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,707,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,708,return EMPTY_DOUBLE_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,764,eturn -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,711,double[] subarray = new double[newSize];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,712,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,713,return subarray;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,767,/ int IndexOf
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,770, <p>Find the index of the given value in the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,717,* <p>Produces a new <code>float</code> array containing the elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,718,* between the start and end indices.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,772, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,774," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,775, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,776," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,777,  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,720,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,721,* Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,723,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,724,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,725,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,726,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,727,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,728,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,729,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,730,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,731,* @return a new array containing the elements between
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,732,*      the start and end indices.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,779,"ublic static int indexOf(final int[] array, final int valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,780,"eturn indexOf(array, valueToFind, 0);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,734,"public static float[] subarray(float[] array, int startIndexInclusive, int endIndexExclusive) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,735,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,736,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,738,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,739,startIndexInclusive = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,741,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,742,endIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,744,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,745,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,746,return EMPTY_FLOAT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,749,float[] subarray = new float[newSize];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,750,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,751,return subarray;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,784, <p>Find the index of the given value in the array starting at the given index.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,755,* <p>Produces a new <code>boolean</code> array containing the elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,756,* between the start and end indices.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,786, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,758,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,759,* Null array input produces null output.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,788, <p>A negative startIndex is treated as zero. A startIndex larger than the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,789, length will return -1.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,791," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,792, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,793, @param startIndex  the index to start searching at
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,794," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,795,  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,761,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,762,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,763,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,764,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,765,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,766,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,767,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,768,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,769,* @return a new array containing the elements between
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,770,*      the start and end indices.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,797,"ublic static int indexOf(final int[] array, final int valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,772,"public static boolean[] subarray(boolean[] array, int startIndexInclusive, int endIndexExclusive) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,799,eturn -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,774,return null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,801,f (startIndex < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,802,tartIndex = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,776,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,777,startIndexInclusive = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,804,or (int i = startIndex; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,805,f (valueToFind == array[i]) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,806,eturn i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,779,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,780,endIndexExclusive = array.length;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,809,eturn -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,782,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,783,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,784,return EMPTY_BOOLEAN_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,787,boolean[] subarray = new boolean[newSize];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,788,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,789,return subarray;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,812,/ long IndexOf
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,792,// Is same length
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,815, <p>Find the index of the given value in the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,795,"* <p>Checks whether two arrays are the same length, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,796,* <code>null</code> arrays as length <code>0</code>.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,817, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,798,* <p>Any multi-dimensional aspects of the arrays are ignored.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,819," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,820, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,821," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,822,  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,824,"ublic static int indexOf(final long[] array, final long valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,825,"eturn indexOf(array, valueToFind, 0);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,800,"* @param array1 the first array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,801,"* @param array2 the second array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,802,"* @return <code>true</code> if length of arrays matches, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,803,*  <code>null</code> as an empty array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,805,"public static boolean isSameLength(final Object[] array1, final Object[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,806,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,807,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,808,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,809,return false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,811,return true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,829, <p>Find the index of the given value in the array starting at the given index.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,831, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,833, <p>A negative startIndex is treated as zero. A startIndex larger than the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,834, length will return -1.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,815,"* <p>Checks whether two arrays are the same length, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,816,* <code>null</code> arrays as length <code>0</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,836," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,837, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,838, @param startIndex  the index to start searching at
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,839," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,840,  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,818,"* @param array1 the first array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,819,"* @param array2 the second array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,820,"* @return <code>true</code> if length of arrays matches, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,821,*  <code>null</code> as an empty array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,842,"ublic static int indexOf(final long[] array, final long valueToFind, int startIndex) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,843,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,844,eturn -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,846,f (startIndex < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,847,tartIndex = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,849,or (int i = startIndex; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,850,f (valueToFind == array[i]) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,851,eturn i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,823,"public static boolean isSameLength(final long[] array1, final long[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,824,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,825,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,826,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,827,return false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,854,eturn -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,829,return true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,857,/ IndexOf search
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,860,/ Object IndexOf
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,863, <p>Find the index of the given object in the array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,865, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,833,"* <p>Checks whether two arrays are the same length, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,834,* <code>null</code> arrays as length <code>0</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,867," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,868," @param objectToFind  the object to find, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,869," @return the index of the object within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,870,  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,836,"* @param array1 the first array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,837,"* @param array2 the second array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,838,"* @return <code>true</code> if length of arrays matches, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,839,*  <code>null</code> as an empty array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,872,"ublic static int indexOf(final Object[] array, final Object objectToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,873,"eturn indexOf(array, objectToFind, 0);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,841,"public static boolean isSameLength(final int[] array1, final int[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,842,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,843,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,844,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,845,return false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,847,return true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,877, <p>Find the index of the given object in the array starting at the given index.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,879, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,881, <p>A negative startIndex is treated as zero. A startIndex larger than the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,882, length will return <code>-1</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,851,"* <p>Checks whether two arrays are the same length, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,852,* <code>null</code> arrays as length <code>0</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,884," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,885," @param objectToFind  the object to find, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,886, @param startIndex  the index to start searching at
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,887," @return the index of the object within the array starting at the index,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,888,  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,854,"* @param array1 the first array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,855,"* @param array2 the second array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,856,"* @return <code>true</code> if length of arrays matches, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,857,*  <code>null</code> as an empty array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,890,"ublic static int indexOf(final Object[] array, final Object objectToFind, int startIndex) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,891,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,892,eturn -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,894,f (startIndex < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,895,tartIndex = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,897,f (objectToFind == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,898,or (int i = startIndex; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,899,f (array[i] == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,900,eturn i;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,903, else {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,904,or (int i = startIndex; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,905,f (objectToFind.equals(array[i])) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,906,eturn i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,859,"public static boolean isSameLength(final short[] array1, final short[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,860,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,861,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,862,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,863,return false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,910,eturn -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,865,return true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,913,/ short IndexOf
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,916, <p>Find the index of the given value in the array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,918, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,869,"* <p>Checks whether two arrays are the same length, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,870,* <code>null</code> arrays as length <code>0</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,920," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,921, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,922," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,923,  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,872,"* @param array1 the first array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,873,"* @param array2 the second array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,874,"* @return <code>true</code> if length of arrays matches, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,875,*  <code>null</code> as an empty array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,925,"ublic static int indexOf(final short[] array, final short valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,926,"eturn indexOf(array, valueToFind, 0);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,877,"public static boolean isSameLength(final char[] array1, final char[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,878,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,879,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,880,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,881,return false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,883,return true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,930, <p>Find the index of the given value in the array starting at the given index.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,932, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,934, <p>A negative startIndex is treated as zero. A startIndex larger than the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,935, length will return -1.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,887,"* <p>Checks whether two arrays are the same length, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,888,* <code>null</code> arrays as length <code>0</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,937," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,938, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,939, @param startIndex  the index to start searching at
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,940," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,941,  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,890,"* @param array1 the first array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,891,"* @param array2 the second array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,892,"* @return <code>true</code> if length of arrays matches, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,893,*  <code>null</code> as an empty array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,943,"ublic static int indexOf(final short[] array, final short valueToFind, int startIndex) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,944,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,945,eturn -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,947,f (startIndex < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,948,tartIndex = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,950,or (int i = startIndex; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,951,f (valueToFind == array[i]) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,952,eturn i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,895,"public static boolean isSameLength(final byte[] array1, final byte[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,896,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,897,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,898,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,899,return false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,955,eturn -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,901,return true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,959, <p>Checks if an array of primitive booleans is empty or <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,961, @param array  the array to test
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,962, @return <code>true</code> if the array is empty or <code>null</code>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,963, @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,905,"* <p>Checks whether two arrays are the same length, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,906,* <code>null</code> arrays as length <code>0</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,908,"* @param array1 the first array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,909,"* @param array2 the second array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,910,"* @return <code>true</code> if length of arrays matches, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,911,*  <code>null</code> as an empty array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,965,ublic static boolean isEmpty(final boolean[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,966,f (array == null || array.length == 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,967,eturn true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,913,"public static boolean isSameLength(final double[] array1, final double[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,914,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,915,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,916,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,917,return false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,969,eturn false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,919,return true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,973, <p>Checks if an array of primitive bytes is empty or <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,975, @param array  the array to test
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,976, @return <code>true</code> if the array is empty or <code>null</code>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,977, @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,923,"* <p>Checks whether two arrays are the same length, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,924,* <code>null</code> arrays as length <code>0</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,926,"* @param array1 the first array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,927,"* @param array2 the second array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,928,"* @return <code>true</code> if length of arrays matches, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,929,*  <code>null</code> as an empty array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,979,ublic static boolean isEmpty(final byte[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,980,f (array == null || array.length == 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,981,eturn true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,931,"public static boolean isSameLength(final float[] array1, final float[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,932,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,933,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,934,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,935,return false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,983,eturn false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,937,return true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,987, <p>Checks if an array of primitive chars is empty or <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,989, @param array  the array to test
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,990, @return <code>true</code> if the array is empty or <code>null</code>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,991, @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,941,"* <p>Checks whether two arrays are the same length, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,942,* <code>null</code> arrays as length <code>0</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,944,"* @param array1 the first array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,945,"* @param array2 the second array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,946,"* @return <code>true</code> if length of arrays matches, treating"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,947,*  <code>null</code> as an empty array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,993,ublic static boolean isEmpty(final char[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,994,f (array == null || array.length == 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,995,eturn true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,949,"public static boolean isSameLength(final boolean[] array1, final boolean[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,950,if ((array1 == null && array2 != null && array2.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,951,(array2 == null && array1 != null && array1.length > 0) ||
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,952,(array1 != null && array2 != null && array1.length != array2.length)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,953,return false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,997,eturn false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,955,return true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1001, <p>Checks if an array of primitive doubles is empty or <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1003, @param array  the array to test
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1004, @return <code>true</code> if the array is empty or <code>null</code>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1005, @since 2.1
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1007,ublic static boolean isEmpty(final double[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1008,f (array == null || array.length == 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1009,eturn true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,959,* <p>Checks whether two arrays are the same type taking into account
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,960,* multi-dimensional arrays.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,962,"* @param array1 the first array, must not be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,963,"* @param array2 the second array, must not be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,964,* @return <code>true</code> if type of arrays matches
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,965,* @throws IllegalArgumentException if either array is <code>null</code>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,967,"public static boolean isSameType(final Object array1, final Object array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,968,if (array1 == null || array2 == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,969,"throw new IllegalArgumentException(""The Array must not be null"");"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1011,eturn false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,971,return array1.getClass().getName().equals(array2.getClass().getName());
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1015, <p>Checks if an array of primitive floats is empty or <code>null</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,974,// Reverse
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,977,* <p>Reverses the order of the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1017, @param array  the array to test
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1018, @return <code>true</code> if the array is empty or <code>null</code>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1019, @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,979,* <p>There is no special handling for multi-dimensional arrays.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,981,* <p>This method does nothing if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,983,"* @param array  the array to reverse, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1021,ublic static boolean isEmpty(final float[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1022,f (array == null || array.length == 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1023,eturn true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,985,public static void reverse(final Object[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,986,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,987,return;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,989,int i = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,990,int j = array.length - 1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,991,Object tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,992,while (j > i) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,993,tmp = array[j];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,994,array[j] = array[i];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,995,array[i] = tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,996,j--;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,997,i++;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1025,eturn false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1029, <p>Checks if an array of primitive ints is empty or <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1031, @param array  the array to test
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1032, @return <code>true</code> if the array is empty or <code>null</code>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1033, @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1002,* <p>Reverses the order of the given array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1004,* <p>This method does nothing if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1006,"* @param array  the array to reverse, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1035,ublic static boolean isEmpty(final int[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1036,f (array == null || array.length == 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1037,eturn true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1008,public static void reverse(final long[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1009,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1010,return;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1012,int i = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1013,int j = array.length - 1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1014,long tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1015,while (j > i) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1016,tmp = array[j];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1017,array[j] = array[i];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1018,array[i] = tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1019,j--;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1020,i++;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1039,eturn false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1043, <p>Checks if an array of primitive longs is empty or <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1045, @param array  the array to test
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1046, @return <code>true</code> if the array is empty or <code>null</code>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1047, @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1025,* <p>Reverses the order of the given array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1027,* <p>This method does nothing if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1029,"* @param array  the array to reverse, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1049,ublic static boolean isEmpty(final long[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1050,f (array == null || array.length == 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1051,eturn true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1031,public static void reverse(final int[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1032,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1033,return;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1035,int i = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1036,int j = array.length - 1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1037,int tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1038,while (j > i) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1039,tmp = array[j];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1040,array[j] = array[i];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1041,array[i] = tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1042,j--;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1043,i++;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1053,eturn false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1058, <p>Checks if an array of Objects is empty or <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1060, @param array  the array to test
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1061, @return <code>true</code> if the array is empty or <code>null</code>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1062, @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1048,* <p>Reverses the order of the given array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1050,* <p>This method does nothing if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1052,"* @param array  the array to reverse, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1064,ublic static boolean isEmpty(final Object[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1065,f (array == null || array.length == 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1066,eturn true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1054,public static void reverse(final short[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1055,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1056,return;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1058,int i = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1059,int j = array.length - 1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1060,short tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1061,while (j > i) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1062,tmp = array[j];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1063,array[j] = array[i];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1064,array[i] = tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1065,j--;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1066,i++;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1068,eturn false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1072, <p>Checks if an array of primitive shorts is empty or <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1074, @param array  the array to test
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1075, @return <code>true</code> if the array is empty or <code>null</code>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1076, @since 2.1
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1078,ublic static boolean isEmpty(final short[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1079,f (array == null || array.length == 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1080,eturn true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1071,* <p>Reverses the order of the given array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1073,* <p>This method does nothing if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1075,"* @param array  the array to reverse, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1077,public static void reverse(final char[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1078,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1079,return;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1081,int i = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1082,int j = array.length - 1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1083,char tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1084,while (j > i) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1085,tmp = array[j];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1086,array[j] = array[i];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1087,array[i] = tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1088,j--;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1089,i++;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1082,eturn false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1086," <p>Compares two arrays, using equals(), handling multi-dimensional arrays"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1087, correctly.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1094,* <p>Reverses the order of the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1089, <p>Multi-dimensional primitive arrays are also handled correctly by this method.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1096,* <p>This method does nothing if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1091," @param array1  the left hand array to compare, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1092," @param array2  the right hand array to compare, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1093, @return <code>true</code> if the arrays are equal
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1098,"* @param array  the array to reverse, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1095,"ublic static boolean isEquals(final Object array1, final Object array2) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1096,"eturn new EqualsBuilder().append(array1, array2).isEquals();"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1100,public static void reverse(final byte[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1101,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1102,return;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1104,int i = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1105,int j = array.length - 1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1106,byte tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1107,while (j > i) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1108,tmp = array[j];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1109,array[j] = array[i];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1110,array[i] = tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1111,j--;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1112,i++;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1100," <p>Checks whether two arrays are the same length, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1101, <code>null</code> arrays as length <code>0</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1117,* <p>Reverses the order of the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1103," @param array1 the first array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1104," @param array2 the second array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1105," @return <code>true</code> if length of arrays matches, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1106,  <code>null</code> as an empty array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1119,* <p>This method does nothing if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1121,"* @param array  the array to reverse, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1108,"ublic static boolean isSameLength(final boolean[] array1, final boolean[] array2) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1109,f ((array1 == null && array2 != null && array2.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1110,array2 == null && array1 != null && array1.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1111,array1 != null && array2 != null && array1.length != array2.length)) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1112,eturn false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1123,public static void reverse(final double[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1124,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1125,return;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1127,int i = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1128,int j = array.length - 1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1129,double tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1130,while (j > i) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1131,tmp = array[j];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1132,array[j] = array[i];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1133,array[i] = tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1134,j--;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1135,i++;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1114,eturn true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1118," <p>Checks whether two arrays are the same length, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1119, <code>null</code> arrays as length <code>0</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1140,* <p>Reverses the order of the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1121," @param array1 the first array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1122," @param array2 the second array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1123," @return <code>true</code> if length of arrays matches, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1124,  <code>null</code> as an empty array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1142,* <p>This method does nothing if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1144,"* @param array  the array to reverse, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1126,"ublic static boolean isSameLength(final byte[] array1, final byte[] array2) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1127,f ((array1 == null && array2 != null && array2.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1128,array2 == null && array1 != null && array1.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1129,array1 != null && array2 != null && array1.length != array2.length)) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1130,eturn false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1146,public static void reverse(final float[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1147,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1148,return;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1150,int i = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1151,int j = array.length - 1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1152,float tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1153,while (j > i) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1154,tmp = array[j];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1155,array[j] = array[i];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1156,array[i] = tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1157,j--;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1158,i++;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1132,eturn true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1136," <p>Checks whether two arrays are the same length, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1137, <code>null</code> arrays as length <code>0</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1163,* <p>Reverses the order of the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1139," @param array1 the first array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1140," @param array2 the second array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1141," @return <code>true</code> if length of arrays matches, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1142,  <code>null</code> as an empty array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1165,* <p>This method does nothing if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1167,"* @param array  the array to reverse, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1144,"ublic static boolean isSameLength(final char[] array1, final char[] array2) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1145,f ((array1 == null && array2 != null && array2.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1146,array2 == null && array1 != null && array1.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1147,array1 != null && array2 != null && array1.length != array2.length)) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1148,eturn false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1169,public static void reverse(final boolean[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1170,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1171,return;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1173,int i = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1174,int j = array.length - 1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1175,boolean tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1176,while (j > i) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1177,tmp = array[j];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1178,array[j] = array[i];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1179,array[i] = tmp;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1180,j--;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1181,i++;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1150,eturn true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1185,// IndexOf search
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1188,// Object IndexOf
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1154," <p>Checks whether two arrays are the same length, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1155, <code>null</code> arrays as length <code>0</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1191,* <p>Find the index of the given object in the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1193,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1157," @param array1 the first array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1158," @param array2 the second array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1159," @return <code>true</code> if length of arrays matches, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1160,  <code>null</code> as an empty array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1195,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1196,"* @param objectToFind  the object to find, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1197,"* @return the index of the object within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1198,*  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1162,"ublic static boolean isSameLength(final double[] array1, final double[] array2) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1163,f ((array1 == null && array2 != null && array2.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1164,array2 == null && array1 != null && array1.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1165,array1 != null && array2 != null && array1.length != array2.length)) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1166,eturn false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1168,eturn true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1200,"public static int indexOf(final Object[] array, final Object objectToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1201,"return indexOf(array, objectToFind, 0);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1172," <p>Checks whether two arrays are the same length, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1173, <code>null</code> arrays as length <code>0</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1205,* <p>Find the index of the given object in the array starting at the given index.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1207,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1209,* <p>A negative startIndex is treated as zero. A startIndex larger than the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1210,* length will return <code>-1</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1175," @param array1 the first array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1176," @param array2 the second array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1177," @return <code>true</code> if length of arrays matches, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1178,  <code>null</code> as an empty array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1212,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1213,"* @param objectToFind  the object to find, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1214,* @param startIndex  the index to start searching at
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1215,"* @return the index of the object within the array starting at the index,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1216,*  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1180,"ublic static boolean isSameLength(final float[] array1, final float[] array2) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1181,f ((array1 == null && array2 != null && array2.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1182,array2 == null && array1 != null && array1.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1183,array1 != null && array2 != null && array1.length != array2.length)) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1184,eturn false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1218,"public static int indexOf(final Object[] array, final Object objectToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1219,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1220,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1186,eturn true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1222,if (startIndex < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1223,startIndex = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1225,if (objectToFind == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1226,for (int i = startIndex; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1227,if (array[i] == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1228,return i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1231,} else {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1232,for (int i = startIndex; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1233,if (objectToFind.equals(array[i])) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1234,return i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1238,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1190," <p>Checks whether two arrays are the same length, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1191, <code>null</code> arrays as length <code>0</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1242,* <p>Find the last index of the given object within the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1244,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1193," @param array1 the first array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1194," @param array2 the second array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1195," @return <code>true</code> if length of arrays matches, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1196,  <code>null</code> as an empty array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1246,"* @param array  the array to travers backwords looking for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1247,"* @param objectToFind  the object to find, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1248,"* @return the last index of the object within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1249,*  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1198,"ublic static boolean isSameLength(final int[] array1, final int[] array2) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1199,f ((array1 == null && array2 != null && array2.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1200,array2 == null && array1 != null && array1.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1201,array1 != null && array2 != null && array1.length != array2.length)) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1202,eturn false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1204,eturn true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1251,"public static int lastIndexOf(final Object[] array, final Object objectToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1252,"return lastIndexOf(array, objectToFind, Integer.MAX_VALUE);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1208," <p>Checks whether two arrays are the same length, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1209, <code>null</code> arrays as length <code>0</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1256,* <p>Find the last index of the given object in the array starting at the given index.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1258,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1260,* <p>A negative startIndex will return <code>-1</code>. A startIndex larger than
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1261,* the array length will search from the end of the array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1211," @param array1 the first array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1212," @param array2 the second array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1213," @return <code>true</code> if length of arrays matches, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1214,  <code>null</code> as an empty array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1263,"* @param array  the array to traverse for looking for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1264,"* @param objectToFind  the object to find, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1265,* @param startIndex  the start index to travers backwards from
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1266,"* @return the last index of the object within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1267,*  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1216,"ublic static boolean isSameLength(final long[] array1, final long[] array2) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1217,f ((array1 == null && array2 != null && array2.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1218,array2 == null && array1 != null && array1.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1219,array1 != null && array2 != null && array1.length != array2.length)) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1220,eturn false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1269,"public static int lastIndexOf(final Object[] array, final Object objectToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1270,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1271,return -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1273,if (startIndex < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1274,return -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1275,} else if (startIndex >= array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1276,startIndex = array.length - 1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1278,if (objectToFind == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1279,for (int i = startIndex; i >= 0; i--) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1280,if (array[i] == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1281,return i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1284,} else {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1285,for (int i = startIndex; i >= 0; i--) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1286,if (objectToFind.equals(array[i])) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1287,return i;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1222,eturn true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1291,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1225,/ Is same length
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1228," <p>Checks whether two arrays are the same length, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1229, <code>null</code> arrays as length <code>0</code>.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1295,* <p>Checks if the object is in the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1231, <p>Any multi-dimensional aspects of the arrays are ignored.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1233," @param array1 the first array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1234," @param array2 the second array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1235," @return <code>true</code> if length of arrays matches, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1236,  <code>null</code> as an empty array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1238,"ublic static boolean isSameLength(final Object[] array1, final Object[] array2) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1239,f ((array1 == null && array2 != null && array2.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1240,array2 == null && array1 != null && array1.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1241,array1 != null && array2 != null && array1.length != array2.length)) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1242,eturn false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1244,eturn true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1248," <p>Checks whether two arrays are the same length, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1249, <code>null</code> arrays as length <code>0</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1297,* <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1251," @param array1 the first array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1252," @param array2 the second array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1253," @return <code>true</code> if length of arrays matches, treating"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1254,  <code>null</code> as an empty array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1299,* @param array  the array to search through
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1300,* @param objectToFind  the object to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1301,* @return <code>true</code> if the array contains the object
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1256,"ublic static boolean isSameLength(final short[] array1, final short[] array2) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1257,f ((array1 == null && array2 != null && array2.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1258,array2 == null && array1 != null && array1.length > 0) ||
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1259,array1 != null && array2 != null && array1.length != array2.length)) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1260,eturn false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1262,eturn true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1303,"public static boolean contains(final Object[] array, final Object objectToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1304,"return (indexOf(array, objectToFind) != -1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1307,// long IndexOf
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1266, <p>Checks whether two arrays are the same type taking into account
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1267, multi-dimensional arrays.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1310,* <p>Find the index of the given value in the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1312,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1269," @param array1 the first array, must not be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1270," @param array2 the second array, must not be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1271, @return <code>true</code> if type of arrays matches
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1272, @throws IllegalArgumentException if either array is <code>null</code>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1274,"ublic static boolean isSameType(final Object array1, final Object array2) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1275,f (array1 == null || array2 == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1276,"hrow new IllegalArgumentException(""The Array must not be null"");"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1278,eturn array1.getClass().getName().equals(array2.getClass().getName());
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1314,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1315,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1316,"* @return the index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1317,*  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1319,"public static int indexOf(final long[] array, final long valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1320,"return indexOf(array, valueToFind, 0);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1282, <p>Joins the elements of the provided arrays into a single new array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1283, <p>The new array contains all of the element of the first array followed
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1284, by all of the elements from the second array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1324,* <p>Find the index of the given value in the array starting at the given index.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1286, <pre>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1287," ArrayUtils.join(null, null)     = null"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1288," ArrayUtils.join(array1, null)   = array1"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1289," ArrayUtils.join(null, array2)   = array2"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1290," ArrayUtils.join([], [])         = []"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1291," ArrayUtils.join([null], [null]) = [null, null]"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1292," ArrayUtils.join([""a"", ""b"", ""c""], [""1"", ""2"", ""3""]) = [""a"", ""b"", ""c"", ""1"", ""2"", ""3""]"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1293, </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1326,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1295," @param array1  the first array of values to join together, may be null"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1296," @param array2  the second array of values to join together, may be null"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1297," @return The new joined array, <code>null</code> if null array inputs."
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1298,      The type of the joined array is the type of the first array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1299, @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1328,* <p>A negative startIndex is treated as zero. A startIndex larger than the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1329,* length will return -1.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1331,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1332,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1333,* @param startIndex  the index to start searching at
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1334,"* @return the index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1335,*  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1301,"ublic static Object[] join(Object[] array1, Object[] array2) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1302,f (array1 == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1303,eturn array2;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1304, else if (array2 == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1305,eturn array1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1306, else {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1307,"bject[] joinedArray = (Object[]) Array.newInstance(array1.getClass().getComponentType(), array1.length"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1308, array2.length);
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1309,"ystem.arraycopy(array1, 0, joinedArray, 0, array1.length);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1310,"ystem.arraycopy(array2, 0, joinedArray, array1.length, array2.length);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1311,eturn joinedArray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1337,"public static int indexOf(final long[] array, final long valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1338,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1339,return -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1341,if (startIndex < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1342,startIndex = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1344,for (int i = startIndex; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1345,if (valueToFind == array[i]) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1346,return i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1349,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1325,"ublic static int lastIndexOf(final boolean[] array, final boolean valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1362,"public static int lastIndexOf(final long[] array, final long valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1343,"ublic static int lastIndexOf(final boolean[] array, final boolean valueToFind, int startIndex) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1344,f (ArrayUtils.isEmpty(array)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1380,"public static int lastIndexOf(final long[] array, final long valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1381,if (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1361, <p>Find the last index of the given value within the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1398,* <p>Checks if the value is in the given array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1400,* <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1402,* @param array  the array to search through
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1403,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1404,* @return <code>true</code> if the array contains the object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1406,"public static boolean contains(final long[] array, final long valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1407,"return (indexOf(array, valueToFind) != -1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1410,// int IndexOf
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1413,* <p>Find the index of the given value in the array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1365," @param array  the array to travers backwords looking for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1366, @param valueToFind  the object to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1367," @return the last index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1417,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1418,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1419,"* @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1370,"ublic static int lastIndexOf(final byte[] array, final byte valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1371,"eturn lastIndexOf(array, valueToFind, Integer.MAX_VALUE);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1422,"public static int indexOf(final int[] array, final int valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1423,"return indexOf(array, valueToFind, 0);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1375, <p>Find the last index of the given value in the array starting at the given index.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1427,* <p>Find the index of the given value in the array starting at the given index.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1379, <p>A negative startIndex will return -1. A startIndex larger than the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1380, length will search from the end of the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1431,* <p>A negative startIndex is treated as zero. A startIndex larger than the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1432,* length will return -1.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1382," @param array  the array to traverse for looking for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1434,"* @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1384, @param startIndex  the start index to travers backwards from
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1385," @return the last index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1436,* @param startIndex  the index to start searching at
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1437,"* @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1388,"ublic static int lastIndexOf(final byte[] array, final byte valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1440,"public static int indexOf(final int[] array, final int valueToFind, int startIndex) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1393,eturn -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1394, else if (startIndex >= array.length) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1395,tartIndex = array.length - 1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1445,startIndex = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1397,or (int i = startIndex; i >= 0; i--) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1447,for (int i = startIndex; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1415,"ublic static int lastIndexOf(final double[] array, final double valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1465,"public static int lastIndexOf(final int[] array, final int valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1420, <p>Find the last index of the given value within a given tolerance in the array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1421, This method will return the index of the last value which falls between the region
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1422, defined by valueToFind - tolerance and valueToFind + tolerance.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1424, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1426," @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1427, @param valueToFind  the value to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1428, @param tolerance tolerance of the search
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1429," @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1430,  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1432,"ublic static int lastIndexOf(final double[] array, final double valueToFind, final double tolerance) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1433,"eturn lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1450,"ublic static int lastIndexOf(final double[] array, final double valueToFind, int startIndex) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1451,f (ArrayUtils.isEmpty(array)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1483,"public static int lastIndexOf(final int[] array, final int valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1484,if (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1468, <p>Find the last index of the given value in the array starting at the given index.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1469, This method will return the index of the last value which falls between the region
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1470, defined by valueToFind - tolerance and valueToFind + tolerance.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1501,* <p>Checks if the value is in the given array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1503,* <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1505,* @param array  the array to search through
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1506,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1507,* @return <code>true</code> if the array contains the object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1509,"public static boolean contains(final int[] array, final int valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1510,"return (indexOf(array, valueToFind) != -1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1513,// short IndexOf
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1516,* <p>Find the index of the given value in the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1518,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1520,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1521,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1522,"* @return the index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1523,*  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1525,"public static int indexOf(final short[] array, final short valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1526,"return indexOf(array, valueToFind, 0);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1530,* <p>Find the index of the given value in the array starting at the given index.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1474, <p>A negative startIndex will return -1. A startIndex larger than the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1475, length will search from the end of the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1534,* <p>A negative startIndex is treated as zero. A startIndex larger than the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1535,* length will return -1.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1477," @param array  the array to traverse for looking for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1537,"* @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1479, @param startIndex  the start index to travers backwards from
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1480, @param tolerance  search for value within plus/minus this amount
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1481," @return the last index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1539,* @param startIndex  the index to start searching at
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1540,"* @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1484,"ublic static int lastIndexOf(final double[] array, final double valueToFind, int startIndex, double tolerance) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1485,f (ArrayUtils.isEmpty(array)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1543,"public static int indexOf(final short[] array, final short valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1544,if (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1489,eturn -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1490, else if (startIndex >= array.length) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1491,tartIndex = array.length - 1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1493,ouble min = valueToFind - tolerance;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1494,ouble max = valueToFind + tolerance;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1495,or (int i = startIndex; i >= 0; i--) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1496,f (array[i] >= min && array[i] <= max) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1548,startIndex = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1550,for (int i = startIndex; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1551,if (valueToFind == array[i]) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1513,"ublic static int lastIndexOf(final float[] array, final float valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1568,"public static int lastIndexOf(final short[] array, final short valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1531,"ublic static int lastIndexOf(final float[] array, final float valueToFind, int startIndex) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1532,f (ArrayUtils.isEmpty(array)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1586,"public static int lastIndexOf(final short[] array, final short valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1587,if (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1549, <p>Find the last index of the given value within the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1604,* <p>Checks if the value is in the given array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1606,* <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1608,* @param array  the array to search through
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1609,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1610,* @return <code>true</code> if the array contains the object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1612,"public static boolean contains(final short[] array, final short valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1613,"return (indexOf(array, valueToFind) != -1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1616,// byte IndexOf
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1619,* <p>Find the index of the given value in the array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1553," @param array  the array to travers backwords looking for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1554, @param valueToFind  the object to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1555," @return the last index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1623,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1624,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1625,"* @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1558,"ublic static int lastIndexOf(final int[] array, final int valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1559,"eturn lastIndexOf(array, valueToFind, Integer.MAX_VALUE);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1628,"public static int indexOf(final byte[] array, final byte valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1629,"return indexOf(array, valueToFind, 0);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1563, <p>Find the last index of the given value in the array starting at the given index.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1633,* <p>Find the index of the given value in the array starting at the given index.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1567, <p>A negative startIndex will return -1. A startIndex larger than the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1568, length will search from the end of the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1637,* <p>A negative startIndex is treated as zero. A startIndex larger than the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1638,* length will return -1.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1570," @param array  the array to traverse for looking for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1640,"* @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1572, @param startIndex  the start index to travers backwards from
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1573," @return the last index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1642,* @param startIndex  the index to start searching at
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1643,"* @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1576,"ublic static int lastIndexOf(final int[] array, final int valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1646,"public static int indexOf(final byte[] array, final byte valueToFind, int startIndex) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1581,eturn -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1582, else if (startIndex >= array.length) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1583,tartIndex = array.length - 1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1651,startIndex = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1585,or (int i = startIndex; i >= 0; i--) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1653,for (int i = startIndex; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1603,"ublic static int lastIndexOf(final long[] array, final long valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1671,"public static int lastIndexOf(final byte[] array, final byte valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1621,"ublic static int lastIndexOf(final long[] array, final long valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1689,"public static int lastIndexOf(final byte[] array, final byte valueToFind, int startIndex) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1639, <p>Find the last index of the given object within the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1707,* <p>Checks if the value is in the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1641, <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1709,* <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1643," @param array  the array to travers backwords looking for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1644," @param objectToFind  the object to find, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1645," @return the last index of the object within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1646,  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1711,* @param array  the array to search through
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1712,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1713,* @return <code>true</code> if the array contains the object
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1648,"ublic static int lastIndexOf(final Object[] array, final Object objectToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1649,"eturn lastIndexOf(array, objectToFind, Integer.MAX_VALUE);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1715,"public static boolean contains(final byte[] array, final byte valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1716,"return (indexOf(array, valueToFind) != -1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1719,// double IndexOf
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1653, <p>Find the last index of the given object in the array starting at the given index.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1722,* <p>Find the index of the given value in the array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1657, <p>A negative startIndex will return <code>-1</code>. A startIndex larger than
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1658, the array length will search from the end of the array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1660," @param array  the array to traverse for looking for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1661," @param objectToFind  the object to find, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1662, @param startIndex  the start index to travers backwards from
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1663," @return the last index of the object within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1726,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1727,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1728,"* @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1666,"ublic static int lastIndexOf(final Object[] array, final Object objectToFind, int startIndex) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1667,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1668,eturn -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1670,f (startIndex < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1671,eturn -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1672, else if (startIndex >= array.length) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1673,tartIndex = array.length - 1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1675,f (objectToFind == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1676,or (int i = startIndex; i >= 0; i--) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1677,f (array[i] == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1678,eturn i;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1681, else {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1682,or (int i = startIndex; i >= 0; i--) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1683,f (objectToFind.equals(array[i])) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1684,eturn i;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1688,eturn -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1731,"public static int indexOf(final double[] array, final double valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1732,"return indexOf(array, valueToFind, 0);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1692, <p>Find the last index of the given value within the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1736,* <p>Find the index of the given value within a given tolerance in the array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1737,* This method will return the index of the first value which falls between the region
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1738,* defined by valueToFind - tolerance and valueToFind + tolerance.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1696," @param array  the array to travers backwords looking for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1697, @param valueToFind  the object to find
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1698," @return the last index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1742,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1743,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1744,* @param tolerance tolerance of the search
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1745,"* @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1701,"ublic static int lastIndexOf(final short[] array, final short valueToFind) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1702,"eturn lastIndexOf(array, valueToFind, Integer.MAX_VALUE);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1748,"public static int indexOf(final double[] array, final double valueToFind, final double tolerance) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1749,"return indexOf(array, valueToFind, 0, tolerance);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1706, <p>Find the last index of the given value in the array starting at the given index.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1753,* <p>Find the index of the given value in the array starting at the given index.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1710, <p>A negative startIndex will return -1. A startIndex larger than the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1711, length will search from the end of the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1757,* <p>A negative startIndex is treated as zero. A startIndex larger than the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1758,* length will return -1.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1713," @param array  the array to traverse for looking for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1760,"* @param array  the array to search through for the object, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1715, @param startIndex  the start index to travers backwards from
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1716," @return the last index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1762,* @param startIndex  the index to start searching at
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1763,"* @return the index of the value within the array,"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1719,"ublic static int lastIndexOf(final short[] array, final short valueToFind, int startIndex) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1720,f (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1766,"public static int indexOf(final double[] array, final double valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1767,if (ArrayUtils.isEmpty(array)) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1724,eturn -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1725, else if (startIndex >= array.length) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1726,tartIndex = array.length - 1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1771,startIndex = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1728,or (int i = startIndex; i >= 0; i--) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1773,for (int i = startIndex; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1737, <p>Reverses the order of the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1739, <p>This method does nothing if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1741," @param array  the array to reverse, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1743,ublic static void reverse(final boolean[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1744,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1745,eturn;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1747,nt i = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1748,nt j = array.length - 1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1749,oolean tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1750,hile (j > i) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1751,mp = array[j];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1752,rray[j] = array[i];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1753,rray[i] = tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1754,--;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1755,++;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1760, <p>Reverses the order of the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1762, <p>This method does nothing if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1764," @param array  the array to reverse, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1766,ublic static void reverse(final byte[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1767,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1768,eturn;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1770,nt i = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1771,nt j = array.length - 1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1772,yte tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1773,hile (j > i) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1774,mp = array[j];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1775,rray[j] = array[i];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1776,rray[i] = tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1777,--;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1778,++;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1783, <p>Reverses the order of the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1785, <p>This method does nothing if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1782,* <p>Find the index of the given value in the array starting at the given index.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1783,* This method will return the index of the first value which falls between the region
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1784,* defined by valueToFind - tolerance and valueToFind + tolerance.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1786,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1788,* <p>A negative startIndex is treated as zero. A startIndex larger than the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1789,* length will return -1.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1787," @param array  the array to reverse, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1791,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1792,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1793,* @param startIndex  the index to start searching at
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1794,* @param tolerance tolerance of the search
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1795,"* @return the index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1796,*  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1789,ublic static void reverse(final char[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1790,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1791,eturn;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1793,nt i = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1794,nt j = array.length - 1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1795,har tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1796,hile (j > i) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1797,mp = array[j];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1798,rray[j] = array[i];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1799,rray[i] = tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1800,--;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1801,++;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1798,"public static int indexOf(final double[] array, final double valueToFind, int startIndex, double tolerance) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1799,if (ArrayUtils.isEmpty(array)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1800,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1806, <p>Reverses the order of the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1808, <p>This method does nothing if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1810," @param array  the array to reverse, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1812,ublic static void reverse(final double[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1813,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1814,eturn;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1802,if (startIndex < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1803,startIndex = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1816,nt i = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1817,nt j = array.length - 1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1818,ouble tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1819,hile (j > i) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1820,mp = array[j];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1821,rray[j] = array[i];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1822,rray[i] = tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1823,--;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1824,++;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1805,double min = valueToFind - tolerance;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1806,double max = valueToFind + tolerance;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1807,for (int i = startIndex; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1808,if (array[i] >= min && array[i] <= max) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1809,return i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1812,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1829, <p>Reverses the order of the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1831, <p>This method does nothing if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1816,* <p>Find the last index of the given value within the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1818,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1833," @param array  the array to reverse, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1820,"* @param array  the array to travers backwords looking for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1821,* @param valueToFind  the object to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1822,"* @return the last index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1823,*  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1835,ublic static void reverse(final float[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1836,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1837,eturn;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1839,nt i = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1840,nt j = array.length - 1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1841,loat tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1842,hile (j > i) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1843,mp = array[j];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1844,rray[j] = array[i];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1845,rray[i] = tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1846,--;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1847,++;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1825,"public static int lastIndexOf(final double[] array, final double valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1826,"return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1852, <p>Reverses the order of the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1854, <p>This method does nothing if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1830,* <p>Find the last index of the given value within a given tolerance in the array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1831,* This method will return the index of the last value which falls between the region
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1832,* defined by valueToFind - tolerance and valueToFind + tolerance.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1834,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1856," @param array  the array to reverse, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1836,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1837,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1838,* @param tolerance tolerance of the search
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1839,"* @return the index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1840,*  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1858,ublic static void reverse(final int[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1859,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1860,eturn;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1862,nt i = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1863,nt j = array.length - 1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1864,nt tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1865,hile (j > i) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1866,mp = array[j];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1867,rray[j] = array[i];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1868,rray[i] = tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1869,--;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1870,++;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1842,"public static int lastIndexOf(final double[] array, final double valueToFind, final double tolerance) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1843,"return lastIndexOf(array, valueToFind, Integer.MAX_VALUE, tolerance);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1875, <p>Reverses the order of the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1877, <p>This method does nothing if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1847,* <p>Find the last index of the given value in the array starting at the given index.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1849,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1851,* <p>A negative startIndex will return -1. A startIndex larger than the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1852,* length will search from the end of the array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1879," @param array  the array to reverse, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1854,"* @param array  the array to traverse for looking for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1855,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1856,* @param startIndex  the start index to travers backwards from
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1857,"* @return the last index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1858,*  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1881,ublic static void reverse(final long[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1882,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1883,eturn;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1860,"public static int lastIndexOf(final double[] array, final double valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1861,if (ArrayUtils.isEmpty(array)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1862,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1885,nt i = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1886,nt j = array.length - 1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1887,ong tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1888,hile (j > i) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1889,mp = array[j];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1890,rray[j] = array[i];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1891,rray[i] = tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1892,--;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1893,++;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1864,if (startIndex < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1865,return -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1866,} else if (startIndex >= array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1867,startIndex = array.length - 1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1869,for (int i = startIndex; i >= 0; i--) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1870,if (valueToFind == array[i]) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1871,return i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1874,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1897,/ Reverse
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1900, <p>Reverses the order of the given array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1878,* <p>Find the last index of the given value in the array starting at the given index.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1879,* This method will return the index of the last value which falls between the region
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1880,* defined by valueToFind - tolerance and valueToFind + tolerance.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1902, <p>There is no special handling for multi-dimensional arrays.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1882,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1904, <p>This method does nothing if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1884,* <p>A negative startIndex will return -1. A startIndex larger than the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1885,* length will search from the end of the array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1906," @param array  the array to reverse, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1887,"* @param array  the array to traverse for looking for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1888,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1889,* @param startIndex  the start index to travers backwards from
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1890,* @param tolerance  search for value within plus/minus this amount
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1891,"* @return the last index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1892,*  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1908,ublic static void reverse(final Object[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1909,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1910,eturn;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1894,"public static int lastIndexOf(final double[] array, final double valueToFind, int startIndex, double tolerance) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1895,if (ArrayUtils.isEmpty(array)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1896,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1912,nt i = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1913,nt j = array.length - 1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1914,bject tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1915,hile (j > i) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1916,mp = array[j];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1917,rray[j] = array[i];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1918,rray[i] = tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1919,--;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1920,++;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1898,if (startIndex < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1899,return -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1900,} else if (startIndex >= array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1901,startIndex = array.length - 1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1903,double min = valueToFind - tolerance;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1904,double max = valueToFind + tolerance;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1905,for (int i = startIndex; i >= 0; i--) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1906,if (array[i] >= min && array[i] <= max) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1907,return i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1910,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1925, <p>Reverses the order of the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1927, <p>This method does nothing if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1914,* <p>Checks if the value is in the given array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1916,* <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1929," @param array  the array to reverse, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1918,* @param array  the array to search through
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1919,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1920,* @return <code>true</code> if the array contains the object
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1931,ublic static void reverse(final short[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1932,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1933,eturn;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1935,nt i = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1936,nt j = array.length - 1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1937,hort tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1938,hile (j > i) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1939,mp = array[j];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1940,rray[j] = array[i];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1941,rray[i] = tmp;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1942,--;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1943,++;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1922,"public static boolean contains(final double[] array, final double valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1923,"return (indexOf(array, valueToFind) != -1);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1948, <p>Produces a new <code>boolean</code> array containing the elements
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1949, between the start and end indices.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1927,* <p>Checks if a value falling within the given tolerance is in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1928,* given array.  If the array contains a value within the inclusive range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1929,* defined by (value - tolerance) to (value + tolerance).</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1951," <p>The start index is inclusive, the end index exclusive."
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1952, Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1931,* <p>The method returns <code>false</code> if a <code>null</code> array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1932,* is passed in.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1954, @param array  the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1955, @param startIndexInclusive  the starting index. Undervalue (&lt;0)
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1956,"      is promoted to 0, overvalue (&gt;array.length) results"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1957,      in an empty array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1958, @param endIndexExclusive  elements up to endIndex-1 are present in the
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1959,      returned subarray. Undervalue (&lt; startIndex) produces
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1960,"      empty array, overvalue (&gt;array.length) is demoted to"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1961,      array length.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1962, @return a new array containing the elements between
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1963,      the start and end indices.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1934,* @param array  the array to search
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1935,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1936,* @param tolerance  the array contains the tolerance of the search
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1937,* @return true if value falling within tolerance is in array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1965,"ublic static boolean[] subarray(boolean[] array, int startIndexInclusive, int endIndexExclusive) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1966,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1967,eturn null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1969,f (startIndexInclusive < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1970,tartIndexInclusive = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1972,f (endIndexExclusive > array.length) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1973,ndIndexExclusive = array.length;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1975,nt newSize = endIndexExclusive - startIndexInclusive;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1976,f (newSize <= 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1977,eturn EMPTY_BOOLEAN_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1980,oolean[] subarray = new boolean[newSize];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1981,"ystem.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1982,eturn subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1939,"public static boolean contains(final double[] array, final double valueToFind, final double tolerance) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1940,"return (indexOf(array, valueToFind, 0, tolerance) != -1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1943,// float IndexOf
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1986, <p>Produces a new <code>byte</code> array containing the elements
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1987, between the start and end indices.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1989," <p>The start index is inclusive, the end index exclusive."
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1990, Null array input produces null output.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1992, @param array  the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1993, @param startIndexInclusive  the starting index. Undervalue (&lt;0)
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1994,"      is promoted to 0, overvalue (&gt;array.length) results"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1995,      in an empty array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1996, @param endIndexExclusive  elements up to endIndex-1 are present in the
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1997,      returned subarray. Undervalue (&lt; startIndex) produces
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1998,"      empty array, overvalue (&gt;array.length) is demoted to"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1999,      array length.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2000, @return a new array containing the elements between
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2001,      the start and end indices.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2003,"ublic static byte[] subarray(byte[] array, int startIndexInclusive, int endIndexExclusive) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2004,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2005,eturn null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2007,f (startIndexInclusive < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2008,tartIndexInclusive = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2010,f (endIndexExclusive > array.length) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2011,ndIndexExclusive = array.length;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2013,nt newSize = endIndexExclusive - startIndexInclusive;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2014,f (newSize <= 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2015,eturn EMPTY_BYTE_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2018,yte[] subarray = new byte[newSize];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2019,"ystem.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2020,eturn subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1946,* <p>Find the index of the given value in the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1948,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1950,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1951,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1952,"* @return the index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1953,*  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1955,"public static int indexOf(final float[] array, final float valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1956,"return indexOf(array, valueToFind, 0);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2024, <p>Produces a new <code>char</code> array containing the elements
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2025, between the start and end indices.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1960,* <p>Find the index of the given value in the array starting at the given index.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2027," <p>The start index is inclusive, the end index exclusive."
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2028, Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1962,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2030, @param array  the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2031, @param startIndexInclusive  the starting index. Undervalue (&lt;0)
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2032,"      is promoted to 0, overvalue (&gt;array.length) results"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2033,      in an empty array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2034, @param endIndexExclusive  elements up to endIndex-1 are present in the
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2035,      returned subarray. Undervalue (&lt; startIndex) produces
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2036,"      empty array, overvalue (&gt;array.length) is demoted to"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2037,      array length.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2038, @return a new array containing the elements between
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2039,      the start and end indices.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1964,* <p>A negative startIndex is treated as zero. A startIndex larger than the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1965,* length will return -1.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1967,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1968,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1969,* @param startIndex  the index to start searching at
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1970,"* @return the index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1971,*  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2041,"ublic static char[] subarray(char[] array, int startIndexInclusive, int endIndexExclusive) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2042,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2043,eturn null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2045,f (startIndexInclusive < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2046,tartIndexInclusive = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1973,"public static int indexOf(final float[] array, final float valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1974,if (ArrayUtils.isEmpty(array)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1975,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2048,f (endIndexExclusive > array.length) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2049,ndIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1977,if (startIndex < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1978,startIndex = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2051,nt newSize = endIndexExclusive - startIndexInclusive;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2052,f (newSize <= 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2053,eturn EMPTY_CHAR_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1980,for (int i = startIndex; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1981,if (valueToFind == array[i]) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1982,return i;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2056,har[] subarray = new char[newSize];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2057,"ystem.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2058,eturn subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1985,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2062, <p>Produces a new <code>double</code> array containing the elements
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2063, between the start and end indices.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2065," <p>The start index is inclusive, the end index exclusive."
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2066, Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1989,* <p>Find the last index of the given value within the array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2068, @param array  the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2069, @param startIndexInclusive  the starting index. Undervalue (&lt;0)
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2070,"      is promoted to 0, overvalue (&gt;array.length) results"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2071,      in an empty array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2072, @param endIndexExclusive  elements up to endIndex-1 are present in the
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2073,      returned subarray. Undervalue (&lt; startIndex) produces
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2074,"      empty array, overvalue (&gt;array.length) is demoted to"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2075,      array length.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2076, @return a new array containing the elements between
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2077,      the start and end indices.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1991,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1993,"* @param array  the array to travers backwords looking for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1994,* @param valueToFind  the object to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1995,"* @return the last index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1996,*  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2079,"ublic static double[] subarray(double[] array, int startIndexInclusive, int endIndexExclusive) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2080,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2081,eturn null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2083,f (startIndexInclusive < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2084,tartIndexInclusive = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2086,f (endIndexExclusive > array.length) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2087,ndIndexExclusive = array.length;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2089,nt newSize = endIndexExclusive - startIndexInclusive;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2090,f (newSize <= 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2091,eturn EMPTY_DOUBLE_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2094,ouble[] subarray = new double[newSize];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2095,"ystem.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2096,eturn subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1998,"public static int lastIndexOf(final float[] array, final float valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1999,"return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2100, <p>Produces a new <code>float</code> array containing the elements
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2101, between the start and end indices.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2003,* <p>Find the last index of the given value in the array starting at the given index.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2103," <p>The start index is inclusive, the end index exclusive."
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2104, Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2005,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2106, @param array  the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2107, @param startIndexInclusive  the starting index. Undervalue (&lt;0)
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2108,"      is promoted to 0, overvalue (&gt;array.length) results"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2109,      in an empty array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2110, @param endIndexExclusive  elements up to endIndex-1 are present in the
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2111,      returned subarray. Undervalue (&lt; startIndex) produces
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2112,"      empty array, overvalue (&gt;array.length) is demoted to"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2113,      array length.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2114, @return a new array containing the elements between
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2115,      the start and end indices.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2007,* <p>A negative startIndex will return -1. A startIndex larger than the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2008,* length will search from the end of the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2010,"* @param array  the array to traverse for looking for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2011,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2012,* @param startIndex  the start index to travers backwards from
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2013,"* @return the last index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2014,*  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2117,"ublic static float[] subarray(float[] array, int startIndexInclusive, int endIndexExclusive) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2118,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2119,eturn null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2121,f (startIndexInclusive < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2122,tartIndexInclusive = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2016,"public static int lastIndexOf(final float[] array, final float valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2017,if (ArrayUtils.isEmpty(array)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2018,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2124,f (endIndexExclusive > array.length) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2125,ndIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2020,if (startIndex < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2021,return -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2022,} else if (startIndex >= array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2023,startIndex = array.length - 1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2127,nt newSize = endIndexExclusive - startIndexInclusive;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2128,f (newSize <= 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2129,eturn EMPTY_FLOAT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2025,for (int i = startIndex; i >= 0; i--) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2026,if (valueToFind == array[i]) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2027,return i;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2132,loat[] subarray = new float[newSize];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2133,"ystem.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2134,eturn subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2030,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2138, <p>Produces a new <code>int</code> array containing the elements
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2139, between the start and end indices.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2141," <p>The start index is inclusive, the end index exclusive."
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2142, Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2034,* <p>Checks if the value is in the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2144, @param array  the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2145, @param startIndexInclusive  the starting index. Undervalue (&lt;0)
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2146,"      is promoted to 0, overvalue (&gt;array.length) results"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2147,      in an empty array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2148, @param endIndexExclusive  elements up to endIndex-1 are present in the
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2149,      returned subarray. Undervalue (&lt; startIndex) produces
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2150,"      empty array, overvalue (&gt;array.length) is demoted to"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2151,      array length.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2152, @return a new array containing the elements between
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2153,      the start and end indices.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2036,* <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2038,* @param array  the array to search through
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2039,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2040,* @return <code>true</code> if the array contains the object
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2155,"ublic static int[] subarray(int[] array, int startIndexInclusive, int endIndexExclusive) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2156,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2157,eturn null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2159,f (startIndexInclusive < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2160,tartIndexInclusive = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2162,f (endIndexExclusive > array.length) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2163,ndIndexExclusive = array.length;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2165,nt newSize = endIndexExclusive - startIndexInclusive;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2166,f (newSize <= 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2167,eturn EMPTY_INT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2042,"public static boolean contains(final float[] array, final float valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2043,"return (indexOf(array, valueToFind) != -1);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2170,nt[] subarray = new int[newSize];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2171,"ystem.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2172,eturn subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2046,// boolean IndexOf
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2049,* <p>Find the index of the given value in the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2051,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2053,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2054,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2055,"* @return the index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2056,*  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2058,"public static int indexOf(final boolean[] array, final boolean valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2059,"return indexOf(array, valueToFind, 0);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2176, <p>Produces a new <code>long</code> array containing the elements
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2177, between the start and end indices.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2063,* <p>Find the index of the given value in the array starting at the given index.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2179," <p>The start index is inclusive, the end index exclusive."
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2180, Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2065,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2182, @param array  the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2183, @param startIndexInclusive  the starting index. Undervalue (&lt;0)
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2184,"      is promoted to 0, overvalue (&gt;array.length) results"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2185,      in an empty array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2186, @param endIndexExclusive  elements up to endIndex-1 are present in the
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2187,      returned subarray. Undervalue (&lt; startIndex) produces
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2188,"      empty array, overvalue (&gt;array.length) is demoted to"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2189,      array length.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2190, @return a new array containing the elements between
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2191,      the start and end indices.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2067,* <p>A negative startIndex is treated as zero. A startIndex larger than the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2068,* length will return -1.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2070,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2071,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2072,* @param startIndex  the index to start searching at
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2073,"* @return the index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2074,*  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2193,"ublic static long[] subarray(long[] array, int startIndexInclusive, int endIndexExclusive) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2194,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2195,eturn null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2197,f (startIndexInclusive < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2198,tartIndexInclusive = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2200,f (endIndexExclusive > array.length) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2201,ndIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2076,"public static int indexOf(final boolean[] array, final boolean valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2077,if (ArrayUtils.isEmpty(array)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2078,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2203,nt newSize = endIndexExclusive - startIndexInclusive;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2204,f (newSize <= 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2205,eturn EMPTY_LONG_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2080,if (startIndex < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2081,startIndex = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2208,ong[] subarray = new long[newSize];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2209,"ystem.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2210,eturn subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2083,for (int i = startIndex; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2084,if (valueToFind == array[i]) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2085,return i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2088,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2213,/ Subarrays
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2216, <p>Produces a new array containing the elements between
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2217, the start and end indices.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2219," <p>The start index is inclusive, the end index exclusive."
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2220, Null array input produces null output.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2222, <p>The component type of the subarray is always the same as
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2223," that of the input array. Thus, if the input is an array of type"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2224," <code>Date</code>, the following usage is envisaged:</p>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2226, <pre>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2227," Date[] someDates = (Date[])ArrayUtils.subarray(allDates, 2, 5);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2228, </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2092,* <p>Find the last index of the given value within the array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2230, @param array  the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2231, @param startIndexInclusive  the starting index. Undervalue (&lt;0)
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2232,"      is promoted to 0, overvalue (&gt;array.length) results"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2233,      in an empty array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2234, @param endIndexExclusive  elements up to endIndex-1 are present in the
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2235,      returned subarray. Undervalue (&lt; startIndex) produces
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2236,"      empty array, overvalue (&gt;array.length) is demoted to"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2237,      array length.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2238, @return a new array containing the elements between
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2239,      the start and end indices.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2094,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2096,"* @param array  the array to travers backwords looking for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2097,* @param valueToFind  the object to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2098,"* @return the last index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2099,*  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2241,"ublic static Object[] subarray(Object[] array, int startIndexInclusive, int endIndexExclusive) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2242,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2243,eturn null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2245,f (startIndexInclusive < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2246,tartIndexInclusive = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2248,f (endIndexExclusive > array.length) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2249,ndIndexExclusive = array.length;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2251,nt newSize = endIndexExclusive - startIndexInclusive;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2252,lass type = array.getClass().getComponentType();
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2253,f (newSize <= 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2254,"eturn (Object[]) Array.newInstance(type, 0);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2256,"bject[] subarray = (Object[]) Array.newInstance(type, newSize);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2257,"ystem.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2258,eturn subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2101,"public static int lastIndexOf(final boolean[] array, final boolean valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2102,"return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2262, <p>Produces a new <code>short</code> array containing the elements
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2263, between the start and end indices.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2106,* <p>Find the last index of the given value in the array starting at the given index.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2265," <p>The start index is inclusive, the end index exclusive."
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2266, Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2108,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2268, @param array  the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2269, @param startIndexInclusive  the starting index. Undervalue (&lt;0)
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2270,"      is promoted to 0, overvalue (&gt;array.length) results"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2271,      in an empty array.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2272, @param endIndexExclusive  elements up to endIndex-1 are present in the
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2273,      returned subarray. Undervalue (&lt; startIndex) produces
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2274,"      empty array, overvalue (&gt;array.length) is demoted to"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2275,      array length.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2276, @return a new array containing the elements between
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2277,      the start and end indices.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2110,* <p>A negative startIndex will return -1. A startIndex larger than the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2111,* length will search from the end of the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2113,"* @param array  the array to traverse for looking for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2114,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2115,* @param startIndex  the start index to travers backwards from
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2116,"* @return the last index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2117,*  <code>-1</code> if not found or <code>null</code> array input
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2279,"ublic static short[] subarray(short[] array, int startIndexInclusive, int endIndexExclusive) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2280,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2281,eturn null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2283,f (startIndexInclusive < 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2284,tartIndexInclusive = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2119,"public static int lastIndexOf(final boolean[] array, final boolean valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2120,if (ArrayUtils.isEmpty(array)) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2121,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2286,f (endIndexExclusive > array.length) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2287,ndIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2123,if (startIndex < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2124,return -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2125,} else if (startIndex >= array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2126,startIndex = array.length - 1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2289,nt newSize = endIndexExclusive - startIndexInclusive;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2290,f (newSize <= 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2291,eturn EMPTY_SHORT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2128,for (int i = startIndex; i >= 0; i--) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2129,if (valueToFind == array[i]) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2130,return i;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2294,hort[] subarray = new short[newSize];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2295,"ystem.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2296,eturn subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2133,return -1;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2299,/ To map
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2302, <p>Converts the given array into a {@link java.util.Map}. Each element of the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2303," must be either a {@link java.util.Map.Entry} or an Array, containing at least two"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2304," elements, where the first element is used as key and the second as"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2305, value.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2137,* <p>Checks if the value is in the given array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2307, <p>This method can be used to initialize:</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2308, <pre>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2309, // Create a Map mapping colors.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2310, Map colorMap = MapUtils.toMap(new String[][] {{
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2311,"     {""RED"", ""#FF0000""},"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2312,"     {""GREEN"", ""#00FF00""},"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2313,"     {""BLUE"", ""#0000FF""}});"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2314, </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2139,* <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2316, <p>This method returns <code>null</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2318, @param array  an array whose elements are either a {@link java.util.Map.Entry} or
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2319,"  an Array containing at least two elements, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2320, @return a <code>Map</code> that was created from the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2321, @throws IllegalArgumentException  if one element of this Array is
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2322,  itself an Array containing less then two elements
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2323, @throws IllegalArgumentException  if the array contains elements other
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2324,  than {@link java.util.Map.Entry} and an Array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2141,* @param array  the array to search through
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2142,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2143,* @return <code>true</code> if the array contains the object
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2326,ublic static Map toMap(final Object[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2327,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2328,eturn null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2330,inal Map map = new HashMap((int) (array.length * 1.5));
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2331,or (int i = 0; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2332,bject object = array[i];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2333,f (object instanceof Map.Entry) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2334,ap.Entry entry = (Map.Entry) object;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2335,"ap.put(entry.getKey(), entry.getValue());"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2336, else if (object instanceof Object[]) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2337,bject[] entry = (Object[]) object;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2338,f (entry.length < 2) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2339,"hrow new IllegalArgumentException(""Array element "" + i + "", '"""
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2340, object
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2341," ""', has a length less than 2"");"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2343,"ap.put(entry[0], entry[1]);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2344, else {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2345,"hrow new IllegalArgumentException(""Array element "" + i + "", '"""
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2346, object
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2347," ""', is neither of type Map.Entry nor an Array"");"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2350,eturn map;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2145,"public static boolean contains(final boolean[] array, final boolean valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2146,"return (indexOf(array, valueToFind) != -1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2149,// Primitive/Object array converters
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2152,// Long array converters
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2354, <p>Converts an array of primitive booleans to objects.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2155,* <p>Converts an array of object Longs to primitives.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2358, @param array  a <code>boolean</code> array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2359," @return a <code>Boolean</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2159,"* @param array  a <code>Long</code> array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2160,"* @return a <code>long</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2161,* @throws NullPointerException if array content is <code>null</code>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2361,ublic static Boolean[] toObject(final boolean[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2163,public static long[] toPrimitive(final Long[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2365,eturn EMPTY_BOOLEAN_OBJECT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2167,return EMPTY_LONG_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2367,inal Boolean[] result = new Boolean[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2169,final long[] result = new long[array.length];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2369,esult[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2171,result[i] = array[i].longValue();
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2375, <p>Converts an array of primitive bytes to objects.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2177,* <p>Converts an array of object Long to primitives handling <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2379, @param array  a <code>byte</code> array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2380," @return a <code>Byte</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2181,"* @param array  a <code>Long</code> array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2182,* @param valueForNull  the value to insert if <code>null</code> found
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2183,"* @return a <code>long</code> array, <code>null</code> if null array input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2382,ublic static Byte[] toObject(final byte[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2185,"public static long[] toPrimitive(final Long[] array, final long valueForNull) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2386,eturn EMPTY_BYTE_OBJECT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2189,return EMPTY_LONG_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2388,inal Byte[] result = new Byte[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2191,final long[] result = new long[array.length];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2390,esult[i] = new Byte(array[i]);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2193,Long b = array[i];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2194,result[i] = (b == null ? valueForNull : b.longValue());
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2396, <p>Converts an array of primitive doubles to objects.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2200,* <p>Converts an array of primitive longs to objects.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2400, @param array  a <code>double</code> array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2401," @return a <code>Double</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2204,* @param array  a <code>long</code> array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2205,"* @return a <code>Long</code> array, <code>null</code> if null array input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2403,ublic static Double[] toObject(final double[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2207,public static Long[] toObject(final long[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2407,eturn EMPTY_DOUBLE_OBJECT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2211,return EMPTY_LONG_OBJECT_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2409,inal Double[] result = new Double[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2213,final Long[] result = new Long[array.length];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2411,esult[i] = new Double(array[i]);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2215,result[i] = new Long(array[i]);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2220,// Int array converters
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2417, <p>Converts an array of primitive floats to objects.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2223,* <p>Converts an array of object Integers to primitives.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2421, @param array  a <code>float</code> array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2422," @return a <code>Float</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2227,"* @param array  a <code>Integer</code> array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2228,"* @return an <code>int</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2229,* @throws NullPointerException if array content is <code>null</code>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2424,ublic static Float[] toObject(final float[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2231,public static int[] toPrimitive(final Integer[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2428,eturn EMPTY_FLOAT_OBJECT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2235,return EMPTY_INT_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2430,inal Float[] result = new Float[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2237,final int[] result = new int[array.length];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2432,esult[i] = new Float(array[i]);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2239,result[i] = array[i].intValue();
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2438, <p>Converts an array of primitive ints to objects.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2245,* <p>Converts an array of object Integer to primitives handling <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2442, @param array  an <code>int</code> array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2443," @return an <code>Integer</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2249,"* @param array  a <code>Integer</code> array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2250,* @param valueForNull  the value to insert if <code>null</code> found
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2251,"* @return an <code>int</code> array, <code>null</code> if null array input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2445,ublic static Integer[] toObject(final int[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2253,"public static int[] toPrimitive(final Integer[] array, final int valueForNull) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2449,eturn EMPTY_INTEGER_OBJECT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2257,return EMPTY_INT_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2451,inal Integer[] result = new Integer[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2259,final int[] result = new int[array.length];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2453,esult[i] = new Integer(array[i]);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2261,Integer b = array[i];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2262,result[i] = (b == null ? valueForNull : b.intValue());
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2459, <p>Converts an array of primitive longs to objects.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2268,* <p>Converts an array of primitive ints to objects.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2463, @param array  a <code>long</code> array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2464," @return a <code>Long</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2272,* @param array  an <code>int</code> array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2273,"* @return an <code>Integer</code> array, <code>null</code> if null array input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2466,ublic static Long[] toObject(final long[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2275,public static Integer[] toObject(final int[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2470,eturn EMPTY_LONG_OBJECT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2279,return EMPTY_INTEGER_OBJECT_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2472,inal Long[] result = new Long[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2281,final Integer[] result = new Integer[array.length];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2474,esult[i] = new Long(array[i]);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2283,result[i] = new Integer(array[i]);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2288,// Short array converters
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2480, <p>Converts an array of primitive shorts to objects.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2291,* <p>Converts an array of object Shorts to primitives.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2484, @param array  a <code>short</code> array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2485," @return a <code>Short</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2295,"* @param array  a <code>Short</code> array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2296,"* @return a <code>byte</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2297,* @throws NullPointerException if array content is <code>null</code>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2487,ublic static Short[] toObject(final short[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2299,public static short[] toPrimitive(final Short[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2491,eturn EMPTY_SHORT_OBJECT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2303,return EMPTY_SHORT_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2493,inal Short[] result = new Short[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2305,final short[] result = new short[array.length];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2495,esult[i] = new Short(array[i]);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2307,result[i] = array[i].shortValue();
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2500,/ Boolean array converters
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2503, <p>Converts an array of object Booleans to primitives.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2313,* <p>Converts an array of object Short to primitives handling <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2507," @param array  a <code>Boolean</code> array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2508," @return a <code>boolean</code> array, <code>null</code> if null array input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2509, @throws NullPointerException if array content is <code>null</code>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2317,"* @param array  a <code>Short</code> array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2318,* @param valueForNull  the value to insert if <code>null</code> found
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2319,"* @return a <code>byte</code> array, <code>null</code> if null array input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2511,ublic static boolean[] toPrimitive(final Boolean[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2321,"public static short[] toPrimitive(final Short[] array, final short valueForNull) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2515,eturn EMPTY_BOOLEAN_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2325,return EMPTY_SHORT_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2517,inal boolean[] result = new boolean[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2327,final short[] result = new short[array.length];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2519,esult[i] = array[i].booleanValue();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2329,Short b = array[i];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2330,result[i] = (b == null ? valueForNull : b.shortValue());
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2525, <p>Converts an array of object Booleans to primitives handling <code>null</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2336,* <p>Converts an array of primitive shorts to objects.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2529," @param array  a <code>Boolean</code> array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2530, @param valueForNull  the value to insert if <code>null</code> found
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2531," @return a <code>boolean</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2340,* @param array  a <code>short</code> array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2341,"* @return a <code>Short</code> array, <code>null</code> if null array input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2533,"ublic static boolean[] toPrimitive(final Boolean[] array, final boolean valueForNull) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2343,public static Short[] toObject(final short[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2537,eturn EMPTY_BOOLEAN_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2347,return EMPTY_SHORT_OBJECT_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2539,inal boolean[] result = new boolean[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2349,final Short[] result = new Short[array.length];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2541,oolean b = array[i];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2542,esult[i] = (b == null ? valueForNull : b.booleanValue());
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2351,result[i] = new Short(array[i]);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2404,* <p>Converts an array of primitive bytes to objects.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2406,* <p>This method returns <code>null</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2408,* @param array  a <code>byte</code> array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2409,"* @return a <code>Byte</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2411,public static Byte[] toObject(final byte[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2412,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2413,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2414,} else if (array.length == 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2415,return EMPTY_BYTE_OBJECT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2417,final Byte[] result = new Byte[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2418,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2419,result[i] = new Byte(array[i]);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2421,return result;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2472,* <p>Converts an array of primitive doubles to objects.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2474,* <p>This method returns <code>null</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2476,* @param array  a <code>double</code> array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2477,"* @return a <code>Double</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2479,public static Double[] toObject(final double[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2480,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2481,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2482,} else if (array.length == 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2483,return EMPTY_DOUBLE_OBJECT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2485,final Double[] result = new Double[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2486,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2487,result[i] = new Double(array[i]);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2489,return result;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2688,/ Int array converters
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2540,* <p>Converts an array of primitive floats to objects.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2542,* <p>This method returns <code>null</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2544,* @param array  a <code>float</code> array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2545,"* @return a <code>Float</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2547,public static Float[] toObject(final float[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2548,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2549,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2550,} else if (array.length == 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2551,return EMPTY_FLOAT_OBJECT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2553,final Float[] result = new Float[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2554,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2555,result[i] = new Float(array[i]);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2557,return result;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2560,// Boolean array converters
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2691, <p>Converts an array of object Integers to primitives.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2563,* <p>Converts an array of object Booleans to primitives.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2695," @param array  a <code>Integer</code> array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2696," @return an <code>int</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2567,"* @param array  a <code>Boolean</code> array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2568,"* @return a <code>boolean</code> array, <code>null</code> if null array input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2699,ublic static int[] toPrimitive(final Integer[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2571,public static boolean[] toPrimitive(final Boolean[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2703,eturn EMPTY_INT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2575,return EMPTY_BOOLEAN_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2705,inal int[] result = new int[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2577,final boolean[] result = new boolean[array.length];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2707,esult[i] = array[i].intValue();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2579,result[i] = array[i].booleanValue();
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2713, <p>Converts an array of object Integer to primitives handling <code>null</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2585,* <p>Converts an array of object Booleans to primitives handling <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2717," @param array  a <code>Integer</code> array, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2589,"* @param array  a <code>Boolean</code> array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2719," @return an <code>int</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2591,"* @return a <code>boolean</code> array, <code>null</code> if null array input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2721,"ublic static int[] toPrimitive(final Integer[] array, final int valueForNull) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2593,"public static boolean[] toPrimitive(final Boolean[] array, final boolean valueForNull) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2725,eturn EMPTY_INT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2597,return EMPTY_BOOLEAN_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2727,inal int[] result = new int[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2599,final boolean[] result = new boolean[array.length];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2729,nteger b = array[i];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2730,esult[i] = (b == null ? valueForNull : b.intValue());
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2601,Boolean b = array[i];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2602,result[i] = (b == null ? valueForNull : b.booleanValue());
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2604,return result;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2608,* <p>Converts an array of primitive booleans to objects.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2610,* <p>This method returns <code>null</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2612,* @param array  a <code>boolean</code> array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2613,"* @return a <code>Boolean</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2615,public static Boolean[] toObject(final boolean[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2616,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2617,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2618,} else if (array.length == 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2619,return EMPTY_BOOLEAN_OBJECT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2621,final Boolean[] result = new Boolean[array.length];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2622,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2623,result[i] = (array[i] ? Boolean.TRUE : Boolean.FALSE);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2625,return result;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2630,* <p>Checks if an array of Objects is empty or <code>null</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2632,* @param array  the array to test
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2633,* @return <code>true</code> if the array is empty or <code>null</code>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2634,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2636,public static boolean isEmpty(final Object[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2637,if (array == null || array.length == 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2638,return true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2640,return false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2644,* <p>Checks if an array of primitive longs is empty or <code>null</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2646,* @param array  the array to test
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2647,* @return <code>true</code> if the array is empty or <code>null</code>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2648,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2650,public static boolean isEmpty(final long[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2651,if (array == null || array.length == 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2652,return true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2654,return false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2658,* <p>Checks if an array of primitive ints is empty or <code>null</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2660,* @param array  the array to test
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2661,* @return <code>true</code> if the array is empty or <code>null</code>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2662,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2664,public static boolean isEmpty(final int[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2665,if (array == null || array.length == 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2666,return true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2668,return false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2672,* <p>Checks if an array of primitive shorts is empty or <code>null</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2674,* @param array  the array to test
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2675,* @return <code>true</code> if the array is empty or <code>null</code>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2676,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2678,public static boolean isEmpty(final short[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2679,if (array == null || array.length == 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2680,return true;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2682,return false;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2686,* <p>Checks if an array of primitive chars is empty or <code>null</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2688,* @param array  the array to test
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2689,* @return <code>true</code> if the array is empty or <code>null</code>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2690,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2692,public static boolean isEmpty(final char[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2693,if (array == null || array.length == 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2694,return true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2732,eturn result;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2696,return false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2735,/ Primitive/Object array converters
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2738,/ Long array converters
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2741, <p>Converts an array of object Longs to primitives.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2700,* <p>Checks if an array of primitive bytes is empty or <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2743, <p>This method returns <code>null</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2745," @param array  a <code>Long</code> array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2746," @return a <code>long</code> array, <code>null</code> if null array input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2747, @throws NullPointerException if array content is <code>null</code>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2702,* @param array  the array to test
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2703,* @return <code>true</code> if the array is empty or <code>null</code>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2704,* @since 2.1
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2749,ublic static long[] toPrimitive(final Long[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2750,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2751,eturn null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2752, else if (array.length == 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2753,eturn EMPTY_LONG_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2755,inal long[] result = new long[array.length];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2756,or (int i = 0; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2757,esult[i] = array[i].longValue();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2706,public static boolean isEmpty(final byte[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2707,if (array == null || array.length == 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2708,return true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2759,eturn result;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2710,return false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2763, <p>Converts an array of object Long to primitives handling <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2765, <p>This method returns <code>null</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2767," @param array  a <code>Long</code> array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2768, @param valueForNull  the value to insert if <code>null</code> found
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2769," @return a <code>long</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2714,* <p>Checks if an array of primitive doubles is empty or <code>null</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2716,* @param array  the array to test
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2717,* @return <code>true</code> if the array is empty or <code>null</code>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2718,* @since 2.1
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2771,"ublic static long[] toPrimitive(final Long[] array, final long valueForNull) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2772,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2773,eturn null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2774, else if (array.length == 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2775,eturn EMPTY_LONG_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2777,inal long[] result = new long[array.length];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2778,or (int i = 0; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2779,ong b = array[i];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2780,esult[i] = (b == null ? valueForNull : b.longValue());
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2720,public static boolean isEmpty(final double[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2721,if (array == null || array.length == 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2722,return true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2782,eturn result;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2724,return false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2785,/ Short array converters
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2788, <p>Converts an array of object Shorts to primitives.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2728,* <p>Checks if an array of primitive floats is empty or <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2790, <p>This method returns <code>null</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2792," @param array  a <code>Short</code> array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2793," @return a <code>byte</code> array, <code>null</code> if null array input"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2794, @throws NullPointerException if array content is <code>null</code>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2730,* @param array  the array to test
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2731,* @return <code>true</code> if the array is empty or <code>null</code>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2732,* @since 2.1
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2796,ublic static short[] toPrimitive(final Short[] array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2797,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2798,eturn null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2799, else if (array.length == 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2800,eturn EMPTY_SHORT_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2802,inal short[] result = new short[array.length];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2803,or (int i = 0; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2804,esult[i] = array[i].shortValue();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2734,public static boolean isEmpty(final float[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2735,if (array == null || array.length == 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2736,return true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2806,eturn result;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2738,return false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2810, <p>Converts an array of object Short to primitives handling <code>null</code>.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2812, <p>This method returns <code>null</code> if <code>null</code> array input.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2814," @param array  a <code>Short</code> array, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2815, @param valueForNull  the value to insert if <code>null</code> found
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2816," @return a <code>byte</code> array, <code>null</code> if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2742,* <p>Checks if an array of primitive booleans is empty or <code>null</code>.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2744,* @param array  the array to test
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2745,* @return <code>true</code> if the array is empty or <code>null</code>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2746,* @since 2.1
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2818,"ublic static short[] toPrimitive(final Short[] array, final short valueForNull) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2819,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2820,eturn null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2821, else if (array.length == 0) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2822,eturn EMPTY_SHORT_ARRAY;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2824,inal short[] result = new short[array.length];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2825,or (int i = 0; i < array.length; i++) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2826,hort b = array[i];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2827,esult[i] = (b == null ? valueForNull : b.shortValue());
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2748,public static boolean isEmpty(final boolean[] array) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2749,if (array == null || array.length == 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2750,return true;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2829,eturn result;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2752,return false;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2832,/ Basic methods handling multi-dimensional arrays
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2835," <p>Outputs an array as a String, treating <code>null</code> as an empty array.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2756,* <p>Joins the elements of the provided arrays into a single new array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2757,* <p>The new array contains all of the element of the first array followed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2758,* by all of the elements from the second array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2837," <p>Multi-dimensional arrays are handled correctly, including"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2838, multi-dimensional primitive arrays.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2760,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2761,"* ArrayUtils.join(null, null)     = null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2762,"* ArrayUtils.join(array1, null)   = array1"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2763,"* ArrayUtils.join(null, array2)   = array2"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2764,"* ArrayUtils.join([], [])         = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2765,"* ArrayUtils.join([null], [null]) = [null, null]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2766,"* ArrayUtils.join([""a"", ""b"", ""c""], [""1"", ""2"", ""3""]) = [""a"", ""b"", ""c"", ""1"", ""2"", ""3""]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2767,* </pre>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2840," <p>The format is that of Java source code, for example <code>{a,b}</code>.</p>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2842," @param array  the array to get a toString for, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2843," @return a String representation of the array, '{}' if null array input"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2769,"* @param array1  the first array of values to join together, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2770,"* @param array2  the second array of values to join together, may be null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2771,"* @return The new joined array, <code>null</code> if null array inputs."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2772,*      The type of the joined array is the type of the first array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2773,* @since 2.1
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2845,ublic static String toString(final Object array) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2846,"eturn toString(array, ""{}"");"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2775,"public static Object[] join(Object[] array1, Object[] array2) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2776,if (array1 == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2777,return array2;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2778,} else if (array2 == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2779,return array1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2780,} else {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2781,"Object[] joinedArray = (Object[]) Array.newInstance(array1.getClass().getComponentType(), array1.length"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2782,+ array2.length);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2783,"System.arraycopy(array1, 0, joinedArray, 0, array1.length);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2784,"System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2785,return joinedArray;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2850, <p>Outputs an array as a String handling <code>null</code>s.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2790,* <p>Adds the element to the end of the array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2852," <p>Multi-dimensional arrays are handled correctly, including"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2853, multi-dimensional primitive arrays.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2792,* <p>The new array contains the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2793,* array plus the given element in the last position. The component type of
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2794,* the new array is  the same as that of the input array.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2855," <p>The format is that of Java source code, for example <code>{a,b}</code>.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2796,"* <p>If the input array is <code>null</code>, a new one element array is returned"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2797,*  whose component type is the same as the element.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2857," @param array  the array to get a toString for, may be <code>null</code>"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2858, @param stringIfNull  the String to return if the array is <code>null</code>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2859, @return a String representation of the array
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2861,"ublic static String toString(final Object array, final String stringIfNull) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2862,f (array == null) {
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2863,eturn stringIfNull;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2799,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2800,"* ArrayUtils.add(null, null)      = [null]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2801,"* ArrayUtils.add(null, ""a"")       = [""a""]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2802,"* ArrayUtils.add([""a""], null)     = [""a"", null]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2803,"* ArrayUtils.add([""a""], ""b"")      = [""a"", ""b""]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2804,"* ArrayUtils.add([""a"", ""b""], ""c"") = [""a"", ""b"", ""c""]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2805,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2807,"* @param array  the array to ""add"" the element to, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2808,* @param element  the object to add
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2809,* @return A new array containing the existing elements and the new element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2810,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2812,"public static Object[] add(Object[] array, Object element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2813,Object joinedArray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2814,int elementPos;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2815,if (array != null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2816,"joinedArray = Array.newInstance(array.getClass().getComponentType(), array.length + 1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2817,"System.arraycopy(array, 0, joinedArray, 0, array.length);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2818,elementPos = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2819,} else {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2820,"// null input array, use the element type"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2821,"joinedArray = Array.newInstance(element != null ? element.getClass() : Object.class, 1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2822,elementPos = 0;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2865,"eturn new ToStringBuilder(array, ToStringStyle.SIMPLE_STYLE).append(array).toString();"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2824,"Array.set(joinedArray, elementPos, element);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2825,return (Object[]) joinedArray;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2869, <p>ArrayUtils instances should NOT be constructed in standard programming.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2870," Instead, the class should be used as <code>ArrayUtils.clone(new int[] {2})</code>.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2829,* <p>Inserts the specified element at the specified position in the array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2830,* Shifts the element currently at that position (if any) and any subsequent
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2831,* elements to the right (adds one to their indices).</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2872, <p>This constructor is public to permit tools that require a JavaBean instance
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2873, to operate.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2833,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2834,* array plus the given element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2835,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2836,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2838,"* <p>If the input array is <code>null</code>, a new one element array is returned"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2839,*  whose component type is the same as the element.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2841,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2842,"* ArrayUtils.add(null, 0, null)      = [null]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2843,"* ArrayUtils.add(null, 0, ""a"")       = [""a""]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2844,"* ArrayUtils.add([""a""], 1, null)     = [""a"", null]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2845,"* ArrayUtils.add([""a""], 1, ""b"")      = [""a"", ""b""]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2846,"* ArrayUtils.add([""a"", ""b""], 3, ""c"") = [""a"", ""b"", ""c""]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2847,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2849,"* @param array  the array to add the element to, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2850,* @param index  the position of the new object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2851,* @param element  the object to add
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2852,* @return A new array containing the existing elements and the new element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2853,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2854,* (index < 0 || index > array.length).
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2875,ublic ArrayUtils() {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2856,"public static Object[] add(final Object[] array, final int index, final Object element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2857,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2858,if (index != 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2859,"throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: 0"");"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2861,"Object joinedArray = Array.newInstance(element != null ? element.getClass() : Object.class, 1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2862,"Array.set(joinedArray, 0, element);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2863,return (Object[]) joinedArray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2865,int length = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2866,if (index > length || index < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2867,"throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2869,"Object result = Array.newInstance(array.getClass().getComponentType(), length + 1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2870,"System.arraycopy(array, 0, result, 0, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2871,"Array.set(result, index, element);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2872,if (index < length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2873,"System.arraycopy(array, index, result, index + 1, length - index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,2875,return (Object[]) result;
