is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,3,mport java.util.HashMap;
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,8, Performs basic variable interpolation on a String for variables within
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,9," a Map. Variables of the form, ${var}, are supported."
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,7,* <p>Performs basic variable interpolation on a String for variables within a Map.
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,8,"* Variables of the form, ${var}, are supported.</p>"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,12,* @since 2.1
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,13,"* @version $Id: Interpolation.java,v 1.2 2004/08/15 23:18:43 scolebourne Exp $"
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,16,/ QUERY: Anyway to escape the ${..} variable so it is not interpolated?
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,18,/ TODO: Consider making these configurable?
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,17,/** The marker used to start a variable. */
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,19,/** The marker used to end a variable. */
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,23,  <p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,24,  Returns a String that is the result of having performed
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,25,"  variable interpolation on <code>templateString</code>,"
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,26,  using the value set found in <code>values</code>.
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,27,  </p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,28,  <p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,29,  The solution is compatible with all JDK versions
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,30,  where Jakarta/Commons/Lang also is supported.
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,31,  </p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,32,  <p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,33,  The expected format of <code>templateString</code> is:
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,34,<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,23,* <p>Interpolates a String to replace variables of the form <code>${...}</code>.</p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,25,* <p>This method is useful for enabling simple strings to be modified based
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,26,* on a map of data. A typical use case might be to add data from configuration
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,27,"* to an error message. This method, and this class, does not seek to replace"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,28,"* full interpolation mechanisms, for example Velocity.</p>"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,30,* <p>The expected format of <code>templateString</code> is:
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,31,* <code><pre>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,36,</pre></code>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,37,  such that the key/value pairs found in <code>values</code>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,38,  are substituted into the string at the <code>${key-name}</code> markers.
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,39,"  In the above example, <code>valuesMap</code> could have been populated as:"
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,40,<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,33,* </pre></code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,34,* such that the key/value pairs found in <code>values</code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,35,* are substituted into the string at the <code>${key-name}</code> markers.
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,36,"* In the above example, <code>valuesMap</code> could have been populated as:"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,37,* <code><pre>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,45,</pre></code>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,46,  yielding:
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,47,<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,42,* </pre></code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,43,* yielding:
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,44,* <code><pre>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,49,</pre></code>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,50,  </p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,51,  <p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,52,  The same <code>templateString</code> from the above example could be reused as:
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,53,<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,46,* </pre></code></p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,48,* <p>The same <code>templateString</code> from the above example could be reused as:
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,49,* <code><pre>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,58,</pre></code>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,59,  yielding:
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,60,<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,54,* </pre></code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,55,* yielding:
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,56,* <code><pre>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,62,</pre></code>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,63,  </p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,64,  <p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,65,  The value of <code>templateString</code> is returned in an unaltered if <code>templateString</code>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,66,"  is null, empty, or contains no marked variables that can be resolved by the key/value pairs found in"
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,67,"  <code>valuesMap</code>, or if <code>valuesMap</code> is null, empty or has no key/value pairs that can be"
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,68,  applied to the marked variables within <code>templateString</code>.
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,69,  </p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,70, @param templateString String containing any mixture of variable and non-variable
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,58,* </pre></code></p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,60,* <p>The value of <code>templateString</code> is returned in an unaltered
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,61,"* if <code>templateString</code> is null, empty, or contains no marked variables"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,62,"* that can be resolved by the key/value pairs found in <code>valuesMap</code>,"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,63,"* or if <code>valuesMap</code> is null, empty or has no key/value pairs that can be"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,64,* applied to the marked variables within <code>templateString</code>.</p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,66,"* <p>If a <code>valuesMap</code> value is null, it will be treated as """".</p>"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,68,* @param templateString  String containing any mixture of variable and non-variable
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,72, @param valuesMap Map containing the key/value pairs to be used to resolve
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,70,* @param valuesMap  Map containing the key/value pairs to be used to resolve
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,74, @return String
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,72,* @return the interpolated String
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,76,"ublic static String interpolate( String templateString, Map valuesMap ) {"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,74,"public static String interpolate(String templateString, Map valuesMap) {"
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,78,f ( valuesMap == null )
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,79,eturn templateString;
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,80,f ( templateString == null )
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,81,eturn templateString;
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,82,f ( templateString.length() < 1 )
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,83,eturn templateString;
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,84,f ( valuesMap.isEmpty() )
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,76,if (templateString == null || valuesMap == null ||
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,77,templateString.length() == 0 || valuesMap.isEmpty()) {
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,97,hile( keys.hasNext() ) {
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,98,extKey = ( String ) keys.next();
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,99,ubstitutionValue = StringUtils.defaultString( ( String ) valuesMap.get( nextKey ) );
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,90,while (keys.hasNext()) {
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,91,nextKey = (String) keys.next();
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,92,substitutionValue = StringUtils.defaultString((String) valuesMap.get(nextKey));
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,102,"eturnString = StringUtils.replace( returnString, nextValueToBeSubstituted, substitutionValue );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,95,"returnString = StringUtils.replace(returnString, nextValueToBeSubstituted, substitutionValue);"
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,109,  <p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,110,  Returns a String that is the result of having performed variable interpolation on
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,111,"  <code>templateString</code>, using the value set found in <code>values</code>,"
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,112,  repeatedly until there are no changes.
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,113,  </p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,114,  <p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,115,  The expected format of <code>templateString</code> is:
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,116,<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,101,* <p>Interpolates a String to replace variables of the form <code>${...}</code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,102,* where the replace strings may also contain variables to interpolate.</p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,104,* <p>This method is useful for enabling simple strings to be modified based
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,105,* on a map of data. A typical use case might be to add data from configuration
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,106,"* to an error message. This method, and this class, does not seek to replace"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,107,"* full interpolation mechanisms, for example Velocity.</p>"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,109,"* <p>This method calls {@link #interpolate(String, Map)} repeatedly until the"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,110,* returned string does not change. This has the effect of allowing the replace
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,111,* strings in <code>valuesMap</code> to contain variables that should also be
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,112,* interpolated.</p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,114,* <p>The expected format of <code>templateString</code> is:
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,115,* <code><pre>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,118,</pre></code>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,119,  such that the key/value pairs found in <code>values</code> are substituted into the string at the
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,120,"  <code>${key-name}</code> markers.  In the above example, <code>valuesMap</code>"
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,121,  could have been populated as:
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,122,<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,117,* </pre></code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,118,* such that the key/value pairs found in <code>values</code> are substituted into the string at the
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,119,"* <code>${key-name}</code> markers.  In the above example, <code>valuesMap</code>"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,120,* could have been populated as:
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,121,* <code><pre>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,133,</pre></code>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,134,  yielding:
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,135,<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,132,* </pre></code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,133,* yielding:
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,134,* <code><pre>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,137,</pre></code>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,138,  </p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,139,  yielding:
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,140,<code><pre>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,141,   The cow jumped over the moon.
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,142,</pre></code>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,143,  </p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,144,  <p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,145,  The value of <code>templateString</code> is returned in an unaltered form if
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,146,"  <code>templateString</code> is null, empty, or"
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,147,  contains no marked variables that can be resolved by the key/value pairs found in
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,148,"  <code>valuesMap</code>, or if <code>valuesMap</code> is null, empty or has no key/value"
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,149,  pairs that can be applied to the marked variables within <code>templateString</code>.
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,150,  </p>
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,151, @param templateString String containing any mixture of variable and non-variable
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,136,* </pre></code></p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,138,* <p>The value of <code>templateString</code> is returned in an unaltered
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,139,"* if <code>templateString</code> is null, empty, or contains no marked variables"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,140,"* that can be resolved by the key/value pairs found in <code>valuesMap</code>,"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,141,"* or if <code>valuesMap</code> is null, empty or has no key/value pairs that can be"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,142,* applied to the marked variables within <code>templateString</code>.</p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,144,"* <p>If a <code>valuesMap</code> value is null, it will be treated as """".</p>"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,146,* @param templateString  String containing any mixture of variable and non-variable
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,153, @param valuesMap Map containing the key/value pairs to be used to resolve
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,148,* @param valuesMap  Map containing the key/value pairs to be used to resolve
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,155, @return String
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,150,* @return the interpolated String
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,157,ublic static String interpolateRepeatedly(
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,158,"tring templateString,"
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,159,ap valuesMap)
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,152,"public static String interpolateRepeatedly(String templateString, Map valuesMap) {"
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,162,f ( valuesMap == null )
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,163,eturn templateString;
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,164,f ( templateString == null )
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,165,eturn templateString;
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,166,f ( templateString.length() < 1 )
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,154,if (templateString == null || valuesMap == null ||
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,155,templateString.length() == 0 || valuesMap.isEmpty()) {
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,168,f ( valuesMap.isEmpty() )
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,169,eturn templateString;
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,173,"hile( ! StringUtils.equals( currentResult, previousResult ) )"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,161,"while (!StringUtils.equals(currentResult, previousResult)) {"
False,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,176,"urrentResult = Interpolation.interpolate( previousResult, valuesMap );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,163,"currentResult = Interpolation.interpolate(previousResult, valuesMap);"
