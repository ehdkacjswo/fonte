is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,47," @version $Id: ArrayUtils.java,v 1.43 2004/03/16 01:40:57 ggregory Exp $"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,47,"* @version $Id: ArrayUtils.java,v 1.44 2004/06/06 03:53:23 bayard Exp $"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1629,// char IndexOf
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1632,* <p>Find the index of the given value in the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1634,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1636,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1637,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1638,"* @return the index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1639,*  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1641,"public static int indexOf(final char[] array, final char valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1642,"return indexOf(array, valueToFind, 0);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1646,* <p>Find the index of the given value in the array starting at the given index.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1648,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1650,* <p>A negative startIndex is treated as zero. A startIndex larger than the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1651,* length will return -1.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1653,"* @param array  the array to search through for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1654,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1655,* @param startIndex  the index to start searching at
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1656,"* @return the index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1657,*  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1659,"public static int indexOf(final char[] array, final char valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1660,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1661,return -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1663,if (startIndex < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1664,startIndex = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1666,for (int i = startIndex; i < array.length; i++) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1667,if (valueToFind == array[i]) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1668,return i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1671,return -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1675,* <p>Find the last index of the given value within the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1677,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1679,"* @param array  the array to travers backwords looking for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1680,* @param valueToFind  the object to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1681,"* @return the last index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1682,*  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1684,"public static int lastIndexOf(final char[] array, final char valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1685,"return lastIndexOf(array, valueToFind, Integer.MAX_VALUE);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1689,* <p>Find the last index of the given value in the array starting at the given index.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1691,* <p>This method returns <code>-1</code> if <code>null</code> array input.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1693,* <p>A negative startIndex will return -1. A startIndex larger than the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1694,* length will search from the end of the array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1696,"* @param array  the array to traverse for looking for the object, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1697,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1698,* @param startIndex  the start index to travers backwards from
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1699,"* @return the last index of the value within the array,"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1700,*  <code>-1</code> if not found or <code>null</code> array input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1702,"public static int lastIndexOf(final char[] array, final char valueToFind, int startIndex) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1703,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1704,return -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1706,if (startIndex < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1707,return -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1708,} else if (startIndex >= array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1709,startIndex = array.length - 1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1711,for (int i = startIndex; i >= 0; i--) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1712,if (valueToFind == array[i]) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1713,return i;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1716,return -1;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1720,* <p>Checks if the value is in the given array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1722,* <p>The method returns <code>false</code> if a <code>null</code> array is passed in.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1724,* @param array  the array to search through
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1725,* @param valueToFind  the value to find
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1726,* @return <code>true</code> if the array contains the object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1728,"public static boolean contains(final char[] array, final char valueToFind) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,1729,"return (indexOf(array, valueToFind) != -1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3222,* <p>Removes the element at the specified position from the specified array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3223,* All subsequent elements are shifted to the left (substracts one from
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3224,* their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3226,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3227,* array except the element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3228,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3229,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3231,"* <p>If the input array is <code>null</code>, an IndexOutOfBoundsException"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3232,"* will be thrown, because in that case no valid index can be specified.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3234,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3235,"* ArrayUtils.remove([""a""], 0)           = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3236,"* ArrayUtils.remove([""a"", ""b""], 0)      = [""b""]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3237,"* ArrayUtils.remove([""a"", ""b""], 1)      = [""a""]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3238,"* ArrayUtils.remove([""a"", ""b"", ""c""], 1) = [""a"", ""c""]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3239,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3241,"* @param array  the array to remove the element from, may not be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3242,* @param index  the position of the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3243,* @return A new array containing the existing elements except the element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3244,*         at the specified position.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3245,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3246,"* (index < 0 || index >= array.length), or if the array is <code>null</code>."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3247,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3249,"public static Object[] remove(final Object[] array, final int index) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3250,"return (Object[]) remove((Object) array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3254,* <p>Removes the first occurrence of the specified element from the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3255,* specified array. All subsequent elements are shifted to the left
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3256,* (substracts one from their indices). If the array doesn't contains
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3257,"* such an element, no elements are removed from the array.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3259,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3260,* array except the first occurrence of the specified element. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3261,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3262,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3264,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3265,"* ArrayUtils.removeElement(null, ""a"")            = null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3266,"* ArrayUtils.removeElement([], ""a"")              = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3267,"* ArrayUtils.removeElement([""a""], ""b"")           = [""a""]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3268,"* ArrayUtils.removeElement([""a"", ""b""], ""a"")      = [""b""]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3269,"* ArrayUtils.removeElement([""a"", ""b"", ""a""], ""a"") = [""b"", ""a""]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3270,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3272,"* @param array  the array to remove the element from, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3273,* @param element  the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3274,* @return A new array containing the existing elements except the first
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3275,*         occurrence of the specified element.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3276,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3278,"public static Object[] removeElement(final Object[] array, final Object element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3279,"int index = indexOf(array, element);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3280,if (index == -1) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3281,return clone(array);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3283,"return remove(array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3287,* <p>Removes the element at the specified position from the specified array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3288,* All subsequent elements are shifted to the left (substracts one from
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3289,* their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3291,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3292,* array except the element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3293,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3294,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3296,"* <p>If the input array is <code>null</code>, an IndexOutOfBoundsException"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3297,"* will be thrown, because in that case no valid index can be specified.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3299,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3300,"* ArrayUtils.remove([true], 0)              = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3301,"* ArrayUtils.remove([true, false], 0)       = [false]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3302,"* ArrayUtils.remove([true, false], 1)       = [true]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3303,"* ArrayUtils.remove([true, true, false], 1) = [true, false]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3304,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3306,"* @param array  the array to remove the element from, may not be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3307,* @param index  the position of the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3308,* @return A new array containing the existing elements except the element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3309,*         at the specified position.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3310,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3311,"* (index < 0 || index >= array.length), or if the array is <code>null</code>."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3312,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3314,"public static boolean[] remove(final boolean[] array, final int index) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3315,"return (boolean[]) remove((Object) array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3319,* <p>Removes the first occurrence of the specified element from the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3320,* specified array. All subsequent elements are shifted to the left
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3321,* (substracts one from their indices). If the array doesn't contains
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3322,"* such an element, no elements are removed from the array.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3324,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3325,* array except the first occurrence of the specified element. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3326,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3327,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3329,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3330,"* ArrayUtils.removeElement(null, true)                = null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3331,"* ArrayUtils.removeElement([], true)                  = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3332,"* ArrayUtils.removeElement([true], false)             = [true]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3333,"* ArrayUtils.removeElement([true, false], false)      = [true]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3334,"* ArrayUtils.removeElement([true, false, true], true) = [false, true]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3335,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3337,"* @param array  the array to remove the element from, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3338,* @param element  the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3339,* @return A new array containing the existing elements except the first
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3340,*         occurrence of the specified element.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3341,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3343,"public static boolean[] removeElement(final boolean[] array, final boolean element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3344,"int index = indexOf(array, element);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3345,if (index == -1) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3346,return clone(array);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3348,"return remove(array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3352,* <p>Removes the element at the specified position from the specified array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3353,* All subsequent elements are shifted to the left (substracts one from
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3354,* their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3356,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3357,* array except the element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3358,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3359,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3361,"* <p>If the input array is <code>null</code>, an IndexOutOfBoundsException"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3362,"* will be thrown, because in that case no valid index can be specified.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3364,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3365,"* ArrayUtils.remove([1], 0)          = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3366,"* ArrayUtils.remove([1, 0], 0)       = [0]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3367,"* ArrayUtils.remove([1, 0], 1)       = [1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3368,"* ArrayUtils.remove([1, 0, 1], 1)    = [1, 1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3369,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3371,"* @param array  the array to remove the element from, may not be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3372,* @param index  the position of the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3373,* @return A new array containing the existing elements except the element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3374,*         at the specified position.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3375,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3376,"* (index < 0 || index >= array.length), or if the array is <code>null</code>."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3377,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3379,"public static byte[] remove(final byte[] array, final int index) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3380,"return (byte[]) remove((Object) array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3384,* <p>Removes the first occurrence of the specified element from the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3385,* specified array. All subsequent elements are shifted to the left
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3386,* (substracts one from their indices). If the array doesn't contains
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3387,"* such an element, no elements are removed from the array.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3389,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3390,* array except the first occurrence of the specified element. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3391,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3392,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3394,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3395,"* ArrayUtils.removeElement(null, 1)        = null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3396,"* ArrayUtils.removeElement([], 1)          = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3397,"* ArrayUtils.removeElement([1], 0)         = [1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3398,"* ArrayUtils.removeElement([1, 0], 0)      = [1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3399,"* ArrayUtils.removeElement([1, 0, 1], 1)   = [0, 1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3400,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3402,"* @param array  the array to remove the element from, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3403,* @param element  the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3404,* @return A new array containing the existing elements except the first
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3405,*         occurrence of the specified element.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3406,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3408,"public static byte[] removeElement(final byte[] array, final byte element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3409,"int index = indexOf(array, element);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3410,if (index == -1) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3411,return clone(array);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3413,"return remove(array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3417,* <p>Removes the element at the specified position from the specified array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3418,* All subsequent elements are shifted to the left (substracts one from
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3419,* their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3421,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3422,* array except the element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3423,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3424,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3426,"* <p>If the input array is <code>null</code>, an IndexOutOfBoundsException"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3427,"* will be thrown, because in that case no valid index can be specified.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3429,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3430,"* ArrayUtils.remove(['a'], 0)           = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3431,"* ArrayUtils.remove(['a', 'b'], 0)      = ['b']"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3432,"* ArrayUtils.remove(['a', 'b'], 1)      = ['a']"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3433,"* ArrayUtils.remove(['a', 'b', 'c'], 1) = ['a', 'c']"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3434,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3436,"* @param array  the array to remove the element from, may not be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3437,* @param index  the position of the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3438,* @return A new array containing the existing elements except the element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3439,*         at the specified position.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3440,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3441,"* (index < 0 || index >= array.length), or if the array is <code>null</code>."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3442,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3444,"public static char[] remove(final char[] array, final int index) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3445,"return (char[]) remove((Object) array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3449,* <p>Removes the first occurrence of the specified element from the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3450,* specified array. All subsequent elements are shifted to the left
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3451,* (substracts one from their indices). If the array doesn't contains
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3452,"* such an element, no elements are removed from the array.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3454,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3455,* array except the first occurrence of the specified element. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3456,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3457,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3459,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3460,"* ArrayUtils.removeElement(null, 'a')            = null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3461,"* ArrayUtils.removeElement([], 'a')              = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3462,"* ArrayUtils.removeElement(['a'], 'b')           = ['a']"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3463,"* ArrayUtils.removeElement(['a', 'b'], 'a')      = ['b']"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3464,"* ArrayUtils.removeElement(['a', 'b', 'a'], 'a') = ['b', 'a']"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3465,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3467,"* @param array  the array to remove the element from, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3468,* @param element  the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3469,* @return A new array containing the existing elements except the first
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3470,*         occurrence of the specified element.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3471,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3473,"public static char[] removeElement(final char[] array, final char element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3474,"int index = indexOf(array, element);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3475,if (index == -1) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3476,return clone(array);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3478,"return remove(array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3482,* <p>Removes the element at the specified position from the specified array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3483,* All subsequent elements are shifted to the left (substracts one from
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3484,* their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3486,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3487,* array except the element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3488,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3489,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3491,"* <p>If the input array is <code>null</code>, an IndexOutOfBoundsException"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3492,"* will be thrown, because in that case no valid index can be specified.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3494,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3495,"* ArrayUtils.remove([1.1], 0)           = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3496,"* ArrayUtils.remove([2.5, 6.0], 0)      = [6.0]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3497,"* ArrayUtils.remove([2.5, 6.0], 1)      = [2.5]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3498,"* ArrayUtils.remove([2.5, 6.0, 3.8], 1) = [2.5, 3.8]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3499,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3501,"* @param array  the array to remove the element from, may not be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3502,* @param index  the position of the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3503,* @return A new array containing the existing elements except the element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3504,*         at the specified position.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3505,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3506,"* (index < 0 || index >= array.length), or if the array is <code>null</code>."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3507,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3509,"public static double[] remove(final double[] array, final int index) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3510,"return (double[]) remove((Object) array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3514,* <p>Removes the first occurrence of the specified element from the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3515,* specified array. All subsequent elements are shifted to the left
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3516,* (substracts one from their indices). If the array doesn't contains
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3517,"* such an element, no elements are removed from the array.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3519,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3520,* array except the first occurrence of the specified element. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3521,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3522,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3524,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3525,"* ArrayUtils.removeElement(null, 1.1)            = null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3526,"* ArrayUtils.removeElement([], 1.1)              = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3527,"* ArrayUtils.removeElement([1.1], 1.2)           = [1.1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3528,"* ArrayUtils.removeElement([1.1, 2.3], 1.1)      = [2.3]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3529,"* ArrayUtils.removeElement([1.1, 2.3, 1.1], 1.1) = [2.3, 1.1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3530,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3532,"* @param array  the array to remove the element from, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3533,* @param element  the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3534,* @return A new array containing the existing elements except the first
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3535,*         occurrence of the specified element.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3536,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3538,"public static double[] removeElement(final double[] array, final double element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3539,"int index = indexOf(array, element);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3540,if (index == -1) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3541,return clone(array);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3543,"return remove(array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3547,* <p>Removes the element at the specified position from the specified array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3548,* All subsequent elements are shifted to the left (substracts one from
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3549,* their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3551,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3552,* array except the element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3553,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3554,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3556,"* <p>If the input array is <code>null</code>, an IndexOutOfBoundsException"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3557,"* will be thrown, because in that case no valid index can be specified.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3559,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3560,"* ArrayUtils.remove([1.1], 0)           = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3561,"* ArrayUtils.remove([2.5, 6.0], 0)      = [6.0]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3562,"* ArrayUtils.remove([2.5, 6.0], 1)      = [2.5]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3563,"* ArrayUtils.remove([2.5, 6.0, 3.8], 1) = [2.5, 3.8]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3564,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3566,"* @param array  the array to remove the element from, may not be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3567,* @param index  the position of the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3568,* @return A new array containing the existing elements except the element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3569,*         at the specified position.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3570,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3571,"* (index < 0 || index >= array.length), or if the array is <code>null</code>."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3572,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3574,"public static float[] remove(final float[] array, final int index) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3575,"return (float[]) remove((Object) array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3579,* <p>Removes the first occurrence of the specified element from the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3580,* specified array. All subsequent elements are shifted to the left
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3581,* (substracts one from their indices). If the array doesn't contains
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3582,"* such an element, no elements are removed from the array.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3584,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3585,* array except the first occurrence of the specified element. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3586,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3587,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3589,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3590,"* ArrayUtils.removeElement(null, 1.1)            = null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3591,"* ArrayUtils.removeElement([], 1.1)              = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3592,"* ArrayUtils.removeElement([1.1], 1.2)           = [1.1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3593,"* ArrayUtils.removeElement([1.1, 2.3], 1.1)      = [2.3]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3594,"* ArrayUtils.removeElement([1.1, 2.3, 1.1], 1.1) = [2.3, 1.1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3595,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3597,"* @param array  the array to remove the element from, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3598,* @param element  the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3599,* @return A new array containing the existing elements except the first
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3600,*         occurrence of the specified element.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3601,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3603,"public static float[] removeElement(final float[] array, final float element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3604,"int index = indexOf(array, element);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3605,if (index == -1) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3606,return clone(array);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3608,"return remove(array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3612,* <p>Removes the element at the specified position from the specified array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3613,* All subsequent elements are shifted to the left (substracts one from
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3614,* their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3616,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3617,* array except the element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3618,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3619,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3621,"* <p>If the input array is <code>null</code>, an IndexOutOfBoundsException"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3622,"* will be thrown, because in that case no valid index can be specified.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3624,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3625,"* ArrayUtils.remove([1], 0)         = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3626,"* ArrayUtils.remove([2, 6], 0)      = [6]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3627,"* ArrayUtils.remove([2, 6], 1)      = [2]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3628,"* ArrayUtils.remove([2, 6, 3], 1)   = [2, 3]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3629,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3631,"* @param array  the array to remove the element from, may not be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3632,* @param index  the position of the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3633,* @return A new array containing the existing elements except the element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3634,*         at the specified position.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3635,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3636,"* (index < 0 || index >= array.length), or if the array is <code>null</code>."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3637,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3639,"public static int[] remove(final int[] array, final int index) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3640,"return (int[]) remove((Object) array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3644,* <p>Removes the first occurrence of the specified element from the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3645,* specified array. All subsequent elements are shifted to the left
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3646,* (substracts one from their indices). If the array doesn't contains
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3647,"* such an element, no elements are removed from the array.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3649,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3650,* array except the first occurrence of the specified element. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3651,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3652,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3654,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3655,"* ArrayUtils.removeElement(null, 1)      = null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3656,"* ArrayUtils.removeElement([], 1)        = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3657,"* ArrayUtils.removeElement([1], 2)       = [1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3658,"* ArrayUtils.removeElement([1, 3], 1)    = [3]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3659,"* ArrayUtils.removeElement([1, 3, 1], 1) = [3, 1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3660,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3662,"* @param array  the array to remove the element from, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3663,* @param element  the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3664,* @return A new array containing the existing elements except the first
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3665,*         occurrence of the specified element.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3666,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3668,"public static int[] removeElement(final int[] array, final int element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3669,"int index = indexOf(array, element);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3670,if (index == -1) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3671,return clone(array);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3673,"return remove(array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3677,* <p>Removes the element at the specified position from the specified array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3678,* All subsequent elements are shifted to the left (substracts one from
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3679,* their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3681,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3682,* array except the element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3683,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3684,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3686,"* <p>If the input array is <code>null</code>, an IndexOutOfBoundsException"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3687,"* will be thrown, because in that case no valid index can be specified.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3689,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3690,"* ArrayUtils.remove([1], 0)         = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3691,"* ArrayUtils.remove([2, 6], 0)      = [6]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3692,"* ArrayUtils.remove([2, 6], 1)      = [2]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3693,"* ArrayUtils.remove([2, 6, 3], 1)   = [2, 3]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3694,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3696,"* @param array  the array to remove the element from, may not be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3697,* @param index  the position of the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3698,* @return A new array containing the existing elements except the element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3699,*         at the specified position.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3700,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3701,"* (index < 0 || index >= array.length), or if the array is <code>null</code>."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3702,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3704,"public static long[] remove(final long[] array, final int index) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3705,"return (long[]) remove((Object) array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3709,* <p>Removes the first occurrence of the specified element from the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3710,* specified array. All subsequent elements are shifted to the left
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3711,* (substracts one from their indices). If the array doesn't contains
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3712,"* such an element, no elements are removed from the array.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3714,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3715,* array except the first occurrence of the specified element. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3716,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3717,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3719,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3720,"* ArrayUtils.removeElement(null, 1)      = null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3721,"* ArrayUtils.removeElement([], 1)        = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3722,"* ArrayUtils.removeElement([1], 2)       = [1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3723,"* ArrayUtils.removeElement([1, 3], 1)    = [3]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3724,"* ArrayUtils.removeElement([1, 3, 1], 1) = [3, 1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3725,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3727,"* @param array  the array to remove the element from, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3728,* @param element  the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3729,* @return A new array containing the existing elements except the first
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3730,*         occurrence of the specified element.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3731,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3733,"public static long[] removeElement(final long[] array, final long element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3734,"int index = indexOf(array, element);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3735,if (index == -1) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3736,return clone(array);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3738,"return remove(array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3742,* <p>Removes the element at the specified position from the specified array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3743,* All subsequent elements are shifted to the left (substracts one from
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3744,* their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3746,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3747,* array except the element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3748,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3749,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3751,"* <p>If the input array is <code>null</code>, an IndexOutOfBoundsException"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3752,"* will be thrown, because in that case no valid index can be specified.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3754,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3755,"* ArrayUtils.remove([1], 0)         = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3756,"* ArrayUtils.remove([2, 6], 0)      = [6]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3757,"* ArrayUtils.remove([2, 6], 1)      = [2]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3758,"* ArrayUtils.remove([2, 6, 3], 1)   = [2, 3]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3759,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3761,"* @param array  the array to remove the element from, may not be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3762,* @param index  the position of the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3763,* @return A new array containing the existing elements except the element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3764,*         at the specified position.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3765,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3766,"* (index < 0 || index >= array.length), or if the array is <code>null</code>."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3767,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3769,"public static short[] remove(final short[] array, final int index) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3770,"return (short[]) remove((Object) array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3774,* <p>Removes the first occurrence of the specified element from the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3775,* specified array. All subsequent elements are shifted to the left
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3776,* (substracts one from their indices). If the array doesn't contains
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3777,"* such an element, no elements are removed from the array.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3779,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3780,* array except the first occurrence of the specified element. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3781,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3782,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3784,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3785,"* ArrayUtils.removeElement(null, 1)      = null"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3786,"* ArrayUtils.removeElement([], 1)        = []"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3787,"* ArrayUtils.removeElement([1], 2)       = [1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3788,"* ArrayUtils.removeElement([1, 3], 1)    = [3]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3789,"* ArrayUtils.removeElement([1, 3, 1], 1) = [3, 1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3790,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3792,"* @param array  the array to remove the element from, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3793,* @param element  the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3794,* @return A new array containing the existing elements except the first
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3795,*         occurrence of the specified element.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3796,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3798,"public static short[] removeElement(final short[] array, final short element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3799,"int index = indexOf(array, element);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3800,if (index == -1) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3801,return clone(array);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3803,"return remove(array, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3807,* <p>Removes the element at the specified position from the specified array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3808,* All subsequent elements are shifted to the left (substracts one from
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3809,* their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3811,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3812,* array except the element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3813,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3814,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3816,"* <p>If the input array is <code>null</code>, an IndexOutOfBoundsException"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3817,"* will be thrown, because in that case no valid index can be specified.</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3819,"* @param array  the array to remove the element from, may not be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3820,* @param index  the position of the element to be removed
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3821,* @return A new array containing the existing elements except the element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3822,*         at the specified position.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3823,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3824,"* (index < 0 || index >= array.length), or if the array is <code>null</code>."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3825,* @since 2.1
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3827,"private static Object remove(final Object array, final int index) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3828,int length = getLength(array);
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3829,if (index < 0 || index >= length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3830,"throw new IndexOutOfBoundsException(""Index: "" + index + "", Length: "" + length);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3833,"Object result = Array.newInstance(array.getClass().getComponentType(), length - 1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3834,"System.arraycopy(array, 0, result, 0, index);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3835,if (index < length - 1) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3836,"System.arraycopy(array, index + 1, result, index, length - index - 1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3839,return result;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,17,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,19,import java.util.Arrays;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,21,import junit.framework.Test;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,22,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,23,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,24,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,27,* Tests ArrayUtils remove and removeElement methods.
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,29,* @author Maarten Coene
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,30,"* @version $Id: ArrayUtilsRemoveTest.java,v 1.1 2004/06/06 03:53:24 bayard Exp $"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,32,public class ArrayUtilsRemoveTest extends TestCase {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,33,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,34,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,37,public static Test suite() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,38,TestSuite suite = new TestSuite(ArrayUtilsRemoveTest.class);
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,39,"suite.setName(""ArrayUtils remove Tests"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,40,return suite;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,43,public void testRemoveObjectArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,44,Object[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,45,"array = ArrayUtils.remove(new Object[] {""a""}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,46,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_OBJECT_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,47,"assertEquals(Object.class, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,48,"array = ArrayUtils.remove(new Object[] {""a"", ""b""}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,49,"assertTrue(Arrays.equals(new Object[] {""b""}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,50,"assertEquals(Object.class, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,51,"array = ArrayUtils.remove(new Object[] {""a"", ""b""}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,52,"assertTrue(Arrays.equals(new Object[] {""a""}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,53,"assertEquals(Object.class, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,54,"array = ArrayUtils.remove(new Object[] {""a"", ""b"", ""c""}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,55,"assertTrue(Arrays.equals(new Object[] {""a"", ""c""}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,56,"assertEquals(Object.class, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,57,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,58,"ArrayUtils.remove(new Object[] {""a"", ""b""}, -1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,59,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,60,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,61,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,62,"ArrayUtils.remove(new Object[] {""a"", ""b""}, 2);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,63,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,64,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,65,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,66,"ArrayUtils.remove((Object[]) null, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,67,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,68,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,71,public void testRemoveBooleanArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,72,boolean[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,73,"array = ArrayUtils.remove(new boolean[] {true}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,74,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_BOOLEAN_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,75,"assertEquals(Boolean.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,76,"array = ArrayUtils.remove(new boolean[] {true, false}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,77,"assertTrue(Arrays.equals(new boolean[] {false}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,78,"assertEquals(Boolean.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,79,"array = ArrayUtils.remove(new boolean[] {true, false}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,80,"assertTrue(Arrays.equals(new boolean[] {true}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,81,"assertEquals(Boolean.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,82,"array = ArrayUtils.remove(new boolean[] {true, false, true}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,83,"assertTrue(Arrays.equals(new boolean[] {true, true}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,84,"assertEquals(Boolean.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,85,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,86,"ArrayUtils.remove(new boolean[] {true, false}, -1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,87,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,88,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,89,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,90,"ArrayUtils.remove(new boolean[] {true, false}, 2);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,91,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,92,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,93,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,94,"ArrayUtils.remove((boolean[]) null, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,95,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,96,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,99,public void testRemoveByteArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,100,byte[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,101,"array = ArrayUtils.remove(new byte[] {1}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,102,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_BYTE_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,103,"assertEquals(Byte.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,104,"array = ArrayUtils.remove(new byte[] {1, 2}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,105,"assertTrue(Arrays.equals(new byte[] {2}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,106,"assertEquals(Byte.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,107,"array = ArrayUtils.remove(new byte[] {1, 2}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,108,"assertTrue(Arrays.equals(new byte[] {1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,109,"assertEquals(Byte.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,110,"array = ArrayUtils.remove(new byte[] {1, 2, 1}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,111,"assertTrue(Arrays.equals(new byte[] {1, 1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,112,"assertEquals(Byte.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,113,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,114,"ArrayUtils.remove(new byte[] {1, 2}, -1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,115,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,116,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,117,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,118,"ArrayUtils.remove(new byte[] {1, 2}, 2);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,119,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,120,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,121,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,122,"ArrayUtils.remove((byte[]) null, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,123,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,124,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,127,public void testRemoveCharArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,128,char[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,129,"array = ArrayUtils.remove(new char[] {'a'}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,130,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_CHAR_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,131,"assertEquals(Character.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,132,"array = ArrayUtils.remove(new char[] {'a', 'b'}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,133,"assertTrue(Arrays.equals(new char[] {'b'}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,134,"assertEquals(Character.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,135,"array = ArrayUtils.remove(new char[] {'a', 'b'}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,136,"assertTrue(Arrays.equals(new char[] {'a'}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,137,"assertEquals(Character.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,138,"array = ArrayUtils.remove(new char[] {'a', 'b', 'c'}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,139,"assertTrue(Arrays.equals(new char[] {'a', 'c'}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,140,"assertEquals(Character.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,141,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,142,"ArrayUtils.remove(new char[] {'a', 'b'}, -1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,143,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,144,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,145,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,146,"ArrayUtils.remove(new char[] {'a', 'b'}, 2);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,147,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,148,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,149,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,150,"ArrayUtils.remove((char[]) null, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,151,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,152,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,155,public void testRemoveDoubleArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,156,double[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,157,"array = ArrayUtils.remove(new double[] {1}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,158,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_DOUBLE_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,159,"assertEquals(Double.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,160,"array = ArrayUtils.remove(new double[] {1, 2}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,161,"assertTrue(Arrays.equals(new double[] {2}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,162,"assertEquals(Double.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,163,"array = ArrayUtils.remove(new double[] {1, 2}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,164,"assertTrue(Arrays.equals(new double[] {1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,165,"assertEquals(Double.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,166,"array = ArrayUtils.remove(new double[] {1, 2, 1}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,167,"assertTrue(Arrays.equals(new double[] {1, 1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,168,"assertEquals(Double.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,169,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,170,"ArrayUtils.remove(new double[] {1, 2}, -1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,171,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,172,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,173,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,174,"ArrayUtils.remove(new double[] {1, 2}, 2);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,175,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,176,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,177,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,178,"ArrayUtils.remove((double[]) null, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,179,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,180,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,183,public void testRemoveFloatArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,184,float[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,185,"array = ArrayUtils.remove(new float[] {1}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,186,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_FLOAT_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,187,"assertEquals(Float.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,188,"array = ArrayUtils.remove(new float[] {1, 2}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,189,"assertTrue(Arrays.equals(new float[] {2}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,190,"assertEquals(Float.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,191,"array = ArrayUtils.remove(new float[] {1, 2}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,192,"assertTrue(Arrays.equals(new float[] {1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,193,"assertEquals(Float.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,194,"array = ArrayUtils.remove(new float[] {1, 2, 1}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,195,"assertTrue(Arrays.equals(new float[] {1, 1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,196,"assertEquals(Float.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,197,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,198,"ArrayUtils.remove(new float[] {1, 2}, -1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,199,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,200,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,201,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,202,"ArrayUtils.remove(new float[] {1, 2}, 2);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,203,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,204,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,205,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,206,"ArrayUtils.remove((float[]) null, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,207,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,208,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,211,public void testRemoveIntArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,212,int[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,213,"array = ArrayUtils.remove(new int[] {1}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,214,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_INT_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,215,"assertEquals(Integer.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,216,"array = ArrayUtils.remove(new int[] {1, 2}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,217,"assertTrue(Arrays.equals(new int[] {2}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,218,"assertEquals(Integer.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,219,"array = ArrayUtils.remove(new int[] {1, 2}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,220,"assertTrue(Arrays.equals(new int[] {1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,221,"assertEquals(Integer.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,222,"array = ArrayUtils.remove(new int[] {1, 2, 1}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,223,"assertTrue(Arrays.equals(new int[] {1, 1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,224,"assertEquals(Integer.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,225,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,226,"ArrayUtils.remove(new int[] {1, 2}, -1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,227,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,228,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,229,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,230,"ArrayUtils.remove(new int[] {1, 2}, 2);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,231,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,232,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,233,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,234,"ArrayUtils.remove((int[]) null, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,235,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,236,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,239,public void testRemoveLongArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,240,long[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,241,"array = ArrayUtils.remove(new long[] {1}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,242,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_LONG_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,243,"assertEquals(Long.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,244,"array = ArrayUtils.remove(new long[] {1, 2}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,245,"assertTrue(Arrays.equals(new long[] {2}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,246,"assertEquals(Long.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,247,"array = ArrayUtils.remove(new long[] {1, 2}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,248,"assertTrue(Arrays.equals(new long[] {1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,249,"assertEquals(Long.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,250,"array = ArrayUtils.remove(new long[] {1, 2, 1}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,251,"assertTrue(Arrays.equals(new long[] {1, 1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,252,"assertEquals(Long.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,253,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,254,"ArrayUtils.remove(new long[] {1, 2}, -1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,255,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,256,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,257,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,258,"ArrayUtils.remove(new long[] {1, 2}, 2);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,259,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,260,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,261,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,262,"ArrayUtils.remove((long[]) null, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,263,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,264,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,267,public void testRemoveShortArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,268,short[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,269,"array = ArrayUtils.remove(new short[] {1}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,270,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_SHORT_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,271,"assertEquals(Short.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,272,"array = ArrayUtils.remove(new short[] {1, 2}, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,273,"assertTrue(Arrays.equals(new short[] {2}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,274,"assertEquals(Short.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,275,"array = ArrayUtils.remove(new short[] {1, 2}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,276,"assertTrue(Arrays.equals(new short[] {1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,277,"assertEquals(Short.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,278,"array = ArrayUtils.remove(new short[] {1, 2, 1}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,279,"assertTrue(Arrays.equals(new short[] {1, 1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,280,"assertEquals(Short.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,281,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,282,"ArrayUtils.remove(new short[] {1, 2}, -1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,283,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,284,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,285,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,286,"ArrayUtils.remove(new short[] {1, 2}, 2);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,287,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,288,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,289,try {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,290,"ArrayUtils.remove((short[]) null, 0);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,291,"fail(""IndexOutOfBoundsException expected"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,292,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,295,public void testRemoveElementObjectArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,296,Object[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,297,"array = ArrayUtils.removeElement((Object[]) null, ""a"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,298,assertNull(array);
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,299,"array = ArrayUtils.removeElement(ArrayUtils.EMPTY_OBJECT_ARRAY, ""a"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,300,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_OBJECT_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,301,"assertEquals(Object.class, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,302,"array = ArrayUtils.removeElement(new Object[] {""a""}, ""a"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,303,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_OBJECT_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,304,"assertEquals(Object.class, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,305,"array = ArrayUtils.removeElement(new Object[] {""a"", ""b""}, ""a"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,306,"assertTrue(Arrays.equals(new Object[] {""b""}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,307,"assertEquals(Object.class, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,308,"array = ArrayUtils.removeElement(new Object[] {""a"", ""b"", ""a""}, ""a"");"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,309,"assertTrue(Arrays.equals(new Object[] {""b"", ""a""}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,310,"assertEquals(Object.class, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,313,public void testRemoveElementBooleanArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,314,boolean[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,315,"array = ArrayUtils.removeElement((boolean[]) null, true);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,316,assertNull(array);
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,317,"array = ArrayUtils.removeElement(ArrayUtils.EMPTY_BOOLEAN_ARRAY, true);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,318,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_BOOLEAN_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,319,"assertEquals(Boolean.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,320,"array = ArrayUtils.removeElement(new boolean[] {true}, true);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,321,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_BOOLEAN_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,322,"assertEquals(Boolean.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,323,"array = ArrayUtils.removeElement(new boolean[] {true, false}, true);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,324,"assertTrue(Arrays.equals(new boolean[] {false}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,325,"assertEquals(Boolean.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,326,"array = ArrayUtils.removeElement(new boolean[] {true, false, true}, true);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,327,"assertTrue(Arrays.equals(new boolean[] {false, true}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,328,"assertEquals(Boolean.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,331,public void testRemoveElementByteArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,332,byte[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,333,"array = ArrayUtils.removeElement((byte[]) null, (byte) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,334,assertNull(array);
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,335,"array = ArrayUtils.removeElement(ArrayUtils.EMPTY_BYTE_ARRAY, (byte) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,336,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_BYTE_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,337,"assertEquals(Byte.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,338,"array = ArrayUtils.removeElement(new byte[] {1}, (byte) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,339,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_BYTE_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,340,"assertEquals(Byte.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,341,"array = ArrayUtils.removeElement(new byte[] {1, 2}, (byte) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,342,"assertTrue(Arrays.equals(new byte[] {2}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,343,"assertEquals(Byte.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,344,"array = ArrayUtils.removeElement(new byte[] {1, 2, 1}, (byte) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,345,"assertTrue(Arrays.equals(new byte[] {2, 1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,346,"assertEquals(Byte.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,349,public void testRemoveElementCharArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,350,char[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,351,"array = ArrayUtils.removeElement((char[]) null, 'a');"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,352,assertNull(array);
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,353,"array = ArrayUtils.removeElement(ArrayUtils.EMPTY_CHAR_ARRAY, 'a');"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,354,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_CHAR_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,355,"assertEquals(Character.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,356,"array = ArrayUtils.removeElement(new char[] {'a'}, 'a');"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,357,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_CHAR_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,358,"assertEquals(Character.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,359,"array = ArrayUtils.removeElement(new char[] {'a', 'b'}, 'a');"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,360,"assertTrue(Arrays.equals(new char[] {'b'}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,361,"assertEquals(Character.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,362,"array = ArrayUtils.removeElement(new char[] {'a', 'b', 'a'}, 'a');"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,363,"assertTrue(Arrays.equals(new char[] {'b', 'a'}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,364,"assertEquals(Character.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,367,public void testRemoveElementDoubleArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,368,double[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,369,"array = ArrayUtils.removeElement((double[]) null, (double) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,370,assertNull(array);
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,371,"array = ArrayUtils.removeElement(ArrayUtils.EMPTY_DOUBLE_ARRAY, (double) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,372,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_DOUBLE_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,373,"assertEquals(Double.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,374,"array = ArrayUtils.removeElement(new double[] {1}, (double) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,375,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_DOUBLE_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,376,"assertEquals(Double.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,377,"array = ArrayUtils.removeElement(new double[] {1, 2}, (double) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,378,"assertTrue(Arrays.equals(new double[] {2}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,379,"assertEquals(Double.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,380,"array = ArrayUtils.removeElement(new double[] {1, 2, 1}, (double) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,381,"assertTrue(Arrays.equals(new double[] {2, 1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,382,"assertEquals(Double.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,385,public void testRemoveElementFloatArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,386,float[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,387,"array = ArrayUtils.removeElement((float[]) null, (float) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,388,assertNull(array);
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,389,"array = ArrayUtils.removeElement(ArrayUtils.EMPTY_FLOAT_ARRAY, (float) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,390,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_FLOAT_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,391,"assertEquals(Float.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,392,"array = ArrayUtils.removeElement(new float[] {1}, (float) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,393,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_FLOAT_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,394,"assertEquals(Float.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,395,"array = ArrayUtils.removeElement(new float[] {1, 2}, (float) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,396,"assertTrue(Arrays.equals(new float[] {2}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,397,"assertEquals(Float.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,398,"array = ArrayUtils.removeElement(new float[] {1, 2, 1}, (float) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,399,"assertTrue(Arrays.equals(new float[] {2, 1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,400,"assertEquals(Float.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,403,public void testRemoveElementIntArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,404,int[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,405,"array = ArrayUtils.removeElement((int[]) null, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,406,assertNull(array);
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,407,"array = ArrayUtils.removeElement(ArrayUtils.EMPTY_INT_ARRAY, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,408,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_INT_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,409,"assertEquals(Integer.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,410,"array = ArrayUtils.removeElement(new int[] {1}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,411,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_INT_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,412,"assertEquals(Integer.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,413,"array = ArrayUtils.removeElement(new int[] {1, 2}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,414,"assertTrue(Arrays.equals(new int[] {2}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,415,"assertEquals(Integer.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,416,"array = ArrayUtils.removeElement(new int[] {1, 2, 1}, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,417,"assertTrue(Arrays.equals(new int[] {2, 1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,418,"assertEquals(Integer.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,421,public void testRemoveElementLongArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,422,long[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,423,"array = ArrayUtils.removeElement((long[]) null, (long) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,424,assertNull(array);
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,425,"array = ArrayUtils.removeElement(ArrayUtils.EMPTY_LONG_ARRAY, (long) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,426,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_LONG_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,427,"assertEquals(Long.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,428,"array = ArrayUtils.removeElement(new long[] {1}, (long) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,429,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_LONG_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,430,"assertEquals(Long.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,431,"array = ArrayUtils.removeElement(new long[] {1, 2}, (long) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,432,"assertTrue(Arrays.equals(new long[] {2}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,433,"assertEquals(Long.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,434,"array = ArrayUtils.removeElement(new long[] {1, 2, 1}, (long) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,435,"assertTrue(Arrays.equals(new long[] {2, 1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,436,"assertEquals(Long.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,439,public void testRemoveElementShortArray() {
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,440,short[] array;
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,441,"array = ArrayUtils.removeElement((short[]) null, (short) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,442,assertNull(array);
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,443,"array = ArrayUtils.removeElement(ArrayUtils.EMPTY_SHORT_ARRAY, (short) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,444,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_SHORT_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,445,"assertEquals(Short.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,446,"array = ArrayUtils.removeElement(new short[] {1}, (short) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,447,"assertTrue(Arrays.equals(ArrayUtils.EMPTY_SHORT_ARRAY, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,448,"assertEquals(Short.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,449,"array = ArrayUtils.removeElement(new short[] {1, 2}, (short) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,450,"assertTrue(Arrays.equals(new short[] {2}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,451,"assertEquals(Short.TYPE, array.getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,452,"array = ArrayUtils.removeElement(new short[] {1, 2, 1}, (short) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,453,"assertTrue(Arrays.equals(new short[] {2, 1}, array));"
True,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java,454,"assertEquals(Short.TYPE, array.getClass().getComponentType());"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,41," @version $Id: ArrayUtilsTest.java,v 1.26 2004/02/18 23:06:19 ggregory Exp $"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,41,"* @version $Id: ArrayUtilsTest.java,v 1.27 2004/06/06 03:53:24 bayard Exp $"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1546,public void testIndexOfChar() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1547,char[] array = null;
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1548,"assertEquals(-1, ArrayUtils.indexOf(array, 'a'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1549,"array = new char[] { 'a', 'b', 'c', 'd', 'a' };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1550,"assertEquals(0, ArrayUtils.indexOf(array, 'a'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1551,"assertEquals(1, ArrayUtils.indexOf(array, 'b'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1552,"assertEquals(2, ArrayUtils.indexOf(array, 'c'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1553,"assertEquals(3, ArrayUtils.indexOf(array, 'd'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1554,"assertEquals(-1, ArrayUtils.indexOf(array, 'e'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1557,public void testIndexOfCharWithStartIndex() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1558,char[] array = null;
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1559,"assertEquals(-1, ArrayUtils.indexOf(array, 'a', 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1560,"array = new char[] { 'a', 'b', 'c', 'd', 'a' };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1561,"assertEquals(4, ArrayUtils.indexOf(array, 'a', 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1562,"assertEquals(-1, ArrayUtils.indexOf(array, 'b', 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1563,"assertEquals(2, ArrayUtils.indexOf(array, 'c', 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1564,"assertEquals(3, ArrayUtils.indexOf(array, 'd', 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1565,"assertEquals(3, ArrayUtils.indexOf(array, 'd', -1));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1566,"assertEquals(-1, ArrayUtils.indexOf(array, 'e', 0));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1567,"assertEquals(-1, ArrayUtils.indexOf(array, 'a', 6));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1570,public void testLastIndexOfChar() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1571,char[] array = null;
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1572,"assertEquals(-1, ArrayUtils.lastIndexOf(array, 'a'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1573,"array = new char[] { 'a', 'b', 'c', 'd', 'a' };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1574,"assertEquals(4, ArrayUtils.lastIndexOf(array, 'a'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1575,"assertEquals(1, ArrayUtils.lastIndexOf(array, 'b'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1576,"assertEquals(2, ArrayUtils.lastIndexOf(array, 'c'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1577,"assertEquals(3, ArrayUtils.lastIndexOf(array, 'd'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1578,"assertEquals(-1, ArrayUtils.lastIndexOf(array, 'e'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1581,public void testLastIndexOfCharWithStartIndex() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1582,char[] array = null;
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1583,"assertEquals(-1, ArrayUtils.lastIndexOf(array, 'a', 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1584,"array = new char[] { 'a', 'b', 'c', 'd', 'a' };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1585,"assertEquals(0, ArrayUtils.lastIndexOf(array, 'a', 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1586,"assertEquals(1, ArrayUtils.lastIndexOf(array, 'b', 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1587,"assertEquals(2, ArrayUtils.lastIndexOf(array, 'c', 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1588,"assertEquals(-1, ArrayUtils.lastIndexOf(array, 'd', 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1589,"assertEquals(-1, ArrayUtils.lastIndexOf(array, 'd', -1));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1590,"assertEquals(-1, ArrayUtils.lastIndexOf(array, 'e'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1591,"assertEquals(4, ArrayUtils.lastIndexOf(array, 'a', 88));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1594,public void testContainsChar() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1595,char[] array = null;
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1596,"assertEquals(false, ArrayUtils.contains(array, 'b'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1597,"array = new char[] { 'a', 'b', 'c', 'd', 'a' };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1598,"assertEquals(true, ArrayUtils.contains(array, 'a'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1599,"assertEquals(true, ArrayUtils.contains(array, 'b'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1600,"assertEquals(true, ArrayUtils.contains(array, 'c'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1601,"assertEquals(true, ArrayUtils.contains(array, 'd'));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,1602,"assertEquals(false, ArrayUtils.contains(array, 'e'));"
