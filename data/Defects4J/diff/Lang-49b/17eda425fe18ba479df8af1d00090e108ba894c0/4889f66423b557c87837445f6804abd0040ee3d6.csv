is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,45," @version $Id: ExceptionUtils.java,v 1.43 2004/10/21 01:18:33 ggregory Exp $"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,45,* @version $Id$
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,106,if (StringUtils.isNotEmpty(methodName) && !isCauseMethodName(methodName)) {
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,107,List list = getCauseMethodNameList();
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,108,if (list.add(methodName)) {
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,109,CAUSE_METHOD_NAMES = toArray(list);
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,115,* <p>Removes from the list of method names used in the search for <code>Throwable</code>
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,116,* objects.</p>
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,118,"* @param methodName  the methodName to remove from the list, <code>null</code>"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,119,*  and empty strings are ignored
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,120,* @since 2.1
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,122,public static void removeCauseMethodName(String methodName) {
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,107,ist list = new ArrayList(Arrays.asList(CAUSE_METHOD_NAMES));
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,108,ist.add(methodName);
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,109,AUSE_METHOD_NAMES = (String[]) list.toArray(new String[list.size()]);
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,124,List list = getCauseMethodNameList();
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,125,if (list.remove(methodName)) {
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,126,CAUSE_METHOD_NAMES = toArray(list);
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,132,* Returns the given list as a <code>String[]</code>.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,133,* @param list a list to transform.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,134,* @return the given list as a <code>String[]</code>.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,136,private static String[] toArray(List list) {
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,137,return (String[]) list.toArray(new String[list.size()]);
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,141,* Returns {@link #CAUSE_METHOD_NAMES} as a List.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,142,* @return {@link #CAUSE_METHOD_NAMES} as a List.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,144,private static ArrayList getCauseMethodNameList() {
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,145,return new ArrayList(Arrays.asList(CAUSE_METHOD_NAMES));
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,149,* <p>Tests if the list of method names used in the search for <code>Throwable</code>
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,150,* objects include the given name.</p>
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,152,* @param methodName  the methodName to search in the list.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,153,* @return if the list of method names used in the search for <code>Throwable</code>
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,154,*  objects include the given name.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,155,* @since 2.1
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,157,public static boolean isCauseMethodName(String methodName) {
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,158,"return ArrayUtils.indexOf(CAUSE_METHOD_NAMES, methodName) >= 0;"
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,715,eturn (String[]) list.toArray(new String[list.size()]);
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,763,return toArray(list);
