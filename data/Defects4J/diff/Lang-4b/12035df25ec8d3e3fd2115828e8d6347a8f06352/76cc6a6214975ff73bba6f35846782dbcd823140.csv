is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,86,* Translator object for escaping Json.
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,88,"* While {@link #escapeJson(String)} is the expected method of use, this"
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,89,* object allows the Json escaping functionality to be used
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,90,* as the foundation for a custom translator.
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,92,* @since 3.2
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,94,public static final CharSequenceTranslator ESCAPE_JSON =
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,95,new AggregateTranslator(
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,96,new LookupTranslator(
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,97,new String[][] {
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,102,"new LookupTranslator(EntityArrays.JAVA_CTRL_CHARS_ESCAPE()),"
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,103,"JavaUnicodeEscaper.outsideOf(32, 0x7f)"
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,230,* Translator object for unescaping escaped Json.
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,232,"* While {@link #unescapeJson(String)} is the expected method of use, this"
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,233,* object allows the Json unescaping functionality to be used
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,234,* as the foundation for a custom translator.
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,236,* @since 3.2
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,238,public static final CharSequenceTranslator UNESCAPE_JSON = UNESCAPE_JAVA;
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,406,* <p>Escapes the characters in a {@code String} using Json String rules.</p>
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,407,* <p>Escapes any values it finds into their Json String form.
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,408,"* Deals correctly with quotes and control-chars (tab, backslash, cr, ff, etc.) </p>"
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,410,* <p>So a tab becomes the characters {@code '\\'} and
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,411,* {@code 't'}.</p>
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,413,* <p>The only difference between Java strings and Json strings
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,414,"* is that in Json, forward-slash (/) is escaped.</p>"
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,416,* <p>See http://www.ietf.org/rfc/rfc4627.txt for further details. </p>
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,418,* <p>Example:
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,419,* <pre>
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,420,"* input string: He didn't say, ""Stop!"""
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,421,"* output string: He didn't say, \""Stop!\"""
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,422,* </pre>
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,423,* </p>
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,425,"* @param input  String to escape values in, may be null"
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,426,"* @return String with escaped values, {@code null} if null string input"
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,428,* @since 3.2
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,430,public static final String escapeJson(final String input) {
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,431,return ESCAPE_JSON.translate(input);
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,465,* <p>Unescapes any Json literals found in the {@code String}.</p>
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,467,"* <p>For example, it will turn a sequence of {@code '\'} and {@code 'n'}"
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,468,"* into a newline character, unless the {@code '\'} is preceded by another"
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,469,* {@code '\'}.</p>
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,471,* @see #unescapeJava(String)
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,472,"* @param input  the {@code String} to unescape, may be null"
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,473,"* @return A new unescaped {@code String}, {@code null} if null string input"
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,475,* @since 3.2
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,477,public static final String unescapeJson(final String input) {
True,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,src/main/java/org/apache/commons/lang3/StringEscapeUtils.java,478,return UNESCAPE_JSON.translate(input);
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,533,@Test
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,534,public void testEscapeJson() {
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,535,"assertEquals(null, StringEscapeUtils.escapeJson(null));"
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,536,try {
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,537,"StringEscapeUtils.ESCAPE_JSON.translate(null, null);"
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,538,fail();
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,539,} catch (final IOException ex) {
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,540,fail();
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,541,} catch (final IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,543,try {
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,544,"StringEscapeUtils.ESCAPE_JSON.translate("""", null);"
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,545,fail();
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,546,} catch (final IOException ex) {
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,547,fail();
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,548,} catch (final IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,551,"assertEquals(""He didn't say, \\\""stop!\\\"""", StringEscapeUtils.escapeJson(""He didn't say, \""stop!\""""));"
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,553,"String expected = ""\\\""foo\\\"" isn't \\\""bar\\\"". specials: \\b\\r\\n\\f\\t\\\\\\/"";"
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,554,"String input =""\""foo\"" isn't \""bar\"". specials: \b\r\n\f\t\\/"";"
True,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,src/test/java/org/apache/commons/lang3/StringEscapeUtilsTest.java,556,"assertEquals(expected, StringEscapeUtils.escapeJson(input));"
