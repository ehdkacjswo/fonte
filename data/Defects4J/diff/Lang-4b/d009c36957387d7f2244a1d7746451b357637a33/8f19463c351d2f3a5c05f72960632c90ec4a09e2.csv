is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,62, <p>Invokes a named method without parameters.</p>
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,64," <p>This method delegates the method search to {@link #getMatchingAccessibleMethod(Class, String, Class[])}.</p>"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,66, <p>This method supports calls to methods taking primitive parameters
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,67," via passing in wrapping classes. So, for example, a <code>Boolean</code> object"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,68, would match a <code>boolean</code> primitive.</p>
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,70, <p>This is a convenient wrapper for
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,71," {@link #invokeMethod(Object object,String methodName, Object[] args, Class[] parameterTypes)}."
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,72, </p>
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,74, @param object invoke method on this object
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,75, @param methodName get method with this name
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,76, @return The value returned by the invoked method
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,78, @throws NoSuchMethodException if there is no such accessible method
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,79, @throws InvocationTargetException wraps an exception thrown by the method invoked
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,80, @throws IllegalAccessException if the requested method is not accessible via reflection
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,81, @since 3.0.2
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,83,"ublic static Object invokeMethod(Object object, String methodName) throws NoSuchMethodException,"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,84,"llegalAccessException, InvocationTargetException {"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,85,"eturn invokeMethod(object, methodName, ArrayUtils.EMPTY_OBJECT_ARRAY);"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,164, <p>Invokes a method without parameters.</p>
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,166, <p>This uses reflection to invoke the method obtained from a call to
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,167, <code>getAccessibleMethod()</code>.</p>
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,169, @param object invoke method on this object
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,170, @param methodName get method with this name
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,171, @return The value returned by the invoked method
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,173, @throws NoSuchMethodException if there is no such accessible method
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,174, @throws InvocationTargetException wraps an exception thrown by the
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,175,  method invoked
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,176, @throws IllegalAccessException if the requested method is not accessible
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,177,  via reflection
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,178, @since 3.0.2
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,180,"ublic static Object invokeExactMethod(Object object, String methodName) throws NoSuchMethodException,"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,181,"llegalAccessException, InvocationTargetException {"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,182,"eturn invokeExactMethod(object, methodName, ArrayUtils.EMPTY_OBJECT_ARRAY);"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,294, <p>Invokes a named static method without parameters.</p>
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,296," <p>This method delegates the method search to {@link #getMatchingAccessibleMethod(Class, String, Class[])}.</p>"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,298, <p>This method supports calls to methods taking primitive parameters
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,299," via passing in wrapping classes. So, for example, a <code>Boolean</code> class"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,300, would match a <code>boolean</code> primitive.</p>
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,302, <p>This is a convenient wrapper for
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,303," {@link #invokeStaticMethod(Class objectClass,String methodName,Object [] args,Class[] parameterTypes)}."
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,304, </p>
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,306, @param cls invoke static method on this class
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,307, @param methodName get method with this name
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,308, @return The value returned by the invoked method
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,310, @throws NoSuchMethodException if there is no such accessible method
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,311, @throws InvocationTargetException wraps an exception thrown by the
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,312,  method invoked
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,313, @throws IllegalAccessException if the requested method is not accessible
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,314,  via reflection
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,315, @since 3.0.2
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,317,"ublic static Object invokeStaticMethod(Class<?> cls, String methodName) throws NoSuchMethodException,"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,318,"llegalAccessException, InvocationTargetException {"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,319,"eturn invokeStaticMethod(cls, methodName, ArrayUtils.EMPTY_OBJECT_ARRAY);"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,402, <p>Invokes a static method without parameters.</p>
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,404, <p>This uses reflection to invoke the method obtained from a call to
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,405," {@link #getAccessibleMethod(Class, String, Class[])}.</p>"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,407, @param cls invoke static method on this class
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,408, @param methodName get method with this name
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,409, @return The value returned by the invoked method
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,411, @throws NoSuchMethodException if there is no such accessible method
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,412, @throws InvocationTargetException wraps an exception thrown by the
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,413,  method invoked
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,414, @throws IllegalAccessException if the requested method is not accessible
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,415,  via reflection
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,416, @since 3.0.2
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,418,"ublic static Object invokeExactStaticMethod(Class<?> cls, String methodName) throws NoSuchMethodException,"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,419,"llegalAccessException, InvocationTargetException {"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,420,"eturn invokeExactStaticMethod(cls, methodName, ArrayUtils.EMPTY_OBJECT_ARRAY);"
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,164,Test
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,165,ublic void testInvokeMethodNoParam() throws Exception {
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,166,"ssertEquals(""foo()"", MethodUtils.invokeMethod(testBean, ""foo""));"
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,169,Test(expected = NoSuchMethodException.class)
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,170,ublic void testInvokeMethodNoParamFailure() throws Exception {
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,171,"ssertEquals(""oneParameter()"", MethodUtils.invokeMethod(testBean, ""oneParameter""));"
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,211,Test
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,212,ublic void testInvokeExactMethodNoParam() throws Exception {
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,213,"ssertEquals(""foo()"", MethodUtils.invokeExactMethod(testBean, ""foo""));"
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,216,Test(expected = NoSuchMethodException.class)
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,217,ublic void testInvokeExactMethodNoParamFailure() throws Exception {
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,218,"ethodUtils.invokeExactMethod(testBean, ""oneParameter"");"
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,251,Test
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,252,ublic void testInvokeStaticMethodNoParam() throws Exception {
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,253,"ssertEquals(""bar()"", MethodUtils.invokeStaticMethod(TestBean.class, ""bar""));"
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,256,Test(expected = NoSuchMethodException.class)
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,257,ublic void testInvokeStaticMethodNoParamFailure() throws Exception {
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,258,"ssertEquals(""oneParameter()"", MethodUtils.invokeStaticMethod(TestBean.class, ""oneParameter""));"
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,299,Test
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,300,ublic void testInvokeExactStaticMethodNoParam() throws Exception {
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,301,"ssertEquals(""bar()"", MethodUtils.invokeExactStaticMethod(TestBean.class, ""bar""));"
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,304,Test(expected = NoSuchMethodException.class)
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,305,ublic void testInvokeExactStaticMethodNoParamFailure() throws Exception {
False,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java,306,"ssertEquals(""oneParameterStatic()"", MethodUtils.invokeExactStaticMethod(TestBean.class, ""oneParameterStatic""));"
