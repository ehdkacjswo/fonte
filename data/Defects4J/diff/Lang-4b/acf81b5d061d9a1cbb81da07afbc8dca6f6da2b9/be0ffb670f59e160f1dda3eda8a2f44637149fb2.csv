is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,637,"hrow new UnsupportedOperationException(""The stripAccents(CharSequence) method requires at least Java 1.6 or a Sun JVM"");"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,637,"throw new UnsupportedOperationException(""The stripAccents(CharSequence) method requires at least """
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,638,"+ ""Java 1.6 or a Sun JVM"");"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,655, @param text
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,657,* @param text the text to be processed
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,658,* @return the processed string
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,659,* @throws IllegalAccessException may be thrown by a reflection call
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,660,* @throws InvocationTargetException if a reflection call throws an exception
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,661,* @throws IllegalStateException if the {@code Normalizer} class is not available
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,657,"rivate static String removeAccentsJava6(CharSequence text) throws IllegalArgumentException, IllegalAccessException, InvocationTargetException {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,663,private static String removeAccentsJava6(CharSequence text)
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,664,"throws IllegalAccessException, InvocationTargetException {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,681,* @param text the text to be processed
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,682,* @return the processed string
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,683,* @throws IllegalAccessException may be thrown by a reflection call
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,684,* @throws InvocationTargetException if a reflection call throws an exception
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,685,* @throws IllegalStateException if the {@code Normalizer} class is not available
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,674,"rivate static String removeAccentsSUN(CharSequence text) throws IllegalArgumentException, IllegalAccessException, InvocationTargetException {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,687,private static String removeAccentsSUN(CharSequence text)
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,688,"throws IllegalAccessException, InvocationTargetException {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,702,"lass<?> normalizerFormClass = Thread.currentThread().getContextClassLoader().loadClass(""java.text.Normalizer$Form"");//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,716,Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader()
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,717,".loadClass(""java.text.Normalizer$Form"");//$NON-NLS-1$"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,704,"lass<?> normalizerClass = Thread.currentThread().getContextClassLoader().loadClass(""java.text.Normalizer"");//$NON-NLS-1$"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,705,"ava6NormalizeMethod = normalizerClass.getMethod(""normalize"", new Class[] {CharSequence.class, normalizerFormClass});//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,719,Class<?> normalizerClass = Thread.currentThread().getContextClassLoader()
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,720,".loadClass(""java.text.Normalizer"");//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,721,"java6NormalizeMethod = normalizerClass.getMethod(""normalize"","
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,722,"new Class[] {CharSequence.class, normalizerFormClass});//$NON-NLS-1$"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,719,"lass<?> normalizerClass = Thread.currentThread().getContextClassLoader().loadClass(""sun.text.Normalizer"");//$NON-NLS-1$"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,720,"unDecomposeMethod = normalizerClass.getMethod(""decompose"", new Class[] {String.class, Boolean.TYPE, Integer.TYPE});//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,736,Class<?> normalizerClass = Thread.currentThread().getContextClassLoader()
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,737,".loadClass(""sun.text.Normalizer"");//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,738,"sunDecomposeMethod = normalizerClass.getMethod(""decompose"","
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,739,"new Class[] {String.class, Boolean.TYPE, Integer.TYPE});//$NON-NLS-1$"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5827," @since 3.0 Changed signature from indexOfDifference(String, String) to indexOfDifference(CharSequence, CharSequence)"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5846,"* @since 3.0 Changed signature from indexOfDifference(String, String) to"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5847,"* indexOfDifference(CharSequence, CharSequence)"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6026," @since 3.0 Changed signature from getLevenshteinDistance(String, String) to getLevenshteinDistance(CharSequence, CharSequence)"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6046,"* @since 3.0 Changed signature from getLevenshteinDistance(String, String) to"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6047,"* getLevenshteinDistance(CharSequence, CharSequence)"
