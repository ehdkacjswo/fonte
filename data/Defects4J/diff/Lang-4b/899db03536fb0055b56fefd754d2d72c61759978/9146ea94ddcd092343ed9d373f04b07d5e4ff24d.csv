is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,96, <code>StringUtils</code> (except for deprecated methods).</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,96,* <code>StringUtils</code>.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,124,//@Immutable
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,263, <p>Removes control characters (char &lt;= 32) from both
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,264," ends of this String, handling <code>null</code> by returning"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,265," an empty String ("""").</p>"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,267, <pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,268," StringUtils.clean(null)          = """""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,269," StringUtils.clean("""")            = """""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,270," StringUtils.clean(""abc"")         = ""abc"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,271," StringUtils.clean(""    abc    "") = ""abc"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,272," StringUtils.clean(""     "")       = """""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,273, </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,275, @see java.lang.String#trim()
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,276," @param str  the String to clean, may be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,277," @return the trimmed text, never <code>null</code>"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,278, @deprecated Use the clearer named {@link #trimToEmpty(String)}.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,279,             Method will be removed in Commons Lang 3.0.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,281,ublic static String clean(String str) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,282,eturn str == null ? EMPTY : str.trim();
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2038, <p>Gets the String that is nested in between two instances of the
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2039, same String.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2041, <p>A <code>null</code> input String returns <code>null</code>.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2042, A <code>null</code> tag returns <code>null</code>.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2044, <pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2045," StringUtils.getNestedString(null, *)            = null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2046," StringUtils.getNestedString("""", """")             = """""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2047," StringUtils.getNestedString("""", ""tag"")          = null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2048," StringUtils.getNestedString(""tagabctag"", null)  = null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2049," StringUtils.getNestedString(""tagabctag"", """")    = """""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2050," StringUtils.getNestedString(""tagabctag"", ""tag"") = ""abc"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2051, </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2053," @param str  the String containing nested-string, may be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2054," @param tag  the String before and after nested-string, may be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2055," @return the nested String, <code>null</code> if no match"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2056," @deprecated Use the better named {@link #substringBetween(String, String)}."
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2057,             Method will be removed in Commons Lang 3.0.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2059,"ublic static String getNestedString(String str, String tag) {"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2060,"eturn substringBetween(str, tag, tag);"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2064, <p>Gets the String that is nested in between two Strings.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2065, Only the first match is returned.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2067, <p>A <code>null</code> input String returns <code>null</code>.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2068, A <code>null</code> open/close returns <code>null</code> (no match).
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2069," An empty ("""") open/close returns an empty string.</p>"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2071, <pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2072," StringUtils.getNestedString(null, *, *)          = null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2073," StringUtils.getNestedString("""", """", """")          = """""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2074," StringUtils.getNestedString("""", """", ""tag"")       = null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2075," StringUtils.getNestedString("""", ""tag"", ""tag"")    = null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2076," StringUtils.getNestedString(""yabcz"", null, null) = null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2077," StringUtils.getNestedString(""yabcz"", """", """")     = """""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2078," StringUtils.getNestedString(""yabcz"", ""y"", ""z"")   = ""abc"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2079," StringUtils.getNestedString(""yabczyabcz"", ""y"", ""z"")   = ""abc"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2080, </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2082," @param str  the String containing nested-string, may be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2083," @param open  the String before nested-string, may be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2084," @param close  the String after nested-string, may be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2085," @return the nested String, <code>null</code> if no match"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2086," @deprecated Use the better named {@link #substringBetween(String, String, String)}."
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2087,             Method will be removed in Commons Lang 3.0.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2089,"ublic static String getNestedString(String str, String open, String close) {"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2090,"eturn substringBetween(str, open, close);"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2800, <p>Concatenates elements of an array into a single String.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2801, Null objects or empty strings within the array are represented by
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2802, empty strings.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2804, <pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2805, StringUtils.concatenate(null)            = null
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2806," StringUtils.concatenate([])              = """""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2807," StringUtils.concatenate([null])          = """""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2808," StringUtils.concatenate([""a"", ""b"", ""c""]) = ""abc"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2809," StringUtils.concatenate([null, """", ""a""]) = ""a"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2810, </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2812," @param array  the array of values to concatenate, may be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2813," @return the concatenated String, <code>null</code> if null array input"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2814, @deprecated Use the better named {@link #join(Object[])} instead.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2815,             Method will be removed in Commons Lang 3.0.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2817,ublic static String concatenate(Object[] array) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2818,"eturn join(array, null);"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3148, <p>Deletes all 'space' characters from a String as defined by
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3149, {@link Character#isSpace(char)}.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3151, <p>This is the only StringUtils method that uses the
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3152, <code>isSpace</code> definition. You are advised to use
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3153, {@link #deleteWhitespace(String)} instead as whitespace is much
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3154, better localized.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3156, <pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3157, StringUtils.deleteSpaces(null)           = null
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3158," StringUtils.deleteSpaces("""")             = """""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3159," StringUtils.deleteSpaces(""abc"")          = ""abc"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3160," StringUtils.deleteSpaces("" \t  abc \n "") = ""abc"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3161," StringUtils.deleteSpaces(""ab  c"")        = ""abc"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3162," StringUtils.deleteSpaces(""a\nb\tc     "") = ""abc"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3163, </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3165," <p>Spaces are defined as <code>{' ', '\t', '\r', '\n', '\b'}</code>"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3166, in line with the deprecated <code>isSpace</code> method.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3168," @param str  the String to delete spaces from, may be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3169," @return the String without 'spaces', <code>null</code> if null String input"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3170, @deprecated Use the better localized {@link #deleteWhitespace(String)}.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3171,             Method will be removed in Commons Lang 3.0.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3173,ublic static String deleteSpaces(String str) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3174,f (str == null) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3175,eturn null;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3177,"eturn CharSetUtils.delete(str, "" \t\r\n\b"");"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3892, <p>Overlays part of a String with another String.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3894, <pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3895," StringUtils.overlayString(null, *, *, *)           = NullPointerException"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3896," StringUtils.overlayString(*, null, *, *)           = NullPointerException"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3897," StringUtils.overlayString("""", ""abc"", 0, 0)         = ""abc"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3898," StringUtils.overlayString(""abcdef"", null, 2, 4)    = ""abef"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3899," StringUtils.overlayString(""abcdef"", """", 2, 4)      = ""abef"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3900," StringUtils.overlayString(""abcdef"", ""zzzz"", 2, 4)  = ""abzzzzef"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3901," StringUtils.overlayString(""abcdef"", ""zzzz"", 4, 2)  = ""abcdzzzzcdef"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3902," StringUtils.overlayString(""abcdef"", ""zzzz"", -1, 4) = IndexOutOfBoundsException"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3903," StringUtils.overlayString(""abcdef"", ""zzzz"", 2, 8)  = IndexOutOfBoundsException"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3904, </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3906," @param text  the String to do overlaying in, may be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3907," @param overlay  the String to overlay, may be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3908," @param start  the position to start overlaying at, must be valid"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3909," @param end  the position to stop overlaying before, must be valid"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3910," @return overlayed String, <code>null</code> if null String input"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3911, @throws NullPointerException if text or overlay is null
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3912, @throws IndexOutOfBoundsException if either position is invalid
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3913," @deprecated Use better named {@link #overlay(String, String, int, int)} instead."
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3914,             Method will be removed in Commons Lang 3.0.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3916,"ublic static String overlayString(String text, String overlay, int start, int end) {"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3917,eturn new StringBuffer(start + overlay.length() + text.length() - end + 1)
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3918,"append(text.substring(0, start))"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3919,append(overlay)
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3920,append(text.substring(end))
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3921,toString();
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4075, <p>Remove any &quot;\n&quot; if and only if it is at the end
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4076, of the supplied String.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4078," @param str  the String to chomp from, must not be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4079, @return String without chomped ending
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4080, @throws NullPointerException if str is <code>null</code>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4081, @deprecated Use {@link #chomp(String)} instead.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4082,             Method will be removed in Commons Lang 3.0.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4084,ublic static String chompLast(String str) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4085,"eturn chompLast(str, ""\n"");"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4089, <p>Remove a value if and only if the String ends with that value.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4091," @param str  the String to chomp from, must not be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4092," @param sep  the String to chomp, must not be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4093, @return String without chomped ending
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4094, @throws NullPointerException if str or sep is <code>null</code>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4095," @deprecated Use {@link #chomp(String,String)} instead."
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4096,             Method will be removed in Commons Lang 3.0.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4098,"ublic static String chompLast(String str, String sep) {"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4099,f (str.length() == 0) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4100,eturn str;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4102,tring sub = str.substring(str.length() - sep.length());
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4103,f (sep.equals(sub)) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4104,"eturn str.substring(0, str.length() - sep.length());"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4106,eturn str;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4110," <p>Remove everything and return the last value of a supplied String, and"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4111, everything after it from a String.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4113," @param str  the String to chomp from, must not be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4114," @param sep  the String to chomp, must not be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4115, @return String chomped
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4116, @throws NullPointerException if str or sep is <code>null</code>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4117," @deprecated Use {@link #substringAfterLast(String, String)} instead"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4118,             (although this doesn't include the separator)
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4119,             Method will be removed in Commons Lang 3.0.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4121,"ublic static String getChomp(String str, String sep) {"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4122,nt idx = str.lastIndexOf(sep);
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4123,f (idx == str.length() - sep.length()) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4124,eturn sep;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4125, else if (idx != -1) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4126,eturn str.substring(idx);
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4127, else {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4128,eturn EMPTY;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4133," <p>Remove the first value of a supplied String, and everything before it"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4134, from a String.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4136," @param str  the String to chomp from, must not be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4137," @param sep  the String to chomp, must not be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4138, @return String without chomped beginning
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4139, @throws NullPointerException if str or sep is <code>null</code>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4140," @deprecated Use {@link #substringAfter(String,String)} instead."
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4141,             Method will be removed in Commons Lang 3.0.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4143,"ublic static String prechomp(String str, String sep) {"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4144,nt idx = str.indexOf(sep);
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4145,f (idx == -1) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4146,eturn str;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4148,eturn str.substring(idx + sep.length());
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4152, <p>Remove and return everything before the first value of a
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4153, supplied String from another String.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4155," @param str  the String to chomp from, must not be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4156," @param sep  the String to chomp, must not be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4157, @return String prechomped
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4158, @throws NullPointerException if str or sep is <code>null</code>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4159," @deprecated Use {@link #substringBefore(String,String)} instead"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4160,             (although this doesn't include the separator).
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4161,             Method will be removed in Commons Lang 3.0.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4163,"ublic static String getPrechomp(String str, String sep) {"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4164,nt idx = str.indexOf(sep);
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4165,f (idx == -1) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4166,eturn EMPTY;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4168,"eturn str.substring(0, idx + sep.length());"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4216, <p>Removes <code>\n</code> from end of a String if it's there.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4217," If a <code>\r</code> precedes it, then remove that too.</p>"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4219," @param str  the String to chop a newline from, must not be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4220, @return String without newline
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4221, @throws NullPointerException if str is <code>null</code>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4222, @deprecated Use {@link #chomp(String)} instead.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4223,             Method will be removed in Commons Lang 3.0.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4225,ublic static String chopNewline(String str) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4226,nt lastIdx = str.length() - 1;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4227,f (lastIdx <= 0) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4228,eturn EMPTY;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4230,har last = str.charAt(lastIdx);
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4231,f (last == CharUtils.LF) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4232,f (str.charAt(lastIdx - 1) == CharUtils.CR) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4233,astIdx--;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4235, else {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4236,astIdx++;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4238,"eturn str.substring(0, lastIdx);"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4244, <p>Escapes any values it finds into their String form.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4246, <p>So a tab becomes the characters <code>'\\'</code> and
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4247, <code>'t'</code>.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4249," <p>As of Lang 2.0, this calls {@link StringEscapeUtils#escapeJava(String)}"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4250, behind the scenes.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4251, </p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4252, @see StringEscapeUtils#escapeJava(java.lang.String)
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4253, @param str String to escape values in
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4254, @return String with escaped values
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4255, @throws NullPointerException if str is <code>null</code>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4256, @deprecated Use {@link StringEscapeUtils#escapeJava(String)}
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4257,             This method will be removed in Commons Lang 3.0
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4259,ublic static String escape(String str) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4260,eturn StringEscapeUtils.escapeJava(str);
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4839, <p>Capitalizes a String changing the first letter to title case as
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4840, per {@link Character#toTitleCase(char)}. No other letters are changed.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4842," @param str  the String to capitalize, may be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4843," @return the capitalized String, <code>null</code> if null String input"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4844, @deprecated Use the standardly named {@link #capitalize(String)}.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4845,             Method will be removed in Commons Lang 3.0.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4847,ublic static String capitalise(String str) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4848,eturn capitalize(str);
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4883, <p>Uncapitalizes a String changing the first letter to title case as
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4884, per {@link Character#toLowerCase(char)}. No other letters are changed.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4886," @param str  the String to uncapitalize, may be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4887," @return the uncapitalized String, <code>null</code> if null String input"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4888, @deprecated Use the standardly named {@link #uncapitalize(String)}.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4889,             Method will be removed in Commons Lang 3.0.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4891,ublic static String uncapitalise(String str) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4892,eturn uncapitalize(str);
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4945, <p>Capitalizes all the whitespace separated words in a String.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4946, Only the first letter of each word is changed.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4948, <p>Whitespace is defined by {@link Character#isWhitespace(char)}.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4949, A <code>null</code> input String returns <code>null</code>.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4951," @param str  the String to capitalize, may be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4952," @return capitalized String, <code>null</code> if null String input"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4953, @deprecated Use the relocated {@link WordUtils#capitalize(String)}.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4954,             Method will be removed in Commons Lang 3.0.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4956,ublic static String capitaliseAllWords(String str) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,4957,eturn WordUtils.capitalize(str);
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5386, <p>Reverses a String that is delimited by a specific character.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5388, <p>The Strings between the delimiters are not reversed.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5389, Thus java.lang.String becomes String.lang.java (if the delimiter
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5390," is <code>"".""</code>).</p>"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5392, <pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5393," StringUtils.reverseDelimitedString(null, *)       = null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5394," StringUtils.reverseDelimitedString("""",*)          = """""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5395," StringUtils.reverseDelimitedString(""a.b.c"", null) = ""a.b.c"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5396," StringUtils.reverseDelimitedString(""a.b.c"", ""."")  = ""c.b.a"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5397, </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5399," @param str  the String to reverse, may be null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5400," @param separatorChars  the separator characters to use, null treated as whitespace"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5401," @return the reversed String, <code>null</code> if null String input"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5402," @deprecated Use {@link #reverseDelimited(String, char)} instead."
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5403,      This method is broken as the join doesn't know which char to use.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5404,      Method will be removed in Commons Lang 3.0.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5407,"ublic static String reverseDelimitedString(String str, String separatorChars) {"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5408,f (str == null) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5409,eturn null;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5411,"/ could implement manually, but simple way is to reuse other,"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5412,"/ probably slower, methods."
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5413,"tring[] strs = split(str, separatorChars);"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5414,rrayUtils.reverse(strs);
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5415,f (separatorChars == null) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5416,"eturn join(strs, ' ');"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,5418,"eturn join(strs, separatorChars);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,137,"ssertEquals(null, StringUtils.uncapitalise(null));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,140,"ssertEquals(""capitalise(String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,141,"OO_CAP, StringUtils.capitalise(FOO_UNCAP) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,142,"ssertEquals(""capitalise(empty-string) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,143,""", StringUtils.capitalise("""") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,144,"ssertEquals(""capitalise(single-char-string) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,145,"X"", StringUtils.capitalise(""x"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,146,"ssertEquals(""capitalize(String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,147,"OO_CAP, StringUtils.capitalize(FOO_UNCAP) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,152,"ssertEquals(""uncapitalise(String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,153,"OO_UNCAP, StringUtils.uncapitalise(FOO_CAP) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,154,"ssertEquals(""uncapitalise(empty-string) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,155,""", StringUtils.uncapitalise("""") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,156,"ssertEquals(""uncapitalise(single-char-string) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,157,"x"", StringUtils.uncapitalise(""X"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,166,"ssertEquals(""uncapitalise(capitalise(String)) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,167,"ENTENCE_UNCAP, StringUtils.uncapitalise(StringUtils.capitalise(SENTENCE_UNCAP)) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,168,"ssertEquals(""capitalise(uncapitalise(String)) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,169,"ENTENCE_CAP, StringUtils.capitalise(StringUtils.uncapitalise(SENTENCE_CAP)) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,176,"ssertEquals(""uncapitalise(capitalise(String)) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,177,"OO_UNCAP, StringUtils.uncapitalise(StringUtils.capitalise(FOO_UNCAP)) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,178,"ssertEquals(""capitalise(uncapitalise(String)) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,179,"OO_CAP, StringUtils.capitalise(StringUtils.uncapitalise(FOO_CAP)) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,317,ublic void testDeprecatedConcatenate_Objectarray() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,318,"ssertEquals(null, StringUtils.concatenate(null));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,319,"ssertEquals("""", StringUtils.concatenate(EMPTY_ARRAY_LIST));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,320,"ssertEquals("""", StringUtils.concatenate(NULL_ARRAY_LIST));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,321,"ssertEquals(""foo"", StringUtils.concatenate(MIXED_ARRAY_LIST));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,322,"ssertEquals(""foo2"", StringUtils.concatenate(MIXED_TYPE_LIST));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,453,"tring[] splitOnNullResults = StringUtils.splitByWholeSeparator( ""ab   de fg"", null ) ;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,422,"String[] splitOnNullResults = StringUtils.splitByWholeSeparator( stringToSplitOnNulls, null ) ;"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,961,ublic void testDeprecatedDeleteSpace_String() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,962,"ssertEquals(null, StringUtils.deleteSpaces(null));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,963,"ssertEquals("""", StringUtils.deleteSpaces(""""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,964,"ssertEquals("""", StringUtils.deleteSpaces(""    \t\t\n\n   ""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,965,"ssertEquals(""test"", StringUtils.deleteSpaces(""t  \t\ne\rs\n\n   \tt""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1156,ublic void testDeprecatedOverlayString_StringStringIntInt() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1157,"ssertEquals(""overlayString(String, String, int, int) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1158,"foo foor baz"", StringUtils.overlayString(SENTENCE_UNCAP, FOO_UNCAP, 4, 6) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1159,"ssertEquals(""abef"", StringUtils.overlayString(""abcdef"", """", 2, 4));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1160,"ssertEquals(""abzzzzef"", StringUtils.overlayString(""abcdef"", ""zzzz"", 2, 4));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1161,"ssertEquals(""abcdzzzzcdef"", StringUtils.overlayString(""abcdef"", ""zzzz"", 4, 2));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1162,ry {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1163,"tringUtils.overlayString(null, ""zzzz"", 2, 4);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1164,ail();
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1165, catch (NullPointerException ex) {}
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1166,ry {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1167,"tringUtils.overlayString(""abcdef"", null, 2, 4);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1168,ail();
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1169, catch (NullPointerException ex) {}
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1170,ry {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1171,"tringUtils.overlayString(""abcdef"", ""zzzz"", -1, 4);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1172,ail();
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1173, catch (IndexOutOfBoundsException ex) {}
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1174,ry {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1175,"tringUtils.overlayString(""abcdef"", ""zzzz"", 2, 8);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1176,ail();
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1177, catch (IndexOutOfBoundsException ex) {}
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1219,ublic void testDeprecatedChompFunctions() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1220,"ssertEquals(""chompLast(String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1221,"OO_UNCAP, StringUtils.chompLast(FOO_UNCAP + ""\n"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1223,"ssertEquals(""chompLast(\""\"") failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1224,""", StringUtils.chompLast("""") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1225,"ssertEquals(""chompLast(\""test\"", \""test\"") failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1226,"test"", StringUtils.chompLast(""test"", ""tst"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1228,"ssertEquals(""getChomp(String, String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1229,"\n"" + FOO_UNCAP, StringUtils.getChomp(FOO_UNCAP + ""\n"" + FOO_UNCAP, ""\n"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1230,"ssertEquals(""getChomp(String, String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1231,"OO_CAP, StringUtils.getChomp(FOO_CAP+FOO_CAP, FOO_CAP));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1232,"ssertEquals(""getChomp(String, String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1233,""", StringUtils.getChomp(FOO_UNCAP, FOO_CAP));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1235,"ssertEquals(""prechomp(String, String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1236,"OO_UNCAP, StringUtils.prechomp(FOO_UNCAP + ""\n"" + FOO_UNCAP, ""\n"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1237,"ssertEquals(""prechomp(String, String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1238,"OO_UNCAP, StringUtils.prechomp(FOO_UNCAP, FOO_CAP));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1240,"ssertEquals(""getPrechomp(String, String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1241,"OO_UNCAP + ""\n"", StringUtils.getPrechomp(FOO_UNCAP + ""\n"" + FOO_UNCAP, ""\n"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1242,"ssertEquals(""getPrechomp(String, String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1243,""", StringUtils.getPrechomp(FOO_CAP, FOO_UNCAP));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1245,"ssertEquals(""chopNewline(String, String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1246,"OO_UNCAP, StringUtils.chopNewline(FOO_UNCAP + ""\r\n"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1330,ublic void testChopNewLine() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1332,tring[][] newLineCases = {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1333," FOO_UNCAP + ""\r\n"", FOO_UNCAP } ,"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1334," FOO_UNCAP + ""\n"" , FOO_UNCAP } ,"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1335," FOO_UNCAP + ""\r"", FOO_UNCAP + ""\r"" },"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1336," FOO_UNCAP, FOO_UNCAP },"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1337," FOO_UNCAP + ""\n"" + FOO_UNCAP , FOO_UNCAP + ""\n"" + FOO_UNCAP },"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1338," FOO_UNCAP + ""\n\n"", FOO_UNCAP + ""\n""},"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1339," ""\n"", """" },"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1341," ""\r\n"", """" }"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1344,or (int i = 0; i < newLineCases.length; i++) {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1345,tring original = newLineCases[i][0];
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1346,tring expectedResult = newLineCases[i][1];
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1347,"ssertEquals(""chopNewline(String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1348,"xpectedResult, StringUtils.chopNewline(original));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1491,ublic void testDeprecatedReverseDelimitedString_StringString() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1492,"ssertEquals(null, StringUtils.reverseDelimitedString(null, null) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1493,"ssertEquals("""", StringUtils.reverseDelimitedString("""", null) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1494,"ssertEquals("""", StringUtils.reverseDelimitedString("""", ""."") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1495,"ssertEquals(""a.b.c"", StringUtils.reverseDelimitedString(""a.b.c"", null) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1496,"ssertEquals(""c b a"", StringUtils.reverseDelimitedString(""a b c"", null) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1497,"ssertEquals(""c.b.a"", StringUtils.reverseDelimitedString(""a.b.c"", ""."") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1521,ublic void testDeprecatedEscapeFunctions_String() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1522,"ssertEquals("""", StringUtils.escape("""") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1523,"ssertEquals(""abc"", StringUtils.escape(""abc"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1524,"ssertEquals(""\\t"", StringUtils.escape(""\t"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1525,"ssertEquals(""\\\\"", StringUtils.escape(""\\"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1526,"ssertEquals(""\\\\\\b\\t\\r"", StringUtils.escape(""\\\b\t\r"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1527,"ssertEquals(""\\u1234"", StringUtils.escape(""\u1234"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1528,"ssertEquals(""\\u0234"", StringUtils.escape(""\u0234"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1529,"ssertEquals(""\\u00FD"", StringUtils.escape(""\u00fd"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1415,"@SuppressWarnings(""unused"")"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1429,"@SuppressWarnings(""unused"")"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,1436,"@SuppressWarnings(""unused"")"
