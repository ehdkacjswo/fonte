is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,41,* <p>
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,42,* Using reflection to access (private) fields circumvents any synchronization protection guarding access to these
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,43,"* fields. If a toString method cannot safely read a field, you should exclude it from the toString method, or use"
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,44,* synchronization consistent with the class' lock management around the invocation of the method. Take special care to
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,45,"* exclude non-thread-safe collection classes, because these classes may throw ConcurrentModificationException if"
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,46,* modified while the toString method is executing.
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,47,* </p>
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,49,   return ReflectionToStringBuilder.toString(this);
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,50, }</pre>
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,53,*     return ReflectionToStringBuilder.toString(this);
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,55,* </pre>
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,59," System.out.println(""An object: "" + ReflectionToStringBuilder.toString(anObject));</pre>"
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,60,* System.out.println(&quot;An object: &quot; + ReflectionToStringBuilder.toString(anObject));
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,61,* </pre>
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,71," For example, this method does <i>not</i> include the <code>password</code> field in the returned"
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,72, <code>String</code>:
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,70,"* For example, this method does <i>not</i> include the <code>password</code> field in the returned <code>String</code>:"
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,79,"             return super.accept(f) && !f.getName().equals(""password"");"
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,76,*             return super.accept(f) &amp;&amp; !f.getName().equals(&quot;password&quot;);
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,82, }</pre>
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,80,* </pre>
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,87, The exact format of the <code>toString</code> is determined by the {@link ToStringStyle} passed into the
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,88, constructor.
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,82,* The exact format of the <code>toString</code> is determined by the {@link ToStringStyle} passed into the constructor.
