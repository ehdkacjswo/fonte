is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,18,package org.apache.commons.lang3.event;
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,20,import java.io.Serializable;
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,21,import java.util.EventListener;
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,22,import java.util.EventObject;
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,23,import java.util.Iterator;
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,24,import java.util.concurrent.CopyOnWriteArrayList;
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,26,import org.apache.commons.lang3.Validate;
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,29,* <p>
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,30,* The AbstractEventSupport class provides an abstract base class framework for
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,31,* managing {@link EventListener} objects and for firing {@link EventObject}s to
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,32,"* those listeners. The class provides the ability to register a ""source"" object"
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,33,"* that should be used as the source of the events, as well as the ability to"
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,34,* register and unregister listeners in a thread-safe manner. The class also
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,35,* provides support for iterating over the registered listeners.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,36,* </p>
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,38,* <p>
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,39,* Subclasses of the AbstractEventSupport class are designed to implement
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,40,* methods for firing events. The implementations can make use of both the
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,41,* iterable functionality and use the associated source object as the source
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,42,* of the events.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,43,* </p>
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,45,* <p>
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,46,* Example:
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,47,* <code><pre>
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,48,* public WindowSupport extends AbstractEventSupport<WindowListener> {
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,50,*     public WindowSupport(Window source) {
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,51,*         super(source);
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,54,"*     public void fireWindowOpened(int windowId, int oldState, int newState) {"
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,55,*         WindowEvent windowEvent =
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,56,"*             new WindowEvent((Window) getSource(), windowId, oldState, newState);"
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,57,*         for (WindowListener listener : this)
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,59,*             listener.windowOpened(windowEvent);
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,63,* </pre></code>
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,64,* </p>
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,66,"* @author <a href=""mailto:mwooten.dev@gmail.com"">Michael Wooten</a>"
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,68,* @param <L> the subclass of {@link EventListener} that this event support
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,69,*        class can register.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,71,* @since 3.0
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,73,public abstract class AbstractEventSupport<L extends EventListener>
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,74,"implements EventSupport<L>, Iterable<L>, Serializable {"
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,77,* The serialization unique version identifier.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,79,private static final long serialVersionUID = 20100310L;
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,82,* The list used to hold the registered listeners. This list is
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,83,* intentionally a thread-safe copy-on-write-array so that traversals over
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,84,* the list of listeners will be atomic.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,86,private final CopyOnWriteArrayList<L> listeners;
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,89,* The object registered as the source of events fired to the listeners.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,91,private final Object source;
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,94,* Constructs a new AbstractEventSupport object and associates it with the
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,95,* object that will be used as the source of all events sent to the
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,96,* listeners.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,98,* @param source the object that will be used as the source of all events
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,99,*        posted to the listeners.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,101,* @throws NullPointerException if <code>source</code> is
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,102,*         <code>null</code>.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,104,protected AbstractEventSupport(Object source) {
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,105,"Validate.notNull(source, ""source cannot be null"");"
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,106,this.source = source;
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,107,this.listeners = new CopyOnWriteArrayList<L>();
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,111,* Registers a listener to receive events posted the by the supported class.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,113,* @param listener the listener to register for posted events. Values of
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,114,*        <code>null</code> will be ignored.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,116,public void addListener(L listener) {
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,117,if (listener != null)
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,119,this.listeners.add(listener);
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,124,* Unregisters a listener from receiving events posted by the supported
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,125,* class.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,127,* @param listener the listener to stop posting events to. Values of
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,128,*        <code>null</code> will be ignored.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,130,public void removeListener(L listener) {
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,131,if (listener != null)
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,133,this.listeners.remove(listener);
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,138,* Returns a reference to the object registered as the source of events
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,139,* broadcast to the listeners.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,141,* @return the object that was initially registered to be the source of all
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,142,*         events sent to the listeners.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,144,public Object getSource() {
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,145,return this.source;
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,149,* Returns an iterator over the current list of listeners. This iterator is
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,150,* immutable and does not support {@link Iterator#remove()} operations.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,152,* @return an iterator to iterate over the currently registered listeners.
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,154,public Iterator<L> iterator() {
True,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,src/main/java/org/apache/commons/lang3/event/AbstractEventSupport.java,155,return this.listeners.iterator();
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,18,package org.apache.commons.lang3.event;
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,20,import java.util.EventListener;
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,23,* <p>
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,24,* The EventSupport interface identifies as class as being able to register
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,25,* listeners for events.
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,26,* </p>
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,28,"* @author <a href=""mailto:mwooten.dev@gmail.com"">Michael Wooten</a>"
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,30,* @param <L> the subclass of {@link EventListener} that this event support
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,31,*        class can register.
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,33,* @since 3.0
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,35,public interface EventSupport<L extends EventListener> {
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,38,* Registers a listener to receive events posted the by the supported class.
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,40,* @param listener the listener to register for posted events. Values of
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,41,*        <code>null</code> will be ignored.
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,43,public void addListener(L listener);
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,46,* Unregisters a listener from receiving events posted by the supported
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,47,* class.
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,49,* @param listener the listener to stop posting events to. Values of
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,50,*        <code>null</code> will be ignored.
True,src/main/java/org/apache/commons/lang3/event/EventSupport.java,src/main/java/org/apache/commons/lang3/event/EventSupport.java,52,public void removeListener(L listener);
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,18,package org.apache.commons.lang3.event;
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,20,import java.lang.reflect.InvocationTargetException;
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,21,import java.lang.reflect.Method;
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,22,import java.util.EventListener;
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,23,import java.util.EventObject;
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,25,import org.apache.commons.lang3.Validate;
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,26,import org.apache.commons.lang3.reflect.MethodUtils;
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,29,* <p>
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,30,* The ReflectiveEventSupport class provides a means of posting
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,31,* {@link EventObject}s to registered listeners. The class uses reflection to
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,32,"* call specified methods on the listeners, either by {@link Method} or method"
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,33,* name.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,34,* </p>
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,36,* <p>
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,37,* <em>NOTE: The methods on the listeners must be accessible in order to be
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,38,* called.</em>
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,39,* </p>
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,41,* <p>
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,42,* Example:
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,43,* <code><pre>
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,44,* ReflectiveEventSupport<ChangeListener> reflectiveEventSupport =
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,45,*    new ReflectiveEventSupport<ChangeListener>(this);
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,49,* reflectiveEventSupport.addListener(listener);
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,53,"* reflectiveEventSupport.fireEvent(""stateChanged"","
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,54,*     new ChangeEvent(reflectiveEventSupport.getSource());
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,55,* </pre></code>
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,56,* </p>
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,58,"* @author <a href=""mailto:mwooten.dev@gmail.com"">Michael Wooten</a>"
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,60,* @param <L> the subclass of {@link EventListener} that this event support
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,61,*        class can register.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,63,* @since 3.0
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,65,public class ReflectiveEventSupport<L extends EventListener>
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,66,extends AbstractEventSupport<L> {
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,69,* The serialization unique version identifier.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,71,private static final long serialVersionUID = 20100310L;
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,74,* Constructs a new ReflectiveEventSupport object and associates it with the
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,75,* object that can be used as the source of all events sent to the
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,76,* listeners.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,78,* @param source the object that can be used as the source of all events
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,79,*        posted to the listeners.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,81,* @throws NullPointerException if <code>source</code> is
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,82,*         <code>null</code>.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,84,public ReflectiveEventSupport(Object source) {
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,85,super(source);
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,89,* Fires the provided event object to the named method specified on each of
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,90,* the listeners registered with this event support class.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,92,* @param <E>
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,93,*            the {@link EventObject} type that will be posted to the
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,94,*            listeners.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,96,* @param methodName
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,97,*            the name of the method that should be called on each of the
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,98,*            listeners.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,99,* @param eventObject
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,100,*            the event object that will be passed to the listener's method.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,102,* @throws NullPointerException
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,103,*             if <code>methodName</code> is <code>null</code>.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,104,* @throws NoSuchMethodException
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,105,*             if there is no such accessible method
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,106,* @throws InvocationTargetException
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,107,*             wraps an exception thrown by the method invoked
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,108,* @throws IllegalAccessException
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,109,*             if the requested method is not accessible via reflection
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,111,"public <E extends EventObject> void fireEvent(String methodName, E eventObject)"
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,112,"throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {"
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,113,"Validate.notNull(methodName, ""methodName cannot be null"");"
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,114,for (L listener : this) {
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,115,"MethodUtils.invokeMethod(listener, methodName, eventObject);"
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,120,* Fires the provided event object to the method specified on each of the
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,121,* listeners registered with this event support class.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,123,* @param <E>
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,124,*            the {@link EventObject} type that will be posted to the
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,125,*            listeners.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,126,* @param method
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,127,*            the method that should be called on each of the listeners.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,128,* @param eventObject
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,129,*            the event object that will be passed to the listener's method.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,131,* @throws NullPointerException
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,132,*             if <code>method</code> is <code>null</code>.
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,133,* @throws NoSuchMethodException
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,134,*            if there is no such accessible method
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,135,* @throws InvocationTargetException
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,136,*            wraps an exception thrown by the method invoked
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,137,* @throws IllegalAccessException
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,138,*            if the requested method is not accessible via reflection
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,140,"public <E extends EventObject> void fireEvent(Method method, E eventObject)"
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,141,"throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {"
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,142,"Validate.notNull(method, ""method cannot be null"");"
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,143,Method accessibleMethod = MethodUtils.getAccessibleMethod(method);
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,144,for (L listener : this) {
True,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,src/main/java/org/apache/commons/lang3/event/ReflectiveEventSupport.java,145,"accessibleMethod.invoke(listener, eventObject);"
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,18,package org.apache.commons.lang3.event;
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,20,import javax.swing.event.ChangeEvent;
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,21,import javax.swing.event.ChangeListener;
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,23,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,26,* <p>
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,27,* The {@link AbstractEventSupportTestCase} class provides test cases for
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,28,* testing the {@link AbstractEventSupport} class.
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,29,* </p>
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,31,"* @author <a href=""mailto:mwooten.dev@gmail.com"">Michael Wooten</a>"
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,33,* @since 3.0
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,35,public class AbstractEventSupportTest extends TestCase {
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,38,* The event support mock object that will be used for testing.
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,40,private AbstractEventSupport<ChangeListener> eventSupport;
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,43,* Creates the implementation of {@link AbstractEventSupport} that will be
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,44,* used for testing.
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,46,public void setUp() throws Exception {
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,47,eventSupport = new AbstractEventSupportMock(this);
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,51,* Tests that the
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,52,* {@link AbstractEventSupport#addListener(java.util.EventListener)}
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,53,* properly registers a listener.
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,55,public void testAddListener() {
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,56,ChangeListener changeListener = new ChangeListenerMock();
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,57,eventSupport.addListener(changeListener);
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,58,assertTrue(eventSupport.iterator().hasNext());
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,59,"assertEquals(changeListener, eventSupport.iterator().next());"
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,63,* Tests that the
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,64,* {@link AbstractEventSupport#addListener(java.util.EventListener)}
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,65,* method performs no operation when provided the value of
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,66,* <code>null</code>.
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,68,public void testAddNullListener() {
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,69,eventSupport.addListener(null);
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,70,assertFalse(eventSupport.iterator().hasNext());
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,74,* Tests that the
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,75,* {@link AbstractEventSupport#removeListener(java.util.EventListener)}
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,76,* properly removes a previously registered listener.
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,78,public void testRemoveListener() {
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,79,ChangeListener changeListener = new ChangeListenerMock();
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,80,eventSupport.addListener(changeListener);
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,81,assertTrue(eventSupport.iterator().hasNext());
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,82,eventSupport.removeListener(changeListener);
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,83,assertFalse(eventSupport.iterator().hasNext());
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,87,* Tests that the
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,88,* {@link AbstractEventSupport#removeListener(java.util.EventListener)}
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,89,* method performs no operation when provided the value of
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,90,* <code>null</code>.
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,92,public void testRemoveNullListener() {
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,93,ChangeListener changeListener = new ChangeListenerMock();
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,94,eventSupport.addListener(changeListener);
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,95,assertTrue(eventSupport.iterator().hasNext());
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,96,eventSupport.removeListener(null);
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,97,assertTrue(eventSupport.iterator().hasNext());
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,101,* Tests that the source registered with the event support is the one
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,102,* provided by {@link AbstractEventSupport#getSource()}.
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,104,public void testGetSource() {
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,105,"assertEquals(this, eventSupport.getSource());"
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,109,* Tests that the event support object returns an iterator of the registered
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,110,* listeners.
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,112,public void testIterator() {
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,113,ChangeListener changeListener = new ChangeListenerMock();
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,114,eventSupport.addListener(changeListener);
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,115,assertNotNull(eventSupport.iterator());
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,116,assertTrue(eventSupport.iterator().hasNext());
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,120,* <p>
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,121,* The AbstractEventSupportMock class provides a mock version of the
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,122,* {@link AbstractEventSupport} class that can be used for testing since
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,123,* AbstractEventSupport is an abstract class.
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,124,* </p>
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,126,"@SuppressWarnings(""serial"")"
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,127,private class AbstractEventSupportMock extends AbstractEventSupport<ChangeListener> {
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,130,* Constructs a new AbstractEventSupportMock and associates it with the
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,131,* source of the events.
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,133,* @param source the source of the events.
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,135,public AbstractEventSupportMock(Object source) {
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,136,super(source);
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,141,* <p>
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,142,* The ChangeListenerMock class provides a mock version of the
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,143,* {@link ChangeListener} interface that can be used for testing.
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,144,* </p>
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,146,private class ChangeListenerMock implements ChangeListener {
True,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/AbstractEventSupportTest.java,147,public void stateChanged(ChangeEvent changeEvent) {
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,18,package org.apache.commons.lang3.event;
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,20,import java.lang.reflect.InvocationTargetException;
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,21,import java.lang.reflect.Method;
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,23,import javax.swing.event.ChangeEvent;
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,24,import javax.swing.event.ChangeListener;
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,26,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,29,* <p>
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,30,* The ReflectiveEventSupportTest class provides a set of unit tests for the
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,31,* {@link ReflectiveEventSupport} class.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,32,* </p>
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,34,"* @author <a href=""mailto:mwooten.dev@gmail.com"">Michael Wooten</a>"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,36,* @since 3.0
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,38,public class ReflectiveEventSupportTest extends TestCase {
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,41,* The event support mock object that will be used for testing.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,43,private ReflectiveEventSupport<ChangeListener> eventSupport;
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,46,* The first listener that will be registered for change events.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,48,private ChangeDetectedChangeListener firstChangeListener;
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,51,* The second listener that will be registered for change events.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,53,private ChangeDetectedChangeListener secondChangeListener;
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,56,* Creates the {@link ReflectiveEventSupport} instance under test and
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,57,* registers a couple of {@link ChangeDetectedChangeListener}s with the
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,58,* event support.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,60,protected void setUp() throws Exception {
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,61,eventSupport = new ReflectiveEventSupport<ChangeListener>(this);
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,62,firstChangeListener = new ChangeDetectedChangeListener();
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,63,secondChangeListener = new ChangeDetectedChangeListener();
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,64,eventSupport.addListener(firstChangeListener);
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,65,eventSupport.addListener(secondChangeListener);
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,69,* Tests the {@link ReflectiveEventSupport#ReflectiveEventSupport(Object)}
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,70,* constructor.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,72,public void testReflectiveEventSupport() {
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,73,try
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,75,new ReflectiveEventSupport<ChangeListener>(null);
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,76,"fail(""ReflectiveEventSupport(null) did not throw an IllegalArgumentException"");"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,78,catch (NullPointerException iae)
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,80,"// Success, the exception was properly thrown"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,85,* Tests the
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,86,"* {@link ReflectiveEventSupport#fireEvent(String, java.util.EventObject)}"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,87,* method to ensure that events will be propagated to accessible methods
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,88,* with the provided name.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,90,* @throws NoSuchMethodException
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,91,* @throws IllegalAccessException
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,92,* @throws InvocationTargetException
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,94,"public void testFireEventByMethodName() throws NoSuchMethodException,"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,95,"IllegalAccessException, InvocationTargetException {"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,96,ChangeEvent changeEvent = new ChangeEvent(eventSupport.getSource());
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,97,"eventSupport.fireEvent(""stateChanged"", changeEvent);"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,98,"assertTrue(""ChangeEvent not propogated to first change lisetener"","
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,99,firstChangeListener.isChanged());
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,100,"assertTrue(""ChangeEvent not propogated to second change lisetener"","
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,101,secondChangeListener.isChanged());
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,105,* Tests the
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,106,"* {@link ReflectiveEventSupport#fireEvent(String, java.util.EventObject)}"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,107,* method to ensure that a {@link NoSuchMethodException} is thrown if the
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,108,* method is not accessible.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,110,* @throws IllegalAccessException
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,111,* @throws InvocationTargetException
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,113,public void testFireEventByMethodNameToInaccessibleMethods()
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,114,"throws IllegalAccessException, InvocationTargetException {"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,116,ChangeEvent changeEvent = new ChangeEvent(eventSupport.getSource());
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,118,try
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,120,"eventSupport.fireEvent(""privateMethod"", changeEvent);"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,121,"fail(""eventSupport.fireEvent() did not throw an exception "" +"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,122,"""for a private method"");"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,124,catch (NoSuchMethodException nsme)
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,126,// Success
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,129,try
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,131,"eventSupport.fireEvent(""protectedMethod"", changeEvent);"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,132,"fail(""eventSupport.fireEvent() did not throw an exception "" +"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,133,"""for a protected method"");"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,135,catch (NoSuchMethodException nsme)
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,137,// Success
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,140,try
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,142,"eventSupport.fireEvent(""defaultMethod"", changeEvent);"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,143,"fail(""eventSupport.fireEvent() did not throw an exception "" +"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,144,"""for a default method"");"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,146,catch (NoSuchMethodException nsme)
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,148,// Success
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,153,* Tests the
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,154,"* {@link ReflectiveEventSupport#fireEvent(String, java.util.EventObject)}"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,155,* method to ensure that a {@link NullPointerException} is thrown if a
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,156,* <code>null</code> value is provided for the method name.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,158,* @throws NoSuchMethodException
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,159,* @throws IllegalAccessException
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,160,* @throws InvocationTargetException
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,162,"public void testFireEventNullMethodName() throws NoSuchMethodException,"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,163,"IllegalAccessException,"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,164,InvocationTargetException {
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,165,try
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,167,ChangeEvent changeEvent = new ChangeEvent(eventSupport.getSource());
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,168,"eventSupport.fireEvent((String) null, changeEvent);"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,169,"fail(""eventSupport.fireEvent() did not throw an exception for a "" +"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,170,"""null method name."");"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,172,catch (NullPointerException npe)
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,174,// Success
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,179,* Tests the
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,180,"* {@link ReflectiveEventSupport#fireEvent(Method, java.util.EventObject)}"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,181,* method to ensure that events will be propagated to the accessible method
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,182,* provided.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,184,* @throws NoSuchMethodException
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,185,* @throws IllegalAccessException
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,186,* @throws InvocationTargetException
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,188,"public void testFireEventByMethod() throws NoSuchMethodException,"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,189,"IllegalAccessException, InvocationTargetException {"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,190,ChangeEvent changeEvent = new ChangeEvent(eventSupport.getSource());
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,191,Method stateChangedMethod =
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,192,"ChangeListener.class.getMethod(""stateChanged"", ChangeEvent.class);"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,193,"eventSupport.fireEvent(stateChangedMethod, changeEvent);"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,194,"assertTrue(""ChangeEvent not propogated to first change lisetener"","
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,195,firstChangeListener.isChanged());
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,196,"assertTrue(""ChangeEvent not propogated to second change lisetener"","
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,197,secondChangeListener.isChanged());
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,201,* Tests the
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,202,"* {@link ReflectiveEventSupport#fireEvent(Method, java.util.EventObject)}"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,203,* method to ensure that a {@link NoSuchMethodException} is thrown if the
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,204,* method is not accessible.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,206,* @throws IllegalAccessException
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,207,* @throws InvocationTargetException
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,209,public void testFireEventByMethodToInaccessibleMethods()
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,210,"throws IllegalAccessException, InvocationTargetException {"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,212,ChangeEvent changeEvent = new ChangeEvent(eventSupport.getSource());
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,214,try
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,216,Method privateMethod =
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,217,"ChangeListener.class.getMethod(""privateMethod"","
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,218,ChangeEvent.class);
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,219,"eventSupport.fireEvent(privateMethod, changeEvent);"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,220,"fail(""eventSupport.fireEvent() did not throw an exception "" +"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,221,"""for a private method"");"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,223,catch (NoSuchMethodException nsme)
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,225,// Success
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,228,try
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,230,Method protectedMethod =
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,231,"ChangeListener.class.getMethod(""protectedMethod"","
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,232,ChangeEvent.class);
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,233,"eventSupport.fireEvent(protectedMethod, changeEvent);"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,234,"fail(""eventSupport.fireEvent() did not throw an exception "" +"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,235,"""for a protected method"");"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,237,catch (NoSuchMethodException nsme)
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,239,// Success
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,242,try
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,244,Method defaultMethod =
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,245,"ChangeListener.class.getMethod(""defaultMethod"","
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,246,ChangeEvent.class);
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,247,"eventSupport.fireEvent(defaultMethod, changeEvent);"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,248,"fail(""eventSupport.fireEvent() did not throw an exception "" +"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,249,"""for a default method"");"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,251,catch (NoSuchMethodException nsme)
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,253,// Success
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,258,* Tests the
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,259,"* {@link ReflectiveEventSupport#fireEvent(Method, java.util.EventObject)}"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,260,* method to ensure that a {@link NullPointerException} is thrown if a
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,261,* <code>null</code> value is provided for the method.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,263,* @throws NoSuchMethodException
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,264,* @throws IllegalAccessException
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,265,* @throws InvocationTargetException
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,267,"public void testFireEventNullMethod() throws NoSuchMethodException,"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,268,"IllegalAccessException, InvocationTargetException {"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,269,try
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,271,ChangeEvent changeEvent = new ChangeEvent(eventSupport.getSource());
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,272,"eventSupport.fireEvent((Method) null, changeEvent);"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,273,"fail(""eventSupport.fireEvent() did not throw an exception for a "" +"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,274,"""null method."");"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,276,catch (NullPointerException npe)
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,278,// Success
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,283,* Tests the {@link ReflectiveEventSupport#getSource()} method to ensure it
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,284,* returns the source object it was originally provided.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,286,public void testGetSource() {
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,287,"assertEquals(this, eventSupport.getSource());"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,291,* <p>
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,292,* The ChangeDetectedChangeListener class provides a version of the
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,293,* {@link ChangeListener} interface that detects when the listener has
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,294,* been called. The class provides an {@link #isChanged()} method that
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,295,* will indicate whether or not the listener has been called.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,296,* </p>
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,298,public class ChangeDetectedChangeListener implements ChangeListener {
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,301,* Represents whether or not the listener has detected a change.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,303,private boolean changed = false;
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,306,* Called whenever a change is detected.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,308,* @param changeEvent the change event indicating a state change.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,310,public void stateChanged(ChangeEvent changeEvent) {
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,311,this.changed = true;
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,315,* Returns whether or not the listener has detected a change event.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,317,* @return <code>true</code> if the listener has detected a change
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,318,"*         event, <code>false</code> otherwise."
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,320,public boolean isChanged() {
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,321,return this.changed;
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,325,* A default (package private) method used to test
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,326,* ReflectiveEventSupport calls to inaccessible methods.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,328,* @param changeEvent not used.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,330,void defaultMethod(ChangeEvent changeEvent) {
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,331,this.changed = true;
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,335,* A protected method used to test ReflectiveEventSupport calls to
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,336,* inaccessible methods.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,338,* @param changeEvent not used.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,340,protected void protectedMethod(ChangeEvent changeEvent) {
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,341,this.changed = true;
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,345,* A private method used to test ReflectiveEventSupport calls to
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,346,* inaccessible methods.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,348,* @param changeEvent not used.
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,350,"@SuppressWarnings(""unused"")"
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,351,private void privateMethod(ChangeEvent changeEvent) {
True,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,src/test/java/org/apache/commons/lang3/event/ReflectiveEventSupportTest.java,352,this.changed = true;
