is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,5742,"rivate static Object removeAll(Object array, int... indices) {"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,5742,// package protected for access by unit tests
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,5743,"static Object removeAll(Object array, int... indices) {"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,19,import java.lang.reflect.Array;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,32,private static final int LOOPS2 = 10000;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,116,@Test
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,117,public void testTimesExtractOrBitset() {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,118,final BitSet toRemove = new BitSet();
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,119,final int[] array = new int[100];
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,120,"toRemove.set(10, 20);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,121,"timeBitSetRemoveAll(array, toRemove); // warmup"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,122,"timeExtractRemoveAll(array, toRemove); // warmup"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,123,"printTimes(100,1);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,124,"printTimes(100,10);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,125,"printTimes(100,50);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,126,"printTimes(100,100);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,127,"printTimes(1000,10);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,128,"printTimes(1000,100);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,129,"printTimes(1000,500);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,130,"printTimes(1000,1000);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,133,"private void printTimes(int arraySize, int bitSetSize) {"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,134,int[] array = new int[arraySize];
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,135,BitSet remove = new BitSet();
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,136,for (int i = 0; i < bitSetSize; i++) {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,137,remove.set(i);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,139,"long bitSet = timeBitSetRemoveAll(array, remove );"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,140,"long extract = timeExtractRemoveAll(array, remove);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,141,"// If percent is less than 100, then direct use of bitset is faster"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,142,"System.out.println(""Ratio=""+(bitSet*100/extract)+""% array=""+array.length+"" count=""+remove.cardinality()+"" extract=""+extract+"" bitset=""+bitSet);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,145,"private long timeBitSetRemoveAll(int[] array, BitSet toRemove) {"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,146,int[] output = new int[0];
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,147,long start = System.nanoTime();
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,148,for(int i = 0; i < LOOPS2; i++){
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,149,"output = (int[]) removeAll(array, toRemove);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,151,long end = System.nanoTime();
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,152,"Assert.assertEquals(array.length-toRemove.cardinality(), output.length);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,153,return end - start;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,156,"private long timeExtractRemoveAll(int[] array, BitSet toRemove) {"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,157,int[] output = new int[0];
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,158,long start = System.nanoTime();
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,159,for(int i = 0; i < LOOPS2; i++){
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,160,final int[] extractIndices = extractIndices(toRemove);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,161,"output = (int[]) ArrayUtils.removeAll((Object)array, extractIndices);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,163,long end = System.nanoTime();
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,164,"Assert.assertEquals(array.length-toRemove.cardinality(), output.length);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,165,return end - start;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,169,* Removes multiple array elements specified by indices.
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,171,* @param array source
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,172,* @param indices to remove
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,173,* @return new array of same type minus elements specified by the set bits in {@code indices}
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,174,* @since 3.2
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,176,// package protected for access by unit tests
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,177,"static Object removeAll(Object array, BitSet indices) {"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,178,final int srcLength = ArrayUtils.getLength(array);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,179,final int maxIndex = indices.length();
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,180,if (maxIndex > srcLength) { // TODO necessary? Can check this when creating the BitSit
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,181,"throw new IndexOutOfBoundsException(""Index: "" + (maxIndex-1) + "", Length: "" + srcLength);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,183,final int removals = indices.cardinality(); // true bits are items to remove
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,184,"Object result = Array.newInstance(array.getClass().getComponentType(), srcLength - removals);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,185,int srcIndex=0;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,186,int destIndex=0;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,187,int count;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,188,int set;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,189,while((set = indices.nextSetBit(srcIndex)) != -1){
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,190,count = set - srcIndex;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,191,if (count > 0) {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,192,"System.arraycopy(array, srcIndex, result, destIndex, count);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,193,destIndex += count;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,195,srcIndex = indices.nextClearBit(set);
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,197,count = srcLength - srcIndex;
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,198,if (count > 0) {
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,199,"System.arraycopy(array, srcIndex, result, destIndex, count);"
True,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,src/test/java/org/apache/commons/lang3/HashSetvBitSetTest.java,201,return result;
