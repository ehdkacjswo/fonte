is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,568,"hrow new java.lang.IllegalArgumentException(""nibble value not between 0 and 15: """
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,568,"throw new IllegalArgumentException(""nibble value not between 0 and 15: """
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,625,"hrow new java.lang.IllegalArgumentException(""nibble value not between 0 and 15: """
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,625,"throw new IllegalArgumentException(""nibble value not between 0 and 15: """
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,681,ong bits = ((0xffffL & src[i + srcPos]) << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,682,ong mask = (0xffffL << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,683,ut = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,681,long bits = (0xffffL & src[i + srcPos]) << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,682,long mask = 0xffffL << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,683,out = (out & ~mask) | bits;
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,711,nt bits = ((0xffff & src[i + srcPos]) << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,712,nt mask = (0xffff << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,713,ut = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,711,int bits = (0xffff & src[i + srcPos]) << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,712,int mask = 0xffff << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,713,out = (out & ~mask) | bits;
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,741,ong bits = ((0xffL & src[i + srcPos]) << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,742,ong mask = (0xffL << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,743,ut = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,741,long bits = (0xffL & src[i + srcPos]) << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,742,long mask = 0xffL << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,743,out = (out & ~mask) | bits;
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,771,nt bits = ((0xff & src[i + srcPos]) << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,772,nt mask = (0xff << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,773,ut = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,771,int bits = (0xff & src[i + srcPos]) << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,772,int mask = 0xff << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,773,out = (out & ~mask) | bits;
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,802,hort bits = (short)(((short)(0xff & src[i + srcPos])) << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,803,hort mask = (short)(((short)0xff) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,802,int bits = (0xff & src[i + srcPos]) << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,803,int mask = 0xff << shift;
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,832,ong bits = ((0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,833,ong mask = (0xfL << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,834,ut = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,832,long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,833,long mask = 0xfL << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,834,out = (out & ~mask) | bits;
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,862,nt bits = ((0xf & hexDigitToInt(src.charAt(i + srcPos))) << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,863,nt mask = (0xf << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,864,ut = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,862,int bits = (0xf & hexDigitToInt(src.charAt(i + srcPos))) << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,863,int mask = 0xf << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,864,out = (out & ~mask) | bits;
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,892,hort bits = (short)(((short)(0xf & hexDigitToInt(src.charAt(i + srcPos)))) << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,893,hort mask = (short)(((short)0xf) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,892,int bits = (0xf & hexDigitToInt(src.charAt(i + srcPos))) << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,893,int mask = 0xf << shift;
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,922,yte bits = (byte)(((byte)(0xf & hexDigitToInt(src.charAt(i + srcPos)))) << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,923,yte mask = (byte)(((byte)0xf) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,922,int bits = (0xf & hexDigitToInt(src.charAt(i + srcPos))) << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,923,int mask = 0xf << shift;
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,953,ong bits = ((0x1L & ((src[i + srcPos]) ? 1 : 0)) << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,954,ong mask = (0x1L << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,955,ut = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,953,long bits = (0x1L & ((src[i + srcPos]) ? 1 : 0)) << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,954,long mask = 0x1L << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,955,out = (out & ~mask) | bits;
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,983,nt bits = ((0x1 & ((src[i + srcPos]) ? 1 : 0)) << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,984,nt mask = (0x1 << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,985,ut = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,983,int bits = (0x1 & ((src[i + srcPos]) ? 1 : 0)) << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,984,int mask = 0x1 << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,985,out = (out & ~mask) | bits;
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1014,hort bits = (short)(((short)(0x1 & ((src[i + srcPos]) ? 1 : 0))) << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1015,hort mask = (short)(((short)0x1) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1014,int bits = (0x1 & ((src[i + srcPos]) ? 1 : 0)) << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1015,int mask = 0x1 << shift;
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1045,yte bits = (byte)(((byte)(0x1 & ((src[i + srcPos]) ? 1 : 0))) << shift);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1046,yte mask = (byte)(((byte)0x1) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1045,int bits = (0x1 & ((src[i + srcPos]) ? 1 : 0)) << shift;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1046,int mask = 0x1 << shift;
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1076,ong bits = (long)(0xffffffff & (src >> shift));
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1077,st[dstPos + i] = bits.intValue();
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1076,dst[dstPos + i] = (int)(0xffffffff & (src >> shift));
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1104,ong bits = (long)(0xffff & (src >> shift));
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1105,st[dstPos + i] = bits.shortValue();
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1103,dst[dstPos + i] = (short)(0xffff & (src >> shift));
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1131,nteger bits = (int)(0xffff & (src >> shift));
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1132,st[dstPos + i] = bits.shortValue();
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1129,dst[dstPos + i] = (short)(0xffff & (src >> shift));
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1158,ong bits = (long)(0xff & (src >> shift));
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1159,st[dstPos + i] = bits.byteValue();
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1155,dst[dstPos + i] = (byte)(0xff & (src >> shift));
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1185,nteger bits = (int)(0xff & (src >> shift));
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1186,st[dstPos + i] = bits.byteValue();
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1181,dst[dstPos + i] = (byte)(0xff & (src >> shift));
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1212,hort bits = (short)(0xff & (src >> shift));
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1213,st[dstPos + i] = bits.byteValue();
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1207,dst[dstPos + i] = (byte)(0xff & (src >> shift));
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1235,tringBuffer sb = new StringBuffer(dstInit);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1229,StringBuilder sb = new StringBuilder(dstInit);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1263,tringBuffer sb = new StringBuffer(dstInit);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1257,StringBuilder sb = new StringBuilder(dstInit);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1292,tringBuffer sb = new StringBuffer(dstInit);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1286,StringBuilder sb = new StringBuilder(dstInit);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1320,tringBuffer sb = new StringBuffer(dstInit);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1314,StringBuilder sb = new StringBuilder(dstInit);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1353,ong bits = (long)(0x1 & (src >> shift));
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1354,st[dstPos + i] = (bits != 0);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1347,dst[dstPos + i] = ((0x1 & (src >> shift)) != 0);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1381,nteger bits = (int)(0x1 & (src >> shift));
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1382,st[dstPos + i] = (bits != 0);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1374,dst[dstPos + i] = ((0x1 & (src >> shift)) != 0);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1409,hort bits = (short)(0x1 & (src >> shift));
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1410,st[dstPos + i] = (bits != 0);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1401,dst[dstPos + i] = ((0x1 & (src >> shift)) != 0);
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1437,yte bits = (byte)(0x1 & (src >> shift));
False,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1438,st[dstPos + i] = (bits != 0);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1428,dst[dstPos + i] = ((0x1 & (src >> shift)) != 0);
