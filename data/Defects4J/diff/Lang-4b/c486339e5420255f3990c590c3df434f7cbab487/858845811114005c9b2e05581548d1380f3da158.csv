is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,18,mport java.io.CharArrayReader;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,49,* <li>Views
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,50,*  <ul>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,51,*   <li>asTokenizer - uses the internal buffer as the source of a StrTokenizer</li>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,52,*   <li>asReader - uses the internal buffer as the source of a Reader</li>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,53,*   <li>asWriter - allows a Writer to write directly to the internal buffer</li>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,54,*  </ul>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,55,* </li>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,56,* </ul>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1917,* Creates a tokenizer using the current contents of this builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1918,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1919,* This method allows the contents of the builder to be tokenized.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1920,"* The tokenizer will be setup to tokenize on space, tab, newline"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1921,* and formfeed (as per StringTokenizer). These values can be changed
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1922,"* on the tokenizer class, before retrieving the tokens."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1923,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1924,* Note that the internal character array is shared between the two
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1925,"* objects and no synchronization occurs, so you must not alter this"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1926,* builder in one thread while tokenizing it in another thread.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1928,* @return a StrTokenizer instance
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1930,public StrTokenizer asTokenizer() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1931,return new StrTokenizer(buffer);
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1914," The current implementation returns a CharArrayReader, but"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1915, you should not rely on this.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1917," Note that no synchronization occurs, so you must not alter this"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1941,"* To use, simply create a <code>StrBuilder</code>, populate it with"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1942,"* data, call <code>asReader</code>, and then read away."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1943,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1944,* Note that the internal character array is shared between the two
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1945,"* objects and no synchronization occurs, so you must not alter this"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1947,"* Note also that close has no effect on the reader, and that"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1948,* marking is supported.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1923,"eturn new CharArrayReader(buffer, 0, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1953,return new StrBuilderReader();
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1936," Note however, that no synchronization occurs, so you must not read"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1966,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1967,* Note that the internal character array is shared between the two
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1968,"* objects and no synchronization occurs, so you must not alter this"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2068,* Inner class to allow StrBuilder to operate as a writer.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2070,class StrBuilderReader extends Reader {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2071,/** The current stream position. */
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2072,private int pos;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2073,/** The last mark position. */
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2074,private int mark;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2076,StrBuilderReader() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2077,super();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2080,/** @inheritdoc */
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2081,public void close() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2082,// do nothing
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2085,/** @inheritdoc */
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2086,public int read() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2087,if (ready() == false) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2088,return -1;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2090,return charAt(pos++);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2093,/** @inheritdoc */
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2094,"public int read(char b[], int off, int len) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2095,if (off < 0 || len < 0 || off > b.length ||
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2096,(off + len) > b.length || (off + len) < 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2097,throw new IndexOutOfBoundsException();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2099,if (len == 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2100,return 0;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2102,if (pos >= size()) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2103,return -1;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2105,if (pos + len > size()) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2106,len = size() - pos;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2108,"getChars(pos, pos + len, b, off);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2109,pos += len;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2110,return len;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2113,public long skip(long n) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2114,if (pos + n > size()) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2115,n = size() - pos;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2117,if (n < 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2118,return 0;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2120,pos += n;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2121,return n;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2124,/** @inheritdoc */
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2125,public boolean ready() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2126,return pos < size();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2129,/** @inheritdoc */
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2130,public boolean markSupported() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2131,return true;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2134,/** @inheritdoc */
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2135,public void mark(int readAheadLimit) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2136,mark = pos;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2139,/** @inheritdoc */
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2140,public void reset() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,2141,pos = mark;
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1488,"trBuilder sb = new StrBuilder (""some text"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1488,"StrBuilder sb = new StrBuilder(""some text"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1490,"assertEquals(true, reader.ready());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1494,uf = new char[40];
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1495,"ssertEquals(-1, reader.read(buf));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1495,"assertEquals(-1, reader.read());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1496,"assertEquals(false, reader.ready());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1497,"assertEquals(0, reader.skip(2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1498,"assertEquals(0, reader.skip(-1));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1500,"assertEquals(true, reader.markSupported());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1501,reader = sb.asReader();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1502,"assertEquals('s', reader.read());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1503,reader.mark(-1);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1504,char[] array = new char[3];
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1505,"assertEquals(3, reader.read(array, 0, 3));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1506,"assertEquals('o', array[0]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1507,"assertEquals('m', array[1]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1508,"assertEquals('e', array[2]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1509,reader.reset();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1510,"assertEquals(1, reader.read(array, 1, 1));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1511,"assertEquals('o', array[0]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1512,"assertEquals('o', array[1]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1513,"assertEquals('e', array[2]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1514,"assertEquals(2, reader.skip(2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1515,"assertEquals(' ', reader.read());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1517,"assertEquals(true, reader.ready());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1518,reader.close();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1519,"assertEquals(true, reader.ready());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1521,reader = sb.asReader();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1522,array = new char[3];
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1523,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1524,"reader.read(array, -1, 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1525,fail();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1526,} catch (IndexOutOfBoundsException ex) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1527,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1528,"reader.read(array, 0, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1529,fail();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1530,} catch (IndexOutOfBoundsException ex) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1531,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1532,"reader.read(array, 100, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1533,fail();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1534,} catch (IndexOutOfBoundsException ex) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1535,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1536,"reader.read(array, 0, 100);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1537,fail();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1538,} catch (IndexOutOfBoundsException ex) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1539,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1540,"reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1541,fail();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1542,} catch (IndexOutOfBoundsException ex) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1544,"assertEquals(0, reader.read(array, 0, 0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1545,"assertEquals(0, array[0]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1546,"assertEquals(0, array[1]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1547,"assertEquals(0, array[2]);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1549,reader.skip(9);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1550,"assertEquals(-1, reader.read(array, 0, 1));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1552,reader.reset();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1553,array = new char[30];
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1554,"assertEquals(9, reader.read(array, 0, 30));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1500,"trBuilder sb = new StrBuilder (""base"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1559,"StrBuilder sb = new StrBuilder(""base"");"
