is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,145,if (val.length() == 1 && !Character.isDigit(val.charAt(0))) {
True,src/java/org/apache/commons/lang/NumberUtils.java,src/java/org/apache/commons/lang/NumberUtils.java,146,"throw new NumberFormatException(val + "" is not a valid number."");"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,524,public void testLang457() {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,525,"String[] badInputs = new String[] { ""l"", ""L"", ""f"", ""F"", ""junk"", ""bobL""};"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,526,for(int i=0; i<badInputs.length; i++) {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,527,try {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,528,NumberUtils.createNumber(badInputs[i]);
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,529,"fail(""NumberFormatException was expected for "" + badInputs[i]);"
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,530,} catch (NumberFormatException e) {
True,src/test/org/apache/commons/lang/NumberUtilsTest.java,src/test/org/apache/commons/lang/NumberUtilsTest.java,531,return; // expected
