is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,135,"eturn reflectionCompare(lhs, rhs, false, null, null);"
True,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,135,"return reflectionCompare(lhs, rhs, false, null);"
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,167,"eturn reflectionCompare(lhs, rhs, compareTransients, null, null);"
True,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,167,"return reflectionCompare(lhs, rhs, compareTransients, null);"
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,232,"ublic static int reflectionCompare(Object lhs, Object rhs, String[] excludeFields) {"
True,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,232,"public static int reflectionCompare(Object lhs, Object rhs, String... excludeFields) {"
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,237, <p>Compares two <code>Object</code>s via reflection.</p>
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,239," <p>Fields can be private, thus <code>AccessibleObject.setAccessible</code>"
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,240, is used to bypass normal access control checks. This will fail under a
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,241, security manager unless the appropriate permissions are set.</p>
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,243, <ul>
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,244, <li>Static fields will not be compared</li>
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,245," <li>If the <code>compareTransients</code> is <code>true</code>,"
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,246,"     compares transient members.  Otherwise ignores them, as they"
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,247,     are likely derived fields.</li>
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,248, <li>Compares superclass fields up to and including <code>reflectUpToClass</code>.
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,249,"     If <code>reflectUpToClass</code> is <code>null</code>, compares all superclass fields.</li>"
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,250, </ul>
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,252," <p>If both <code>lhs</code> and <code>rhs</code> are <code>null</code>,"
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,253, they are considered equal.</p>
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,255, @param lhs  left-hand object
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,256, @param rhs  right-hand object
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,257, @param compareTransients  whether to compare transient fields
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,258, @param reflectUpToClass  last superclass for which fields are compared
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,259," @return a negative integer, zero, or a positive integer as <code>lhs</code>"
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,260,"  is less than, equal to, or greater than <code>rhs</code>"
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,261, @throws NullPointerException  if either <code>lhs</code> or <code>rhs</code>
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,262,  (but not both) is <code>null</code>
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,263, @throws ClassCastException  if <code>rhs</code> is not assignment-compatible
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,264,  with <code>lhs</code>
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,265, @since 2.0
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,267,ublic static int reflectionCompare(
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,268,"bject lhs, Object rhs, boolean compareTransients, Class<?> reflectUpToClass) {"
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,269,"eturn reflectionCompare(lhs, rhs, compareTransients, reflectUpToClass, null);"
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,302, @since 2.2
True,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,266,"* @since 2.2 (2.0 as <code>reflectionCompare(Object, Object, boolean, Class)</code>)"
False,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,309,tring[] excludeFields) {
True,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java,273,String... excludeFields) {
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,229, <p>This method uses reflection to determine if the two <code>Object</code>s
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,230, are equal.</p>
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,232, <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,233, fields. This means that it will throw a security exception if run under
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,234," a security manager, if the permissions are not set up correctly. It is also"
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,235, not as efficient as testing explicitly.</p>
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,237," <p>Transient members will be not be tested, as they are likely derived"
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,238," fields, and not part of the value of the Object.</p>"
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,240, <p>Static fields will not be tested. Superclass fields will be included.</p>
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,242, @param lhs  <code>this</code> object
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,243, @param rhs  the other object
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,244, @return <code>true</code> if the two Objects have tested equals.
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,246,"ublic static boolean reflectionEquals(Object lhs, Object rhs) {"
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,247,"eturn reflectionEquals(lhs, rhs, false, null, null);"
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,292,"ublic static boolean reflectionEquals(Object lhs, Object rhs, String[] excludeFields) {"
True,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,270,"public static boolean reflectionEquals(Object lhs, Object rhs, String... excludeFields) {"
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,317,"eturn reflectionEquals(lhs, rhs, testTransients, null, null);"
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,321, <p>This method uses reflection to determine if the two <code>Object</code>s
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,322, are equal.</p>
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,324, <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,325, fields. This means that it will throw a security exception if run under
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,326," a security manager, if the permissions are not set up correctly. It is also"
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,327, not as efficient as testing explicitly.</p>
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,329," <p>If the testTransients parameter is set to <code>true</code>, transient"
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,330," members will be tested, otherwise they are ignored, as they are likely"
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,331," derived fields, and not part of the value of the <code>Object</code>.</p>"
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,333, <p>Static fields will not be included. Superclass fields will be appended
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,334, up to and including the specified superclass. A null superclass is treated
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,335, as java.lang.Object.</p>
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,337, @param lhs  <code>this</code> object
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,338, @param rhs  the other object
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,339, @param testTransients  whether to include transient fields
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,340," @param reflectUpToClass  the superclass to reflect up to (inclusive),"
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,341,  may be <code>null</code>
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,342, @return <code>true</code> if the two Objects have tested equals.
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,343, @since 2.0
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,345,"ublic static boolean reflectionEquals(Object lhs, Object rhs, boolean testTransients, Class<?> reflectUpToClass) {"
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,346,"eturn reflectionEquals(lhs, rhs, testTransients, reflectUpToClass, null);"
True,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,295,"return reflectionEquals(lhs, rhs, testTransients, null);"
False,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,376,tring[] excludeFields) {
True,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java,325,String... excludeFields) {
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,238,"eturn reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null, null);"
True,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,238,"return reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null);"
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,282,"eturn reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients, null,"
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,283,ull);
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,287," Calls {@link #reflectionHashCode(int, int, Object, boolean, Class, String[])} with excludeFields set to"
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,288, <code>null</code>.
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,290, @param <T>
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,291,            the type of the object involved
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,292, @param initialNonZeroOddNumber
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,293,"            a non-zero, odd number used as the initial value"
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,294, @param multiplierNonZeroOddNumber
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,295,"            a non-zero, odd number used as the multiplier"
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,296, @param object
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,297,            the Object to create a <code>hashCode</code> for
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,298, @param testTransients
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,299,            whether to include transient fields
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,300, @param reflectUpToClass
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,301,"            the superclass to reflect up to (inclusive), may be <code>null</code>"
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,302, @return int hash code
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,304,"ublic static <T> int reflectionHashCode(int initialNonZeroOddNumber, int multiplierNonZeroOddNumber, T object,"
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,305,"oolean testTransients, Class<? super T> reflectUpToClass) {"
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,306,"eturn reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients,"
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,307,"eflectUpToClass, null);"
True,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,282,"return reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients, null);"
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,358,"oolean testTransients, Class<? super T> reflectUpToClass, String[] excludeFields) {"
True,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,333,"boolean testTransients, Class<? super T> reflectUpToClass, String... excludeFields) {"
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,374, <p>
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,375, This method uses reflection to build a valid hash code.
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,376, </p>
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,378, <p>
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,379, This constructor uses two hard coded choices for the constants needed to build a hash code.
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,380, </p>
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,382, <p>
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,383, It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields. This means that it will
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,384," throw a security exception if run under a security manager, if the permissions are not set up correctly. It is"
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,385, also not as efficient as testing explicitly.
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,386, </p>
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,388, <p>
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,389," Transient members will be not be used, as they are likely derived fields, and not part of the value of the"
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,390, <code>Object</code>.
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,391, </p>
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,393, <p>
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,394, Static fields will not be tested. Superclass fields will be included.
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,395, </p>
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,397, @param object
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,398,            the Object to create a <code>hashCode</code> for
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,399, @return int hash code
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,400, @throws IllegalArgumentException
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,401,             if the object is <code>null</code>
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,403,ublic static int reflectionHashCode(Object object) {
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,404,"eturn reflectionHashCode(17, 37, object, false, null, null);"
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,440,"eturn reflectionHashCode(17, 37, object, testTransients, null, null);"
True,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,381,"return reflectionHashCode(17, 37, object, testTransients, null);"
False,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,513,"ublic static int reflectionHashCode(Object object, String[] excludeFields) {"
True,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java,454,"public static int reflectionHashCode(Object object, String... excludeFields) {"
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,293, Builds a String for a toString method excluding the given field name.
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,295, @param object
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,296,"            The object to ""toString""."
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,297, @param excludeFieldName
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,298,            The field name to exclude
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,299, @return The toString value.
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,301,"ublic static String toStringExclude(Object object, final String excludeFieldName) {"
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,302,"eturn toStringExclude(object, new String[] { excludeFieldName });"
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,363,"ublic static String toStringExclude(Object object, String[] excludeFieldNames) {"
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,350,"public static String toStringExclude(Object object, String... excludeFieldNames) {"
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,660,ublic ReflectionToStringBuilder setExcludeFieldNames(String[] excludeFieldNamesParam) {
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,647,public ReflectionToStringBuilder setExcludeFieldNames(String... excludeFieldNamesParam) {
False,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,664,his.excludeFieldNames = toNoNullStringArray(excludeFieldNamesParam);
True,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java,651,this.excludeFieldNames = excludeFieldNamesParam.clone();
