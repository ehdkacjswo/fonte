is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,245,"* @see #setCharAt(int, char)"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,246,* @see #deleteCharAt(int)
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,261,* @see #charAt(int)
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,262,* @see #deleteCharAt(int)
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,275,* Deletes the character at the specified index.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,277,* @see #charAt(int)
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,278,"* @see #setCharAt(int, char)"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,279,* @param index  the index to delete
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,280,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,281,* @throws IndexOutOfBoundsException if the index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,283,public StrBuilder deleteCharAt(int index) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,284,if (index < 0 || index >= size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,285,throw new StringIndexOutOfBoundsException(index);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,287,"deleteImpl(index, index + 1, 1);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,288,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1049,* Internal method to delete a range without validation.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1051,"* @param startIndex  the start index, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1052,"* @param endIndex  the end index (exclusive), must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1053,"* @param len  the length, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1054,* @throws IndexOutOfBoundsException if any index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1056,"private void deleteImpl(int startIndex, int endIndex, int len) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1057,"System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1058,size -= len;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1040,"ystem.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1041,ize -= len;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1074,"deleteImpl(startIndex, endIndex, len);"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1047, Deletes the character at the specified index.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1081,* Deletes the character wherever it occurs in the builder.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1049, @param index  the index to delete
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1083,* @param ch  the character to delete
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1051, @throws IndexOutOfBoundsException if the index is invalid
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1053,ublic StrBuilder deleteCharAt(int index) {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1054,f (index < 0 || index >= size) {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1055,hrow new StringIndexOutOfBoundsException(index);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1086,public StrBuilder deleteAll(char ch) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1087,for (int i = 0; i < size; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1088,if (buffer[i] == ch) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1089,int start = i;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1090,while (++i < size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1091,if (buffer[i] != ch) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1092,break;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1095,int len = i - start;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1096,"deleteImpl(start, i, len);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1097,i -= len;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1057,"ystem.arraycopy(buffer, index + 1, buffer, index, size - index - 1);"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1058,ize--;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1068,ublic StrBuilder delete(char ch) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1109,public StrBuilder deleteFirst(char ch) {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1071,nt start = i;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1072,hile (++i < size) {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1073,f (buffer[i] != ch) {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1074,reak;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1077,"ystem.arraycopy(buffer, i, buffer, start, size - i);"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1078,ize -= (i - start);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1112,"deleteImpl(i, i + 1, 1);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1113,break;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1090,ublic StrBuilder delete(String str) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1126,public StrBuilder deleteAll(String str) {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1095,"elete(index, index + len);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1131,"deleteImpl(index, index + len, len);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1139,* Deletes the string wherever it occurs in the builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1141,"* @param str  the string to delete, null causes no action"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1142,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1144,public StrBuilder deleteFirst(String str) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1145,int len = (str == null ? 0 : str.length());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1146,if (len > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1147,"int index = indexOf(str, 0);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1148,if (index >= 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1149,"deleteImpl(index, index + len, len);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1152,return this;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1104, Replaces a portion of the string builder with another string.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1105, The length of the inserted string does not have to match the removed length.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1107," @param startIndex  the start index, inclusive, must be valid"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1108," @param endIndex  the end index, exclusive, must be valid except"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1109,  that if too large it is treated as end of string
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1110, @param str  the string to replace with
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1157,* Deletes all parts of the builder that the matcher matches.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1158,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1159,* Matchers can be used to perform advanced deletion behaviour.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1160,* For example you could write a matcher to delete all occurances
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1161,* where the character 'a' is followed by a number.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1163,"* @param matcher  the matcher to use to find the deletion, null causes no action"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1112, @throws IndexOutOfBoundsException if the index is invalid
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1114,"ublic StrBuilder replace(int startIndex, int endIndex, String str) {"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1115,"ndIndex = validateRange(startIndex, endIndex);"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1116,nt insertLen = str.length();
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1117,nt removeLen = endIndex - startIndex;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1166,public StrBuilder deleteAll(StrMatcher matcher) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1167,"return replace(matcher, null, 0, size, -1);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1171,* Deletes the first match within the builder using the specified matcher.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1172,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1173,* Matchers can be used to perform advanced deletion behaviour.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1174,* For example you could write a matcher to delete
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1175,* where the character 'a' is followed by a number.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1177,"* @param matcher  the matcher to use to find the deletion, null causes no action"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1178,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1180,public StrBuilder deleteFirst(StrMatcher matcher) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1181,"return replace(matcher, null, 0, size, 1);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1186,* Internal method to delete a range without validation.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1188,"* @param startIndex  the start index, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1189,"* @param endIndex  the end index (exclusive), must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1190,"* @param removeLen  the length to remove (endIndex - startIndex), must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1191,"* @param insertStr  the string to replace with, null means delete range"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1192,"* @param insertLen  the length of the insert string, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1193,"* @param len  the length, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1194,* @throws IndexOutOfBoundsException if any index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1196,"private void replaceImpl(int startIndex, int endIndex, int removeLen, String insertStr, int insertLen) {"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1119,f (insertLen > removeLen) {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1120,nsureCapacity(newSize);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1199,ensureCapacity(newSize);
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1126,"tr.getChars(0, insertLen, buffer, startIndex);"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1127,eturn this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1203,if (insertLen > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1204,"insertStr.getChars(0, insertLen, buffer, startIndex);"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1131, Replaces a portion of the string builder with another string builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1209,* Replaces a portion of the string builder with another string.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1137, @param builder  the string builder to replace with
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1215,"* @param replaceStr  the string to replace with, null means delete range"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1141,"ublic StrBuilder replace(int startIndex, int endIndex, StrBuilder builder) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1219,"public StrBuilder replace(int startIndex, int endIndex, String replaceStr) {"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1143,nt insertLen = builder.length();
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1144,nt removeLen = endIndex - startIndex;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1145,f (insertLen > removeLen) {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1146,nsureCapacity(size - removeLen + insertLen);
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1148,f (insertLen != removeLen) {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1149,/shift the current characters to the right
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1150,"ystem.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1151,/adjust the size accordingly
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1152,ize += (insertLen - removeLen);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1221,int insertLen = (replaceStr == null ? 0 : replaceStr.length());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1222,"replaceImpl(startIndex, endIndex, endIndex - startIndex, replaceStr, insertLen);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1223,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1228,* Replaces the search character with the replace character
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1229,* throughout the builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1231,* @param search  the search character
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1232,* @param replace  the replace character
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1233,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1235,"public StrBuilder replaceAll(char search, char replace) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1236,if (search != replace) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1237,for (int i = 0; i < size; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1238,if (buffer[i] == search) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1239,buffer[i] = replace;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1154,"uilder.getChars(0, insertLen, buffer, startIndex);"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1159, Replaces the search character with the replace character throughout the builder.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1161," @param search  the search string, null causes no action to occur"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1162," @param replace  the replace string, null is equivalent to an empty string"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1247,* Replaces the first instance of the search character with the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1248,* replace character in the builder.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1250,* @param search  the search character
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1251,* @param replace  the replace character
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1165,"ublic StrBuilder replace(char search, char replace) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1254,"public StrBuilder replaceFirst(char search, char replace) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1259,break;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1183,"ublic StrBuilder replace(String searchStr, String replaceStr) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1274,"public StrBuilder replaceAll(String searchStr, String replaceStr) {"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1186,"eplaceStr = (replaceStr == null ? """" : replaceStr);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1277,int replaceLen = (replaceStr == null ? 0 : replaceStr.length());
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1189,"eplace(index, index + searchLen, replaceStr);"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1190,"ndex = indexOf(searchStr, index);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1280,"replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1281,"index = indexOf(searchStr, index + replaceLen);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1284,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1288,* Replaces the first instance of the search string with the replace string.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1290,"* @param searchStr  the search string, null causes no action to occur"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1291,"* @param replaceStr  the replace string, null is equivalent to an empty string"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1292,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1294,"public StrBuilder replaceFirst(String searchStr, String replaceStr) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1295,int searchLen = (searchStr == null ? 0 : searchStr.length());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1296,if (searchLen > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1297,"int index = indexOf(searchStr, 0);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1298,if (index >= 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1299,int replaceLen = (replaceStr == null ? 0 : replaceStr.length());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1300,"replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1303,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1308,* Replaces all matches within the builder with the replace string.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1309,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1310,* Matchers can be used to perform advanced replace behaviour.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1311,* For example you could write a matcher to replace all occurances
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1312,* where the character 'a' is followed by a number.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1314,"* @param matcher  the matcher to use to find the deletion, null causes no action"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1315,"* @param replaceStr  the replace string, null is equivalent to an empty string"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1316,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1318,"public StrBuilder replaceAll(StrMatcher matcher, String replaceStr) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1319,"return replace(matcher, replaceStr, 0, size, -1);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1323,* Replaces the first match within the builder with the replace string.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1324,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1325,* Matchers can be used to perform advanced replace behaviour.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1326,* For example you could write a matcher to replace
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1327,* where the character 'a' is followed by a number.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1329,"* @param matcher  the matcher to use to find the deletion, null causes no action"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1330,"* @param replaceStr  the replace string, null is equivalent to an empty string"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1331,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1333,"public StrBuilder replaceFirst(StrMatcher matcher, String replaceStr) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1334,"return replace(matcher, replaceStr, 0, size, 1);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1339,* Advanced search and replaces within the builder using a matcher.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1340,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1341,* Matchers can be used to perform advanced behaviour.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1342,* For example you could write a matcher to delete all occurances
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1343,* where the character 'a' is followed by a number.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1345,"* @param matcher  the matcher to use to find the deletion, null causes no action"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1346,"* @param replaceStr  the string to replace the match with, null is a delete"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1347,"* @param startIndex  the start index, inclusive, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1348,"* @param endIndex  the end index, exclusive, must be valid except"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1349,*  that if too large it is treated as end of string
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1350,"* @param replaceCount  the number of times to replace, -1 for replace all"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1351,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1352,* @throws IndexOutOfBoundsException if start index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1354,public StrBuilder replace(
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1355,"StrMatcher matcher, String replaceStr,"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1356,"int startIndex, int endIndex, int replaceCount) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1357,"endIndex = validateRange(startIndex, endIndex);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1358,"return replaceImpl(matcher, replaceStr, startIndex, endIndex, replaceCount);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1362,* Replaces within the builder using a matcher.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1363,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1364,* Matchers can be used to perform advanced behaviour.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1365,* For example you could write a matcher to delete all occurances
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1366,* where the character 'a' is followed by a number.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1368,"* @param matcher  the matcher to use to find the deletion, null causes no action"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1369,"* @param replaceStr  the string to replace the match with, null is a delete"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1370,"* @param from  the start index, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1371,"* @param to  the end index (exclusive), must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1372,"* @param replaceCount  the number of times to replace, -1 for replace all"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1373,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1374,* @throws IndexOutOfBoundsException if any index is invalid
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1376,private StrBuilder replaceImpl(
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1377,"StrMatcher matcher, String replaceStr,"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1378,"int from, int to, int replaceCount) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1379,if (matcher == null || size == 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1380,return this;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1382,int replaceLen = (replaceStr == null ? 0 : replaceStr.length());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1383,char[] buf = buffer;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1384,for (int i = from; i < to && replaceCount != 0; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1385,"int removeLen = matcher.isMatch(buf, i, from, to);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1386,if (removeLen > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1387,"replaceImpl(i, i + removeLen, removeLen, replaceStr, replaceLen);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1388,to = to - removeLen + replaceLen;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1389,i = i + replaceLen - 1;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1390,if (replaceCount > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1391,replaceCount--;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1378, Checks of the string builder contains the specified char.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1580,* Checks if the string builder contains the specified char.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1394, Checks of the string builder contains the specified string.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1596,* Checks if the string builder contains the specified string.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1606,* Checks if the string builder contains a string matched using the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1607,* specified matcher.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1608,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1609,* Matchers can be used to perform advanced searching behaviour.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1610,* For example you could write a matcher to search for the character
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1611,* 'a' followed by a number.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1613,"* @param matcher  the matcher to use, null returns -1"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1614,* @return true if the matcher finds a match in the builder
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1616,public boolean contains(StrMatcher matcher) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1617,"return indexOf(matcher, 0) >= 0;"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1418," @param startIndex  the index to start at, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1635,"* @param startIndex  the index to start at, invalid index rounded to edge"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1454," @param startIndex  the index to start at, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1671,"* @param startIndex  the index to start at, invalid index rounded to edge"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1702,* Searches the string builder using the matcher to find the first match.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1703,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1704,* Matchers can be used to perform advanced searching behaviour.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1705,* For example you could write a matcher to find the character 'a'
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1706,* followed by a number.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1708,"* @param matcher  the matcher to use, null returns -1"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1709,"* @return the first index matched, or -1 if not found"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1711,public int indexOf(StrMatcher matcher) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1712,"return indexOf(matcher, 0);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1716,* Searches the string builder using the matcher to find the first
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1717,* match searching from the given index.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1718,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1719,* Matchers can be used to perform advanced searching behaviour.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1720,* For example you could write a matcher to find the character 'a'
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1721,* followed by a number.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1723,"* @param matcher  the matcher to use, null returns -1"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1724,"* @param startIndex  the index to start at, invalid index rounded to edge"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1725,"* @return the first index matched, or -1 if not found"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1727,"public int indexOf(StrMatcher matcher, int startIndex) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1728,startIndex = (startIndex < 0 ? 0 : startIndex);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1729,if (matcher == null || startIndex >= size) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1730,return -1;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1732,int len = size;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1733,if (len > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1734,char[] buf = buffer;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1735,for (int i = startIndex; i < len; i++) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1736,"if (matcher.isMatch(buf, i, startIndex, len) > 0) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1737,return i;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1741,return -1;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1825,* Searches the string builder using the matcher to find the last match.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1826,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1827,* Matchers can be used to perform advanced searching behaviour.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1828,* For example you could write a matcher to find the character 'a'
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1829,* followed by a number.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1831,"* @param matcher  the matcher to use, null returns -1"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1832,"* @return the last index matched, or -1 if not found"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1834,public int lastIndexOf(StrMatcher matcher) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1835,"return lastIndexOf(matcher, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1839,* Searches the string builder using the matcher to find the last
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1840,* match searching from the given index.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1841,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1842,* Matchers can be used to perform advanced searching behaviour.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1843,* For example you could write a matcher to find the character 'a'
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1844,* followed by a number.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1846,"* @param matcher  the matcher to use, null returns -1"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1847,"* @param startIndex  the index to start at, invalid index rounded to edge"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1848,"* @return the last index matched, or -1 if not found"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1850,"public int lastIndexOf(StrMatcher matcher, int startIndex) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1851,startIndex = (startIndex >= size ? size - 1 : startIndex);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1852,if (matcher == null || startIndex < 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1853,return -1;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1855,int len = size;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1856,if (len > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1857,char[] buf = buffer;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1858,int endIndex = startIndex + 1;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1859,for (int i = startIndex; i >= 0; i--) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1860,"if (matcher.isMatch(buf, i, 0, endIndex) > 0) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1861,return i;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1865,return -1;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,2,* Copyright 2003-2005 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,14,* limitations under the License.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,16,package org.apache.commons.lang.text;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,18,import java.util.Arrays;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,21,* A matcher class that can be queried to determine if a character array
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,22,* portion matches.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,23,* <p>
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,24,* This class comes complete with various constants and factory methods.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,25,"* If these do not suffice, you can subclass and implement your own matcher."
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,27,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,28,* @since 2.2
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,29,* @version $Id$
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,31,public abstract class StrMatcher {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,34,* Matches the comma character.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,36,"private static final StrMatcher COMMA_MATCHER = new CharMatcher(',');"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,38,* Matches the tab character.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,40,private static final StrMatcher TAB_MATCHER = new CharMatcher('\t');
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,42,* Matches the space character.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,44,private static final StrMatcher SPACE_MATCHER = new CharMatcher(' ');
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,46,"* Matches the same characters as StringTokenizer,"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,47,"* namely space, tab, newline, formfeed."
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,49,"private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher("" \t\n\r\f"".toCharArray());"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,51,* Matches the String trim() whitespace characters.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,53,private static final StrMatcher TRIM_MATCHER = new TrimMatcher();
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,55,* Matches the double quote character.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,57,private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher('\'');
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,59,* Matches the double quote character.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,61,"private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher('""');"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,63,* Matches the single or double quote character.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,65,"private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher(""'\"""".toCharArray());"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,67,* Matches no characters.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,69,private static final StrMatcher NONE_MATCHER = new NoMatcher();
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,74,* Returns a matcher which matches the comma character.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,76,* @return a matcher for a comma
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,78,public static StrMatcher commaMatcher() {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,79,return COMMA_MATCHER;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,83,* Returns a matcher which matches the tab character.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,85,* @return a matcher for a tab
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,87,public static StrMatcher tabMatcher() {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,88,return TAB_MATCHER;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,92,* Returns a matcher which matches the space character.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,94,* @return a matcher for a space
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,96,public static StrMatcher spaceMatcher() {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,97,return SPACE_MATCHER;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,101,"* Matches the same characters as StringTokenizer,"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,102,"* namely space, tab, newline and formfeed."
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,104,* @return the split matcher
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,106,public static StrMatcher splitMatcher() {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,107,return SPLIT_MATCHER;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,111,* Matches the String trim() whitespace characters.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,113,* @return the trim matcher
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,115,public static StrMatcher trimMatcher() {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,116,return TRIM_MATCHER;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,120,* Returns a matcher which matches the single quote character.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,122,* @return a matcher for a single quote
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,124,public static StrMatcher singleQuoteMatcher() {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,125,return SINGLE_QUOTE_MATCHER;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,129,* Returns a matcher which matches the double quote character.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,131,* @return a matcher for a double quote
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,133,public static StrMatcher doubleQuoteMatcher() {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,134,return DOUBLE_QUOTE_MATCHER;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,138,* Returns a matcher which matches the single or double quote character.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,140,* @return a matcher for a single or double quote
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,142,public static StrMatcher quoteMatcher() {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,143,return QUOTE_MATCHER;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,147,* Matches no characters.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,149,* @return a matcher that matches nothing
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,151,public static StrMatcher noneMatcher() {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,152,return NONE_MATCHER;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,156,* Constructor that creates a matcher from a character.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,158,"* @param ch  the character to match, must not be null"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,159,* @return a new Matcher for the given char
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,161,public static StrMatcher charMatcher(char ch) {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,162,return new CharMatcher(ch);
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,166,* Constructor that creates a matcher from a set of characters.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,168,"* @param chars  the characters to match, null or empty matches nothing"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,169,* @return a new matcher for the given char[]
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,171,public static StrMatcher charSetMatcher(char[] chars) {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,172,if (chars == null || chars.length == 0) {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,173,return NONE_MATCHER;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,175,if (chars.length == 1) {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,176,return new CharMatcher(chars[0]);
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,178,return new CharSetMatcher(chars);
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,182,* Constructor that creates a matcher from a string representing a set of characters.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,184,"* @param chars  the characters to match, null or empty matches nothing"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,185,* @return a new Matcher for the given characters
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,187,public static StrMatcher charSetMatcher(String chars) {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,188,if (chars == null || chars.length() == 0) {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,189,return NONE_MATCHER;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,191,if (chars.length() == 1) {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,192,return new CharMatcher(chars.charAt(0));
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,194,return new CharSetMatcher(chars.toCharArray());
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,198,* Constructor that creates a matcher from a string.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,200,"* @param str  the string to match, null or empty matches nothing"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,201,* @return a new Matcher for the given String
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,203,public static StrMatcher stringMatcher(String str) {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,204,if (str == null || str.length() == 0) {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,205,return NONE_MATCHER;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,207,return new StringMatcher(str);
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,212,* Constructor.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,214,protected StrMatcher() {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,215,super();
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,219,"* Returns the number of matching characters, zero for no match."
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,220,* <p>
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,221,* This method is called to check for a match.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,222,* The parameter <code>pos</code> represents the current position to be
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,223,* checked in the string <code>buffer</code> (a character array which must
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,224,* not be changed).
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,225,* The API guarantees that <code>pos</code> is a valid index for <code>buffer</code>.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,226,* <p>
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,227,* The character array may be larger than the active area to be matched.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,228,* Only values in the buffer between the specifed indices may be accessed.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,229,* <p>
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,230,* The matching code may check one character or many.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,231,* It may check characters preceeding <code>pos</code> as well as those
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,232,"* after, so long as no checks exceed the bounds specified."
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,233,* <p>
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,234,"* It must return zero for no match, or a positive number if a match was found."
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,235,* The number indicates the number of characters that matched.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,237,"* @param buffer  the text content to match against, do not change"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,238,"* @param pos  the starting position for the match, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,239,"* @param bufferStart  the first active index in the buffer, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,240,"* @param bufferEnd  the end index (exclusive) of the active buffer, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,241,"* @return the number of matching characters, zero for no match"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,243,"public abstract int isMatch(char[] buffer, int pos, int bufferStart, int bufferEnd);"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,247,* Class used to define a set of characters for matching purposes.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,249,static final class CharSetMatcher extends StrMatcher {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,250,/** The set of characters to match. */
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,251,private char[] chars;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,254,* Constructor that creates a matcher from a character array.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,256,"* @param chars  the characters to match, must not be null"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,258,CharSetMatcher(char chars[]) {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,259,super();
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,260,this.chars = (char[]) chars.clone();
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,261,Arrays.sort(this.chars);
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,265,* Returns whether or not the given charatcer matches.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,267,"* @param buffer  the text content to match against, do not change"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,268,"* @param pos  the starting position for the match, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,269,"* @param bufferStart  the first active index in the buffer, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,270,"* @param bufferEnd  the end index of the active buffer, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,271,"* @return the number of matching characters, zero for no match"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,273,"public int isMatch(char[] buffer, int pos, int bufferStart, int bufferEnd) {"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,274,"return Arrays.binarySearch(chars, buffer[pos]) >= 0 ? 1 : 0;"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,280,* Class used to define a character for matching purposes.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,282,static final class CharMatcher extends StrMatcher {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,283,/** The character to match. */
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,284,private char ch;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,287,* Constructor that creates a matcher that matches a single character.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,289,* @param ch  the character to match
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,291,CharMatcher(char ch) {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,292,super();
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,293,this.ch = ch;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,297,* Returns whether or not the given character matches.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,299,"* @param buffer  the text content to match against, do not change"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,300,"* @param pos  the starting position for the match, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,301,"* @param bufferStart  the first active index in the buffer, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,302,"* @param bufferEnd  the end index of the active buffer, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,303,"* @return the number of matching characters, zero for no match"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,305,"public int isMatch(char[] buffer, int pos, int bufferStart, int bufferEnd) {"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,306,return ch == buffer[pos] ? 1 : 0;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,312,* Class used to define a set of characters for matching purposes.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,314,static final class StringMatcher extends StrMatcher {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,315,"/** The string to match, as a character array. */"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,316,private char[] chars;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,319,* Constructor that creates a matcher from a String.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,321,"* @param str  the string to match, must not be null"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,323,StringMatcher(String str) {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,324,super();
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,325,chars = str.toCharArray();
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,329,* Returns whether or not the given text matches the stored string.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,331,"* @param buffer  the text content to match against, do not change"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,332,"* @param pos  the starting position for the match, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,333,"* @param bufferStart  the first active index in the buffer, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,334,"* @param bufferEnd  the end index of the active buffer, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,335,"* @return the number of matching characters, zero for no match"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,337,"public int isMatch(char[] buffer, int pos, int bufferStart, int bufferEnd) {"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,338,int len = chars.length;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,339,if (pos + len > bufferEnd) {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,340,return 0;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,342,"for (int i = 0; i < chars.length; i++, pos++) {"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,343,if (chars[i] != buffer[pos]) {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,344,return 0;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,347,return len;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,353,* Class used to match no characters.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,355,static final class NoMatcher extends StrMatcher {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,358,* Constructs a new instance of <code>NoMatcher</code>.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,360,NoMatcher() {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,361,super();
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,365,* Always returns <code>false</code>.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,367,"* @param buffer  the text content to match against, do not change"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,368,"* @param pos  the starting position for the match, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,369,"* @param bufferStart  the first active index in the buffer, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,370,"* @param bufferEnd  the end index of the active buffer, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,371,"* @return the number of matching characters, zero for no match"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,373,"public int isMatch(char[] buffer, int pos, int bufferStart, int bufferEnd) {"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,374,return 0;
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,380,* Class used to match whitespace as per trim().
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,382,static final class TrimMatcher extends StrMatcher {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,385,* Constructs a new instance of <code>TrimMatcher</code>.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,387,TrimMatcher() {
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,388,super();
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,392,* Returns whether or not the given charatcer matches.
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,394,"* @param buffer  the text content to match against, do not change"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,395,"* @param pos  the starting position for the match, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,396,"* @param bufferStart  the first active index in the buffer, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,397,"* @param bufferEnd  the end index of the active buffer, valid for buffer"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,398,"* @return the number of matching characters, zero for no match"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,400,"public int isMatch(char[] buffer, int pos, int bufferStart, int bufferEnd) {"
True,src/java/org/apache/commons/lang/text/StrMatcher.java,src/java/org/apache/commons/lang/text/StrMatcher.java,401,return buffer[pos] <= 32 ? 1 : 0;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,17,package org.apache.commons.lang.text;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,19,import java.util.Arrays;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,20,import java.util.Collection;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,21,import java.util.Collections;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,22,import java.util.Iterator;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,24,import junit.framework.Test;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,25,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,26,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,27,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,30,* Unit tests for {@link org.apache.commons.lang.text.StrBuilder}.
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,32,* @version $Id$
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,34,public class StrBuilderAppendInsertTest extends TestCase {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,36,"/** Test subclass of Object, with a toString method. */"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,37,private static Object FOO = new Object() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,38,public String toString() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,39,"return ""foo"";"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,44,* Main method.
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,46,"* @param args  command line arguments, ignored"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,48,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,49,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,53,* Return a new test suite containing this test case.
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,55,* @return a new test suite containing this test case
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,57,public static Test suite() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,58,TestSuite suite = new TestSuite(StrBuilderAppendInsertTest.class);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,59,"suite.setName(""StrBuilder Tests"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,60,return suite;
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,64,* Create a new test case with the specified name.
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,66,* @param name  the name
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,68,public StrBuilderAppendInsertTest(String name) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,69,super(name);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,73,public void testAppendWithNullText() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,74,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,75,"sb.setNullText(""NULL"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,76,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,78,sb.appendNull();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,79,"assertEquals(""NULL"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,81,sb.append((Object) null);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,82,"assertEquals(""NULLNULL"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,84,sb.append(FOO);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,85,"assertEquals(""NULLNULLfoo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,87,sb.append((String) null);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,88,"assertEquals(""NULLNULLfooNULL"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,90,"sb.append("""");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,91,"assertEquals(""NULLNULLfooNULL"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,93,"sb.append(""bar"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,94,"assertEquals(""NULLNULLfooNULLbar"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,96,sb.append((StringBuffer) null);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,97,"assertEquals(""NULLNULLfooNULLbarNULL"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,99,"sb.append(new StringBuffer(""baz""));"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,100,"assertEquals(""NULLNULLfooNULLbarNULLbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,104,public void testAppend_Object() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,105,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,106,sb.appendNull();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,107,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,109,sb.append((Object) null);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,110,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,112,sb.append(FOO);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,113,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,115,sb.append((StringBuffer) null);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,116,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,118,"sb.append(new StringBuffer(""baz""));"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,119,"assertEquals(""foobaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,121,"sb.append(new StrBuilder(""yes""));"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,122,"assertEquals(""foobazyes"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,126,public void testAppend_String() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,127,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,129,"sb.append(""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,130,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,132,sb.append((String) null);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,133,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,135,"sb.append("""");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,136,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,138,"sb.append(""bar"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,139,"assertEquals(""foobar"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,143,public void testAppend_String_int_int() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,144,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,146,"sb.append(""foo"", 0, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,147,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,149,"sb.append((String) null, 0, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,150,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,152,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,153,"sb.append(""bar"", -1, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,154,"fail(""append(char[], -1,) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,155,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,156,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,159,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,160,"sb.append(""bar"", 3, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,161,"fail(""append(char[], 3,) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,162,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,163,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,166,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,167,"sb.append(""bar"", 1, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,168,"fail(""append(char[],, -1) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,169,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,170,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,173,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,174,"sb.append(""bar"", 1, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,175,"fail(""append(char[], 1, 3) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,176,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,177,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,180,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,181,"sb.append(""bar"", -1, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,182,"fail(""append(char[], -1, 3) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,183,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,184,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,187,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,188,"sb.append(""bar"", 4, 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,189,"fail(""append(char[], 4, 0) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,190,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,191,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,194,"sb.append(""bar"", 3, 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,195,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,197,"sb.append(""abcbardef"", 3, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,198,"assertEquals(""foobar"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,202,public void testAppend_StringBuffer() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,203,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,205,"sb.append(new StringBuffer(""foo""));"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,206,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,208,sb.append((StringBuffer) null);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,209,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,211,"sb.append(new StringBuffer(""""));"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,212,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,214,"sb.append(new StringBuffer(""bar""));"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,215,"assertEquals(""foobar"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,219,public void testAppend_StringBuffer_int_int() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,220,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,222,"sb.append(new StringBuffer(""foo""), 0, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,223,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,225,"sb.append((StringBuffer) null, 0, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,226,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,228,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,229,"sb.append(new StringBuffer(""bar""), -1, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,230,"fail(""append(char[], -1,) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,231,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,232,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,235,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,236,"sb.append(new StringBuffer(""bar""), 3, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,237,"fail(""append(char[], 3,) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,238,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,239,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,242,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,243,"sb.append(new StringBuffer(""bar""), 1, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,244,"fail(""append(char[],, -1) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,245,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,246,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,249,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,250,"sb.append(new StringBuffer(""bar""), 1, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,251,"fail(""append(char[], 1, 3) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,252,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,253,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,256,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,257,"sb.append(new StringBuffer(""bar""), -1, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,258,"fail(""append(char[], -1, 3) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,259,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,260,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,263,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,264,"sb.append(new StringBuffer(""bar""), 4, 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,265,"fail(""append(char[], 4, 0) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,266,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,267,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,270,"sb.append(new StringBuffer(""bar""), 3, 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,271,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,273,"sb.append(new StringBuffer(""abcbardef""), 3, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,274,"assertEquals(""foobar"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,278,public void testAppend_StrBuilder() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,279,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,281,"sb.append(new StrBuilder(""foo""));"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,282,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,284,sb.append((StrBuilder) null);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,285,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,287,"sb.append(new StrBuilder(""""));"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,288,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,290,"sb.append(new StrBuilder(""bar""));"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,291,"assertEquals(""foobar"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,295,public void testAppend_StrBuilder_int_int() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,296,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,298,"sb.append(new StrBuilder(""foo""), 0, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,299,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,301,"sb.append((StrBuilder) null, 0, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,302,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,304,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,305,"sb.append(new StrBuilder(""bar""), -1, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,306,"fail(""append(char[], -1,) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,307,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,308,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,311,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,312,"sb.append(new StrBuilder(""bar""), 3, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,313,"fail(""append(char[], 3,) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,314,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,315,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,318,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,319,"sb.append(new StrBuilder(""bar""), 1, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,320,"fail(""append(char[],, -1) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,321,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,322,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,325,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,326,"sb.append(new StrBuilder(""bar""), 1, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,327,"fail(""append(char[], 1, 3) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,328,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,329,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,332,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,333,"sb.append(new StrBuilder(""bar""), -1, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,334,"fail(""append(char[], -1, 3) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,335,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,336,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,339,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,340,"sb.append(new StrBuilder(""bar""), 4, 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,341,"fail(""append(char[], 4, 0) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,342,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,343,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,346,"sb.append(new StrBuilder(""bar""), 3, 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,347,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,349,"sb.append(new StrBuilder(""abcbardef""), 3, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,350,"assertEquals(""foobar"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,354,public void testAppend_CharArray() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,355,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,357,sb.append((char[]) null);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,358,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,360,sb.append(new char[0]);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,361,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,363,"sb.append(new char[]{'f', 'o', 'o'});"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,364,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,368,public void testAppend_CharArray_int_int() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,369,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,371,"sb.append(new char[]{'f', 'o', 'o'}, 0, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,372,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,374,"sb.append((char[]) null, 0, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,375,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,377,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,378,"sb.append(new char[]{'b', 'a', 'r'}, -1, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,379,"fail(""append(char[], -1,) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,380,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,381,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,384,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,385,"sb.append(new char[]{'b', 'a', 'r'}, 3, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,386,"fail(""append(char[], 3,) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,387,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,388,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,391,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,392,"sb.append(new char[]{'b', 'a', 'r'}, 1, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,393,"fail(""append(char[],, -1) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,394,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,395,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,398,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,399,"sb.append(new char[]{'b', 'a', 'r'}, 1, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,400,"fail(""append(char[], 1, 3) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,401,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,402,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,405,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,406,"sb.append(new char[]{'b', 'a', 'r'}, -1, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,407,"fail(""append(char[], -1, 3) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,408,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,409,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,412,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,413,"sb.append(new char[]{'b', 'a', 'r'}, 4, 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,414,"fail(""append(char[], 4, 0) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,415,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,416,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,419,"sb.append(new char[]{'b', 'a', 'r'}, 3, 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,420,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,422,"sb.append(new char[]{'a', 'b', 'c', 'b', 'a', 'r', 'd', 'e', 'f'}, 3, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,423,"assertEquals(""foobar"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,427,public void testAppend_Primitive() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,428,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,429,sb.append(true);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,430,"assertEquals(""true"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,432,sb.append(false);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,433,"assertEquals(""truefalse"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,435,sb.append('!');
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,436,"assertEquals(""truefalse!"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,440,public void testAppend_PrimitiveNumber() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,441,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,442,sb.append(0);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,443,"assertEquals(""0"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,445,sb.append(1L);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,446,"assertEquals(""01"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,448,sb.append(2.3f);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,449,"assertEquals(""012.3"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,451,sb.append(4.5d);
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,452,"assertEquals(""012.34.5"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,456,public void testAppendPadding() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,457,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,458,"sb.append(""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,459,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,461,"sb.appendPadding(-1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,462,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,464,"sb.appendPadding(0, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,465,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,467,"sb.appendPadding(1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,468,"assertEquals(""foo-"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,470,"sb.appendPadding(16, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,471,"assertEquals(20, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,472,//            12345678901234567890
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,473,"assertEquals(""foo-----------------"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,477,public void testAppendFixedWidthPadLeft() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,478,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,479,"sb.appendFixedWidthPadLeft(""foo"", -1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,480,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,482,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,483,"sb.appendFixedWidthPadLeft(""foo"", 0, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,484,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,486,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,487,"sb.appendFixedWidthPadLeft(""foo"", 1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,488,"assertEquals(""o"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,490,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,491,"sb.appendFixedWidthPadLeft(""foo"", 2, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,492,"assertEquals(""oo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,494,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,495,"sb.appendFixedWidthPadLeft(""foo"", 3, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,496,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,498,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,499,"sb.appendFixedWidthPadLeft(""foo"", 4, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,500,"assertEquals(""-foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,502,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,503,"sb.appendFixedWidthPadLeft(""foo"", 10, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,504,"assertEquals(10, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,505,//            1234567890
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,506,"assertEquals(""-------foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,508,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,509,"sb.setNullText(""null"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,510,"sb.appendFixedWidthPadLeft(null, 5, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,511,"assertEquals(""-null"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,515,public void testAppendFixedWidthPadLeft_int() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,516,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,517,"sb.appendFixedWidthPadLeft(123, -1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,518,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,520,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,521,"sb.appendFixedWidthPadLeft(123, 0, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,522,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,524,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,525,"sb.appendFixedWidthPadLeft(123, 1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,526,"assertEquals(""3"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,528,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,529,"sb.appendFixedWidthPadLeft(123, 2, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,530,"assertEquals(""23"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,532,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,533,"sb.appendFixedWidthPadLeft(123, 3, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,534,"assertEquals(""123"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,536,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,537,"sb.appendFixedWidthPadLeft(123, 4, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,538,"assertEquals(""-123"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,540,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,541,"sb.appendFixedWidthPadLeft(123, 10, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,542,"assertEquals(10, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,543,//            1234567890
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,544,"assertEquals(""-------123"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,548,public void testAppendFixedWidthPadRight() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,549,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,550,"sb.appendFixedWidthPadRight(""foo"", -1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,551,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,553,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,554,"sb.appendFixedWidthPadRight(""foo"", 0, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,555,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,557,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,558,"sb.appendFixedWidthPadRight(""foo"", 1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,559,"assertEquals(""f"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,561,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,562,"sb.appendFixedWidthPadRight(""foo"", 2, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,563,"assertEquals(""fo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,565,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,566,"sb.appendFixedWidthPadRight(""foo"", 3, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,567,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,569,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,570,"sb.appendFixedWidthPadRight(""foo"", 4, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,571,"assertEquals(""foo-"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,573,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,574,"sb.appendFixedWidthPadRight(""foo"", 10, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,575,"assertEquals(10, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,576,//            1234567890
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,577,"assertEquals(""foo-------"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,579,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,580,"sb.setNullText(""null"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,581,"sb.appendFixedWidthPadRight(null, 5, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,582,"assertEquals(""null-"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,586,public void testAppendFixedWidthPadRight_int() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,587,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,588,"sb.appendFixedWidthPadRight(123, -1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,589,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,591,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,592,"sb.appendFixedWidthPadRight(123, 0, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,593,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,595,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,596,"sb.appendFixedWidthPadRight(123, 1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,597,"assertEquals(""1"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,599,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,600,"sb.appendFixedWidthPadRight(123, 2, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,601,"assertEquals(""12"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,603,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,604,"sb.appendFixedWidthPadRight(123, 3, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,605,"assertEquals(""123"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,607,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,608,"sb.appendFixedWidthPadRight(123, 4, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,609,"assertEquals(""123-"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,611,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,612,"sb.appendFixedWidthPadRight(123, 10, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,613,"assertEquals(10, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,614,//            1234567890
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,615,"assertEquals(""123-------"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,619,public void testAppendWithSeparators_Array() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,620,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,621,"sb.appendWithSeparators((Object[]) null, "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,622,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,624,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,625,"sb.appendWithSeparators(new Object[0], "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,626,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,628,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,629,"sb.appendWithSeparators(new Object[]{""foo"", ""bar"", ""baz""}, "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,630,"assertEquals(""foo,bar,baz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,632,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,633,"sb.appendWithSeparators(new Object[]{""foo"", ""bar"", ""baz""}, null);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,634,"assertEquals(""foobarbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,636,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,637,"sb.appendWithSeparators(new Object[]{""foo"", null, ""baz""}, "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,638,"assertEquals(""foo,,baz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,642,public void testAppendWithSeparators_Collection() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,643,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,644,"sb.appendWithSeparators((Collection) null, "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,645,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,647,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,648,"sb.appendWithSeparators(Collections.EMPTY_LIST, "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,649,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,651,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,652,"sb.appendWithSeparators(Arrays.asList(new Object[]{""foo"", ""bar"", ""baz""}), "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,653,"assertEquals(""foo,bar,baz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,655,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,656,"sb.appendWithSeparators(Arrays.asList(new Object[]{""foo"", ""bar"", ""baz""}), null);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,657,"assertEquals(""foobarbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,659,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,660,"sb.appendWithSeparators(Arrays.asList(new Object[]{""foo"", null, ""baz""}), "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,661,"assertEquals(""foo,,baz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,665,public void testAppendWithSeparators_Iterator() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,666,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,667,"sb.appendWithSeparators((Iterator) null, "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,668,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,670,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,671,"sb.appendWithSeparators(Collections.EMPTY_LIST.iterator(), "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,672,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,674,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,675,"sb.appendWithSeparators(Arrays.asList(new Object[]{""foo"", ""bar"", ""baz""}).iterator(), "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,676,"assertEquals(""foo,bar,baz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,678,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,679,"sb.appendWithSeparators(Arrays.asList(new Object[]{""foo"", ""bar"", ""baz""}).iterator(), null);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,680,"assertEquals(""foobarbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,682,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,683,"sb.appendWithSeparators(Arrays.asList(new Object[]{""foo"", null, ""baz""}).iterator(), "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,684,"assertEquals(""foo,,baz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,688,public void testAppendWithSeparatorsWithNullText() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,689,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,690,"sb.setNullText(""null"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,691,"sb.appendWithSeparators(new Object[]{""foo"", null, ""baz""}, "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,692,"assertEquals(""foo,null,baz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,694,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,695,"sb.appendWithSeparators(Arrays.asList(new Object[]{""foo"", null, ""baz""}), "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,696,"assertEquals(""foo,null,baz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,700,public void testInsert() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,702,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,703,"sb.append(""barbaz"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,704,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,706,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,707,"sb.insert(-1, FOO);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,708,"fail(""insert(-1, Object) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,709,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,710,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,713,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,714,"sb.insert(7, FOO);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,715,"fail(""insert(7, Object) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,716,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,717,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,720,"sb.insert(0, (Object) null);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,721,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,723,"sb.insert(0, FOO);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,724,"assertEquals(""foobarbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,726,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,727,"sb.append(""barbaz"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,728,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,730,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,731,"sb.insert(-1, ""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,732,"fail(""insert(-1, String) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,733,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,734,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,737,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,738,"sb.insert(7, ""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,739,"fail(""insert(7, String) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,740,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,741,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,744,"sb.insert(0, (String) null);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,745,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,747,"sb.insert(0, ""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,748,"assertEquals(""foobarbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,750,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,751,"sb.append(""barbaz"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,752,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,754,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,755,"sb.insert(-1, new char[]{'f', 'o', 'o'});"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,756,"fail(""insert(-1, char[]) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,757,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,758,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,761,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,762,"sb.insert(7, new char[]{'f', 'o', 'o'});"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,763,"fail(""insert(7, char[]) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,764,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,765,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,768,"sb.insert(0, (char[]) null);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,769,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,771,"sb.insert(0, new char[0]);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,772,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,774,"sb.insert(0, new char[]{'f', 'o', 'o'});"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,775,"assertEquals(""foobarbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,777,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,778,"sb.append(""barbaz"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,779,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,781,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,782,"sb.insert(-1, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 3, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,783,"fail(""insert(-1, char[], 3, 3) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,784,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,785,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,788,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,789,"sb.insert(7, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 3, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,790,"fail(""insert(7, char[], 3, 3) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,791,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,792,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,795,"sb.insert(0, (char[]) null, 0, 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,796,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,798,"sb.insert(0, new char[0], 0, 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,799,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,801,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,802,"sb.insert(0, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, -1, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,803,"fail(""insert(0, char[], -1, 3) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,804,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,805,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,808,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,809,"sb.insert(0, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 10, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,810,"fail(""insert(0, char[], 10, 3) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,811,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,812,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,815,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,816,"sb.insert(0, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 0, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,817,"fail(""insert(0, char[], 0, -1) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,818,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,819,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,822,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,823,"sb.insert(0, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 0, 10);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,824,"fail(""insert(0, char[], 0, 10) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,825,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,826,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,829,"sb.insert(0, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 0, 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,830,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,832,"sb.insert(0, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 3, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,833,"assertEquals(""foobarbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,835,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,836,"sb.append(""barbaz"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,837,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,839,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,840,"sb.insert(-1, true);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,841,"fail(""insert(-1, boolean) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,842,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,843,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,846,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,847,"sb.insert(7, true);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,848,"fail(""insert(7, boolean) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,849,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,850,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,853,"sb.insert(0, true);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,854,"assertEquals(""truebarbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,856,"sb.insert(0, false);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,857,"assertEquals(""falsetruebarbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,859,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,860,"sb.append(""barbaz"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,861,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,863,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,864,"sb.insert(-1, '!');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,865,"fail(""insert(-1, char) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,866,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,867,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,870,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,871,"sb.insert(7, '!');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,872,"fail(""insert(7, char) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,873,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,874,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,877,"sb.insert(0, '!');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,878,"assertEquals(""!barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,880,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,881,"sb.append(""barbaz"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,882,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,884,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,885,"sb.insert(-1, 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,886,"fail(""insert(-1, int) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,887,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,888,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,891,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,892,"sb.insert(7, 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,893,"fail(""insert(7, int) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,894,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,895,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,898,"sb.insert(0, '0');"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,899,"assertEquals(""0barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,901,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,902,"sb.append(""barbaz"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,903,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,905,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,906,"sb.insert(-1, 1L);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,907,"fail(""insert(-1, long) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,908,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,909,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,912,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,913,"sb.insert(7, 1L);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,914,"fail(""insert(7, long) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,915,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,916,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,919,"sb.insert(0, 1L);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,920,"assertEquals(""1barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,922,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,923,"sb.append(""barbaz"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,924,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,926,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,927,"sb.insert(-1, 2.3F);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,928,"fail(""insert(-1, float) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,929,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,930,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,933,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,934,"sb.insert(7, 2.3F);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,935,"fail(""insert(7, float) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,936,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,937,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,940,"sb.insert(0, 2.3F);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,941,"assertEquals(""2.3barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,943,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,944,"sb.append(""barbaz"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,945,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,947,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,948,"sb.insert(-1, 4.5D);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,949,"fail(""insert(-1, double) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,950,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,951,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,954,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,955,"sb.insert(7, 4.5D);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,956,"fail(""insert(7, double) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,957,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,958,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,961,"sb.insert(0, 4.5D);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,962,"assertEquals(""4.5barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,966,public void testInsertWithNullText() {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,967,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,968,"sb.setNullText(""null"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,969,"sb.append(""barbaz"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,970,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,972,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,973,"sb.insert(-1, FOO);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,974,"fail(""insert(-1, Object) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,975,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,976,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,979,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,980,"sb.insert(7, FOO);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,981,"fail(""insert(7, Object) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,982,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,983,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,986,"sb.insert(0, (Object) null);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,987,"assertEquals(""nullbarbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,989,"sb.insert(0, FOO);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,990,"assertEquals(""foonullbarbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,992,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,993,"sb.append(""barbaz"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,994,"assertEquals(""barbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,996,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,997,"sb.insert(-1, ""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,998,"fail(""insert(-1, String) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,999,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1000,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1003,try {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1004,"sb.insert(7, ""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1005,"fail(""insert(7, String) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1006,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1007,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1010,"sb.insert(0, (String) null);"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1011,"assertEquals(""nullbarbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1013,"sb.insert(0, ""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,src/test/org/apache/commons/lang/text/StrBuilderAppendInsertTest.java,1014,"assertEquals(""foonullbarbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,22,mport java.util.Collection;
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,23,mport java.util.Collections;
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,24,mport java.util.Iterator;
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,26,mport org.apache.commons.lang.ArrayUtils;
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,28,import org.apache.commons.lang.ArrayUtils;
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,41,"** Test subclass of Object, with a toString method. */"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,42,rivate static Object FOO = new Object() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,43,ublic String toString() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,44,"eturn ""foo"";"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,121,ublic void testDeleteChar() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,122,"trBuilder sb = new StrBuilder(""abc"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,123,b.delete('X');
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,124,"ssertEquals(""abc"",sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,125,b.delete('a');
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,126,"ssertEquals(""bc"",sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,127,b.delete('c');
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,128,"ssertEquals(""b"",sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,129,b.delete('b');
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,130,"ssertEquals("""",sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,133,ublic void testDeleteIntInt() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,134,"trBuilder sb = new StrBuilder(""abc"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,135,"b.delete(0, 1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,136,"ssertEquals(""bc"",sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,137,"b.delete(1, 2);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,138,"ssertEquals(""b"",sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,139,"b.delete(0, 1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,140,"ssertEquals("""",sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,141,"b.delete(0, 1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,142,"ssertEquals("""",sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,145,ublic void testDeleteString() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,146,"trBuilder sb = new StrBuilder(""abc"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,147,b.delete(null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,148,"ssertEquals(""abc"",sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,149,"b.delete("""");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,150,"ssertEquals(""abc"",sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,151,"b.delete(""X"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,152,"ssertEquals(""abc"",sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,153,"b.delete(""a"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,154,"ssertEquals(""bc"",sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,155,"b.delete(""c"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,156,"ssertEquals(""b"",sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,157,"b.delete(""b"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,158,"ssertEquals("""",sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,161,ublic void testDeleteCharAt() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,162,"trBuilder sb = new StrBuilder(""abc"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,163,b.deleteCharAt(0);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,164,"ssertEquals(""bc"",sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,167,ublic void testDeleteCharAtExceptions() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,168,"trBuilder sb = new StrBuilder(""abc"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,169,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,170,b.deleteCharAt(1000);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,171,"ail(""Expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,172, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,173,/ Expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,382," Tests {@link StrBuilder#replace(char, char)}."
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,384,ublic void testReplaceCharChar() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,385,"trBuilder sb = new StrBuilder(""abc"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,386,"b.replace('a', 'd');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,387,"ssertEquals(""dbc"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,388,"b.replace('a', 'd');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,389,"ssertEquals(""dbc"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,391,"b = new StrBuilder(""aabbcc"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,392,"b.replace('a', 'd');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,393,"ssertEquals(""ddbbcc"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,394,"b.replace('a', 'd');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,395,"ssertEquals(""ddbbcc"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,396,"b.replace('d', 'd');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,397,"ssertEquals(""ddbbcc"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,401," Tests {@link StrBuilder#replace(String, String)}."
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,403,ublic void testReplaceStringString() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,404,"trBuilder sb = new StrBuilder(""abc"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,405,"b.replace(""a"", ""d"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,406,"ssertEquals(""dbc"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,407,"b.replace(""a"", ""d"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,408,"ssertEquals(""dbc"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,410,"b = new StrBuilder(""aabbcc"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,411,"b.replace(""a"", ""d"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,412,"ssertEquals(""ddbbcc"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,413,"b.replace(""a"", ""d"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,414,"ssertEquals(""ddbbcc"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,417,ublic void testReplaceIntIntStrBuilder() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,418,"trBuilder sb = new StrBuilder(""abc"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,419,"b.replace(0, 1, new StrBuilder (""d""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,420,"ssertEquals(""dbc"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,421,"b.replace(0, 1, new StrBuilder (""aaa""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,422,"ssertEquals(""aaabc"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,424,"b = new StrBuilder(""aabbcc"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,425,"b.replace(0, 2, new StrBuilder(""d""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,426,"ssertEquals(""dbbcc"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,456,ublic void testStartsWith() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,457,his.testStartsWith(new StrBuilder());
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,458,"his.testStartsWith(new StrBuilder(""""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,459,his.testStartsWith(new StrBuilder(null));
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,344,public void testDeleteCharAt() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,345,"StrBuilder sb = new StrBuilder(""abc"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,346,sb.deleteCharAt(0);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,347,"assertEquals(""bc"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,349,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,350,sb.deleteCharAt(1000);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,351,"fail(""Expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,352,} catch (IndexOutOfBoundsException e) {}
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,462,oid testStartsWith(StrBuilder sb ) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,463,"ssertFalse(sb.startsWith(""a""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,464,ssertFalse(sb.startsWith(null));
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,465,"ssertTrue(sb.startsWith(""""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,466,"b.append(""abc"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,467,"ssertTrue(sb.startsWith(""a""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,468,"ssertTrue(sb.startsWith(""ab""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,469,"ssertTrue(sb.startsWith(""abc""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,470,"ssertFalse(sb.startsWith(""cba""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,356,public void testToCharArray() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,357,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,358,"assertEquals(ArrayUtils.EMPTY_CHAR_ARRAY, sb.toCharArray());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,360,char[] a = sb.toCharArray();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,361,"assertNotNull(""toCharArray() result is null"", a);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,362,"assertEquals(""toCharArray() result is too large"", 0, a.length);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,364,"sb.append(""junit"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,365,a = sb.toCharArray();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,366,"assertEquals(""toCharArray() result incorrect length"", 5, a.length);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,367,"assertTrue(""toCharArray() result does not match"", Arrays.equals(""junit"".toCharArray(), a));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,473,ublic void testEndsWith() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,474,his.testEndsWith(new StrBuilder());
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,475,"his.testEndsWith(new StrBuilder(""""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,476,his.testEndsWith(new StrBuilder(null));
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,370,public void testToCharArrayIntInt() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,371,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,372,"assertEquals(ArrayUtils.EMPTY_CHAR_ARRAY, sb.toCharArray(0, 0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,374,"sb.append(""junit"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,375,"char[] a = sb.toCharArray(0, 20); // too large test"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,376,"assertEquals(""toCharArray(int,int) result incorrect length"", 5, a.length);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,377,"assertTrue(""toCharArray(int,int) result does not match"", Arrays.equals(""junit"".toCharArray(), a));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,379,"a = sb.toCharArray(0, 4);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,380,"assertEquals(""toCharArray(int,int) result incorrect length"", 4, a.length);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,381,"assertTrue(""toCharArray(int,int) result does not match"", Arrays.equals(""juni"".toCharArray(), a));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,383,"a = sb.toCharArray(0, 4);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,384,"assertEquals(""toCharArray(int,int) result incorrect length"", 4, a.length);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,385,"assertTrue(""toCharArray(int,int) result does not match"", Arrays.equals(""juni"".toCharArray(), a));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,387,"a = sb.toCharArray(0, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,388,"assertNotNull(""toCharArray(int,int) result is null"", a);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,390,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,391,"sb.toCharArray(-1, 5);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,392,"fail(""no string index out of bound on -1"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,393,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,396,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,397,"sb.toCharArray(6, 5);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,398,"fail(""no string index out of bound on -1"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,399,} catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,479,oid testEndsWith(StrBuilder sb) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,480,"ssertFalse(sb.endsWith(""a""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,481,"ssertFalse(sb.endsWith(""c""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,482,"ssertTrue(sb.endsWith(""""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,483,ssertFalse(sb.endsWith(null));
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,484,"b.append(""abc"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,485,"ssertTrue(sb.endsWith(""c""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,486,"ssertTrue(sb.endsWith(""bc""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,487,"ssertTrue(sb.endsWith(""abc""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,488,"ssertFalse(sb.endsWith(""cba""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,489,"ssertFalse(sb.endsWith(""abcd""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,490,"ssertFalse(sb.endsWith("" abc""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,491,"ssertFalse(sb.endsWith(""abc ""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,403,public void testGetChars ( ) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,404,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,406,char[] input = new char[10];
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,407,char[] a = sb.getChars(input);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,408,"assertSame (input, a);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,409,"assertTrue(Arrays.equals(new char[10], a));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,411,"sb.append(""junit"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,412,a = sb.getChars(input);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,413,"assertSame(input, a);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,414,"assertTrue(Arrays.equals(new char[] {'j','u','n','i','t',0,0,0,0,0},a));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,416,a = sb.getChars(null);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,417,"assertNotSame(input,a);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,418,"assertEquals(5,a.length);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,419,"assertTrue(Arrays.equals(""junit"".toCharArray(),a));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,421,input = new char[5];
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,422,a = sb.getChars(input);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,423,"assertSame(input, a);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,425,input = new char[4];
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,426,a = sb.getChars(input);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,427,"assertNotSame(input, a);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,430,public void testGetCharsIntIntCharArrayInt( ) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,431,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,433,"sb.append(""junit"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,434,char[] a = new char[5];
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,435,"sb.getChars(0,5,a,0);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,436,"assertTrue(Arrays.equals(new char[] {'j','u','n','i','t'},a));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,438,a = new char[5];
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,439,"sb.getChars(0,2,a,3);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,440,"assertTrue(Arrays.equals(new char[] {0,0,0,'j','u'},a));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,442,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,443,"sb.getChars(-1,0,a,0);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,444,"fail(""no exception"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,446,catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,449,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,450,"sb.getChars(0,-1,a,0);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,451,"fail(""no exception"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,453,catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,456,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,457,"sb.getChars(0,20,a,0);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,458,"fail(""no exception"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,460,catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,463,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,464,"sb.getChars(4,2,a,0);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,465,"fail(""no exception"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,467,catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,513,ublic void testAppendWithNullText() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,514,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,515,"b.setNullText(""NULL"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,516,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,518,b.appendNull();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,519,"ssertEquals(""NULL"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,490,public void testDeleteIntInt() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,491,"StrBuilder sb = new StrBuilder(""abc"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,492,"sb.delete(0, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,493,"assertEquals(""bc"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,494,"sb.delete(1, 2);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,495,"assertEquals(""b"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,496,"sb.delete(0, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,497,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,498,"sb.delete(0, 1000);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,499,"assertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,501,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,502,"sb.delete(1, 2);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,503,"fail(""Expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,504,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,505,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,506,"sb.delete(-1, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,507,"fail(""Expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,508,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,510,"sb = new StrBuilder(""anything"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,511,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,512,"sb.delete(2, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,513,"fail(""Expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,514,} catch (IndexOutOfBoundsException e) {}
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,521,b.append((Object) null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,522,"ssertEquals(""NULLNULL"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,518,public void testDeleteAll_char() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,519,"StrBuilder sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,520,sb.deleteAll('X');
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,521,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,522,sb.deleteAll('a');
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,523,"assertEquals(""bcbccb"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,524,sb.deleteAll('c');
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,525,"assertEquals(""bbb"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,526,sb.deleteAll('b');
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,527,"assertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,524,b.append(FOO);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,525,"ssertEquals(""NULLNULLfoo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,529,"sb = new StrBuilder("""");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,530,sb.deleteAll('b');
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,531,"assertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,527,b.append((String) null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,528,"ssertEquals(""NULLNULLfooNULL"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,534,public void testDeleteFirst_char() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,535,"StrBuilder sb = new StrBuilder(""abcba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,536,sb.deleteFirst('X');
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,537,"assertEquals(""abcba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,538,sb.deleteFirst('a');
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,539,"assertEquals(""bcba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,540,sb.deleteFirst('c');
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,541,"assertEquals(""bba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,542,sb.deleteFirst('b');
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,543,"assertEquals(""ba"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,530,"b.append("""");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,531,"ssertEquals(""NULLNULLfooNULL"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,545,"sb = new StrBuilder("""");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,546,sb.deleteFirst('b');
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,547,"assertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,533,"b.append(""bar"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,534,"ssertEquals(""NULLNULLfooNULLbar"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,551,public void testDeleteAll_String() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,552,"StrBuilder sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,553,sb.deleteAll((String) null);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,554,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,555,"sb.deleteAll("""");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,556,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,558,"sb.deleteAll(""X"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,559,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,560,"sb.deleteAll(""a"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,561,"assertEquals(""bcbccb"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,562,"sb.deleteAll(""c"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,563,"assertEquals(""bbb"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,564,"sb.deleteAll(""b"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,565,"assertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,536,b.append((StringBuffer) null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,537,"ssertEquals(""NULLNULLfooNULLbarNULL"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,567,"sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,568,"sb.deleteAll(""bc"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,569,"assertEquals(""acba"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,539,"b.append(new StringBuffer(""baz""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,540,"ssertEquals(""NULLNULLfooNULLbarNULLbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,571,"sb = new StrBuilder("""");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,572,"sb.deleteAll(""bc"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,573,"assertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,544,ublic void testAppend_Object() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,545,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,546,b.appendNull();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,576,public void testDeleteFirst_String() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,577,"StrBuilder sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,578,sb.deleteFirst((String) null);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,579,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,580,"sb.deleteFirst("""");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,581,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,583,"sb.deleteFirst(""X"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,584,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,585,"sb.deleteFirst(""a"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,586,"assertEquals(""bcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,587,"sb.deleteFirst(""c"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,588,"assertEquals(""bbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,589,"sb.deleteFirst(""b"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,590,"assertEquals(""bccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,592,"sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,593,"sb.deleteFirst(""bc"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,594,"assertEquals(""abccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,596,"sb = new StrBuilder("""");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,597,"sb.deleteFirst(""bc"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,549,b.append((Object) null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,550,"ssertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,602,public void testDeleteAll_StrMatcher() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,603,"StrBuilder sb = new StrBuilder(""A0xA1A2yA3"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,604,sb.deleteAll((StrMatcher) null);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,605,"assertEquals(""A0xA1A2yA3"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,606,sb.deleteAll(A_NUMBER_MATCHER);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,607,"assertEquals(""xy"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,552,b.append(FOO);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,553,"ssertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,609,"sb = new StrBuilder(""Ax1"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,610,sb.deleteAll(A_NUMBER_MATCHER);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,611,"assertEquals(""Ax1"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,613,"sb = new StrBuilder("""");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,614,sb.deleteAll(A_NUMBER_MATCHER);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,615,"assertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,555,b.append((StringBuffer) null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,556,"ssertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,618,public void testDeleteFirst_StrMatcher() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,619,"StrBuilder sb = new StrBuilder(""A0xA1A2yA3"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,620,sb.deleteFirst((StrMatcher) null);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,621,"assertEquals(""A0xA1A2yA3"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,622,sb.deleteFirst(A_NUMBER_MATCHER);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,623,"assertEquals(""xA1A2yA3"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,558,"b.append(new StringBuffer(""baz""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,559,"ssertEquals(""foobaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,625,"sb = new StrBuilder(""Ax1"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,626,sb.deleteFirst(A_NUMBER_MATCHER);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,627,"assertEquals(""Ax1"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,561,"b.append(new StrBuilder(""yes""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,562,"ssertEquals(""foobazyes"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,629,"sb = new StrBuilder("""");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,630,sb.deleteFirst(A_NUMBER_MATCHER);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,631,"assertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,565,ublic void testAppend_String() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,566,trBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,635,public void testReplace_int_int_String() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,636,"StrBuilder sb = new StrBuilder(""abc"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,637,"sb.replace(0, 1, ""d"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,638,"assertEquals(""dbc"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,639,"sb.replace(0, 1, ""aaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,640,"assertEquals(""aaabc"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,641,"sb.replace(0, 3, """");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,642,"assertEquals(""bc"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,643,"sb.replace(1, 2, (String) null);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,644,"assertEquals(""b"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,645,"sb.replace(1, 1000, ""text"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,646,"assertEquals(""btext"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,647,"sb.replace(0, 1000, ""text"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,648,"assertEquals(""text"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,650,"sb = new StrBuilder(""atext"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,651,"sb.replace(1, 1, ""ny"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,652,"assertEquals(""anytext"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,653,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,654,"sb.replace(2, 1, ""anything"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,655,"fail(""Expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,656,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,658,sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,659,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,660,"sb.replace(1, 2, ""anything"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,661,"fail(""Expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,662,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,663,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,664,"sb.replace(-1, 1, ""anything"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,665,"fail(""Expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,666,} catch (IndexOutOfBoundsException e) {}
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,568,"b.append(""foo"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,569,"ssertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,670,public void testReplaceAll_char_char() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,671,"StrBuilder sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,672,"sb.replaceAll('x', 'y');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,673,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,674,"sb.replaceAll('a', 'd');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,675,"assertEquals(""dbcbccbd"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,676,"sb.replaceAll('b', 'e');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,677,"assertEquals(""dececced"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,678,"sb.replaceAll('c', 'f');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,679,"assertEquals(""defeffed"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,571,b.append((String) null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,572,"ssertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,683,public void testReplaceFirst_char_char() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,684,"StrBuilder sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,685,"sb.replaceFirst('x', 'y');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,686,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,687,"sb.replaceFirst('a', 'd');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,688,"assertEquals(""dbcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,689,"sb.replaceFirst('b', 'e');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,690,"assertEquals(""decbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,691,"sb.replaceFirst('c', 'f');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,692,"assertEquals(""defbccba"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,574,"b.append("""");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,575,"ssertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,696,public void testReplaceAll_String_String() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,697,"StrBuilder sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,698,"sb.replaceAll((String) null, null);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,699,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,700,"sb.replaceAll((String) null, ""anything"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,701,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,702,"sb.replaceAll("""", null);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,703,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,704,"sb.replaceAll("""", ""anything"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,705,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,707,"sb.replaceAll(""x"", ""y"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,708,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,709,"sb.replaceAll(""a"", ""d"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,710,"assertEquals(""dbcbccbd"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,711,"sb.replaceAll(""d"", null);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,712,"assertEquals(""bcbccb"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,713,"sb.replaceAll(""cb"", ""-"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,714,"assertEquals(""b-c-"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,716,"sb = new StrBuilder(""abcba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,717,"sb.replaceAll(""b"", ""xbx"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,718,"assertEquals(""axbxcxbxa"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,720,"sb = new StrBuilder(""bb"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,721,"sb.replaceAll(""b"", ""xbx"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,722,"assertEquals(""xbxxbx"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,725,public void testReplaceFirst_String_String() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,726,"StrBuilder sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,727,"sb.replaceFirst((String) null, null);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,728,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,729,"sb.replaceFirst((String) null, ""anything"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,730,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,731,"sb.replaceFirst("""", null);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,732,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,733,"sb.replaceFirst("""", ""anything"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,734,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,736,"sb.replaceFirst(""x"", ""y"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,737,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,738,"sb.replaceFirst(""a"", ""d"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,739,"assertEquals(""dbcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,740,"sb.replaceFirst(""d"", null);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,741,"assertEquals(""bcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,742,"sb.replaceFirst(""cb"", ""-"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,743,"assertEquals(""b-ccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,745,"sb = new StrBuilder(""abcba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,746,"sb.replaceFirst(""b"", ""xbx"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,747,"assertEquals(""axbxcba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,749,"sb = new StrBuilder(""bb"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,750,"sb.replaceFirst(""b"", ""xbx"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,751,"assertEquals(""xbxb"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,577,"b.append(""bar"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,578,"ssertEquals(""foobar"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,755,public void testReplaceAll_StrMatcher_String() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,756,"StrBuilder sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,757,"sb.replaceAll((StrMatcher) null, null);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,758,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,759,"sb.replaceAll((StrMatcher) null, ""anything"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,760,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,761,"sb.replaceAll(StrMatcher.noneMatcher(), null);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,762,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,763,"sb.replaceAll(StrMatcher.noneMatcher(), ""anything"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,764,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,766,"sb.replaceAll(StrMatcher.charMatcher('x'), ""y"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,767,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,768,"sb.replaceAll(StrMatcher.charMatcher('a'), ""d"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,769,"assertEquals(""dbcbccbd"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,770,"sb.replaceAll(StrMatcher.charMatcher('d'), null);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,771,"assertEquals(""bcbccb"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,772,"sb.replaceAll(StrMatcher.stringMatcher(""cb""), ""-"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,773,"assertEquals(""b-c-"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,775,"sb = new StrBuilder(""abcba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,776,"sb.replaceAll(StrMatcher.charMatcher('b'), ""xbx"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,777,"assertEquals(""axbxcxbxa"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,779,"sb = new StrBuilder(""bb"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,780,"sb.replaceAll(StrMatcher.charMatcher('b'), ""xbx"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,781,"assertEquals(""xbxxbx"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,783,"sb = new StrBuilder(""A1-A2A3-A4"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,784,"sb.replaceAll(A_NUMBER_MATCHER, ""***"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,785,"assertEquals(""***-******-***"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,788,public void testReplaceFirst_StrMatcher_String() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,789,"StrBuilder sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,790,"sb.replaceFirst((StrMatcher) null, null);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,791,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,792,"sb.replaceFirst((StrMatcher) null, ""anything"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,793,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,794,"sb.replaceFirst(StrMatcher.noneMatcher(), null);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,795,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,796,"sb.replaceFirst(StrMatcher.noneMatcher(), ""anything"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,797,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,799,"sb.replaceFirst(StrMatcher.charMatcher('x'), ""y"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,800,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,801,"sb.replaceFirst(StrMatcher.charMatcher('a'), ""d"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,802,"assertEquals(""dbcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,803,"sb.replaceFirst(StrMatcher.charMatcher('d'), null);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,804,"assertEquals(""bcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,805,"sb.replaceFirst(StrMatcher.stringMatcher(""cb""), ""-"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,806,"assertEquals(""b-ccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,808,"sb = new StrBuilder(""abcba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,809,"sb.replaceFirst(StrMatcher.charMatcher('b'), ""xbx"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,810,"assertEquals(""axbxcba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,812,"sb = new StrBuilder(""bb"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,813,"sb.replaceFirst(StrMatcher.charMatcher('b'), ""xbx"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,814,"assertEquals(""xbxb"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,816,"sb = new StrBuilder(""A1-A2A3-A4"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,817,"sb.replaceFirst(A_NUMBER_MATCHER, ""***"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,818,"assertEquals(""***-A2A3-A4"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,581,ublic void testAppend_String_int_int() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,582,trBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,822,public void testReplace_StrMatcher_String_int_int_int_VaryMatcher() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,823,"StrBuilder sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,824,"sb.replace((StrMatcher) null, ""x"", 0, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,825,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,827,"sb.replace(StrMatcher.charMatcher('a'), ""x"", 0, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,828,"assertEquals(""xbcbccbx"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,584,"b.append(""foo"", 0, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,585,"ssertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,830,"sb.replace(StrMatcher.stringMatcher(""cb""), ""x"", 0, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,831,"assertEquals(""xbxcxx"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,833,"sb = new StrBuilder(""A1-A2A3-A4"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,834,"sb.replace(A_NUMBER_MATCHER, ""***"", 0, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,835,"assertEquals(""***-******-***"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,837,sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,838,"sb.replace(A_NUMBER_MATCHER, ""***"", 0, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,839,"assertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,587,"b.append((String) null, 0, 1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,588,"ssertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,842,public void testReplace_StrMatcher_String_int_int_int_VaryReplace() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,843,"StrBuilder sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,844,"sb.replace(StrMatcher.stringMatcher(""cb""), ""cb"", 0, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,845,"assertEquals(""abcbccba"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,847,"sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,848,"sb.replace(StrMatcher.stringMatcher(""cb""), ""-"", 0, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,849,"assertEquals(""ab-c-a"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,851,"sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,852,"sb.replace(StrMatcher.stringMatcher(""cb""), ""+++"", 0, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,853,"assertEquals(""ab+++c+++a"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,855,"sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,856,"sb.replace(StrMatcher.stringMatcher(""cb""), """", 0, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,857,"assertEquals(""abca"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,859,"sb = new StrBuilder(""abcbccba"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,860,"sb.replace(StrMatcher.stringMatcher(""cb""), null, 0, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,861,"assertEquals(""abca"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,590,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,591,"b.append(""bar"", -1, 1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,592,"ail(""append(char[], -1,) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,593, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,594,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,597,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,598,"b.append(""bar"", 3, 1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,599,"ail(""append(char[], 3,) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,600, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,601,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,604,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,605,"b.append(""bar"", 1, -1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,606,"ail(""append(char[],, -1) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,607, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,608,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,611,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,612,"b.append(""bar"", 1, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,613,"ail(""append(char[], 1, 3) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,614, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,615,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,618,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,619,"b.append(""bar"", -1, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,620,"ail(""append(char[], -1, 3) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,621, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,622,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,625,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,626,"b.append(""bar"", 4, 0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,627,"ail(""append(char[], 4, 0) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,628, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,629,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,632,"b.append(""bar"", 3, 0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,633,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,635,"b.append(""abcbardef"", 3, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,636,"ssertEquals(""foobar"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,639,ublic void testAppend_StringBuffer() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,640,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,642,"b.append(new StringBuffer(""foo""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,643,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,645,b.append((StringBuffer) null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,646,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,648,"b.append(new StringBuffer(""""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,649,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,651,"b.append(new StringBuffer(""bar""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,652,"ssertEquals(""foobar"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,655,ublic void testAppend_StringBuffer_int_int() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,656,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,658,"b.append(new StringBuffer(""foo""), 0, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,659,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,661,"b.append((StringBuffer) null, 0, 1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,662,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,664,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,665,"b.append(new StringBuffer(""bar""), -1, 1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,666,"ail(""append(char[], -1,) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,667, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,668,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,671,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,672,"b.append(new StringBuffer(""bar""), 3, 1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,673,"ail(""append(char[], 3,) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,674, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,675,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,678,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,679,"b.append(new StringBuffer(""bar""), 1, -1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,680,"ail(""append(char[],, -1) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,681, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,682,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,685,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,686,"b.append(new StringBuffer(""bar""), 1, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,687,"ail(""append(char[], 1, 3) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,688, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,689,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,692,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,693,"b.append(new StringBuffer(""bar""), -1, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,694,"ail(""append(char[], -1, 3) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,695, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,696,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,699,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,700,"b.append(new StringBuffer(""bar""), 4, 0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,701,"ail(""append(char[], 4, 0) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,702, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,703,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,706,"b.append(new StringBuffer(""bar""), 3, 0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,707,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,709,"b.append(new StringBuffer(""abcbardef""), 3, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,710,"ssertEquals(""foobar"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,713,ublic void testAppend_StrBuilder() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,714,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,716,"b.append(new StrBuilder(""foo""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,717,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,719,b.append((StrBuilder) null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,720,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,722,"b.append(new StrBuilder(""""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,723,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,725,"b.append(new StrBuilder(""bar""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,726,"ssertEquals(""foobar"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,729,ublic void testAppend_StrBuilder_int_int() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,730,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,732,"b.append(new StrBuilder(""foo""), 0, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,733,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,735,"b.append((StrBuilder) null, 0, 1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,736,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,738,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,739,"b.append(new StrBuilder(""bar""), -1, 1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,740,"ail(""append(char[], -1,) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,741, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,742,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,745,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,746,"b.append(new StrBuilder(""bar""), 3, 1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,747,"ail(""append(char[], 3,) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,748, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,749,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,752,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,753,"b.append(new StrBuilder(""bar""), 1, -1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,754,"ail(""append(char[],, -1) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,755, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,756,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,759,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,760,"b.append(new StrBuilder(""bar""), 1, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,761,"ail(""append(char[], 1, 3) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,762, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,763,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,766,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,767,"b.append(new StrBuilder(""bar""), -1, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,768,"ail(""append(char[], -1, 3) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,769, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,770,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,773,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,774,"b.append(new StrBuilder(""bar""), 4, 0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,775,"ail(""append(char[], 4, 0) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,776, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,777,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,780,"b.append(new StrBuilder(""bar""), 3, 0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,781,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,783,"b.append(new StrBuilder(""abcbardef""), 3, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,784,"ssertEquals(""foobar"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,787,ublic void testAppend_CharArray() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,788,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,790,b.append((char[]) null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,791,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,793,b.append(new char[0]);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,794,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,796,"b.append(new char[]{'f', 'o', 'o'});"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,797,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,800,ublic void testAppend_CharArray_int_int() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,801,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,803,"b.append(new char[]{'f', 'o', 'o'}, 0, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,804,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,806,"b.append((char[]) null, 0, 1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,807,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,809,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,810,"b.append(new char[]{'b', 'a', 'r'}, -1, 1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,811,"ail(""append(char[], -1,) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,812, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,813,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,816,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,817,"b.append(new char[]{'b', 'a', 'r'}, 3, 1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,818,"ail(""append(char[], 3,) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,819, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,820,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,823,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,824,"b.append(new char[]{'b', 'a', 'r'}, 1, -1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,825,"ail(""append(char[],, -1) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,826, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,827,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,830,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,831,"b.append(new char[]{'b', 'a', 'r'}, 1, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,832,"ail(""append(char[], 1, 3) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,833, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,834,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,837,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,838,"b.append(new char[]{'b', 'a', 'r'}, -1, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,839,"ail(""append(char[], -1, 3) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,840, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,841,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,844,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,845,"b.append(new char[]{'b', 'a', 'r'}, 4, 0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,846,"ail(""append(char[], 4, 0) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,847, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,848,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,851,"b.append(new char[]{'b', 'a', 'r'}, 3, 0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,852,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,854,"b.append(new char[]{'a', 'b', 'c', 'b', 'a', 'r', 'd', 'e', 'f'}, 3, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,855,"ssertEquals(""foobar"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,858,ublic void testAppend_Primitive() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,859,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,860,b.append(true);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,861,"ssertEquals(""true"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,863,b.append(false);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,864,"ssertEquals(""truefalse"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,866,b.append('!');
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,867,"ssertEquals(""truefalse!"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,870,ublic void testAppend_PrimitiveNumber() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,871,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,872,b.append(0);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,873,"ssertEquals(""0"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,875,b.append(1L);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,876,"ssertEquals(""01"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,878,b.append(2.3f);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,879,"ssertEquals(""012.3"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,881,b.append(4.5d);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,882,"ssertEquals(""012.34.5"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,886,ublic void testAppendPadding() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,887,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,888,"b.append(""foo"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,889,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,891,"b.appendPadding(-1, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,892,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,894,"b.appendPadding(0, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,895,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,897,"b.appendPadding(1, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,898,"ssertEquals(""foo-"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,900,"b.appendPadding(16, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,901,"ssertEquals(20, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,902,/            12345678901234567890
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,903,"ssertEquals(""foo-----------------"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,907,ublic void testAppendFixedWidthPadLeft() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,908,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,909,"b.appendFixedWidthPadLeft(""foo"", -1, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,910,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,912,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,913,"b.appendFixedWidthPadLeft(""foo"", 0, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,914,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,916,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,917,"b.appendFixedWidthPadLeft(""foo"", 1, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,918,"ssertEquals(""o"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,920,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,921,"b.appendFixedWidthPadLeft(""foo"", 2, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,922,"ssertEquals(""oo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,924,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,925,"b.appendFixedWidthPadLeft(""foo"", 3, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,926,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,928,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,929,"b.appendFixedWidthPadLeft(""foo"", 4, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,930,"ssertEquals(""-foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,932,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,933,"b.appendFixedWidthPadLeft(""foo"", 10, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,934,"ssertEquals(10, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,935,/            1234567890
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,936,"ssertEquals(""-------foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,938,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,939,"b.setNullText(""null"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,940,"b.appendFixedWidthPadLeft(null, 5, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,941,"ssertEquals(""-null"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,944,ublic void testAppendFixedWidthPadLeft_int() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,945,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,946,"b.appendFixedWidthPadLeft(123, -1, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,947,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,949,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,950,"b.appendFixedWidthPadLeft(123, 0, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,951,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,953,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,954,"b.appendFixedWidthPadLeft(123, 1, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,955,"ssertEquals(""3"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,957,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,958,"b.appendFixedWidthPadLeft(123, 2, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,959,"ssertEquals(""23"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,961,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,962,"b.appendFixedWidthPadLeft(123, 3, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,963,"ssertEquals(""123"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,965,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,966,"b.appendFixedWidthPadLeft(123, 4, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,967,"ssertEquals(""-123"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,969,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,970,"b.appendFixedWidthPadLeft(123, 10, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,971,"ssertEquals(10, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,972,/            1234567890
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,973,"ssertEquals(""-------123"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,977,ublic void testAppendFixedWidthPadRight() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,978,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,979,"b.appendFixedWidthPadRight(""foo"", -1, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,980,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,982,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,983,"b.appendFixedWidthPadRight(""foo"", 0, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,984,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,986,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,987,"b.appendFixedWidthPadRight(""foo"", 1, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,988,"ssertEquals(""f"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,990,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,991,"b.appendFixedWidthPadRight(""foo"", 2, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,992,"ssertEquals(""fo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,994,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,995,"b.appendFixedWidthPadRight(""foo"", 3, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,996,"ssertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,998,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,999,"b.appendFixedWidthPadRight(""foo"", 4, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1000,"ssertEquals(""foo-"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1002,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1003,"b.appendFixedWidthPadRight(""foo"", 10, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1004,"ssertEquals(10, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1005,/            1234567890
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1006,"ssertEquals(""foo-------"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1008,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1009,"b.setNullText(""null"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1010,"b.appendFixedWidthPadRight(null, 5, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1011,"ssertEquals(""null-"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1014,ublic void testAppendFixedWidthPadRight_int() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1015,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1016,"b.appendFixedWidthPadRight(123, -1, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1017,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1019,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1020,"b.appendFixedWidthPadRight(123, 0, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1021,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1023,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1024,"b.appendFixedWidthPadRight(123, 1, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1025,"ssertEquals(""1"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1027,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1028,"b.appendFixedWidthPadRight(123, 2, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1029,"ssertEquals(""12"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1031,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1032,"b.appendFixedWidthPadRight(123, 3, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1033,"ssertEquals(""123"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1035,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1036,"b.appendFixedWidthPadRight(123, 4, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1037,"ssertEquals(""123-"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1039,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1040,"b.appendFixedWidthPadRight(123, 10, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1041,"ssertEquals(10, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1042,/            1234567890
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1043,"ssertEquals(""123-------"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1047,ublic void testAppendWithSeparators_Array() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1048,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1049,"b.appendWithSeparators((Object[]) null, "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1050,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1052,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1053,"b.appendWithSeparators(new Object[0], "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1054,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1056,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1057,"b.appendWithSeparators(new Object[]{""foo"", ""bar"", ""baz""}, "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1058,"ssertEquals(""foo,bar,baz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1060,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1061,"b.appendWithSeparators(new Object[]{""foo"", ""bar"", ""baz""}, null);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1062,"ssertEquals(""foobarbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1064,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1065,"b.appendWithSeparators(new Object[]{""foo"", null, ""baz""}, "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1066,"ssertEquals(""foo,,baz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1069,ublic void testAppendWithSeparators_Collection() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1070,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1071,"b.appendWithSeparators((Collection) null, "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1072,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1074,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1075,"b.appendWithSeparators(Collections.EMPTY_LIST, "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1076,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1078,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1079,"b.appendWithSeparators(Arrays.asList(new Object[]{""foo"", ""bar"", ""baz""}), "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1080,"ssertEquals(""foo,bar,baz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1082,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1083,"b.appendWithSeparators(Arrays.asList(new Object[]{""foo"", ""bar"", ""baz""}), null);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1084,"ssertEquals(""foobarbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1086,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1087,"b.appendWithSeparators(Arrays.asList(new Object[]{""foo"", null, ""baz""}), "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1088,"ssertEquals(""foo,,baz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1091,ublic void testAppendWithSeparators_Iterator() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1092,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1093,"b.appendWithSeparators((Iterator) null, "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1094,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1096,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1097,"b.appendWithSeparators(Collections.EMPTY_LIST.iterator(), "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1098,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1100,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1101,"b.appendWithSeparators(Arrays.asList(new Object[]{""foo"", ""bar"", ""baz""}).iterator(), "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1102,"ssertEquals(""foo,bar,baz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1104,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1105,"b.appendWithSeparators(Arrays.asList(new Object[]{""foo"", ""bar"", ""baz""}).iterator(), null);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1106,"ssertEquals(""foobarbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1108,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1109,"b.appendWithSeparators(Arrays.asList(new Object[]{""foo"", null, ""baz""}).iterator(), "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1110,"ssertEquals(""foo,,baz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1113,ublic void testAppendWithSeparatorsWithNullText() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1114,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1115,"b.setNullText(""null"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1116,"b.appendWithSeparators(new Object[]{""foo"", null, ""baz""}, "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1117,"ssertEquals(""foo,null,baz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1119,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1120,"b.appendWithSeparators(Arrays.asList(new Object[]{""foo"", null, ""baz""}), "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1121,"ssertEquals(""foo,null,baz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1124,ublic void testInsert() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1126,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1127,"b.append(""barbaz"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1128,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1130,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1131,"b.insert(-1, FOO);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1132,"ail(""insert(-1, Object) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1133, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1134,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1137,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1138,"b.insert(7, FOO);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1139,"ail(""insert(7, Object) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1140, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1141,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1144,"b.insert(0, (Object) null);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1145,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1147,"b.insert(0, FOO);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1148,"ssertEquals(""foobarbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1150,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1151,"b.append(""barbaz"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1152,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1154,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1155,"b.insert(-1, ""foo"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1156,"ail(""insert(-1, String) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1157, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1158,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1161,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1162,"b.insert(7, ""foo"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1163,"ail(""insert(7, String) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1164, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1165,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1168,"b.insert(0, (String) null);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1169,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1171,"b.insert(0, ""foo"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1172,"ssertEquals(""foobarbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1174,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1175,"b.append(""barbaz"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1176,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1178,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1179,"b.insert(-1, new char[]{'f', 'o', 'o'});"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1180,"ail(""insert(-1, char[]) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1181, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1182,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1185,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1186,"b.insert(7, new char[]{'f', 'o', 'o'});"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1187,"ail(""insert(7, char[]) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1188, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1189,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1192,"b.insert(0, (char[]) null);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1193,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1195,"b.insert(0, new char[0]);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1196,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1198,"b.insert(0, new char[]{'f', 'o', 'o'});"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1199,"ssertEquals(""foobarbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1201,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1202,"b.append(""barbaz"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1203,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1205,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1206,"b.insert(-1, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 3, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1207,"ail(""insert(-1, char[], 3, 3) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1208, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1209,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1212,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1213,"b.insert(7, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 3, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1214,"ail(""insert(7, char[], 3, 3) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1215, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1216,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1219,"b.insert(0, (char[]) null, 0, 0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1220,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1222,"b.insert(0, new char[0], 0, 0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1223,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1225,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1226,"b.insert(0, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, -1, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1227,"ail(""insert(0, char[], -1, 3) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1228, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1229,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1232,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1233,"b.insert(0, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 10, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1234,"ail(""insert(0, char[], 10, 3) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1235, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1236,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1239,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1240,"b.insert(0, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 0, -1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1241,"ail(""insert(0, char[], 0, -1) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1242, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1243,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1246,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1247,"b.insert(0, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 0, 10);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1248,"ail(""insert(0, char[], 0, 10) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1249, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1250,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1253,"b.insert(0, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 0, 0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1254,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1256,"b.insert(0, new char[]{'a', 'b', 'c', 'f', 'o', 'o', 'd', 'e', 'f'}, 3, 3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1257,"ssertEquals(""foobarbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1259,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1260,"b.append(""barbaz"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1261,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1263,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1264,"b.insert(-1, true);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1265,"ail(""insert(-1, boolean) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1266, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1267,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1270,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1271,"b.insert(7, true);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1272,"ail(""insert(7, boolean) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1273, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1274,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1277,"b.insert(0, true);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1278,"ssertEquals(""truebarbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1280,"b.insert(0, false);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1281,"ssertEquals(""falsetruebarbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1283,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1284,"b.append(""barbaz"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1285,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1287,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1288,"b.insert(-1, '!');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1289,"ail(""insert(-1, char) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1290, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1291,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1294,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1295,"b.insert(7, '!');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1296,"ail(""insert(7, char) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1297, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1298,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1301,"b.insert(0, '!');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1302,"ssertEquals(""!barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1304,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1305,"b.append(""barbaz"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1306,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1308,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1309,"b.insert(-1, 0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1310,"ail(""insert(-1, int) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1311, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1312,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1315,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1316,"b.insert(7, 0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1317,"ail(""insert(7, int) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1318, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1319,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1322,"b.insert(0, '0');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1323,"ssertEquals(""0barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1325,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1326,"b.append(""barbaz"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1327,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1329,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1330,"b.insert(-1, 1L);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1331,"ail(""insert(-1, long) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1332, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1333,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1336,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1337,"b.insert(7, 1L);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1338,"ail(""insert(7, long) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1339, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1340,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1343,"b.insert(0, 1L);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1344,"ssertEquals(""1barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1346,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1347,"b.append(""barbaz"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1348,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1350,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1351,"b.insert(-1, 2.3F);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1352,"ail(""insert(-1, float) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1353, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1354,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1357,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1358,"b.insert(7, 2.3F);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1359,"ail(""insert(7, float) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1360, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1361,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1364,"b.insert(0, 2.3F);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1365,"ssertEquals(""2.3barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1367,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1368,"b.append(""barbaz"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1369,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1371,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1372,"b.insert(-1, 4.5D);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1373,"ail(""insert(-1, double) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1374, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1375,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1378,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1379,"b.insert(7, 4.5D);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1380,"ail(""insert(7, double) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1381, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1382,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1385,"b.insert(0, 4.5D);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1386,"ssertEquals(""4.5barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1389,ublic void testInsertWithNullText() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1391,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1392,"b.setNullText(""null"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1393,"b.append(""barbaz"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1394,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1396,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1397,"b.insert(-1, FOO);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1398,"ail(""insert(-1, Object) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1399, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1400,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1403,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1404,"b.insert(7, FOO);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1405,"ail(""insert(7, Object) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1406, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1407,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1410,"b.insert(0, (Object) null);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1411,"ssertEquals(""nullbarbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1413,"b.insert(0, FOO);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1414,"ssertEquals(""foonullbarbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1416,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1417,"b.append(""barbaz"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1418,"ssertEquals(""barbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1420,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1421,"b.insert(-1, ""foo"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1422,"ail(""insert(-1, String) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1423, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1424,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1427,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1428,"b.insert(7, ""foo"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1429,"ail(""insert(7, String) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1430, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1431,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1434,"b.insert(0, (String) null);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1435,"ssertEquals(""nullbarbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1437,"b.insert(0, ""foo"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1438,"ssertEquals(""foonullbarbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1441,ublic void testToCharArray ( ) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,864,public void testReplace_StrMatcher_String_int_int_int_VaryStartIndex() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,865,"StrBuilder sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,866,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,867,"assertEquals(""-x--y-"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1443,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1444,"ssertEquals(ArrayUtils.EMPTY_CHAR_ARRAY, sb.toCharArray());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,869,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,870,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 1, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,871,"assertEquals(""aax--y-"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1446,har[] a = sb.toCharArray();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1447,"ssertNotNull (""toCharArray() result is null"", a);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1448,"ssertEquals (""toCharArray() result is too large"", 0, a.length);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,873,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,874,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 2, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,875,"assertEquals(""aax--y-"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1450,"b.append(""junit"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1451, = sb.toCharArray();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1452,"ssertEquals (""toCharArray() result incorrect length"",5, a.length);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1453,"ssertTrue (""toCharArray() result does not match"",Arrays.equals(""junit"".toCharArray(), a));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1456,ublic void testToCharArrayIntInt() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1457,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1458,"ssertEquals(ArrayUtils.EMPTY_CHAR_ARRAY, sb.toCharArray(0, 0));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1460,"b.append(""junit"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1461,"har[] a = sb.toCharArray(0, 20); //too large test"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1462,"ssertEquals (""toCharArray(int,int) result incorrect length"",5, a.length);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1463,"ssertTrue (""toCharArray(int,int) result does not match"",Arrays.equals(""junit"".toCharArray(), a));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,877,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,878,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 3, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,879,"assertEquals(""aax--y-"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1465," = sb.toCharArray(0, 4);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1466,"ssertEquals (""toCharArray(int,int) result incorrect length"",4, a.length);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1467,"ssertTrue (""toCharArray(int,int) result does not match"",Arrays.equals(""juni"".toCharArray(), a));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,881,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,882,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 4, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,883,"assertEquals(""aaxa-ay-"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1469," = sb.toCharArray(0, 4);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1470,"ssertEquals (""toCharArray(int,int) result incorrect length"",4, a.length);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1471,"ssertTrue (""toCharArray(int,int) result does not match"",Arrays.equals(""juni"".toCharArray(), a));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,885,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,886,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 5, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,887,"assertEquals(""aaxaa-y-"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,889,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,890,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 6, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,891,"assertEquals(""aaxaaaay-"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,893,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,894,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 7, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,895,"assertEquals(""aaxaaaay-"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,897,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,898,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 8, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,899,"assertEquals(""aaxaaaay-"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1473," = sb.toCharArray(0,1);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1474,"ssertNotNull (""toCharArray(int,int) result is null"", a);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,901,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,902,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 9, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,903,"assertEquals(""aaxaaaayaa"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,905,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,906,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 10, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,907,"assertEquals(""aaxaaaayaa"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,909,"sb = new StrBuilder(""aaxaaaayaa"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1477,"b.toCharArray(-1, 5);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1478,"ail (""no string index out of bound on -1"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1480,atch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,911,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 11, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,912,fail();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,913,} catch (IndexOutOfBoundsException ex) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,914,"assertEquals(""aaxaaaayaa"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,916,"sb = new StrBuilder(""aaxaaaayaa"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1483,"b.toCharArray(6, 5);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1484,"ail (""no string index out of bound on -1"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1486,atch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,918,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", -1, sb.length(), -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,919,fail();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,920,} catch (IndexOutOfBoundsException ex) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,921,"assertEquals(""aaxaaaayaa"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1489,ublic void testGetChars ( ) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1491,trBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,924,public void testReplace_StrMatcher_String_int_int_int_VaryEndIndex() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,925,"StrBuilder sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,926,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 0, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,927,"assertEquals(""aaxaaaayaa"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1493,har[] input = new char[10];
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1494,har[] a = sb.getChars(input);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1495,"ssertSame (input, a);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1496,"ssertTrue(Arrays.equals(new char[10], a));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,929,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,930,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 2, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,931,"assertEquals(""-xaaaayaa"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1498,"b.append(""junit"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1499, = sb.getChars(input);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1500,"ssertSame(input, a);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1501,"ssertTrue(Arrays.equals(new char[] {'j','u','n','i','t',0,0,0,0,0},a));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,933,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,934,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 3, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,935,"assertEquals(""-xaaaayaa"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1503, = sb.getChars(null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1504,"ssertNotSame(input,a);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1505,"ssertEquals(5,a.length);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1506,"ssertTrue(Arrays.equals(""junit"".toCharArray(),a));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,937,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,938,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 4, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,939,"assertEquals(""-xaaaayaa"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1508,nput = new char[5];
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1509, = sb.getChars(input);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1510,"ssertSame(input, a);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,941,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,942,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 5, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,943,"assertEquals(""-x-aayaa"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1512,nput = new char[4];
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1513, = sb.getChars(input);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1514,"ssertNotSame(input, a);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1517,ublic void testGetCharsIntIntCharArrayInt( ) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,945,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,946,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 6, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,947,"assertEquals(""-x-aayaa"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1519,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1521,"b.append(""junit"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1522,har[] a = new char[5];
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1523,"b.getChars(0,5,a,0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1524,"ssertTrue(Arrays.equals(new char[] {'j','u','n','i','t'},a));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,949,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,950,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 7, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,951,"assertEquals(""-x--yaa"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1526, = new char[5];
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1527,"b.getChars(0,2,a,3);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1528,"ssertTrue(Arrays.equals(new char[] {0,0,0,'j','u'},a));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,953,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,954,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 8, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,955,"assertEquals(""-x--yaa"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1530,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1531,"b.getChars(-1,0,a,0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1532,"ail(""no exception"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1534,atch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,957,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,958,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 9, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,959,"assertEquals(""-x--yaa"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1537,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1538,"b.getChars(0,-1,a,0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1539,"ail(""no exception"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1541,atch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,961,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,962,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 10, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,963,"assertEquals(""-x--y-"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1544,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1545,"b.getChars(0,20,a,0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1546,"ail(""no exception"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1548,atch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,965,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,966,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 1000, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,967,"assertEquals(""-x--y-"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,969,"sb = new StrBuilder(""aaxaaaayaa"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1552,"b.getChars(4,2,a,0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1553,"ail(""no exception"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1555,atch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,971,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 2, 1, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,972,fail();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,973,} catch (IndexOutOfBoundsException ex) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,974,"assertEquals(""aaxaaaayaa"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1559,ublic void testAppendStringBuffer() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1560,trBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,977,public void testReplace_StrMatcher_String_int_int_int_VaryCount() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,978,"StrBuilder sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,979,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 10, -1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,980,"assertEquals(""-x--y-"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1562,b = sb.append(new StringBuffer());
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1563,ssertNotNull(sb);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,982,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,983,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 10, 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,984,"assertEquals(""aaxaaaayaa"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1565,"b = sb.append(new StringBuffer(""junit""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,986,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,987,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 10, 1);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,988,"assertEquals(""-xaaaayaa"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1567,"ssertEquals (""junit"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1570,ublic void testAppendStrBuilder() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1571,trBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,990,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,991,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 10, 2);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,992,"assertEquals(""-x-aayaa"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1573,b = sb.append((StrBuilder)null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1574,ssertNotNull(sb);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,994,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,995,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 10, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,996,"assertEquals(""-x--yaa"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1576,b = sb.append(new StrBuilder());
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1577,ssertNotNull(sb);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1578,"ssertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,998,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,999,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 10, 4);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1000,"assertEquals(""-x--y-"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1002,"sb = new StrBuilder(""aaxaaaayaa"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1003,"sb.replace(StrMatcher.stringMatcher(""aa""), ""-"", 0, 10, 5);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1004,"assertEquals(""-x--y-"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1581,ublic void testStringBuffer() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1008,public void testReverse() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1009,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1010,"assertEquals("""", sb.reverse().toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1011,sb.append(true);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1012,"assertEquals(""eurt"", sb.reverse().toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1013,"assertEquals(""true"", sb.reverse().toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1017,public void testStartsWith() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1018,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1019,"assertFalse(sb.startsWith(""a""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1020,assertFalse(sb.startsWith(null));
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1021,"assertTrue(sb.startsWith(""""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1022,"sb.append(""abc"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1023,"assertTrue(sb.startsWith(""a""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1024,"assertTrue(sb.startsWith(""ab""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1025,"assertTrue(sb.startsWith(""abc""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1026,"assertFalse(sb.startsWith(""cba""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1029,public void testEndsWith() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1583,"ssertEquals (new StringBuffer().toString(), sb.toStringBuffer().toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1031,"assertFalse(sb.endsWith(""a""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1032,"assertFalse(sb.endsWith(""c""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1033,"assertTrue(sb.endsWith(""""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1034,assertFalse(sb.endsWith(null));
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1035,"sb.append(""abc"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1036,"assertTrue(sb.endsWith(""c""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1037,"assertTrue(sb.endsWith(""bc""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1038,"assertTrue(sb.endsWith(""abc""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1039,"assertFalse(sb.endsWith(""cba""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1040,"assertFalse(sb.endsWith(""abcd""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1041,"assertFalse(sb.endsWith("" abc""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1042,"assertFalse(sb.endsWith(""abc ""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1046,public void testSubstringInt() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1047,"StrBuilder sb = new StrBuilder (""hello goodbye"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1048,"assertEquals (""goodbye"", sb.substring(6));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1049,"assertEquals (""hello goodbye"".substring(6), sb.substring(6));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1050,"assertEquals (""hello goodbye"", sb.substring(0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1051,"assertEquals (""hello goodbye"".substring(0), sb.substring(0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1052,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1053,sb.substring(-1);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1054,fail ();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1055,} catch (IndexOutOfBoundsException e) {}
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1585,"b.append(""junit"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1586,"ssertEquals(new StringBuffer(""junit"").toString(), sb.toStringBuffer().toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1057,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1058,sb.substring(15);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1059,fail ();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1060,} catch (IndexOutOfBoundsException e) {}
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1589,ublic void testReverse() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1590,trBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1064,public void testSubstringIntInt() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1065,"StrBuilder sb = new StrBuilder (""hello goodbye"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1066,"assertEquals (""hello"", sb.substring(0, 5));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1067,"assertEquals (""hello goodbye"".substring(0, 6), sb.substring(0, 6));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1592,tring actual = sb.reverse().toString();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1593,"ssertEquals ("""", actual);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1069,"assertEquals (""goodbye"", sb.substring(6, 13));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1070,"assertEquals (""hello goodbye"".substring(6,13), sb.substring(6, 13));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1595,b.append(true);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1596,ctual = sb.reverse().toString();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1597,"ssertEquals(""eurt"", actual);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1072,"assertEquals (""goodbye"", sb.substring(6, 20));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1599,ctual = sb.reverse().toString();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1600,"ssertEquals(""true"", actual);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1074,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1075,"sb.substring(-1, 5);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1076,fail();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1077,} catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1079,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1080,"sb.substring(15, 20);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1081,fail();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1082,} catch (IndexOutOfBoundsException e) {}
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1603,ublic void testIndexOfChar() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1086,public void testMidString() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1087,"StrBuilder sb = new StrBuilder(""hello goodbye hello"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1088,"assertEquals(""goodbye"", sb.midString(6, 7));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1089,"assertEquals(""hello"", sb.midString(0, 5));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1090,"assertEquals(""hello"", sb.midString(-5, 5));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1091,"assertEquals("""", sb.midString(0, -1));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1092,"assertEquals("""", sb.midString(20, 2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1095,public void testRightString() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1096,"StrBuilder sb = new StrBuilder(""left right"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1097,"assertEquals(""right"", sb.rightString(5));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1098,"assertEquals("""", sb.rightString(0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1099,"assertEquals("""", sb.rightString(-5));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1100,"assertEquals(""left right"", sb.rightString(15));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1103,public void testLeftString() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1104,"StrBuilder sb = new StrBuilder(""left right"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1105,"assertEquals(""left"", sb.leftString(4));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1106,"assertEquals("""", sb.leftString(0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1107,"assertEquals("""", sb.leftString(-5));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1108,"assertEquals(""left right"", sb.leftString(15));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1112,public void testContains_char() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1113,"StrBuilder sb = new StrBuilder(""abcdefghijklmnopqrstuvwxyz"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1114,"assertEquals(true, sb.contains('a'));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1115,"assertEquals(true, sb.contains('o'));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1116,"assertEquals(true, sb.contains('z'));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1117,"assertEquals(false, sb.contains('1'));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1120,public void testContains_String() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1121,"StrBuilder sb = new StrBuilder(""abcdefghijklmnopqrstuvwxyz"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1122,"assertEquals(true, sb.contains(""a""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1123,"assertEquals(true, sb.contains(""pq""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1124,"assertEquals(true, sb.contains(""z""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1125,"assertEquals(false, sb.contains(""zyx""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1126,"assertEquals(false, sb.contains((String) null));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1129,public void testContains_StrMatcher() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1130,"StrBuilder sb = new StrBuilder(""abcdefghijklmnopqrstuvwxyz"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1131,"assertEquals(true, sb.contains(StrMatcher.charMatcher('a')));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1132,"assertEquals(true, sb.contains(StrMatcher.stringMatcher(""pq"")));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1133,"assertEquals(true, sb.contains(StrMatcher.charMatcher('z')));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1134,"assertEquals(false, sb.contains(StrMatcher.stringMatcher(""zy"")));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1135,"assertEquals(false, sb.contains((StrMatcher) null));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1137,sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1138,"assertEquals(false, sb.contains(A_NUMBER_MATCHER));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1139,"sb.append(""B A1 C"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1140,"assertEquals(true, sb.contains(A_NUMBER_MATCHER));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1144,public void testIndexOf_char() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1616,ublic void testLastIndexOfChar() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1617,"trBuilder sb = new StrBuilder(""abab"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1619,"ssertEquals (2, sb.lastIndexOf('a'));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1620,/should work like String#lastIndexOf
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1621,"ssertEquals (""abab"".lastIndexOf('a'), sb.lastIndexOf('a'));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1623,"ssertEquals(3, sb.lastIndexOf('b'));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1624,"ssertEquals (""abab"".lastIndexOf('b'), sb.lastIndexOf('b'));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1626,"ssertEquals (-1, sb.lastIndexOf('z'));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1629,ublic void testIndexOfCharInt() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1157,public void testIndexOf_char_int() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1646,ublic void testLastIndexOfCharInt() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1174,public void testLastIndexOf_char() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1175,"StrBuilder sb = new StrBuilder(""abab"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1177,"assertEquals (2, sb.lastIndexOf('a'));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1178,//should work like String#lastIndexOf
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1179,"assertEquals (""abab"".lastIndexOf('a'), sb.lastIndexOf('a'));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1181,"assertEquals(3, sb.lastIndexOf('b'));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1182,"assertEquals (""abab"".lastIndexOf('b'), sb.lastIndexOf('b'));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1184,"assertEquals (-1, sb.lastIndexOf('z'));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1187,public void testLastIndexOf_char_int() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1663,ublic void testIndexOfString() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1205,public void testIndexOf_String() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1685,ublic void testLastIndexOfString() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1686,"trBuilder sb = new StrBuilder(""abab"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1688,"ssertEquals(2, sb.lastIndexOf(""a""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1689,/should work like String#lastIndexOf
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1690,"ssertEquals(""abab"".lastIndexOf(""a""), sb.lastIndexOf(""a""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1692,"ssertEquals(2, sb.lastIndexOf(""ab""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1693,/should work like String#lastIndexOf
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1694,"ssertEquals(""abab"".lastIndexOf(""ab""), sb.lastIndexOf(""ab""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1696,"ssertEquals(3, sb.lastIndexOf(""b""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1697,"ssertEquals(""abab"".lastIndexOf(""b""), sb.lastIndexOf(""b""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1699,"ssertEquals(1, sb.lastIndexOf(""ba""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1700,"ssertEquals(""abab"".lastIndexOf(""ba""), sb.lastIndexOf(""ba""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1702,"ssertEquals(-1, sb.lastIndexOf(""z""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1704,"ssertEquals(-1, sb.lastIndexOf((String) null));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1707,ublic void testIndexOfStringInt() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1227,public void testIndexOf_String_int() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1733,ublic void testLastIndexOfStringInt() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1253,public void testLastIndexOf_String() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1254,"StrBuilder sb = new StrBuilder(""abab"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1256,"assertEquals(2, sb.lastIndexOf(""a""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1257,//should work like String#lastIndexOf
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1258,"assertEquals(""abab"".lastIndexOf(""a""), sb.lastIndexOf(""a""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1260,"assertEquals(2, sb.lastIndexOf(""ab""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1261,//should work like String#lastIndexOf
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1262,"assertEquals(""abab"".lastIndexOf(""ab""), sb.lastIndexOf(""ab""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1264,"assertEquals(3, sb.lastIndexOf(""b""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1265,"assertEquals(""abab"".lastIndexOf(""b""), sb.lastIndexOf(""b""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1267,"assertEquals(1, sb.lastIndexOf(""ba""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1268,"assertEquals(""abab"".lastIndexOf(""ba""), sb.lastIndexOf(""ba""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1270,"assertEquals(-1, sb.lastIndexOf(""z""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1272,"assertEquals(-1, sb.lastIndexOf((String) null));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1275,public void testLastIndexOf_String_int() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1759,ublic void testContainsChar() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1760,"trBuilder sb = new StrBuilder(""abcdefghijklmnopqrstuvwxyz"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1761,ssertTrue (sb.contains('a'));
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1762,ssertTrue (sb.contains('o'));
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1763,ssertTrue (sb.contains('z'));
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1764,ssertFalse (sb.contains('1'));
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1767,ublic void testContainsString() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1768,"trBuilder sb = new StrBuilder(""abcdefghijklmnopqrstuvwxyz"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1769,"ssertTrue (sb.contains(""a""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1770,"ssertTrue (sb.contains(""pq""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1771,"ssertTrue (sb.contains(""z""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1772,"ssertFalse (sb.contains(""zyx""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1775,ublic void testMidString() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1776,"trBuilder sb = new StrBuilder(""hello goodbye hello"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1777,"ssertEquals (""goodbye"", sb.midString(6, 7));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1778,"ssertEquals (""hello"", sb.midString(0, 5));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1779,"ssertEquals (""hello"", sb.midString(-5, 5));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1780,"ssertEquals ("""", sb.midString(0, -1));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1781,"ssertEquals ("""", sb.midString(20, 2));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1784,ublic void testRightString() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1785,"trBuilder sb = new StrBuilder(""left right"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1786,"ssertEquals (""right"", sb.rightString(5));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1787,"ssertEquals ("""", sb.rightString(0));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1788,"ssertEquals ("""", sb.rightString(-5));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1789,"ssertEquals (""left right"", sb.rightString(15));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1792,ublic void testLeftString() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1793,"trBuilder sb = new StrBuilder(""left right"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1794,"ssertEquals (""left"", sb.leftString(4));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1795,"ssertEquals ("""", sb.leftString(0));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1796,"ssertEquals ("""", sb.leftString(-5));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1797,"ssertEquals (""left right"", sb.leftString(15));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1800,ublic void testSubstringInt() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1801,"trBuilder sb = new StrBuilder (""hello goodbye"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1802,"ssertEquals (""goodbye"", sb.substring(6));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1803,"ssertEquals (""hello goodbye"".substring(6), sb.substring(6));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1804,"ssertEquals (""hello goodbye"", sb.substring(0));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1805,"ssertEquals (""hello goodbye"".substring(0), sb.substring(0));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1806,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1807,b.substring(-1);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1808,ail ();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1809, catch (IndexOutOfBoundsException e) {}
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1811,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1812,b.substring(15);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1813,ail ();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1814, catch (IndexOutOfBoundsException e) {}
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1818,ublic void testSubstringIntInt() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1819,"trBuilder sb = new StrBuilder (""hello goodbye"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1820,"ssertEquals (""hello"", sb.substring(0, 5));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1821,"ssertEquals (""hello goodbye"".substring(0, 6), sb.substring(0, 6));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1302,public void testIndexOf_StrMatcher() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1303,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1304,"assertEquals(-1, sb.indexOf((StrMatcher) null));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1305,"assertEquals(-1, sb.indexOf(StrMatcher.charMatcher('a')));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1823,"ssertEquals (""goodbye"", sb.substring(6, 13));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1824,"ssertEquals (""hello goodbye"".substring(6,13), sb.substring(6, 13));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1307,"sb.append(""ab bd"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1308,"assertEquals(0, sb.indexOf(StrMatcher.charMatcher('a')));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1309,"assertEquals(1, sb.indexOf(StrMatcher.charMatcher('b')));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1310,"assertEquals(2, sb.indexOf(StrMatcher.spaceMatcher()));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1311,"assertEquals(4, sb.indexOf(StrMatcher.charMatcher('d')));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1312,"assertEquals(-1, sb.indexOf(StrMatcher.noneMatcher()));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1313,"assertEquals(-1, sb.indexOf((StrMatcher) null));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1826,"ssertEquals (""goodbye"", sb.substring(6, 20));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1315,"sb.append("" A1 junction"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1316,"assertEquals(6, sb.indexOf(A_NUMBER_MATCHER));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1319,public void testIndexOf_StrMatcher_int() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1320,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1321,"assertEquals(-1, sb.indexOf((StrMatcher) null, 2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1322,"assertEquals(-1, sb.indexOf(StrMatcher.charMatcher('a'), 2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1324,"sb.append(""ab bd"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1325,"assertEquals(0, sb.indexOf(StrMatcher.charMatcher('a'), -2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1326,"assertEquals(0, sb.indexOf(StrMatcher.charMatcher('a'), 0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1327,"assertEquals(-1, sb.indexOf(StrMatcher.charMatcher('a'), 2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1328,"assertEquals(-1, sb.indexOf(StrMatcher.charMatcher('a'), 20));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1330,"assertEquals(1, sb.indexOf(StrMatcher.charMatcher('b'), -1));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1331,"assertEquals(1, sb.indexOf(StrMatcher.charMatcher('b'), 0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1332,"assertEquals(1, sb.indexOf(StrMatcher.charMatcher('b'), 1));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1333,"assertEquals(3, sb.indexOf(StrMatcher.charMatcher('b'), 2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1334,"assertEquals(3, sb.indexOf(StrMatcher.charMatcher('b'), 3));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1335,"assertEquals(-1, sb.indexOf(StrMatcher.charMatcher('b'), 4));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1336,"assertEquals(-1, sb.indexOf(StrMatcher.charMatcher('b'), 5));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1337,"assertEquals(-1, sb.indexOf(StrMatcher.charMatcher('b'), 6));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1339,"assertEquals(2, sb.indexOf(StrMatcher.spaceMatcher(), -2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1340,"assertEquals(2, sb.indexOf(StrMatcher.spaceMatcher(), 0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1341,"assertEquals(2, sb.indexOf(StrMatcher.spaceMatcher(), 2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1342,"assertEquals(-1, sb.indexOf(StrMatcher.spaceMatcher(), 4));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1343,"assertEquals(-1, sb.indexOf(StrMatcher.spaceMatcher(), 20));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1345,"assertEquals(-1, sb.indexOf(StrMatcher.noneMatcher(), 0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1346,"assertEquals(-1, sb.indexOf((StrMatcher) null, 0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1348,"sb.append("" A1 junction with A2"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1349,"assertEquals(6, sb.indexOf(A_NUMBER_MATCHER, 5));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1350,"assertEquals(6, sb.indexOf(A_NUMBER_MATCHER, 6));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1351,"assertEquals(23, sb.indexOf(A_NUMBER_MATCHER, 7));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1352,"assertEquals(23, sb.indexOf(A_NUMBER_MATCHER, 22));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1353,"assertEquals(23, sb.indexOf(A_NUMBER_MATCHER, 23));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1354,"assertEquals(-1, sb.indexOf(A_NUMBER_MATCHER, 24));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1357,public void testLastIndexOf_StrMatcher() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1358,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1359,"assertEquals(-1, sb.lastIndexOf((StrMatcher) null));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1360,"assertEquals(-1, sb.lastIndexOf(StrMatcher.charMatcher('a')));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1828,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1829,"b.substring(-1, 5);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1830,ail();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1831, catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1362,"sb.append(""ab bd"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1363,"assertEquals(0, sb.lastIndexOf(StrMatcher.charMatcher('a')));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1364,"assertEquals(3, sb.lastIndexOf(StrMatcher.charMatcher('b')));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1365,"assertEquals(2, sb.lastIndexOf(StrMatcher.spaceMatcher()));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1366,"assertEquals(4, sb.lastIndexOf(StrMatcher.charMatcher('d')));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1367,"assertEquals(-1, sb.lastIndexOf(StrMatcher.noneMatcher()));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1368,"assertEquals(-1, sb.lastIndexOf((StrMatcher) null));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1833,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1834,"b.substring(15, 20);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1835,ail();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1836, catch (IndexOutOfBoundsException e) {}
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1370,"sb.append("" A1 junction"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1371,"assertEquals(6, sb.lastIndexOf(A_NUMBER_MATCHER));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1374,public void testLastIndexOf_StrMatcher_int() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1375,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1376,"assertEquals(-1, sb.lastIndexOf((StrMatcher) null, 2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1377,"assertEquals(-1, sb.lastIndexOf(StrMatcher.charMatcher('a'), 2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1379,"sb.append(""ab bd"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1380,"assertEquals(-1, sb.lastIndexOf(StrMatcher.charMatcher('a'), -2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1381,"assertEquals(0, sb.lastIndexOf(StrMatcher.charMatcher('a'), 0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1382,"assertEquals(0, sb.lastIndexOf(StrMatcher.charMatcher('a'), 2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1383,"assertEquals(0, sb.lastIndexOf(StrMatcher.charMatcher('a'), 20));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1385,"assertEquals(-1, sb.lastIndexOf(StrMatcher.charMatcher('b'), -1));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1386,"assertEquals(-1, sb.lastIndexOf(StrMatcher.charMatcher('b'), 0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1387,"assertEquals(1, sb.lastIndexOf(StrMatcher.charMatcher('b'), 1));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1388,"assertEquals(1, sb.lastIndexOf(StrMatcher.charMatcher('b'), 2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1389,"assertEquals(3, sb.lastIndexOf(StrMatcher.charMatcher('b'), 3));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1390,"assertEquals(3, sb.lastIndexOf(StrMatcher.charMatcher('b'), 4));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1391,"assertEquals(3, sb.lastIndexOf(StrMatcher.charMatcher('b'), 5));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1392,"assertEquals(3, sb.lastIndexOf(StrMatcher.charMatcher('b'), 6));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1394,"assertEquals(-1, sb.lastIndexOf(StrMatcher.spaceMatcher(), -2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1395,"assertEquals(-1, sb.lastIndexOf(StrMatcher.spaceMatcher(), 0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1396,"assertEquals(2, sb.lastIndexOf(StrMatcher.spaceMatcher(), 2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1397,"assertEquals(2, sb.lastIndexOf(StrMatcher.spaceMatcher(), 4));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1398,"assertEquals(2, sb.lastIndexOf(StrMatcher.spaceMatcher(), 20));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1400,"assertEquals(-1, sb.lastIndexOf(StrMatcher.noneMatcher(), 0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1401,"assertEquals(-1, sb.lastIndexOf((StrMatcher) null, 0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1403,"sb.append("" A1 junction with A2"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1404,"assertEquals(-1, sb.lastIndexOf(A_NUMBER_MATCHER, 5));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1405,"assertEquals(-1, sb.lastIndexOf(A_NUMBER_MATCHER, 6)); // A matches, 1 is outside bounds"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1406,"assertEquals(6, sb.lastIndexOf(A_NUMBER_MATCHER, 7));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1407,"assertEquals(6, sb.lastIndexOf(A_NUMBER_MATCHER, 22));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1408,"assertEquals(6, sb.lastIndexOf(A_NUMBER_MATCHER, 23)); // A matches, 2 is outside bounds"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1409,"assertEquals(23, sb.lastIndexOf(A_NUMBER_MATCHER, 24));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1412,static final StrMatcher A_NUMBER_MATCHER = new StrMatcher() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1413,"public int isMatch(char[] buffer, int pos, int bufferStart, int bufferEnd) {"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1414,if (buffer[pos] == 'A') {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1415,pos++;
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1416,if (pos < bufferEnd && buffer[pos] >= '0' && buffer[pos] <= '9') {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1417,return 2;
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1420,return 0;
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1471,public void testToString() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1472,"StrBuilder sb = new StrBuilder(""abc"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1473,"assertEquals(""abc"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1477,public void testToStringBuffer() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1478,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1479,"assertEquals(new StringBuffer().toString(), sb.toStringBuffer().toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1481,"sb.append(""junit"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,1482,"assertEquals(new StringBuffer(""junit"").toString(), sb.toStringBuffer().toString());"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,17,package org.apache.commons.lang.text;
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,19,import junit.framework.Test;
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,20,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,21,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,22,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,25,* Unit tests for {@link org.apache.commons.lang.text.StrMatcher}.
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,27,* @version $Id$
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,29,public class StrMatcherTest extends TestCase {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,31,"private static final char[] BUFFER1 = ""0,1\t2 3\n\r\f\u0000'\"""".toCharArray();"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,33,"private static final char[] BUFFER2 = ""abcdef"".toCharArray();"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,36,* Main method.
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,38,"* @param args  command line arguments, ignored"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,40,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,41,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,45,* Return a new test suite containing this test case.
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,47,* @return a new test suite containing this test case
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,49,public static Test suite() {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,50,TestSuite suite = new TestSuite(StrMatcherTest.class);
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,51,"suite.setName(""StrMatcher Tests"");"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,52,return suite;
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,56,* Create a new test case with the specified name.
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,58,* @param name  the name
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,60,public StrMatcherTest(String name) {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,61,super(name);
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,65,public void testCommaMatcher() {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,66,StrMatcher matcher = StrMatcher.commaMatcher();
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,67,"assertSame(matcher, StrMatcher.commaMatcher());"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,68,"assertEquals(0, matcher.isMatch(BUFFER1, 0, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,69,"assertEquals(1, matcher.isMatch(BUFFER1, 1, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,70,"assertEquals(0, matcher.isMatch(BUFFER1, 2, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,74,public void testTabMatcher() {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,75,StrMatcher matcher = StrMatcher.tabMatcher();
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,76,"assertSame(matcher, StrMatcher.tabMatcher());"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,77,"assertEquals(0, matcher.isMatch(BUFFER1, 2, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,78,"assertEquals(1, matcher.isMatch(BUFFER1, 3, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,79,"assertEquals(0, matcher.isMatch(BUFFER1, 4, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,83,public void testSpaceMatcher() {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,84,StrMatcher matcher = StrMatcher.spaceMatcher();
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,85,"assertSame(matcher, StrMatcher.spaceMatcher());"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,86,"assertEquals(0, matcher.isMatch(BUFFER1, 4, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,87,"assertEquals(1, matcher.isMatch(BUFFER1, 5, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,88,"assertEquals(0, matcher.isMatch(BUFFER1, 6, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,92,public void testSplitMatcher() {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,93,StrMatcher matcher = StrMatcher.splitMatcher();
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,94,"assertSame(matcher, StrMatcher.splitMatcher());"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,95,"assertEquals(0, matcher.isMatch(BUFFER1, 2, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,96,"assertEquals(1, matcher.isMatch(BUFFER1, 3, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,97,"assertEquals(0, matcher.isMatch(BUFFER1, 4, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,98,"assertEquals(1, matcher.isMatch(BUFFER1, 5, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,99,"assertEquals(0, matcher.isMatch(BUFFER1, 6, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,100,"assertEquals(1, matcher.isMatch(BUFFER1, 7, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,101,"assertEquals(1, matcher.isMatch(BUFFER1, 8, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,102,"assertEquals(1, matcher.isMatch(BUFFER1, 9, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,103,"assertEquals(0, matcher.isMatch(BUFFER1, 10, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,107,public void testTrimMatcher() {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,108,StrMatcher matcher = StrMatcher.trimMatcher();
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,109,"assertSame(matcher, StrMatcher.trimMatcher());"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,110,"assertEquals(0, matcher.isMatch(BUFFER1, 2, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,111,"assertEquals(1, matcher.isMatch(BUFFER1, 3, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,112,"assertEquals(0, matcher.isMatch(BUFFER1, 4, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,113,"assertEquals(1, matcher.isMatch(BUFFER1, 5, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,114,"assertEquals(0, matcher.isMatch(BUFFER1, 6, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,115,"assertEquals(1, matcher.isMatch(BUFFER1, 7, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,116,"assertEquals(1, matcher.isMatch(BUFFER1, 8, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,117,"assertEquals(1, matcher.isMatch(BUFFER1, 9, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,118,"assertEquals(1, matcher.isMatch(BUFFER1, 10, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,122,public void testSingleQuoteMatcher() {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,123,StrMatcher matcher = StrMatcher.singleQuoteMatcher();
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,124,"assertSame(matcher, StrMatcher.singleQuoteMatcher());"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,125,"assertEquals(0, matcher.isMatch(BUFFER1, 10, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,126,"assertEquals(1, matcher.isMatch(BUFFER1, 11, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,127,"assertEquals(0, matcher.isMatch(BUFFER1, 12, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,131,public void testDoubleQuoteMatcher() {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,132,StrMatcher matcher = StrMatcher.doubleQuoteMatcher();
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,133,"assertSame(matcher, StrMatcher.doubleQuoteMatcher());"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,134,"assertEquals(0, matcher.isMatch(BUFFER1, 11, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,135,"assertEquals(1, matcher.isMatch(BUFFER1, 12, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,139,public void testQuoteMatcher() {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,140,StrMatcher matcher = StrMatcher.quoteMatcher();
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,141,"assertSame(matcher, StrMatcher.quoteMatcher());"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,142,"assertEquals(0, matcher.isMatch(BUFFER1, 10, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,143,"assertEquals(1, matcher.isMatch(BUFFER1, 11, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,144,"assertEquals(1, matcher.isMatch(BUFFER1, 12, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,148,public void testNoneMatcher() {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,149,StrMatcher matcher = StrMatcher.noneMatcher();
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,150,"assertSame(matcher, StrMatcher.noneMatcher());"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,151,"assertEquals(0, matcher.isMatch(BUFFER1, 0, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,152,"assertEquals(0, matcher.isMatch(BUFFER1, 1, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,153,"assertEquals(0, matcher.isMatch(BUFFER1, 2, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,154,"assertEquals(0, matcher.isMatch(BUFFER1, 3, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,155,"assertEquals(0, matcher.isMatch(BUFFER1, 4, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,156,"assertEquals(0, matcher.isMatch(BUFFER1, 5, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,157,"assertEquals(0, matcher.isMatch(BUFFER1, 6, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,158,"assertEquals(0, matcher.isMatch(BUFFER1, 7, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,159,"assertEquals(0, matcher.isMatch(BUFFER1, 8, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,160,"assertEquals(0, matcher.isMatch(BUFFER1, 9, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,161,"assertEquals(0, matcher.isMatch(BUFFER1, 10, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,162,"assertEquals(0, matcher.isMatch(BUFFER1, 11, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,163,"assertEquals(0, matcher.isMatch(BUFFER1, 12, 0, BUFFER1.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,167,public void testCharMatcher_char() {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,168,StrMatcher matcher = StrMatcher.charMatcher('c');
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,169,"assertEquals(0, matcher.isMatch(BUFFER2, 0, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,170,"assertEquals(0, matcher.isMatch(BUFFER2, 1, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,171,"assertEquals(1, matcher.isMatch(BUFFER2, 2, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,172,"assertEquals(0, matcher.isMatch(BUFFER2, 3, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,173,"assertEquals(0, matcher.isMatch(BUFFER2, 4, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,174,"assertEquals(0, matcher.isMatch(BUFFER2, 5, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,178,public void testCharSetMatcher_String() {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,179,"StrMatcher matcher = StrMatcher.charSetMatcher(""ace"");"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,180,"assertEquals(1, matcher.isMatch(BUFFER2, 0, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,181,"assertEquals(0, matcher.isMatch(BUFFER2, 1, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,182,"assertEquals(1, matcher.isMatch(BUFFER2, 2, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,183,"assertEquals(0, matcher.isMatch(BUFFER2, 3, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,184,"assertEquals(1, matcher.isMatch(BUFFER2, 4, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,185,"assertEquals(0, matcher.isMatch(BUFFER2, 5, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,186,"assertSame(StrMatcher.noneMatcher(), StrMatcher.charSetMatcher(""""));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,187,"assertSame(StrMatcher.noneMatcher(), StrMatcher.charSetMatcher((String) null));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,191,public void testCharSetMatcher_charArray() {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,192,"StrMatcher matcher = StrMatcher.charSetMatcher(""ace"".toCharArray());"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,193,"assertEquals(1, matcher.isMatch(BUFFER2, 0, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,194,"assertEquals(0, matcher.isMatch(BUFFER2, 1, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,195,"assertEquals(1, matcher.isMatch(BUFFER2, 2, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,196,"assertEquals(0, matcher.isMatch(BUFFER2, 3, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,197,"assertEquals(1, matcher.isMatch(BUFFER2, 4, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,198,"assertEquals(0, matcher.isMatch(BUFFER2, 5, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,199,"assertSame(StrMatcher.noneMatcher(), StrMatcher.charSetMatcher(new char[0]));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,200,"assertSame(StrMatcher.noneMatcher(), StrMatcher.charSetMatcher((char[]) null));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,204,public void testStringMatcher_String() {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,205,"StrMatcher matcher = StrMatcher.stringMatcher(""bc"");"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,206,"assertEquals(0, matcher.isMatch(BUFFER2, 0, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,207,"assertEquals(2, matcher.isMatch(BUFFER2, 1, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,208,"assertEquals(0, matcher.isMatch(BUFFER2, 2, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,209,"assertEquals(0, matcher.isMatch(BUFFER2, 3, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,210,"assertEquals(0, matcher.isMatch(BUFFER2, 4, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,211,"assertEquals(0, matcher.isMatch(BUFFER2, 5, 0, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,212,"assertSame(StrMatcher.noneMatcher(), StrMatcher.stringMatcher(""""));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,213,"assertSame(StrMatcher.noneMatcher(), StrMatcher.stringMatcher((String) null));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,217,public void testMatcherIndices() {
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,218,// remember that the API contract is tight for the isMatch() method
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,219,"// all the onus is on the caller, so invalid inputs are not"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,220,"// the concern of StrMatcher, and are not bugs"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,221,"StrMatcher matcher = StrMatcher.stringMatcher(""bc"");"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,222,"assertEquals(2, matcher.isMatch(BUFFER2, 1, 1, BUFFER2.length));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,223,"assertEquals(2, matcher.isMatch(BUFFER2, 1, 0, 3));"
True,src/test/org/apache/commons/lang/text/StrMatcherTest.java,src/test/org/apache/commons/lang/text/StrMatcherTest.java,224,"assertEquals(0, matcher.isMatch(BUFFER2, 1, 0, 2));"
True,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,52,suite.addTest(StrBuilderAppendInsertTest.suite());
True,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,53,suite.addTest(StrMatcherTest.suite());
