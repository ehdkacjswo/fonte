is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,15, limitations under the License.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,19," Note: originally released under the GNU LGPL v2.1,"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,20, but rereleased by the original author under the ASF license (above).
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,22,ackage org.apache.commons.lang;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,25, <p>A hash map that uses primitive ints for the key rather than objects.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,27," <p>Note that this class is for internal optimization purposes only, and may"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,28, not be supported in future releases of Apache Commons Lang.  Utilities of
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,29, this sort may be included in future releases of Apache Commons Collections.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,31, @author Justin Couch
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,32, @author Alex Chaffee (alex@apache.org)
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,33, @author Stephen Colebourne
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,34, @since 2.0
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,35, @version $Revision$
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,36, @see java.util.HashMap
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,38,lass IntHashMap {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,41, The hash table data.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,43,rivate transient Entry table[];
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,46, The total number of entries in the hash table.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,48,rivate transient int count;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,51, The table is rehashed when its size exceeds this threshold.  (The
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,52, value of this field is (int)(capacity * loadFactor).)
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,54, @serial
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,56,rivate int threshold;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,59, The load factor for the hashtable.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,61, @serial
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,63,rivate float loadFactor;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,66, <p>Innerclass that acts as a datastructure to create a new entry in the
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,67, table.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,69,rivate static class Entry {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,70,nt hash;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,71,/        int key;    // not used currently
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,72,bject value;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,73,ntry next;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,76, <p>Create a new entry with the given values.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,78, @param hash The code used to hash the object with
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,79, @param key The key used to enter this in the table
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,80, @param value The value for this key
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,81, @param next A reference to the next entry in the table
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,83,"rotected Entry(int hash, int key, Object value, Entry next) {"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,84,his.hash = hash;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,85,/            this.key = key;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,86,his.value = value;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,87,his.next = next;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,92," <p>Constructs a new, empty hashtable with a default capacity and load"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,93," factor, which is <code>20</code> and <code>0.75</code> respectively.</p>"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,95,ublic IntHashMap() {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,96,"his(20, 0.75f);"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,100," <p>Constructs a new, empty hashtable with the specified initial capacity"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,101," and default load factor, which is <code>0.75</code>.</p>"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,103, @param  initialCapacity the initial capacity of the hashtable.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,104, @throws IllegalArgumentException if the initial capacity is less
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,105,   than zero.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,107,ublic IntHashMap(int initialCapacity) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,108,"his(initialCapacity, 0.75f);"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,112," <p>Constructs a new, empty hashtable with the specified initial"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,113, capacity and the specified load factor.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,115, @param initialCapacity the initial capacity of the hashtable.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,116, @param loadFactor the load factor of the hashtable.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,117, @throws IllegalArgumentException  if the initial capacity is less
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,118,"             than zero, or if the load factor is nonpositive."
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,120,"ublic IntHashMap(int initialCapacity, float loadFactor) {"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,121,uper();
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,122,f (initialCapacity < 0) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,123,"hrow new IllegalArgumentException(""Illegal Capacity: "" + initialCapacity);"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,125,f (loadFactor <= 0) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,126,"hrow new IllegalArgumentException(""Illegal Load: "" + loadFactor);"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,128,f (initialCapacity == 0) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,129,nitialCapacity = 1;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,132,his.loadFactor = loadFactor;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,133,able = new Entry[initialCapacity];
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,134,hreshold = (int) (initialCapacity * loadFactor);
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,138, <p>Returns the number of keys in this hashtable.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,140, @return  the number of keys in this hashtable.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,142,ublic int size() {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,143,eturn count;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,147, <p>Tests if this hashtable maps no keys to values.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,149, @return  <code>true</code> if this hashtable maps no keys to values;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,150,          <code>false</code> otherwise.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,152,ublic boolean isEmpty() {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,153,eturn count == 0;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,157, <p>Tests if some key maps into the specified value in this hashtable.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,158, This operation is more expensive than the <code>containsKey</code>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,159, method.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,161," <p>Note that this method is identical in functionality to containsValue,"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,162, (which is part of the Map interface in the collections framework).</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,164, @param      value   a value to search for.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,165, @return     <code>true</code> if and only if some key maps to the
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,166,             <code>value</code> argument in this hashtable as
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,167,             determined by the <tt>equals</tt> method;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,168,             <code>false</code> otherwise.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,169, @throws  NullPointerException  if the value is <code>null</code>.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,170, @see        #containsKey(int)
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,171, @see        #containsValue(Object)
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,172, @see        java.util.Map
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,174,ublic boolean contains(Object value) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,175,f (value == null) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,176,hrow new NullPointerException();
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,179,ntry tab[] = table;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,180,or (int i = tab.length; i-- > 0;) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,181,or (Entry e = tab[i]; e != null; e = e.next) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,182,f (e.value.equals(value)) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,183,eturn true;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,187,eturn false;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,191, <p>Returns <code>true</code> if this HashMap maps one or more keys
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,192, to this value.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,194, <p>Note that this method is identical in functionality to contains
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,195, (which predates the Map interface).</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,197, @param value value whose presence in this HashMap is to be tested.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,198, @return boolean <code>true</code> if the value is contained
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,199, @see    java.util.Map
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,200, @since JDK1.2
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,202,ublic boolean containsValue(Object value) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,203,eturn contains(value);
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,207, <p>Tests if the specified object is a key in this hashtable.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,209, @param  key  possible key.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,210, @return <code>true</code> if and only if the specified object is a
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,211,"    key in this hashtable, as determined by the <tt>equals</tt>"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,212,    method; <code>false</code> otherwise.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,213, @see #contains(Object)
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,215,ublic boolean containsKey(int key) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,216,ntry tab[] = table;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,217,nt hash = key;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,218,nt index = (hash & 0x7FFFFFFF) % tab.length;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,219,or (Entry e = tab[index]; e != null; e = e.next) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,220,f (e.hash == hash) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,221,eturn true;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,224,eturn false;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,228, <p>Returns the value to which the specified key is mapped in this map.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,230, @param   key   a key in the hashtable.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,231, @return  the value to which the key is mapped in this hashtable;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,232,          <code>null</code> if the key is not mapped to any value in
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,233,          this hashtable.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,234," @see     #put(int, Object)"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,236,ublic Object get(int key) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,237,ntry tab[] = table;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,238,nt hash = key;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,239,nt index = (hash & 0x7FFFFFFF) % tab.length;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,240,or (Entry e = tab[index]; e != null; e = e.next) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,241,f (e.hash == hash) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,242,eturn e.value;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,245,eturn null;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,249, <p>Increases the capacity of and internally reorganizes this
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,250," hashtable, in order to accommodate and access its entries more"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,251, efficiently.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,253, <p>This method is called automatically when the number of keys
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,254, in the hashtable exceeds this hashtable's capacity and load
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,255, factor.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,257,rotected void rehash() {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,258,nt oldCapacity = table.length;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,259,ntry oldMap[] = table;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,261,nt newCapacity = oldCapacity * 2 + 1;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,262,ntry newMap[] = new Entry[newCapacity];
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,264,hreshold = (int) (newCapacity * loadFactor);
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,265,able = newMap;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,267,or (int i = oldCapacity; i-- > 0;) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,268,or (Entry old = oldMap[i]; old != null;) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,269,ntry e = old;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,270,ld = old.next;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,272,nt index = (e.hash & 0x7FFFFFFF) % newCapacity;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,273,.next = newMap[index];
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,274,ewMap[index] = e;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,280, <p>Maps the specified <code>key</code> to the specified
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,281, <code>value</code> in this hashtable. The key cannot be
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,282, <code>null</code>. </p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,284, <p>The value can be retrieved by calling the <code>get</code> method
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,285, with a key that is equal to the original key.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,287, @param key     the hashtable key.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,288, @param value   the value.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,289," @return the previous value of the specified key in this hashtable,"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,290,         or <code>null</code> if it did not have one.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,291, @throws  NullPointerException  if the key is <code>null</code>.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,292, @see     #get(int)
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,294,"ublic Object put(int key, Object value) {"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,295,/ Makes sure the key is not already in the hashtable.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,296,ntry tab[] = table;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,297,nt hash = key;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,298,nt index = (hash & 0x7FFFFFFF) % tab.length;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,299,or (Entry e = tab[index]; e != null; e = e.next) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,300,f (e.hash == hash) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,301,bject old = e.value;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,302,.value = value;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,303,eturn old;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,307,f (count >= threshold) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,308,/ Rehash the table if the threshold is exceeded
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,309,ehash();
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,311,ab = table;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,312,ndex = (hash & 0x7FFFFFFF) % tab.length;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,315,/ Creates the new entry.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,316,"ntry e = new Entry(hash, key, value, tab[index]);"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,317,ab[index] = e;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,318,ount++;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,319,eturn null;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,323, <p>Removes the key (and its corresponding value) from this
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,324, hashtable.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,326, <p>This method does nothing if the key is not present in the
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,327, hashtable.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,329, @param   key   the key that needs to be removed.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,330," @return  the value to which the key had been mapped in this hashtable,"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,331,          or <code>null</code> if the key did not have a mapping.
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,333,ublic Object remove(int key) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,334,ntry tab[] = table;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,335,nt hash = key;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,336,nt index = (hash & 0x7FFFFFFF) % tab.length;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,337,"or (Entry e = tab[index], prev = null; e != null; prev = e, e = e.next) {"
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,338,f (e.hash == hash) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,339,f (prev != null) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,340,rev.next = e.next;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,341, else {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,342,ab[index] = e.next;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,344,ount--;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,345,bject oldValue = e.value;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,346,.value = null;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,347,eturn oldValue;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,350,eturn null;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,354, <p>Clears this hashtable so that it contains no keys.</p>
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,356,ublic synchronized void clear() {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,357,ntry tab[] = table;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,358,or (int index = tab.length; --index >= 0;) {
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,359,ab[index] = null;
False,src/java/org/apache/commons/lang/IntHashMap.java,src/java/org/apache/commons/lang/IntHashMap.java,361,ount = 0;
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,17,ackage org.apache.commons.lang;
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,19,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,20,mport junit.framework.TestCase;
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,21,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,22,mport junit.textui.TestRunner;
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,25, Tests for the IntHashMap class.
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,27, @author  Steven Caswell
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,28, @version $Id$
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,30,ublic class IntHashMapTest extends TestCase {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,32,ublic static void main(String[] args) {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,33,estRunner.run(suite());
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,36,ublic static Test suite() {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,37,estSuite suite = new TestSuite(IntHashMapTest.class);
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,38,"uite.setName(""IntHashMapTest Tests"");"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,39,eturn suite;
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,42,ublic void testConstructor() {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,43,ry {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,44,"ew IntHashMap(-1, 0.0f);"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,45,ail();
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,46, catch (IllegalArgumentException e) {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,47,"ssertEquals(""Illegal Capacity: -1"", e.getMessage());"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,49,ry {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,50,"ew IntHashMap(1, 0.0f);"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,51,ail();
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,52, catch (IllegalArgumentException e) {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,53,"ssertEquals(""Illegal Load: 0.0"", e.getMessage());"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,55,"ew IntHashMap(0, 1.0f);"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,57,ry {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,58,ew IntHashMap(-1);
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,59,ail();
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,60, catch (IllegalArgumentException e) {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,61,"ssertEquals(""Illegal Capacity: -1"", e.getMessage());"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,63,ntHashMap map1 = new IntHashMap(0);
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,64,"ssertEquals(0, map1.size());"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,67,ublic void testClear() {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,68,ntHashMap map = new IntHashMap();
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,69,"ssertNull(map.put(1, ""hello""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,70,"ssertNull(map.put(2, ""world""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,71,"ssertEquals(2, map.size());"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,72,ap.clear();
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,73,"ssertEquals(0, map.size());"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,76,ublic void testContainsKey() {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,77,ntHashMap map = new IntHashMap();
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,78,"ssertNull(map.put(1, ""hello""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,79,"ssertNull(map.put(2, ""world""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,80,"ssertEquals(2, map.size());"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,81,ssertTrue(map.containsKey(1));
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,82,ssertTrue(map.containsKey(2));
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,83,ssertFalse(map.containsKey(3));
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,86,ublic void testContains() {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,87,ntHashMap map = new IntHashMap();
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,88,"ssertNull(map.put(1, ""hello""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,89,"ssertNull(map.put(2, ""world""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,90,"ssertEquals(2, map.size());"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,91,"ssertTrue(map.containsValue(""hello""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,92,"ssertTrue(map.containsValue(""world""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,93,"ssertFalse(map.containsValue(""goodbye""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,94,ry {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,95,ap.containsValue(null);
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,96,ail();
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,97, catch(NullPointerException e) {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,101,ublic void testContainsValue() {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,102,ntHashMap map = new IntHashMap();
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,103,"ssertNull(map.put(1, ""hello""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,104,"ssertNull(map.put(2, ""world""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,105,"ssertEquals(2, map.size());"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,106,"ssertTrue(map.containsValue(""hello""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,107,"ssertTrue(map.containsValue(""world""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,108,"ssertFalse(map.containsValue(""goodbye""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,109,ry {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,110,ap.containsValue(null);
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,111,ail();
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,112, catch(NullPointerException e) {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,116,ublic void testIsEmpty() {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,117,ntHashMap map = new IntHashMap();
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,118,ssertTrue(map.isEmpty());
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,119,"ssertNull(map.put(1, ""hello""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,120,"ssertEquals(1, map.size());"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,121,ssertFalse(map.isEmpty());
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,124,ublic void testPut() {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,125,ntHashMap map = new IntHashMap();
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,126,"ssertNull(map.put(1, ""hello""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,127,"ssertNull(map.put(2, ""world""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,128,"ssertEquals(2, map.size());"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,129,"ssertEquals(""hello"", map.put(1, ""hellooooo""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,132,ublic void testRemove() {
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,133,ntHashMap map = new IntHashMap();
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,134,"ssertNull(map.put(1, ""hello""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,135,"ssertNull(map.put(2, ""world""));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,136,"ssertEquals(2, map.size());"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,137,"ssertEquals(""hello"", map.remove(1));"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,138,"ssertEquals(1, map.size());"
False,src/test/org/apache/commons/lang/IntHashMapTest.java,src/test/org/apache/commons/lang/IntHashMapTest.java,139,ssertNull(map.remove(3));
False,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,68,uite.addTest(IntHashMapTest.suite());
