is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,17,package org.apache.commons.lang3.concurrent;
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,19,import org.apache.commons.lang3.ObjectUtils;
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,22,* <p>
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,23,* A very simple implementation of the {@link ConcurrentInitializer} interface
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,24,* which always returns the same object.
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,25,* </p>
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,26,* <p>
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,27,* An instance of this class is passed a reference to an object when it is
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,28,* constructed. The {@link #get()} method just returns this object. No
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,29,* synchronization is required.
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,30,* </p>
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,31,* <p>
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,32,* This class is useful for instance for unit testing or in cases where a
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,33,* specific object has to be passed to an object which expects a
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,34,* {@link ConcurrentInitializer}.
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,35,* </p>
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,37,* @author Apache Software Foundation
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,38,* @version $Id$
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,39,* @param <T> the type of the object managed by this initializer
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,41,public class ConstantInitializer<T> implements ConcurrentInitializer<T> {
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,42,/** Constant for the format of the string representation. */
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,43,"private static final String FMT_TO_STRING = ""ConstantInitializer@%d [ object = %s ]"";"
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,45,/** Stores the managed object. */
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,46,private final T object;
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,49,* Creates a new instance of {@code ConstantInitializer} and initializes it
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,50,* with the object to be managed. The {@code get()} method will always
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,51,* return the object passed here. This class does not place any restrictions
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,52,"* on the object. It may be <b>null</b>, then {@code get()} will return"
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,53,"* <b>null</b>, too."
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,55,* @param obj the object to be managed by this initializer
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,57,public ConstantInitializer(T obj) {
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,58,object = obj;
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,62,* Directly returns the object that was passed to the constructor. This is
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,63,"* the same object as returned by {@code get()}. However, this method does"
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,64,* not declare that it throws an exception.
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,66,* @return the object managed by this initializer
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,68,public final T getObject() {
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,69,return object;
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,73,* Returns the object managed by this initializer. This implementation just
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,74,* returns the object passed to the constructor.
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,76,* @return the object managed by this initializer
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,77,* @throws ConcurrentException if an error occurs
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,79,public T get() throws ConcurrentException {
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,80,return getObject();
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,84,* Returns a hash code for this object. This implementation returns the hash
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,85,* code of the managed object.
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,87,* @return a hash code for this object
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,89,@Override
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,90,public int hashCode() {
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,91,return (getObject() != null) ? getObject().hashCode() : 0;
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,95,* Compares this object with another one. This implementation returns
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,96,* <b>true</b> if and only if the passed in object is an instance of
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,97,* {@code ConstantInitializer} which refers to an object equals to the
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,98,* object managed by this instance.
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,100,* @param obj the object to compare to
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,101,* @return a flag whether the objects are equal
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,103,@Override
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,104,public boolean equals(Object obj) {
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,105,if (this == obj) {
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,106,return true;
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,108,if (!(obj instanceof ConstantInitializer<?>)) {
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,109,return false;
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,112,ConstantInitializer<?> c = (ConstantInitializer<?>) obj;
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,113,"return ObjectUtils.equals(getObject(), c.getObject());"
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,117,* Returns a string representation for this object. This string also
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,118,* contains a string representation of the object managed by this
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,119,* initializer.
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,121,* @return a string for this object
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,123,@Override
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,124,public String toString() {
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,125,"return String.format(FMT_TO_STRING, System.identityHashCode(this),"
True,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java,126,String.valueOf(getObject()));
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,17,package org.apache.commons.lang3.concurrent;
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,19,import static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,20,import static org.junit.Assert.assertTrue;
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,22,import java.util.regex.Pattern;
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,24,import org.junit.Before;
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,25,import org.junit.Test;
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,28,* Test class for {@code ConstantInitializer}.
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,30,* @author Apache Software Foundation
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,31,* @version $Id$
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,33,public class ConstantInitializerTest {
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,34,/** Constant for the object managed by the initializer. */
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,35,private static final Integer VALUE = 42;
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,37,/** The initializer to be tested. */
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,38,private ConstantInitializer<Integer> init;
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,40,@Before
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,41,public void setUp() throws Exception {
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,42,init = new ConstantInitializer<Integer>(VALUE);
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,46,* Helper method for testing equals() and hashCode().
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,48,* @param obj the object to compare with the test instance
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,49,* @param expected the expected result
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,51,"private void checkEquals(Object obj, boolean expected) {"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,52,"assertEquals(""Wrong result of equals"", expected, init.equals(obj));"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,53,if (obj != null) {
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,54,"assertEquals(""Not symmetric"", expected, obj.equals(init));"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,56,if (expected) {
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,57,"assertEquals(""Different hash codes"", init.hashCode(),"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,58,obj.hashCode());
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,63,* Tests whether the correct object is returned.
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,65,@Test
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,66,public void testGetObject() {
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,67,"assertEquals(""Wrong object"", VALUE, init.getObject());"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,71,* Tests whether get() returns the correct object.
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,73,@Test
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,74,public void testGet() throws ConcurrentException {
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,75,"assertEquals(""Wrong object"", VALUE, init.get());"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,79,* Tests equals() if the expected result is true.
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,81,@Test
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,82,public void testEqualsTrue() {
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,83,"checkEquals(init, true);"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,84,ConstantInitializer<Integer> init2 = new ConstantInitializer<Integer>(
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,85,new Integer(VALUE.intValue()));
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,86,"checkEquals(init2, true);"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,87,init = new ConstantInitializer<Integer>(null);
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,88,init2 = new ConstantInitializer<Integer>(null);
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,89,"checkEquals(init2, true);"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,93,* Tests equals() if the expected result is false.
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,95,@Test
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,96,public void testEqualsFalse() {
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,97,ConstantInitializer<Integer> init2 = new ConstantInitializer<Integer>(
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,98,null);
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,99,"checkEquals(init2, false);"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,100,init2 = new ConstantInitializer<Integer>(VALUE + 1);
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,101,"checkEquals(init2, false);"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,105,* Tests equals() with objects of other classes.
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,107,@Test
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,108,public void testEqualsWithOtherObjects() {
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,109,"checkEquals(null, false);"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,110,"checkEquals(this, false);"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,111,"checkEquals(new ConstantInitializer<String>(""Test""), false);"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,115,* Tests the string representation.
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,117,@Test
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,118,public void testToString() {
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,119,String s = init.toString();
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,120,Pattern pattern = Pattern
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,121,".compile(""ConstantInitializer@\\d+ \\[ object = "" + VALUE"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,123,"assertTrue(""Wrong string: "" + s, pattern.matcher(s).matches());"
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,127,* Tests the string representation if the managed object is null.
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,129,@Test
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,130,public void testToStringNull() {
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,131,String s = new ConstantInitializer<Object>(null).toString();
True,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,132,"assertTrue(""Object not found: "" + s, s.indexOf(""object = null"") > 0);"
