is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,129, Test extended formats with choice format.
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,131, N.B. FAILING - currently sub-formats not supported
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,133,ublic void testExtendedWithChoiceFormat() {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,134,"tring pattern = ""Choice: {0,choice,1.0#{1,lower}|2.0#{1,upper}}"";"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,135,"xtendedMessageFormat emf = new ExtendedMessageFormat(pattern, registry);"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,136,"ssertEquals(pattern, emf.toPattern());"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,137,ry {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,138,"ssertEquals(""one"", emf.format(new Object[] {new Integer(1), ""ONE""}));"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,139,"ssertEquals(""TWO"", emf.format(new Object[] {new Integer(2), ""two""}));"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,140, catch (IllegalArgumentException e) {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,141,/ currently sub-formats not supported
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,129,//     * Test extended formats with choice format.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,131,//     * N.B. FAILING - currently sub-formats not supported
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,133,//    public void testExtendedWithChoiceFormat() {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,134,"//        String pattern = ""Choice: {0,choice,1.0#{1,lower}|2.0#{1,upper}}"";"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,135,"//        ExtendedMessageFormat emf = new ExtendedMessageFormat(pattern, registry);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,136,"//        assertEquals(pattern, emf.toPattern());"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,137,//        try {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,138,"//            assertEquals(""one"", emf.format(new Object[] {new Integer(1), ""ONE""}));"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,139,"//            assertEquals(""TWO"", emf.format(new Object[] {new Integer(2), ""two""}));"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,140,//        } catch (IllegalArgumentException e) {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,141,//            // currently sub-formats not supported
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,146, Test mixed extended and built-in formats with choice format.
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,148, N.B. FAILING - currently sub-formats not supported
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,150,ublic void testExtendedAndBuiltInWithChoiceFormat() {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,151,"tring pattern = ""Choice: {0,choice,1.0#{0} {1,lower} {2,number}|2.0#{0} {1,upper} {2,number,currency}}"";"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,152,"bject[] lowArgs  = new Object[] {new Integer(1), ""Low"",  new Double(""1234.56"")};"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,153,"bject[] highArgs = new Object[] {new Integer(2), ""High"", new Double(""9876.54"")};"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,146,//     * Test mixed extended and built-in formats with choice format.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,148,//     * N.B. FAILING - currently sub-formats not supported
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,150,//    public void testExtendedAndBuiltInWithChoiceFormat() {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,151,"//        String pattern = ""Choice: {0,choice,1.0#{0} {1,lower} {2,number}|2.0#{0} {1,upper} {2,number,currency}}"";"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,152,"//        Object[] lowArgs  = new Object[] {new Integer(1), ""Low"",  new Double(""1234.56"")};"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,153,"//        Object[] highArgs = new Object[] {new Integer(2), ""High"", new Double(""9876.54"")};"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,155,or (int i = 0; i < testLocales.length; i++) {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,156,umberFormat nf = null;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,157,umberFormat cf = null;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,158,xtendedMessageFormat emf = null;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,159,f (testLocales[i] == null) {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,160,f = NumberFormat.getNumberInstance();
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,161,f = NumberFormat.getCurrencyInstance();
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,162,"mf = new ExtendedMessageFormat(pattern, registry);"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,163, else {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,164,f = NumberFormat.getNumberInstance(testLocales[i]);
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,165,f = NumberFormat.getCurrencyInstance(testLocales[i]);
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,166,"mf = new ExtendedMessageFormat(pattern, testLocales[i], registry);"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,168,"ssertEquals(pattern, emf.toPattern());"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,169,ry {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,170,"tring lowExpected = lowArgs[0] + "" low ""    + nf.format(lowArgs[2]);"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,171,"tring highExpected = highArgs[0] + "" HIGH ""  + cf.format(highArgs[2]);"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,172,"ssertEquals(lowExpected,  emf.format(lowArgs));"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,173,"ssertEquals(highExpected, emf.format(highArgs));"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,174, catch (IllegalArgumentException e) {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,175,/ currently sub-formats not supported
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,155,//        for (int i = 0; i < testLocales.length; i++) {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,156,//            NumberFormat nf = null;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,157,//            NumberFormat cf = null;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,158,//            ExtendedMessageFormat emf = null;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,159,//            if (testLocales[i] == null) {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,160,//                nf = NumberFormat.getNumberInstance();
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,161,//                cf = NumberFormat.getCurrencyInstance();
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,162,"//                emf = new ExtendedMessageFormat(pattern, registry);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,163,//            } else {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,164,//                nf = NumberFormat.getNumberInstance(testLocales[i]);
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,165,//                cf = NumberFormat.getCurrencyInstance(testLocales[i]);
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,166,"//                emf = new ExtendedMessageFormat(pattern, testLocales[i], registry);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,168,"//            assertEquals(pattern, emf.toPattern());"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,169,//            try {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,170,"//                String lowExpected = lowArgs[0] + "" low ""    + nf.format(lowArgs[2]);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,171,"//                String highExpected = highArgs[0] + "" HIGH ""  + cf.format(highArgs[2]);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,172,"//                assertEquals(lowExpected,  emf.format(lowArgs));"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,173,"//                assertEquals(highExpected, emf.format(highArgs));"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,174,//            } catch (IllegalArgumentException e) {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,175,//                // currently sub-formats not supported
