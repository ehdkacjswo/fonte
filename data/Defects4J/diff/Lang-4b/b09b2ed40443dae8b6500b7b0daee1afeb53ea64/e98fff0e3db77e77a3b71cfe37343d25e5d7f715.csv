is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,434, <p>Checks if the Throwable class has a <code>getCause</code> method.</p>
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,436, <p>This is true for JDK 1.4 and above.</p>
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,438, @return true if Throwable is nestable
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,439, @since 2.0
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,441,ublic static boolean isThrowableNested() {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,442,eturn THROWABLE_CAUSE_METHOD != null;
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,446, <p>Checks whether this <code>Throwable</code> class can store a cause.</p>
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,448, <p>This method does <b>not</b> check whether it actually does store a cause.<p>
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,450," @param throwable  the <code>Throwable</code> to examine, may be null"
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,451, @return boolean <code>true</code> if nested otherwise <code>false</code>
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,452, @since 2.0
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,454,ublic static boolean isNestedThrowable(Throwable throwable) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,455,f (throwable == null) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,456,eturn false;
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,459,f (throwable instanceof SQLException) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,460,eturn true;
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,461, else if (throwable instanceof InvocationTargetException) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,462,eturn true;
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,463, else if (isThrowableNested()) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,464,eturn true;
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,467,lass<? extends Throwable> cls = throwable.getClass();
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,468,ynchronized(CAUSE_METHOD_NAMES_LOCK) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,469,"or (int i = 0, isize = CAUSE_METHOD_NAMES.length; i < isize; i++) {"
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,470,ry {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,471,"ethod method = cls.getMethod(CAUSE_METHOD_NAMES[i], (Class[]) null);"
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,472,f (method != null && Throwable.class.isAssignableFrom(method.getReturnType())) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,473,eturn true;
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,475, catch (NoSuchMethodException ignored) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,476,/ exception ignored
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,477, catch (SecurityException ignored) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,478,/ exception ignored
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,483,ry {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,484,"ield field = cls.getField(""detail"");"
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,485,f (field != null) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,486,eturn true;
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,488, catch (NoSuchFieldException ignored) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,489,/ exception ignored
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,490, catch (SecurityException ignored) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,491,/ exception ignored
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,494,eturn false;
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,852, <p>A way to get the entire nested stack-trace of an throwable.</p>
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,854, <p>The result of this method is highly dependent on the JDK version
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,855, and whether the exceptions override printStackTrace or not.</p>
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,857, @param throwable  the <code>Throwable</code> to be examined
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,858," @return the nested stack trace, with the root cause first"
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,859, @since 2.0
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,861,ublic static String getFullStackTrace(Throwable throwable) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,862,tringWriter sw = new StringWriter();
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,863,"rintWriter pw = new PrintWriter(sw, true);"
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,864,hrowable[] ts = getThrowables(throwable);
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,865,or (int i = 0; i < ts.length; i++) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,866,s[i].printStackTrace(pw);
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,867,f (isNestedThrowable(ts[i])) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,868,reak;
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,871,eturn sw.getBuffer().toString();
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,214,ublic void testIsThrowableNested() {
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,215,f (SystemUtils.isJavaVersionAtLeast(140)) {
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,216,"ssertEquals(true, ExceptionUtils.isThrowableNested());"
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,217, else {
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,218,"ssertEquals(false, ExceptionUtils.isThrowableNested());"
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,222,ublic void testIsNestedThrowable_Throwable() {
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,223,"ssertEquals(true, ExceptionUtils.isNestedThrowable(new SQLException()));"
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,224,"ssertEquals(true, ExceptionUtils.isNestedThrowable(new InvocationTargetException(new Exception())));"
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,225,"ssertEquals(true, ExceptionUtils.isNestedThrowable(new NestableRuntimeException()));"
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,226,"ssertEquals(true, ExceptionUtils.isNestedThrowable(withCause));"
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,227,"ssertEquals(true, ExceptionUtils.isNestedThrowable(nested));"
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,228,f (SystemUtils.isJavaVersionAtLeast(140)) {
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,229,"ssertEquals(true, ExceptionUtils.isNestedThrowable(withoutCause));"
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,230,"ssertEquals(true, ExceptionUtils.isNestedThrowable(new Throwable()));"
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,231, else {
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,232,"ssertEquals(false, ExceptionUtils.isNestedThrowable(withoutCause));"
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,233,"ssertEquals(false, ExceptionUtils.isNestedThrowable(new Throwable()));"
