is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,15, limitations under the License.
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,18,ackage org.apache.commons.lang3.event;
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,20,mport java.lang.reflect.InvocationHandler;
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,21,mport java.lang.reflect.Method;
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,22,mport java.lang.reflect.Proxy;
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,23,mport java.util.List;
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,24,mport java.util.concurrent.CopyOnWriteArrayList;
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,27, An EventListenerSupport object can be used to manage a list of event listeners of a particular type.
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,28, <p/>
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,29," To use this class, suppose you want to support ActionEvents.  You would do:"
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,30, <pre>
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,31, public class MyActionEventSource
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,33,   private EventListenerSupport<ActionListener> actionListeners = EventListenerSupport.create(ActionListener.class);
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,34, <p/>
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,35,   public void someMethodThatFiresAction()
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,37,"     ActionEvent e = new ActionEvent(this, ActionEvent.ACTION_PERFORMED, ""somethingCool"");"
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,38,     actionListeners.getProxy().actionPerformed(e);
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,41, </pre>
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,43, @param <L> The event listener type
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,45,ublic class EventListenerSupport<L>
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,47,rivate final List<L> listeners;
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,48,rivate final L proxy;
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,51, Creates an EventListenerSupport object which supports the specified listener type.
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,53, @param listenerType the listener type
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,54, @return an EventListenerSupport object which supports the specified listener type
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,56,ublic static <T> EventListenerSupport<T> create(Class<T> listenerType)
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,58,eturn new EventListenerSupport<T>(listenerType);
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,62, Creates an EventListenerSupport object which supports the provided listener interface.
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,64, @param listenerInterface the listener interface
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,66,ublic EventListenerSupport(Class<L> listenerInterface)
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,68,"his(listenerInterface, Thread.currentThread().getContextClassLoader());"
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,72, Creates an EventListenerSupport object which supports the provided listener interface using the specified
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,73, class loader to create the JDK dynamic proxy.
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,75, @param listenerInterface the listener interface
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,76, @param classLoader       the class loader
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,78,"ublic EventListenerSupport(Class<L> listenerInterface, ClassLoader classLoader)"
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,80,isteners = new CopyOnWriteArrayList<L>();
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,81,"roxy = listenerInterface.cast(Proxy.newProxyInstance(classLoader, new Class[]{listenerInterface},"
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,82,ew ProxyInvocationHandler()));
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,86, Returns a proxy object which can be used to call listener methods on all of the registered event listeners.
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,88, @return a proxy object which can be used to call listener methods on all of the registered event listeners
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,90,ublic L fire()
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,92,eturn proxy;
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,96,/ Other Methods
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,100, Registers an event listener.
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,102, @param listener the event listener
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,104,ublic void addListener(L listener)
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,106,"isteners.add(0, listener);"
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,110, Returns the number of registered listeners.
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,112, @return the number of registered listeners
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,114,ublic int getListenerCount()
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,116,eturn listeners.size();
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,120, Unregisters an event listener.
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,122, @param listener the event listener
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,124,ublic void removeListener(L listener)
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,126,isteners.remove(listener);
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,130, An invocation handler used to dispatch the event(s) to all the listeners.
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,132,rivate class ProxyInvocationHandler implements InvocationHandler
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,134,"ublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable"
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,136,or (int i = listeners.size() - 1; i >= 0; --i)
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,138,"ethod.invoke(listeners.get(i), args);"
False,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,140,eturn null;
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,18,package org.apache.commons.lang3.event;
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,20,import java.lang.reflect.InvocationHandler;
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,21,import java.lang.reflect.Method;
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,22,import java.lang.reflect.Proxy;
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,23,import java.util.List;
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,24,import java.util.concurrent.CopyOnWriteArrayList;
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,27,* An EventListenerSupport object can be used to manage a list of event listeners of a particular type.
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,28,* <p/>
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,29,"* To use this class, suppose you want to support ActionEvents.  You would do:"
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,30,* <pre>
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,31,* public class MyActionEventSource
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,33,*   private EventListenerSupport<ActionListener> actionListeners = EventListenerSupport.create(ActionListener.class);
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,34,* <p/>
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,35,*   public void someMethodThatFiresAction()
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,37,"*     ActionEvent e = new ActionEvent(this, ActionEvent.ACTION_PERFORMED, ""somethingCool"");"
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,38,*     actionListeners.getProxy().actionPerformed(e);
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,41,* </pre>
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,43,* @param <L> The event listener type
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,45,public class EventListenerSupport<L>
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,47,private final List<L> listeners;
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,48,private final L proxy;
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,51,* Creates an EventListenerSupport object which supports the specified listener type.
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,53,* @param listenerType the listener type
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,54,* @return an EventListenerSupport object which supports the specified listener type
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,56,public static <T> EventListenerSupport<T> create(Class<T> listenerType)
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,58,return new EventListenerSupport<T>(listenerType);
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,62,* Creates an EventListenerSupport object which supports the provided listener interface.
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,64,* @param listenerInterface the listener interface
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,66,public EventListenerSupport(Class<L> listenerInterface)
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,68,"this(listenerInterface, Thread.currentThread().getContextClassLoader());"
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,72,* Creates an EventListenerSupport object which supports the provided listener interface using the specified
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,73,* class loader to create the JDK dynamic proxy.
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,75,* @param listenerInterface the listener interface
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,76,* @param classLoader       the class loader
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,78,"public EventListenerSupport(Class<L> listenerInterface, ClassLoader classLoader)"
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,80,listeners = new CopyOnWriteArrayList<L>();
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,81,"proxy = listenerInterface.cast(Proxy.newProxyInstance(classLoader, new Class[]{listenerInterface},"
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,82,new ProxyInvocationHandler()));
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,86,* Returns a proxy object which can be used to call listener methods on all of the registered event listeners.
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,88,* @return a proxy object which can be used to call listener methods on all of the registered event listeners
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,90,public L fire()
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,92,return proxy;
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,96,// Other Methods
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,100,* Registers an event listener.
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,102,* @param listener the event listener
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,104,public void addListener(L listener)
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,106,"listeners.add(0, listener);"
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,110,* Returns the number of registered listeners.
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,112,* @return the number of registered listeners
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,114,public int getListenerCount()
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,116,return listeners.size();
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,120,* Unregisters an event listener.
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,122,* @param listener the event listener
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,124,public void removeListener(L listener)
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,126,listeners.remove(listener);
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,130,* An invocation handler used to dispatch the event(s) to all the listeners.
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,132,private class ProxyInvocationHandler implements InvocationHandler
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,134,"public Object invoke(Object proxy, Method method, Object[] args) throws Throwable"
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,136,for (int i = listeners.size() - 1; i >= 0; --i)
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,138,"method.invoke(listeners.get(i), args);"
True,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,src/main/java/org/apache/commons/lang3/event/EventListenerSupport.java,140,return null;
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,15, limitations under the License.
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,18,ackage org.apache.commons.lang3.event;
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,20,mport org.apache.commons.lang3.reflect.MethodUtils;
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,22,mport java.lang.reflect.InvocationHandler;
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,23,mport java.lang.reflect.InvocationTargetException;
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,24,mport java.lang.reflect.Method;
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,25,mport java.lang.reflect.Proxy;
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,26,mport java.util.Arrays;
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,27,mport java.util.HashSet;
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,28,mport java.util.Set;
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,30,ublic class EventUtils
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,32,"ublic static <L> void addEventListener(Object eventSource, Class<L> listenerType, L listener)"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,34,ry
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,36,"ethodUtils.invokeMethod(eventSource, ""add"" + listenerType.getSimpleName(), listener);"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,38,atch (NoSuchMethodException e)
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,40,"hrow new IllegalArgumentException(""Class "" + eventSource.getClass() + "" does not have an accesible add"" + listenerType.getSimpleName() + "" method which takes a parameter of type "" + listenerType.getClass().getName() + ""."");"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,42,atch (IllegalAccessException e)
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,44,"hrow new IllegalArgumentException(""Class "" + eventSource.getClass() + "" does not have an accesible add"" + listenerType.getSimpleName () + "" method which takes a parameter of type "" + listenerType.getClass().getName() + ""."");"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,46,atch (InvocationTargetException e)
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,48,"hrow new RuntimeException(""Unable to add listener."", e.getCause());"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,53, Binds an event listener to a specific method on a specific object.
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,55, @param target       the target object
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,56, @param methodName   the name of the method to be called
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,57," @param eventSource  the object which is generating events (JButton, JList, etc.)"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,58," @param listenerType the listener interface (ActionListener.class, SelectionListener.class, etc.)"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,59," @param eventTypes   the event types (method names) from the listener interface (if none specified, all will be"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,60,                     supported)
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,62,"ublic static void bindEventsToMethod(Object target, String methodName, Object eventSource, Class listenerType, String... eventTypes)"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,64,"inal Object listener = Proxy.newProxyInstance(target.getClass().getClassLoader(), new Class[] { listenerType }, new EventBindingInvocationHandler(target, methodName, eventTypes));"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,65,"ddEventListener(eventSource, listenerType, listener);"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,68,rivate static class EventBindingInvocationHandler implements InvocationHandler
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,70,rivate final Object target;
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,71,rivate final String methodName;
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,72,rivate final Set<String> eventTypes;
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,74,"ublic EventBindingInvocationHandler(final Object target, final String methodName, String[] eventTypes)"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,76,his.target = target;
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,77,his.methodName = methodName;
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,78,his.eventTypes = new HashSet<String>(Arrays.asList(eventTypes));
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,81,"ublic Object invoke(final Object proxy, final Method method, final Object[] parameters) throws Throwable"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,83,f ( eventTypes.isEmpty() || eventTypes.contains(method.getName()))
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,85,f (hasMatchingParametersMethod(method))
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,87,"eturn MethodUtils.invokeMethod(target, methodName, parameters);"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,89,lse
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,91,"eturn MethodUtils.invokeMethod(target, methodName, new Object[]{});"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,94,eturn null;
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,97,rivate boolean hasMatchingParametersMethod(final Method method)
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,99,"eturn MethodUtils.getAccessibleMethod(target.getClass(), methodName, method.getParameterTypes()) != null;"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,18,package org.apache.commons.lang3.event;
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,20,import org.apache.commons.lang3.reflect.MethodUtils;
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,22,import java.lang.reflect.InvocationHandler;
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,23,import java.lang.reflect.InvocationTargetException;
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,24,import java.lang.reflect.Method;
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,25,import java.lang.reflect.Proxy;
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,26,import java.util.Arrays;
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,27,import java.util.HashSet;
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,28,import java.util.Set;
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,30,public class EventUtils
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,32,"public static <L> void addEventListener(Object eventSource, Class<L> listenerType, L listener)"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,34,try
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,36,"MethodUtils.invokeMethod(eventSource, ""add"" + listenerType.getSimpleName(), listener);"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,38,catch (NoSuchMethodException e)
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,40,"throw new IllegalArgumentException(""Class "" + eventSource.getClass() + "" does not have an accesible add"" + listenerType.getSimpleName() + "" method which takes a parameter of type "" + listenerType.getClass().getName() + ""."");"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,42,catch (IllegalAccessException e)
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,44,"throw new IllegalArgumentException(""Class "" + eventSource.getClass() + "" does not have an accesible add"" + listenerType.getSimpleName () + "" method which takes a parameter of type "" + listenerType.getClass().getName() + ""."");"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,46,catch (InvocationTargetException e)
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,48,"throw new RuntimeException(""Unable to add listener."", e.getCause());"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,53,* Binds an event listener to a specific method on a specific object.
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,55,* @param target       the target object
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,56,* @param methodName   the name of the method to be called
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,57,"* @param eventSource  the object which is generating events (JButton, JList, etc.)"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,58,"* @param listenerType the listener interface (ActionListener.class, SelectionListener.class, etc.)"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,59,"* @param eventTypes   the event types (method names) from the listener interface (if none specified, all will be"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,60,*                     supported)
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,62,"public static void bindEventsToMethod(Object target, String methodName, Object eventSource, Class listenerType, String... eventTypes)"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,64,"final Object listener = Proxy.newProxyInstance(target.getClass().getClassLoader(), new Class[] { listenerType }, new EventBindingInvocationHandler(target, methodName, eventTypes));"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,65,"addEventListener(eventSource, listenerType, listener);"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,68,private static class EventBindingInvocationHandler implements InvocationHandler
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,70,private final Object target;
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,71,private final String methodName;
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,72,private final Set<String> eventTypes;
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,74,"public EventBindingInvocationHandler(final Object target, final String methodName, String[] eventTypes)"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,76,this.target = target;
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,77,this.methodName = methodName;
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,78,this.eventTypes = new HashSet<String>(Arrays.asList(eventTypes));
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,81,"public Object invoke(final Object proxy, final Method method, final Object[] parameters) throws Throwable"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,83,if ( eventTypes.isEmpty() || eventTypes.contains(method.getName()))
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,85,if (hasMatchingParametersMethod(method))
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,87,"return MethodUtils.invokeMethod(target, methodName, parameters);"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,89,else
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,91,"return MethodUtils.invokeMethod(target, methodName, new Object[]{});"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,94,return null;
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,97,private boolean hasMatchingParametersMethod(final Method method)
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,99,"return MethodUtils.getAccessibleMethod(target.getClass(), methodName, method.getParameterTypes()) != null;"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,15, limitations under the License.
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,18,ackage org.apache.commons.lang3.event;
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,20,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,22,mport java.awt.event.ActionEvent;
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,23,mport java.awt.event.ActionListener;
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,24,mport java.util.ArrayList;
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,25,mport java.util.List;
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,27,ublic class EventListenerSupportTest extends TestCase
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,29,ublic void testEventDispatchOrder()
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,31,ventListenerSupport<ActionListener> listenerSupport = EventListenerSupport.create(ActionListener.class);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,32,inal List<ActionListener> calledListeners = new ArrayList<ActionListener>();
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,34,inal ActionListener listener1 = createListener(calledListeners);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,35,inal ActionListener listener2 = createListener(calledListeners);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,36,istenerSupport.addListener(listener1);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,37,istenerSupport.addListener(listener2);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,38,"istenerSupport.fire().actionPerformed(new ActionEvent(""Hello"", 0, ""Hello""));"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,39,"ssertEquals(calledListeners.size(), 2);"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,40,"ssertSame(calledListeners.get(0), listener1);"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,41,"ssertSame(calledListeners.get(1), listener2);"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,44,ublic void testRemoveListenerDuringEvent()
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,46,inal EventListenerSupport<ActionListener> listenerSupport = EventListenerSupport.create(ActionListener.class);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,47,or (int i = 0; i < 10; ++i)
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,49,ddDeregisterListener(listenerSupport);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,51,"ssertEquals(listenerSupport.getListenerCount(), 10);"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,52,"istenerSupport.fire().actionPerformed(new ActionEvent(""Hello"", 0, ""Hello""));"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,53,"ssertEquals(listenerSupport.getListenerCount(), 0);"
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,56,rivate void addDeregisterListener(final EventListenerSupport<ActionListener> listenerSupport)
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,58,istenerSupport.addListener(new ActionListener()
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,60,ublic void actionPerformed(ActionEvent e)
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,62,istenerSupport.removeListener(this);
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,67,rivate ActionListener createListener(final List<ActionListener> calledListeners)
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,69,eturn new ActionListener()
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,71,ublic void actionPerformed(ActionEvent e)
False,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,73,alledListeners.add(this);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,18,package org.apache.commons.lang3.event;
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,20,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,22,import java.awt.event.ActionEvent;
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,23,import java.awt.event.ActionListener;
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,24,import java.util.ArrayList;
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,25,import java.util.List;
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,27,public class EventListenerSupportTest extends TestCase
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,29,public void testEventDispatchOrder()
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,31,EventListenerSupport<ActionListener> listenerSupport = EventListenerSupport.create(ActionListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,32,final List<ActionListener> calledListeners = new ArrayList<ActionListener>();
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,34,final ActionListener listener1 = createListener(calledListeners);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,35,final ActionListener listener2 = createListener(calledListeners);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,36,listenerSupport.addListener(listener1);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,37,listenerSupport.addListener(listener2);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,38,"listenerSupport.fire().actionPerformed(new ActionEvent(""Hello"", 0, ""Hello""));"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,39,"assertEquals(calledListeners.size(), 2);"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,40,"assertSame(calledListeners.get(0), listener1);"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,41,"assertSame(calledListeners.get(1), listener2);"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,44,public void testRemoveListenerDuringEvent()
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,46,final EventListenerSupport<ActionListener> listenerSupport = EventListenerSupport.create(ActionListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,47,for (int i = 0; i < 10; ++i)
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,49,addDeregisterListener(listenerSupport);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,51,"assertEquals(listenerSupport.getListenerCount(), 10);"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,52,"listenerSupport.fire().actionPerformed(new ActionEvent(""Hello"", 0, ""Hello""));"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,53,"assertEquals(listenerSupport.getListenerCount(), 0);"
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,56,private void addDeregisterListener(final EventListenerSupport<ActionListener> listenerSupport)
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,58,listenerSupport.addListener(new ActionListener()
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,60,public void actionPerformed(ActionEvent e)
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,62,listenerSupport.removeListener(this);
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,67,private ActionListener createListener(final List<ActionListener> calledListeners)
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,69,return new ActionListener()
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,71,public void actionPerformed(ActionEvent e)
True,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,src/test/java/org/apache/commons/lang3/event/EventListenerSupportTest.java,73,calledListeners.add(this);
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,15, limitations under the License.
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,17,ackage org.apache.commons.lang3.event;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,19,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,21,mport java.beans.PropertyChangeEvent;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,22,mport java.beans.PropertyChangeListener;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,23,mport java.lang.reflect.InvocationHandler;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,24,mport java.lang.reflect.Method;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,25,mport java.lang.reflect.Proxy;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,26,mport java.util.Map;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,27,mport java.util.TreeMap;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,29,ublic class EventUtilsTest extends TestCase
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,31,ublic void testAddEventListener()
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,33,inal PropertyChangeSource src = new PropertyChangeSource();
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,34,ventCountingInvociationHandler handler = new EventCountingInvociationHandler();
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,35,ropertyChangeListener listener = handler.createListener(PropertyChangeListener.class);
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,36,"ssertEquals(0, handler.getEventCount(""propertyChange""));"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,37,"ventUtils.addEventListener(src, PropertyChangeListener.class, listener);"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,38,"ssertEquals(0, handler.getEventCount(""propertyChange""));"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,39,"rc.setProperty(""newValue"");"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,40,"ssertEquals(1, handler.getEventCount(""propertyChange""));"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,43,ublic void testBindEventsToMethod()
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,45,inal PropertyChangeSource src = new PropertyChangeSource();
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,46,inal EventCounter counter = new EventCounter();
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,47,"ventUtils.bindEventsToMethod(counter, ""eventOccurred"", src, PropertyChangeListener.class);"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,48,"ssertEquals(0, counter.getCount());"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,49,"rc.setProperty(""newValue"");"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,50,"ssertEquals(1, counter.getCount());"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,53,ublic static class EventCounter
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,55,rivate int count;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,57,ublic void eventOccurred()
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,59,ount++;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,62,ublic int getCount()
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,64,eturn count;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,68,rivate static class EventCountingInvociationHandler implements InvocationHandler
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,70,"rivate Map<String, Integer> eventCounts = new TreeMap<String, Integer>();"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,72,ublic <L> L createListener(Class<L> listenerType)
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,74,"eturn listenerType.cast(Proxy.newProxyInstance(Thread.currentThread().getContextClassLoader(),"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,75,"ew Class[]{listenerType},"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,76,his));
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,79,ublic int getEventCount(String eventName)
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,81,nteger count = eventCounts.get(eventName);
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,82,eturn count == null ? 0 : count;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,85,"ublic Object invoke(Object proxy, Method method, Object[] args) throws Throwable"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,87,nteger count = eventCounts.get(method.getName());
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,88,f (count == null)
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,90,"ventCounts.put(method.getName(), 1);"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,92,lse
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,94,"ventCounts.put(method.getName(), count + 1);"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,96,eturn null;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,100,ublic static class PropertyChangeSource
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,102,rivate EventListenerSupport<PropertyChangeListener> listeners = EventListenerSupport.create(PropertyChangeListener.class);
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,104,rivate String property;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,106,ublic void setProperty(String property)
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,108,tring oldValue = this.property;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,109,his.property = property;
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,110,"isteners.fire().propertyChange(new PropertyChangeEvent(this, ""property"", ""oldValue"", property));"
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,113,ublic void addPropertyChangeListener(PropertyChangeListener listener)
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,115,isteners.addListener(listener);
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,118,ublic void removePropertyChangeListener(PropertyChangeListener listener)
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,120,isteners.removeListener(listener);
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,17,package org.apache.commons.lang3.event;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,19,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,21,import java.beans.PropertyChangeEvent;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,22,import java.beans.PropertyChangeListener;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,23,import java.lang.reflect.InvocationHandler;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,24,import java.lang.reflect.Method;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,25,import java.lang.reflect.Proxy;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,26,import java.util.Map;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,27,import java.util.TreeMap;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,29,public class EventUtilsTest extends TestCase
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,31,public void testAddEventListener()
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,33,final PropertyChangeSource src = new PropertyChangeSource();
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,34,EventCountingInvociationHandler handler = new EventCountingInvociationHandler();
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,35,PropertyChangeListener listener = handler.createListener(PropertyChangeListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,36,"assertEquals(0, handler.getEventCount(""propertyChange""));"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,37,"EventUtils.addEventListener(src, PropertyChangeListener.class, listener);"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,38,"assertEquals(0, handler.getEventCount(""propertyChange""));"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,39,"src.setProperty(""newValue"");"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,40,"assertEquals(1, handler.getEventCount(""propertyChange""));"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,43,public void testBindEventsToMethod()
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,45,final PropertyChangeSource src = new PropertyChangeSource();
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,46,final EventCounter counter = new EventCounter();
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,47,"EventUtils.bindEventsToMethod(counter, ""eventOccurred"", src, PropertyChangeListener.class);"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,48,"assertEquals(0, counter.getCount());"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,49,"src.setProperty(""newValue"");"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,50,"assertEquals(1, counter.getCount());"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,53,public static class EventCounter
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,55,private int count;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,57,public void eventOccurred()
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,59,count++;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,62,public int getCount()
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,64,return count;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,68,private static class EventCountingInvociationHandler implements InvocationHandler
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,70,"private Map<String, Integer> eventCounts = new TreeMap<String, Integer>();"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,72,public <L> L createListener(Class<L> listenerType)
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,74,"return listenerType.cast(Proxy.newProxyInstance(Thread.currentThread().getContextClassLoader(),"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,75,"new Class[]{listenerType},"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,76,this));
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,79,public int getEventCount(String eventName)
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,81,Integer count = eventCounts.get(eventName);
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,82,return count == null ? 0 : count;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,85,"public Object invoke(Object proxy, Method method, Object[] args) throws Throwable"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,87,Integer count = eventCounts.get(method.getName());
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,88,if (count == null)
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,90,"eventCounts.put(method.getName(), 1);"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,92,else
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,94,"eventCounts.put(method.getName(), count + 1);"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,96,return null;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,100,public static class PropertyChangeSource
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,102,private EventListenerSupport<PropertyChangeListener> listeners = EventListenerSupport.create(PropertyChangeListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,104,private String property;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,106,public void setProperty(String property)
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,108,String oldValue = this.property;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,109,this.property = property;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,110,"listeners.fire().propertyChange(new PropertyChangeEvent(this, ""property"", ""oldValue"", property));"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,113,public void addPropertyChangeListener(PropertyChangeListener listener)
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,115,listeners.addListener(listener);
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,118,public void removePropertyChangeListener(PropertyChangeListener listener)
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,120,listeners.removeListener(listener);
