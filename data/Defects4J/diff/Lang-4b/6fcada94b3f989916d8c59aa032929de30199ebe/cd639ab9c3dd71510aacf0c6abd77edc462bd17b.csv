is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,142, should have a reasonable toString() implementation.
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,142,* should have a reasonable toString() implementation. If the added label
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,143,"* is already available, the label is appended with an index."
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,146,* </p>
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,158,* Replaces information helpful to a developer in diagnosing and correcting
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,159,"* the problem.  For the information to be meaningful, the value passed"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,160,* should have a reasonable toString() implementation. If the replaced
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,161,"* label does not yet exist, it is simply added."
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,162,* <p>
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,163,* Note: This exception is only serializable if the object added is serializable.
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,164,* </p>
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,166,"* @param label  a textual label associated with information, null not recommended"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,167,"* @param value  information needed to understand exception, may be null"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,168,"* @return this, for method chaining"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,170,"public ContextedException replaceValue(String label, Object value) {"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,171,"exceptionContext.replaceValue(label, value);"
True,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,src/main/java/org/apache/commons/lang3/exception/ContextedException.java,172,return this;
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,67, @author J&ouml;rg Schaible
False,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,143, should have a reasonable toString() implementation.
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,142,* should have a reasonable toString() implementation. If the added label
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,143,"* is already available, the label is appended with an index."
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,146,* </p>
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,158,* Replaces information helpful to a developer in diagnosing and correcting
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,159,"* the problem.  For the information to be meaningful, the value passed"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,160,* should have a reasonable toString() implementation. If the replaced
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,161,"* label does not yet exist, it is simply added."
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,162,* <p>
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,163,* Note: This exception is only serializable if the object added is serializable.
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,164,* </p>
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,166,"* @param label  a textual label associated with information, null not recommended"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,167,"* @param value  information needed to understand exception, may be null"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,168,"* @return this, for method chaining"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,170,"public ContextedRuntimeException replaceValue(String label, Object value) {"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,171,"exceptionContext.replaceValue(label, value);"
True,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,src/main/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java,172,return this;
False,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,46, This label-value pair provides information useful for debugging.
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,46,* This label-value pair provides information useful for debugging. If the
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,47,"* label already exists and the provided information is different, the"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,48,* label will be added with an appended index.
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,49,* </p>
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,56,String key = label;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,57,int i = 0;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,58,while (contextValueMap.containsKey(key)) {
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,59,Object information = contextValueMap.get(key);
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,60,if ((value == null && information == null)
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,61,|| (value != null && value.equals(information)))
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,62,return this;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,63,"key = label + ""["" + ++i +""]"";"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,65,"contextValueMap.put(key, value);"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,66,return this;
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,70,* Replaces a contextual label-value pair of this context.
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,71,* <p>
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,72,* This label-value pair provides information useful for debugging. If the
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,73,"* label does not yet exists, a simply add operation is performed."
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,74,* </p>
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,76,"* @param label  the label of the item to add, null not recommended"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,77,"* @param value  the value of item to add, may be null"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,78,"* @return this, for method chaining"
True,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java,80,"public ExceptionContext replaceValue(String label, Object value) {"
False,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,36, This label-value pair provides information useful for debugging.
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,36,* This label-value pair provides information useful for debugging. If the
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,37,"* provided label already exists, it depends on the implementation what"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,38,* happens with the new value.
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,39,* </p>
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,48,* Replaces a contextual label-value pair of this context.
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,49,* <p>
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,50,* This label-value pair provides information useful for debugging. If the
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,51,"* label does not exist yet, it depends on the implementation what happens"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,52,* with the provided value.
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,53,* </p>
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,55,"* @param label  the label of the item to add, null not recommended"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,56,"* @param value  the value of item to add, may be null"
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,57,* @return context itself to allow method chaining
True,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,src/main/java/org/apache/commons/lang3/exception/ExceptionContext.java,59,"public ExceptionContext replaceValue(String label, Object value);"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,29,* @author Apache Software Foundation
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,37,ublic ContextedExceptionTest(String name) {
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,38,uper(name);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,91,"addValue(""test Nbr"", new Integer(5))"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,92,"addValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,87,".addValue(""test Nbr"", new Integer(5));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,100,"ssertTrue(message.indexOf(""test Poorly written obj"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,103,"ssertTrue(message.indexOf(""Crap"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,107,"ssertTrue(contextedException.getValue(""crap"") == null);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,108,"ssertTrue(contextedException.getValue(""test Poorly written obj"") instanceof ObjectWithFaultyToString);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,110,ssertTrue(contextedException.getLabelSet().size() == 5);
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,101,assertTrue(contextedException.getLabelSet().size() == 4);
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,107,"contextedException.addValue(""test2"", ""different value"");"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,108,assertTrue(contextedException.getLabelSet().size() == 5);
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,109,"assertTrue(contextedException.getLabelSet().contains(""test2""));"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,110,"assertTrue(contextedException.getLabelSet().contains(""test2[1]""));"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,112,String contextMessage = contextedException.getFormattedExceptionMessage(null);
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,113,assertTrue(contextMessage.indexOf(TEST_MESSAGE) == -1);
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,114,assertTrue(contextedException.getMessage().endsWith(contextMessage));
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,117,public void testReplaceValue() {
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,118,contextedException = new ContextedException(new Exception(TEST_MESSAGE))
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,119,".addValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,121,String message = contextedException.getMessage();
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,122,assertTrue(message.indexOf(TEST_MESSAGE)>=0);
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,123,"assertTrue(message.indexOf(""test Poorly written obj"")>=0);"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,124,"assertTrue(message.indexOf(""Crap"")>=0);"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,126,"assertTrue(contextedException.getValue(""crap"") == null);"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,127,"assertTrue(contextedException.getValue(""test Poorly written obj"") instanceof ObjectWithFaultyToString);"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,129,assertTrue(contextedException.getLabelSet().size() == 1);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,119,"ontextedException.addValue(""test Poorly written obj"", ""replacement"");"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,134,"contextedException.replaceValue(""test Poorly written obj"", ""replacement"");"
True,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,136,assertTrue(contextedException.getLabelSet().size() == 1);
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,138,ublic void testGetMessage() {
False,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java,139,estAddValue();
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,29,* @author Apache Software Foundation
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,37,ublic ContextedRuntimeExceptionTest(String name) {
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,38,uper(name);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,91,"addValue(""test Nbr"", new Integer(5))"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,92,"addValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,88,".addValue(""test Nbr"", new Integer(5));"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,100,"ssertTrue(message.indexOf(""test Poorly written obj"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,103,"ssertTrue(message.indexOf(""Crap"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,107,"ssertTrue(contextedRuntimeException.getValue(""crap"") == null);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,108,"ssertTrue(contextedRuntimeException.getValue(""test Poorly written obj"") instanceof ObjectWithFaultyToString);"
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,110,ssertTrue(contextedRuntimeException.getLabelSet().size() == 5);
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,102,assertTrue(contextedRuntimeException.getLabelSet().size() == 4);
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,108,"contextedRuntimeException.addValue(""test2"", ""different value"");"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,109,assertTrue(contextedRuntimeException.getLabelSet().size() == 5);
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,110,"assertTrue(contextedRuntimeException.getLabelSet().contains(""test2""));"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,111,"assertTrue(contextedRuntimeException.getLabelSet().contains(""test2[1]""));"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,113,String contextMessage = contextedRuntimeException.getFormattedExceptionMessage(null);
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,114,assertTrue(contextMessage.indexOf(TEST_MESSAGE) == -1);
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,115,assertTrue(contextedRuntimeException.getMessage().endsWith(contextMessage));
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,118,public void testReplaceValue() {
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,119,contextedRuntimeException = new ContextedRuntimeException(new Exception(TEST_MESSAGE))
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,120,".addValue(""test Poorly written obj"", new ObjectWithFaultyToString());"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,122,String message = contextedRuntimeException.getMessage();
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,123,assertTrue(message.indexOf(TEST_MESSAGE)>=0);
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,124,"assertTrue(message.indexOf(""test Poorly written obj"")>=0);"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,125,"assertTrue(message.indexOf(""Crap"")>=0);"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,127,"assertTrue(contextedRuntimeException.getValue(""crap"") == null);"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,128,"assertTrue(contextedRuntimeException.getValue(""test Poorly written obj"") instanceof ObjectWithFaultyToString);"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,130,assertTrue(contextedRuntimeException.getLabelSet().size() == 1);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,119,"ontextedRuntimeException.addValue(""test Poorly written obj"", ""replacement"");"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,135,"contextedRuntimeException.replaceValue(""test Poorly written obj"", ""replacement"");"
True,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,137,assertTrue(contextedRuntimeException.getLabelSet().size() == 1);
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,138,ublic void testGetMessage() {
False,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,139,estAddValue();
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,26, JUnit tests for DefaultExceptionContext
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,26,* JUnit tests for DefaultExceptionContext.
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,49,"defaultExceptionContext.addValue(""test2"", ""different value"");"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,55,"assertTrue(message.indexOf(""test2[1]"")>=0);"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,60,"assertTrue(message.indexOf(""different value"")>=0);"
False,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,61,/contextedException.printStackTrace();
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,65,public void testReplaceValue() {
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,66,"defaultExceptionContext.replaceValue(""test2"", ""different value"");"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,67,"defaultExceptionContext.replaceValue(""test3"", ""3"");"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,69,"String message = defaultExceptionContext.getFormattedExceptionMessage(""This is an error"");"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,70,"assertTrue(message.indexOf(""This is an error"")>=0);"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,71,"assertTrue(message.indexOf(""test1"")>=0);"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,72,"assertTrue(message.indexOf(""test2"")>=0);"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,73,"assertTrue(message.indexOf(""test3"")>=0);"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,74,"assertTrue(message.indexOf(""test Date"")>=0);"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,75,"assertTrue(message.indexOf(""test Nbr"")>=0);"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,76,"assertTrue(message.indexOf(""test Poorly written obj"")>=0);"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,77,"assertTrue(message.indexOf(""different value"")>=0);"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,78,"assertTrue(message.indexOf(""5"")>=0);"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,79,"assertTrue(message.indexOf(""Crap"")>=0);"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,81,"assertTrue(message.indexOf(""test2[1]"")<0);"
True,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,src/test/java/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java,82,"assertTrue(message.indexOf(""some value"")<0);"
