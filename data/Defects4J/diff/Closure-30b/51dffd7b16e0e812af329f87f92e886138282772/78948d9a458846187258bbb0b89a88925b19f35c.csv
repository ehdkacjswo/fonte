is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,993,"ew PeepholeReplaceKnownMethods(),"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,993,"new PeepholeReplaceKnownMethods(late),"
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1010,"ew PeepholeReplaceKnownMethods(),"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1010,"new PeepholeReplaceKnownMethods(late),"
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,25,import java.util.regex.Pattern;
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,35,private final boolean late;
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,38,"* @param late When late is true, this mean we are currently running after"
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,39,* most of the other optimizations. In this case we avoid changes that make
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,40,* the code larger (but otherwise easier to analyze - such as using string
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,41,* splitting).
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,43,PeepholeReplaceKnownMethods(boolean late) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,44,this.late = late;
False,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,94,f (firstArg == null) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,106,"if (functionNameString.equals(""split"")) {"
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,107,"subtree = tryFoldStringSplit(subtree, stringNode, firstArg);"
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,108,} else if (firstArg == null) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,663,* Try to fold .split() calls on strings
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,665,"private Node tryFoldStringSplit(Node n, Node stringNode, Node arg1) {"
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,666,if (late) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,667,return n;
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,670,Preconditions.checkArgument(n.isCall());
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,671,Preconditions.checkArgument(stringNode.isString());
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,673,String separator = null;
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,674,String stringValue = stringNode.getString();
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,675,int limit = stringValue.length();
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,677,if (arg1 != null) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,678,if (arg1.isString()) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,679,separator = arg1.getString();
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,680,} else if (!arg1.isNull()) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,681,return n;
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,684,Node arg2 = arg1.getNext();
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,685,if (arg2 != null) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,686,if (arg2.isNumber()) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,687,limit = (int) arg2.getDouble();
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,688,if (limit < 0) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,689,return n;
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,691,} else {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,692,return n;
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,697,String[] stringArray;
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,698,if (separator != null) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,699,stringArray = stringValue.split(Pattern.quote(separator));
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,700,} else {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,701,stringArray = new String[1];
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,702,stringArray[0] = stringValue;
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,705,Node arrayOfStrings = IR.arraylit();
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,706,for (int i = 0; i < limit && i < stringArray.length; i++) {
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,707,arrayOfStrings.addChildToBack(
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,708,IR.string(stringArray[i]).srcref(stringNode));
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,711,Node parent = n.getParent();
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,712,"parent.replaceChild(n, arrayOfStrings);"
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,713,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java,714,return arrayOfStrings;
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,25,private boolean late = true;
False,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,37,ew PeepholeReplaceKnownMethods());
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,39,new PeepholeReplaceKnownMethods(late));
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,197,public void testFoldStringSplit() {
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,198,late = false;
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,199,"fold(""x = 'abcde'.split()"", ""x = ['abcde']"");"
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,200,"fold(""x = 'abcde'.split(null)"", ""x = ['abcde']"");"
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,201,"fold(""x = 'a b c d e'.split(' ')"", ""x = ['a','b','c','d','e']"");"
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,202,"fold(""x = 'a b c d e'.split(' ', 0)"", ""x = []"");"
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,203,"fold(""x = 'abcde'.split('cd')"", ""x = ['ab','e']"");"
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,204,"fold(""x = 'a b c d e'.split(' ', 1)"", ""x = ['a']"");"
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,205,"fold(""x = 'a b c d e'.split(' ', 3)"", ""x = ['a','b','c']"");"
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,206,"fold(""x = 'a b c d e'.split(null, 1)"", ""x = ['a b c d e']"");"
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,207,"foldSame(""x = 'abcde'.split(/ /)"");"
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,208,"foldSame(""x = 'abcde'.split(' ', -1)"");"
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,210,late = true;
True,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java,211,"foldSame(""x = 'a b c d e'.split(' ')"");"
