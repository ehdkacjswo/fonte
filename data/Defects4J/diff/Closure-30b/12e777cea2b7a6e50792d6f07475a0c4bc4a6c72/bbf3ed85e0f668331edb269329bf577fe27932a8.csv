is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,74,rivate ObjectType implicitPrototype;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,76,// NOTE(nicksantos): The implicit prototype can change over time.
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,77,"// Modelling this is a bear. Always call getImplicitPrototype(), because"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,78,// some subclasses override this to do special resolution handling.
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,79,private ObjectType implicitPrototypeFallback;
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,109,f (nativeType) {
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,110,his.implicitPrototype = implicitPrototype;
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,111, else if (implicitPrototype == null) {
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,112,his.implicitPrototype =
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,113,egistry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,113,if (nativeType || implicitPrototype != null) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,114,setImplicitPrototype(implicitPrototype);
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,115,his.implicitPrototype = implicitPrototype;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,116,setImplicitPrototype(
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,117,registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE));
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,378,eturn implicitPrototype;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,380,return implicitPrototypeFallback;
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,387,oid setImplicitPrototype(ObjectType implicitPrototype) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,389,final void setImplicitPrototype(ObjectType implicitPrototype) {
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,389,his.implicitPrototype = implicitPrototype;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,391,this.implicitPrototypeFallback = implicitPrototype;
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,506,"/ Don't try to resolve native types, because it's unnecessary and"
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,507,/ there are infinite loops between native types.
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,508,f (implicitPrototype != null && !implicitPrototype.isNativeObjectType()) {
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,509,"mplicitPrototype = (ObjectType) implicitPrototype.resolve(t, scope);"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,508,ObjectType implicitPrototype = getImplicitPrototype();
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,509,if (implicitPrototype != null) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,510,implicitPrototypeFallback =
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,511,"(ObjectType) implicitPrototype.resolve(t, scope);"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2748,public void testGoodExtends13() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2749,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2750,"""/** @constructor \n * @extends {B}  */ function C() {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2751,"""/** @constructor \n * @extends {D}  */ function E() {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2752,"""/** @constructor \n * @extends {C}  */ function D() {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2753,"""/** @constructor \n * @extends {A} */ function B() {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2754,"""/** @constructor */ function A() {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2755,"""/** @param {number} x */ function f(x) {} f(new E());"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2756,"""actual parameter 1 of f does not match formal parameter\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2757,"""found   : E\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2758,"""required: number"");"
