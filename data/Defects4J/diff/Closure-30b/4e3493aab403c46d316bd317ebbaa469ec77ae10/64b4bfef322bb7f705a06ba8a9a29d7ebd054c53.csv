is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,662,p.addChildToBack(transform(param));
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,662,Node paramNode = transform(param);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,663,// When in ideMode Rhino can generate a param list with only a single
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,664,// ErrorNode. This is transformed into an EMPTY node. Drop this node in
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,665,// ideMode to keep the AST in a valid state.
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,666,if (paramNode.isName()) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,667,lp.addChildToBack(paramNode);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,668,} else {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,669,// We expect this in ideMode or when there is an error handling
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,670,// destructuring parameter assignments which aren't supported
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,671,// (an error has already been reported).
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,672,Preconditions.checkState(
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,673,config.isIdeMode
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,674,|| paramNode.isObjectLit()
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,675,|| paramNode.isArrayLit());
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,352,ublic void testIssue70() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,352,public void testIssue70a() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,356,public void testIssue70b() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,357,"test(""function foo([]) {}"", RhinoErrorReporter.PARSE_ERROR);"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1982,ublic void testIncompleteFunction() {
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1982,public void testIncompleteFunction1() {
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1997,public void testIncompleteFunction2() {
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1998,CompilerOptions options = createCompilerOptions();
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1999,options.ideMode = true;
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2000,DiagnosticType[] warnings = new DiagnosticType[]{
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2001,"RhinoErrorReporter.PARSE_ERROR,"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2002,"RhinoErrorReporter.PARSE_ERROR,"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2003,"RhinoErrorReporter.PARSE_ERROR,"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2004,"RhinoErrorReporter.PARSE_ERROR,"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2005,"RhinoErrorReporter.PARSE_ERROR,"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2006,RhinoErrorReporter.PARSE_ERROR};
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2007,"test(options,"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2008,"new String[] { ""function hi"" },"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2009,"new String[] { ""function hi() {}"" },"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2010,warnings
