is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,150,* Get the symbols in their natural ordering.
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,151,* Always returns a mutable list.
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,153,public List<Symbol> getAllSymbolsSorted() {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,154,List<Symbol> sortedSymbols = Lists.newArrayList(symbols.values());
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,155,"Collections.sort(sortedSymbols, getNaturalSymbolOrdering());"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,156,return sortedSymbols;
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,640,or (Symbol symbol : getAllSymbols()) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,650,for (Symbol symbol : getAllSymbolsSorted()) {
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,650,"/ Never create new symbols, because we don't want to guess at"
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,651,"/ declarations if we're not sure. If this symbol doesn't exist,"
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,652,/ then we probably want to add a better symbol table that does
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,653,/ have it.
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,660,if (namespace == null && symbol.scope.isGlobalScope()) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,661,"namespace = declareSymbol(name,"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,662,"registry.getNativeType(JSTypeNative.UNKNOWN_TYPE),"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,663,"true,"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,664,"symbol.scope,"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,665,"currentNode,"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,666,null /* jsdoc info */);
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,87,public void testGlobalThisReferences3() throws Exception {
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,88,"SymbolTable table = createSymbolTable(""this.foo = {}; this.foo.bar = {};"");"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,90,"Symbol global = getGlobalVar(table, ""*global*"");"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,91,assertNotNull(global);
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,93,List<Reference> refs = table.getReferenceList(global);
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,94,"assertEquals(2, refs.size());"
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,195,"/ TODO(nicksantos): We should try to create a symbol for goog.dom,"
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,196,/ even though we can't find a declaration for it.
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,198,ssertNull(googDom);
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,206,assertNotNull(googDom);
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,207,"assertEquals(2, table.getReferenceList(googDom).size());"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,715,"// Make sure that the global ""this"" is declared at the first input root."
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,716,"Symbol global = getGlobalVar(table, ""*global*"");"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,717,assertNotNull(global);
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,718,assertNotNull(global.getDeclaration());
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,719,"assertEquals(Token.SCRIPT, global.getDeclaration().getNode().getType());"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,721,List<Reference> globalRefs = table.getReferenceList(global);
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,723,// The main reference list should never contain the synthetic declaration
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,724,// for the global root.
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,725,assertFalse(globalRefs.contains(global.getDeclaration()));
