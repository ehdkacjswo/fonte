is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,195,f ((functionName).equals(qualifiedName)) {
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,196,lassName = callee.getNext().getString();
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,195,if (functionName.equals(qualifiedName)) {
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,196,Node target = callee.getNext();
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,197,if (target != null && target.getType() == Token.STRING) {
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,198,className = target.getString();
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,194,public void testRequire() {
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,195,"assertRequire(""goog.require('foo')"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,196,"assertNotRequire(""goog.require(foo)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,197,"assertNotRequire(""goog.require()"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,198,"assertNotRequire(""foo()"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,211,private void assertRequire(String code) {
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,212,Node n = parseTestCode(code);
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,213,"assertNotNull(conv.extractClassNameIfRequire(n.getFirstChild(), n));"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,216,private void assertNotRequire(String code) {
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,217,Node n = parseTestCode(code);
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,218,"assertNull(conv.extractClassNameIfRequire(n.getFirstChild(), n));"
