is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,84,* @param local {@code true} if the name is a local variable.
True,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,87,"public boolean isExported(String name, boolean local);"
True,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,90,"* Should be isExported(name, true) || isExported(name, false);"
False,src/com/google/javascript/jscomp/CompilationLevel.java,src/com/google/javascript/jscomp/CompilationLevel.java,98,ptions.collapseAnonymousFunctions = true;
False,src/com/google/javascript/jscomp/CompilationLevel.java,src/com/google/javascript/jscomp/CompilationLevel.java,129,ptions.collapseAnonymousFunctions = true;
True,src/com/google/javascript/jscomp/CompilationLevel.java,src/com/google/javascript/jscomp/CompilationLevel.java,139,options.collapseAnonymousFunctions = true;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,25,mport com.google.common.flags.Flag;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,26,mport com.google.common.flags.FlagSpec;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,66,"FlagSpec(help = ""As part of the aliasing pass, outputs all strings and "" +"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,67,"the number of times they were used in the application to "" +"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,68,"the server log."")"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,69,ublic static final Flag<Boolean> FLAG_output_js_string_usage =
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,70,lag.value(false);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1408,LAG_output_js_string_usage.get());
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1400,options_.outputJsStringUsage);
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,302,/** Print string usage as part of the compilation log. */
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,303,boolean outputJsStringUsage;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,587,outputJsStringUsage = false;
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,141,witch (parent.getType()) {
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,142,ase Token.BLOCK:
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,143,ase Token.SCRIPT:
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,144,ase Token.TRY:
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,145,ase Token.FINALLY:
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,146,eturn false;
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,147,ase Token.FUNCTION:
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,148,eturn n == parent.getFirstChild().getNext();
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,149,ase Token.WHILE:
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,150,ase Token.DO:
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,151,ase Token.IF:
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,152,eturn NodeUtil.getConditionExpression(parent) == n;
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,153,ase Token.FOR:
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,154,f (parent.getChildCount() == 4) {
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,155,eturn NodeUtil.getConditionExpression(parent) == n;
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,156, else {
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,157,eturn n != parent.getLastChild();
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,159,ase Token.SWITCH:
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,160,ase Token.CASE:
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,161,ase Token.CATCH:
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,162,ase Token.WITH:
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,163,eturn n == parent.getFirstChild();
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,165,efault:
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,166,eturn true;
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,141,return !isEnteringNewCfgNode(n);
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,146,* @return True if n should be represented by a new CFG node in the control
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,147,* flow graph.
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,149,public static boolean isEnteringNewCfgNode(Node n) {
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,150,Node parent = n.getParent();
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,151,switch (parent.getType()) {
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,152,case Token.BLOCK:
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,153,case Token.SCRIPT:
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,154,case Token.TRY:
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,155,case Token.FINALLY:
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,156,return true;
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,157,case Token.FUNCTION:
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,158,// A function node represents the start of a function where the name
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,159,// is bleed into the local scope and parameters has been assigned
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,160,// to the formal argument names. The node includes the name of the
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,161,// function and the LP list since we assume the whole set up process
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,162,// is atomic without change in control flow. The next change of
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,163,// control is going into the function's body represent by the second
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,164,// child.
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,165,return n != parent.getFirstChild().getNext();
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,166,case Token.WHILE:
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,167,case Token.DO:
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,168,case Token.IF:
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,169,// Theses control structure is represented by its node that holds the
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,170,// condition. Each of them is a branch node based on its condition.
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,171,return NodeUtil.getConditionExpression(parent) != n;
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,173,case Token.FOR:
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,174,// The FOR(;;) node differs from other control structure in that
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,175,// it has a initialization and a increment statement. Those
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,176,// two statements have its corresponding CFG nodes to represent them.
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,177,// The FOR node represents the condition check for each iteration.
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,178,// That way the following:
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,179,// for(var x = 0; x < 10; x++) { } has a graph that is isomorphic to
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,180,// var x = 0; while(x<10) {  x++; }
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,181,if (parent.getChildCount() == 4) {
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,182,return NodeUtil.getConditionExpression(parent) != n;
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,183,} else {
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,184,return n == parent.getLastChild();
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,186,case Token.SWITCH:
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,187,case Token.CASE:
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,188,case Token.CATCH:
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,189,case Token.WITH:
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,190,return n != parent.getFirstChild();
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,191,default:
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,192,return false;
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,31,mport java.util.logging.Logger;
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,46,rivate static final Logger logger =
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,47,ogger.getLogger(DeadAssignmentsElimination.class.getName());
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,114,"ryRemoveAssignment(t, NodeUtil.getConditionExpression(n), n, state);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,111,"tryRemoveAssignment(t, NodeUtil.getConditionExpression(n), state);"
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,119,", NodeUtil.getConditionExpression(n), n, state);"
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,120,ryRemoveAssignment(
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,121,", n.getFirstChild().getNext().getNext(), n, state);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,116,"t, NodeUtil.getConditionExpression(n), state);"
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,128,"ryRemoveAssignment(t, n.getFirstChild(), n, state);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,123,"tryRemoveAssignment(t, n.getFirstChild(), state);"
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,134,f (NodeUtil.isExpressionNode(n)) {
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,135,"ryRemoveAssignment(t, n.getFirstChild(), n, state);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,129,"tryRemoveAssignment(t, n, state);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,133,"private void tryRemoveAssignment(NodeTraversal t, Node n,"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,134,FlowState<LiveVariableLattice> state) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,135,"tryRemoveAssignment(t, n, n, state);"
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,146, @param parent Parent of {@code n}.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,144,* @param exprRoot The CFG node where the liveness information in state is
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,145,*     still correct.
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,149,"rivate void tryRemoveAssignment(NodeTraversal t, Node n, Node parent,"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,148,"private void tryRemoveAssignment(NodeTraversal t, Node n, Node exprRoot,"
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,151,f (NodeUtil.isAssign(n)) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,151,// TODO(user): Add implemenation to handle x++ and ++x by replacing
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,152,// them with x or x+1 respectively.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,153,if (NodeUtil.isAssignmentOp(n)) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,156,Node rhs = lhs.getNext();
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,158,// Recurse first. Example: dead_x = dead_y = 1; We try to clean up dead_y
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,159,// first.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,160,if (rhs != null) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,161,"tryRemoveAssignment(t, rhs, exprRoot, state);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,162,rhs = lhs.getNext();
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,168,f (state.getIn().isLive(var)) {
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,169,"/ Oddly, the variable is killed here but it is also live before it."
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,180,if (state.getIn().isLive(var) &&
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,181,"isVariableStillLiveWithinExpression(n, exprRoot, var.name)) {"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,182,// The variable is killed here but it is also live before it.
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,181,ode rhs = n.getLastChild();
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,182,/ Now we are at a dead local variable assignment.
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,183,"ogger.info(""Removing dead assignemnt to "" + name + "" in """
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,184," t.getSourceName() + "" line "" + n.getLineno());"
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,185,.removeChild(rhs);
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,186,"arent.replaceChild(n, rhs);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,195,if (NodeUtil.isAssign(n)) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,196,n.removeChild(rhs);
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,197,"n.getParent().replaceChild(n, rhs);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,198,} else if (NodeUtil.isAssignmentOp(n)) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,199,n.removeChild(rhs);
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,200,n.removeChild(lhs);
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,201,"Node op = new Node(NodeUtil.getOpFromAssignmentOp(n), lhs, rhs);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,202,"n.getParent().replaceChild(n, op);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,203,} else {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,204,// TODO(user): this is where the code that handles dead x++ and x--
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,205,// should go.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,207,// Not reachable.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,208,"Preconditions.checkState(false, ""Unknow statement"");"
False,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,193,"ryRemoveAssignment(t, c, n, state);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,217,if (!ControlFlowGraph.isEnteringNewCfgNode(c)) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,218,"tryRemoveAssignment(t, c, exprRoot, state);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,227,"* Given a variable, node n in the tree and a sub-tree denoted by exprRoot as"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,228,"* the root, this function returns true if there exists a read of that"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,229,* variable before a write to that variable that is on the right side of n.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,231,"* For example, suppose the node is x = 1:"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,233,"* y = 1, x = 1; // false, there is no reads at all."
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,234,"* y = 1, x = 1, print(x) // true, there is a read right of n."
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,235,"* y = 1, x = 1, x = 2, print(x) // false, there is a read right of n but"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,236,*                               // it is after a write.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,238,* @param n The current node we should look at.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,239,* @param exprRoot The node
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,241,private boolean isVariableStillLiveWithinExpression(
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,242,"Node n, Node exprRoot, String variable) {"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,243,while (n != exprRoot) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,244,for(Node sibling = n.getNext(); sibling != null;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,245,sibling = sibling.getNext()) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,246,if (!ControlFlowGraph.isEnteringNewCfgNode(sibling)) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,247,"VariableLiveness state = readVariableBeforeKilling(sibling, variable);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,249,// If we see a READ or KILL there is no need to continue.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,250,if (state == VariableLiveness.READ) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,251,return true;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,252,} else if (state == VariableLiveness.KILL) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,253,return false;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,257,n = n.getParent();
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,259,return false;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,262,// The current liveness of the variable
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,263,private enum VariableLiveness {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,264,"MAYBE_LIVE, // May be still live in the current expression tree."
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,265,"READ, // Known there is a read left of it."
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,266,"KILL, // Known there is a write before any read."
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,270,"* Give an expression and a variable. It returns READ, if the right-most"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,271,"* reference of that variable is a read. It returns KILL, if the right-most"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,272,* reference of that variable is an assignment. It returns MAY_LIVE otherwise.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,274,* This need to be a pre-order traversal so we cannot use the normal node
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,275,* traversals.
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,277,"private VariableLiveness readVariableBeforeKilling(Node n, String variable) {"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,278,if (NodeUtil.isName(n) && variable.equals(n.getString())) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,279,"if (NodeUtil.isLhs(n, n.getParent())) {"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,280,return VariableLiveness.KILL;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,281,} else {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,282,return VariableLiveness.READ;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,285,for (Node child = n.getFirstChild();
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,286,child != null; child = child.getNext()) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,287,if (!ControlFlowGraph.isEnteringNewCfgNode(child)) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,288,"VariableLiveness state = readVariableBeforeKilling(child, variable);"
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,289,if (state != VariableLiveness.MAYBE_LIVE) {
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,290,return state;
True,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,src/com/google/javascript/jscomp/DeadAssignmentsElimination.java,294,return VariableLiveness.MAYBE_LIVE;
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,58,@Override
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,59,"public boolean isExported(String name, boolean local) {"
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,60,"return local && name.startsWith(""$super"");"
False,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,60,eturn false;
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,65,"return isExported(name, false) || isExported(name, true);"
False,src/com/google/javascript/jscomp/GoogleCodingConvention.java,src/com/google/javascript/jscomp/GoogleCodingConvention.java,124,ublic boolean isExported(String name) {
False,src/com/google/javascript/jscomp/GoogleCodingConvention.java,src/com/google/javascript/jscomp/GoogleCodingConvention.java,125,"eturn name.startsWith(""_"");"
True,src/com/google/javascript/jscomp/GoogleCodingConvention.java,src/com/google/javascript/jscomp/GoogleCodingConvention.java,124,"public boolean isExported(String name, boolean local) {"
True,src/com/google/javascript/jscomp/GoogleCodingConvention.java,src/com/google/javascript/jscomp/GoogleCodingConvention.java,125,"return !local && name.startsWith(""_"");"
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,20,import com.google.common.collect.HashMultimap;
False,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,21,mport com.google.common.collect.Multimaps;
False,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,88,ayUseMap = Multimaps.newHashMultimap();
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,88,mayUseMap = HashMultimap.create();
False,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,97,ayUseMap = Multimaps.newHashMultimap(other.mayUseMap);
True,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,src/com/google/javascript/jscomp/MaybeReachingVariableUse.java,97,mayUseMap = HashMultimap.create(other.mayUseMap);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,720,static int getOpFromAssignmentOp(Node n) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,721,switch (n.getType()){
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,722,case Token.ASSIGN_BITOR:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,723,return Token.BITOR;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,724,case Token.ASSIGN_BITXOR:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,725,return Token.BITXOR;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,726,case Token.ASSIGN_BITAND:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,727,return Token.BITAND;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,728,case Token.ASSIGN_LSH:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,729,return Token.LSH;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,730,case Token.ASSIGN_RSH:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,731,return Token.RSH;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,732,case Token.ASSIGN_URSH:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,733,return Token.URSH;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,734,case Token.ASSIGN_ADD:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,735,return Token.ADD;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,736,case Token.ASSIGN_SUB:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,737,return Token.SUB;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,738,case Token.ASSIGN_MUL:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,739,return Token.MUL;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,740,case Token.ASSIGN_DIV:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,741,return Token.DIV;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,742,case Token.ASSIGN_MOD:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,743,return Token.MOD;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,745,"throw new IllegalArgumentException(""Not an assiment op"");"
False,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,213,ontinue;
True,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,213,// TODO(user): Its possible not to give up just yet. The type
True,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,214,// inference did a 'semi value propagation'. If we know that string
True,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,215,// is never a subclass of the type of the index. We'd know that
True,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,216,// it is never 'callee'.
True,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,217,return false; // Give up.
False,src/com/google/javascript/jscomp/RenameVars.java,src/com/google/javascript/jscomp/RenameVars.java,444,eturn isLocal || !compiler.getCodingConvention().isExported(name);
True,src/com/google/javascript/jscomp/RenameVars.java,src/com/google/javascript/jscomp/RenameVars.java,444,"return !compiler.getCodingConvention().isExported(name, isLocal);"
False,src/com/google/javascript/jscomp/RhinoErrorReporter.java,src/com/google/javascript/jscomp/RhinoErrorReporter.java,46,tatic final DiagnosticType BAD_JSDOC_ANNOTATION =
True,src/com/google/javascript/jscomp/RhinoErrorReporter.java,src/com/google/javascript/jscomp/RhinoErrorReporter.java,46,static final DiagnosticType DUPLICATE_PARAM =
True,src/com/google/javascript/jscomp/RhinoErrorReporter.java,src/com/google/javascript/jscomp/RhinoErrorReporter.java,47,"DiagnosticType.error(""JSC_DUPLICATE_PARAM"", ""Parse error. {0}"");"
True,src/com/google/javascript/jscomp/RhinoErrorReporter.java,src/com/google/javascript/jscomp/RhinoErrorReporter.java,49,static final DiagnosticType BAD_JSDOC_ANNOTATION =
True,src/com/google/javascript/jscomp/RhinoErrorReporter.java,src/com/google/javascript/jscomp/RhinoErrorReporter.java,82,// Duplicate parameter
True,src/com/google/javascript/jscomp/RhinoErrorReporter.java,src/com/google/javascript/jscomp/RhinoErrorReporter.java,83,replacePlaceHolders(
True,src/com/google/javascript/jscomp/RhinoErrorReporter.java,src/com/google/javascript/jscomp/RhinoErrorReporter.java,84,com.google.javascript.jscomp.mozilla.rhino.ScriptRuntime
True,src/com/google/javascript/jscomp/RhinoErrorReporter.java,src/com/google/javascript/jscomp/RhinoErrorReporter.java,85,".getMessage0(""msg.dup.parms"")),"
True,src/com/google/javascript/jscomp/RhinoErrorReporter.java,src/com/google/javascript/jscomp/RhinoErrorReporter.java,86,"DUPLICATE_PARAM,"
True,src/com/google/javascript/jscomp/WarningLevel.java,src/com/google/javascript/jscomp/WarningLevel.java,60,options.checkUnreachableCode = CheckLevel.WARNING;
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,33,private Compiler lastCompiler = null;
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,47,lastCompiler = null;
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,90,public void testDuplicateParams() {
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,91,"test(""function (a, a) {}"", RhinoErrorReporter.DUPLICATE_PARAM);"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,92,assertTrue(lastCompiler.hasHaltingErrors());
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,154,lastCompiler = compiler;
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,91,public void testUsedAsConditionsInSwitchStatements() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,96,"inFunction(""var x,y; switch(y) { case (x += 1): break; case (x): break;}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,98,"inFunction(""var x,y; switch(y) { case (x = 1): break; case (2): break;}"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,99,"""var x,y; switch(y) { case (1): break; case (2): break;}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,100,"inFunction(""var x,y; switch(y) { case (x+=1): break; case (x=2): break;}"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,101,"""var x,y; switch(y) { case (x+1): break; case (2): break;}"");"
False,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,110,/ But we missed an opportunity here.
False,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,111,"nFunction(""var a, b; if ((b = a) && (a = 1)) {b}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,119,"inFunction(""var a, b; if ((b = a) && (a = 1)) {b}"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,120,"""var a, b; if ((b = a) && (1)) {b}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,162,public void testSelfReAssignment() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,163,"inFunction(""var x; x = x;"", ""var x; x"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,166,public void testSelfIncrement() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,167,"inFunction(""var x; x = x + 1;"", ""var x; x + 1"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,170,public void testAssignmentOp() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,171,// We have remove constant expressions that cleans this one up.
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,172,"inFunction(""var x; x += foo()"", ""var x; x + foo()"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,175,public void testAssignmentOpUsedAsLhs() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,176,"inFunction(""var x,y; y = x += foo(); print(y)"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,177,"""var x,y; y = x +  foo(); print(y)"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,180,public void testAssignmentOpUsedAsCondition() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,181,"inFunction(""var x; if(x += foo()) {}"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,182,"""var x; if(x +  foo()) {}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,184,"inFunction(""var x; if((x += foo()) > 1) {}"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,185,"""var x; if((x +  foo()) > 1) {}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,187,// Not in a while because this happens every loop.
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,188,"inFunction(""var x; while((x += foo()) > 1) {}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,190,"inFunction(""var x; for(;--x;){}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,191,"inFunction(""var x; for(;x--;){}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,192,"inFunction(""var x; for(;x -= 1;){}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,193,"inFunction(""var x; for(;x = 0;){}"", ""var x; for(;0;){}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,195,"inFunction(""var x; for(;;--x){}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,196,"inFunction(""var x; for(;;x--){}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,197,"inFunction(""var x; for(;;x -= 1){}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,198,"inFunction(""var x; for(;;x = 0){}"", ""var x; for(;;0){}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,200,// TODO(user): Add support of INC and DEC.
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,201,"inFunction(""var x; for(--x;;){}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,202,"inFunction(""var x; for(x--;;){}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,203,"inFunction(""var x; for(x -= 1;;){}"", ""var x; for(x - 1;;){}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,204,"inFunction(""var x; for(x = 0;;){}"", ""var x; for(0;;){}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,207,public void testDeadIncrement() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,208,// TODO(user): Optimize this.
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,209,"inFunction(""var x; x ++"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,210,"inFunction(""var x; x --"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,213,public void testDeadButAlivePartiallyWithinTheExpression() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,214,"inFunction(""var x; x = 100, print(x), x = 101;"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,215,"""var x; x = 100, print(x),     101;"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,216,"inFunction(""var x; x = 100, print(x), print(x), x = 101;"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,217,"""var x; x = 100, print(x), print(x),     101;"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,218,"inFunction(""var x; x = 100, print(x), x = 0, print(x), x = 101;"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,219,"""var x; x = 100, print(x), x = 0, print(x),     101;"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,222,public void testMutipleDeadAssignmentsButAlivePartiallyWithinTheExpression() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,223,"inFunction(""var x; x = 1, x = 2, x = 3, x = 4, x = 5,"" +"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,224,"""  print(x), x = 0, print(x), x = 101;"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,226,"""var x; 1, 2, 3, 4, x = 5, print(x), x = 0, print(x), 101;"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,230,public void testDeadPartiallyWithinTheExpression() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,231,"// Sadly, this is not covered. We don't suspect this would happend too"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,232,// often.
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,233,"inFunction(""var x; x = 100, x = 101; print(x);"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,236,public void testAssignmentChain() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,237,"inFunction(""var a,b,c,d,e; a = b = c = d = e = 1"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,238,"""var a,b,c,d,e; 1"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,239,"inFunction(""var a,b,c,d,e; a = b = c = d = e = 1; print(c)"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,240,"""var a,b,c,d,e;         c = 1        ; print(c)"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,241,"inFunction(""var a,b,c,d,e; a = b = c = d = e = 1; print(a + e)"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,242,"""var a,b,c,d,e; a =             e = 1; print(a + e)"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,243,"inFunction(""var a,b,c,d,e; a = b = c = d = e = 1; print(b + d)"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,244,"""var a,b,c,d,e;     b =     d     = 1; print(b + d)"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,245,"inFunction(""var a,b,c,d,e; a = b = c = d = e = 1; print(a + b + d + e)"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,246,"""var a,b,c,d,e; a = b =     d = e = 1; print(a + b + d + e)"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,247,"inFunction(""var a,b,c,d,e; a = b = c = d = e = 1; print(a+b+c+d+e)"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,250,public void testAssignmentOpChain() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,251,"inFunction(""var a,b,c,d,e; a = b = c += d = e = 1"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,252,"""var a,b,c,d,e;         c + 1"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,253,"inFunction(""var a,b,c,d,e; a = b = c += d = e = 1;  print(e)"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,254,"""var a,b,c,d,e;         c +     (e = 1); print(e)"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,255,"inFunction(""var a,b,c,d,e; a = b = c += d = e = 1;  print(d)"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,256,"""var a,b,c,d,e;         c + (d = 1)  ;   print(d)"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,257,"inFunction(""var a,b,c,d,e; a = b = c += d = e = 1;  print(a)"","
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,258,"""var a,b,c,d,e; a =     c +          1;  print(a)"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,261,public void testIncDecInSubExpressions() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,262,"inFunction(""var a; a = 1, a++; a"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,265,public void testNestedReassignments() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,266,"inFunction(""var a; a = (a = 1)"", ""var a; 1"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,267,"inFunction(""var a; a = (a *= 2)"", ""var a; a*2"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,269,// TODO(user): ++ not supported.
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,271,// Note a = (a++) is not same as a++. Only if 'a' is dead.
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,272,"inFunction(""var a; a = (a++)"", ""var a; a++"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,273,"inFunction(""var a; a = (++a)"", ""var a; ++a"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,275,"inFunction(""var a; a = (b = (a = 1))"", ""var a; b = 1"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,276,"inFunction(""var a; a = (b = (a *= 2))"", ""var a; b = a * 2"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,277,"inFunction(""var a; a = (b = (a++))"", ""var a; b=a++"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,278,"inFunction(""var a; a = (b = (++a))"", ""var a; b=++a"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,280,// Include b as local.
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,281,"inFunction(""var a,b; a = (b = (a = 1))"", ""var a,b; 1"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,282,"inFunction(""var a,b; a = (b = (a *= 2))"", ""var a,b; a * 2"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,283,"inFunction(""var a,b; a = (b = (a++))"", ""var a,b; a++"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,284,"inFunction(""var a,b; a = (b = (++a))"", ""var a,b; ++a"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,286,"inFunction(""var a; a += (a++)"", ""var a; a+a++"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,287,"inFunction(""var a; a += (++a)"", ""var a; a+ ++a"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,289,// Include b as local.
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,290,"inFunction(""var a,b; a += (b = (a = 1))"", ""var a,b; a + 1"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,291,"inFunction(""var a,b; a += (b = (a *= 2))"", ""var a,b; a + (a * 2)"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,292,"inFunction(""var a,b; a += (b = (a++))"", ""var a,b; a + a++"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,293,"inFunction(""var a,b; a += (b = (++a))"", ""var a,b; a+(++a)"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,296,public void testIncrementalReassignmentInForLoops() {
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,297,"inFunction(""for(;x+=1;x+=1) {}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,298,"inFunction(""for(;x;x+=1){}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,299,"inFunction(""for(;x+=1;){foo(x)}"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,300,"inFunction(""for(;1;x+=1){foo(x)}"");"
False,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,91,ublic void testNotAllIndexKnown() {
False,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,92,"est(""function foo(  ) {alert(arguments[0] + arguments[x]);}"","
False,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,93,"function foo(p0) {alert(          p0 + arguments[x]);}"");"
True,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,146,public void testNoOptimizationWhenIndexIsNotNumberConstant() {
True,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,147,"testSame(""function f() { arguments[0]; arguments['callee'].length}"");"
True,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,148,"testSame(""function f() { arguments[0]; arguments.callee.length}"");"
True,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,149,testSame(
True,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,test/com/google/javascript/jscomp/OptimizeArgumentsArrayTest.java,150,"""function f() { arguments[0]; var x = 'callee'; arguments[x].length}"");"
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,38,private boolean useGoogleCodingConvention = true;
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,40,@Override
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,41,protected CodingConvention getCodingConvention() {
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,42,if (useGoogleCodingConvention) {
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,43,return new GoogleCodingConvention();
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,44,} else {
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,45,return new DefaultCodingConvention();
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,440,public void testDollarSignSuperExport() {
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,441,useGoogleCodingConvention = false;
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,442,// See http://code.google.com/p/closure-compiler/issues/detail?id=32
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,443,"test(""var x = function($super,duper,$fantastic){}"","
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,444,"""var c = function($super,    a,        b){}"");"
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,446,localRenamingOnly = false;
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,447,"test(""var $super = 1"", ""var a = 1"");"
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,449,useGoogleCodingConvention = true;
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,450,"test(""var x = function($super,duper,$fantastic){}"","
True,test/com/google/javascript/jscomp/RenameVarsTest.java,test/com/google/javascript/jscomp/RenameVarsTest.java,451,"""var d = function(a,     b,    c        ){}"");"
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,21,mport com.google.common.collect.Multisets;
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,22,import com.google.common.collect.TreeMultiset;
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,329,ultiset<String> defstrs = Multisets.newTreeMultiset();
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,329,Multiset<String> defstrs = TreeMultiset.create();
