is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,213,SType type = scope.getTypeOfThis();
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,214,f (type != null) {
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,215,f (type.isGlobalThisType()) {
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,216,eturn globalScope.getSlot(GLOBAL_THIS);
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,217, else if (type.isNominalConstructor()) {
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,218,eturn getSymbolDeclaredBy(type.toMaybeFunctionType());
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,219, else if (type.isFunctionPrototypeType()) {
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,220,eturn getSymbolForInstancesOf(
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,221,(ObjectType) type).getOwnerFunction());
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,224,eturn null;
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,213,"return getSymbolForTypeHelper(scope.getTypeOfThis(), false);"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,292,"* For instance types, this will return the constructor of"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,293,* that instance.
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,314,ymbol altSym = getOnlySymbolForType(alt);
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,305,"Symbol altSym = getSymbolForTypeHelper(alt, true);"
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,321,ymbol result = getOnlySymbolForType(type);
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,312,"Symbol result = getSymbolForTypeHelper(type, true);"
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,328," If there are more that one symbol associated with the given type,"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,319,"* If there is more that one symbol associated with the given type,"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,321,* @param type The type.
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,322,"* @param linkToCtor If true, we should link instance types back"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,323,"*     to their constructor function. If false, we should link"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,324,*     instance types back to their prototype. See the comments
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,325,*     at the top of this file for more information on how
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,326,*     our internal type system is more granular than Symbols.
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,331,rivate Symbol getOnlySymbolForType(JSType type) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,328,"private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {"
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,336,unctionType fnType = type.toMaybeFunctionType();
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,337,f (fnType != null) {
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,338,"eturn globalScope.getSlot(""Function"");"
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,341,bjectType objType = type.toObjectType();
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,342,f (objType != null) {
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,343,tring name = objType.getReferenceName();
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,345,unctionType ctor = objType.getConstructor();
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,346,ode sourceNode = ctor == null ? null : ctor.getSource();
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,347,ymbolScope scope = sourceNode == null
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,348, globalScope : getEnclosingScope(sourceNode);
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,350,eturn scope.getSlot(
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,351,name == null || !objType.isInstanceType())
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,352," ""Object"" : name);"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,333,if (type.isGlobalThisType()) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,334,return globalScope.getSlot(GLOBAL_THIS);
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,335,} else if (type.isNominalConstructor()) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,336,return linkToCtor ?
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,337,"globalScope.getSlot(""Function"") :"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,338,getSymbolDeclaredBy(type.toMaybeFunctionType());
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,339,} else if (type.isFunctionPrototypeType()) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,340,FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,341,return linkToCtor ?
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,342,getSymbolDeclaredBy(ownerFn) :
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,343,getSymbolForInstancesOf(ownerFn);
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,344,} else if (type.isInstanceType()) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,345,FunctionType ownerFn = ((ObjectType) type).getConstructor();
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,346,return linkToCtor ?
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,347,getSymbolDeclaredBy(ownerFn) :
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,348,getSymbolForInstancesOf(ownerFn);
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,349,} else if (type.isFunctionType()) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,350,return linkToCtor ?
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,351,"globalScope.getSlot(""Function"") :"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,352,"globalScope.getSlot(""Function.prototype"");"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,353,} else if (type.autoboxesTo() != null) {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,354,"return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);"
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,355,} else {
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,356,return null;
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,355,"/ TODO(nicksantos): Create symbols for value types (number, string)."
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,356,eturn null;
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,523, Symbol type = symbolTable.getOnlySymbolForType(x.getType());
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,524,* Symbol type = symbolTable.getAllSymbolsForType(x.getType()).get(0);
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,1019,ymbol = autobox == null ? null : getOnlySymbolForType(autobox);
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,1020,symbol = autobox == null
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,1021,"? null : getSymbolForTypeHelper(autobox, true);"
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,226,"ists.newArrayList(obj), table.getAllSymbolsForTypeOf(fooPrototype));"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,226,"Lists.newArrayList(foo), table.getAllSymbolsForTypeOf(fooPrototype));"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,258,public void testSuperClassMethodReferences() throws Exception {
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,259,SymbolTable table = createSymbolTable(
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,260,"""var goog = {};"" +"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,261,"""goog.inherits = function(a, b) {};"" +"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,262,"""/** @constructor */ var A = function(){};"" +"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,263,"""/** method */ A.prototype.method = function() {};"" +"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,264,"""/**\n"" +"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,265,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,266,""" * @extends {A}\n"" +"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,267,""" */\n"" +"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,268,"""var B = function(){};\n"" +"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,269,"""goog.inherits(B, A);"" +"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,270,"""/** method */ B.prototype.method = function() {"" +"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,271,"""  B.superClass_.method();"" +"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,274,Symbol methodA =
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,275,"getGlobalVar(table, ""A.prototype.method"");"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,276,assertEquals(
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,277,"2, Iterables.size(table.getReferences(methodA)));"
