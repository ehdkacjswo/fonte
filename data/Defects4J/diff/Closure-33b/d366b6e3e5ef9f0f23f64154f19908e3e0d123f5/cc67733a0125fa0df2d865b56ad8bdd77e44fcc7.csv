is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,878,f (p.isVarArgs()) {
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,879,"ppendVarArgsString(b, p.getJSType());"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,880, else {
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,881,.append(p.getJSType().toString());
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,878,"appendArgString(b, p);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,886,f (p.isVarArgs()) {
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,887,"ppendVarArgsString(b, p.getJSType());"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,888, else {
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,889,.append(p.getJSType().toString());
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,883,"appendArgString(b, p);"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,894,"private void appendArgString(StringBuilder b, Node p) {"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,895,if (p.isVarArgs()) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,896,"appendVarArgsString(b, p.getJSType());"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,897,} else if (p.isOptionalArg()) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,898,"appendOptionalArgString(b, p.getJSType());"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,899,} else {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,900,b.append(p.getJSType().toString());
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,914,/** Gets the string representation of an optional param. */
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,915,private void appendOptionalArgString(
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,916,"StringBuilder builder, JSType paramType) {"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,917,if (paramType.isUnionType()) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,918,// Remove the optionalness from the var arg.
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,919,paramType = paramType.toMaybeUnionType().getRestrictedUnion(
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,920,registry.getNativeType(JSTypeNative.VOID_TYPE));
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,922,"builder.append(paramType).append(""="");"
False,test/com/google/javascript/jscomp/FunctionTypeBuilderTest.java,test/com/google/javascript/jscomp/FunctionTypeBuilderTest.java,67," ""found   : function (new:String, *): number\n"""
True,test/com/google/javascript/jscomp/FunctionTypeBuilderTest.java,test/com/google/javascript/jscomp/FunctionTypeBuilderTest.java,67,"+ ""found   : function (new:String, *=): number\n"""
False,test/com/google/javascript/jscomp/FunctionTypeBuilderTest.java,test/com/google/javascript/jscomp/FunctionTypeBuilderTest.java,93," ""found   : function (new:String, ?, ?): string\n"""
True,test/com/google/javascript/jscomp/FunctionTypeBuilderTest.java,test/com/google/javascript/jscomp/FunctionTypeBuilderTest.java,93,"+ ""found   : function (new:String, ?=, ?=): string\n"""
False,test/com/google/javascript/jscomp/FunctionTypeBuilderTest.java,test/com/google/javascript/jscomp/FunctionTypeBuilderTest.java,106," ""found   : function (new:String, ?): string\n"""
True,test/com/google/javascript/jscomp/FunctionTypeBuilderTest.java,test/com/google/javascript/jscomp/FunctionTypeBuilderTest.java,106,"+ ""found   : function (new:String, ?=): string\n"""
False,test/com/google/javascript/jscomp/FunctionTypeBuilderTest.java,test/com/google/javascript/jscomp/FunctionTypeBuilderTest.java,115," ""found   : function (new:Function, ?): ?\n"""
True,test/com/google/javascript/jscomp/FunctionTypeBuilderTest.java,test/com/google/javascript/jscomp/FunctionTypeBuilderTest.java,115,"+ ""found   : function (new:Function, ?=): ?\n"""
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,1274,"function ((number|undefined)): string"");"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,1274,"""function (number=): string"");"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,1288,"function (?, (number|undefined)): string"");"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,1288,"""function (?, number=): string"");"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,1423,"function (this:Date, ?): string"");"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,1423,"""function (this:Date, ?=): string"");"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,2131,"found   : function (new:Date, ?, ?, ?, ?, ?, ?, ?): string\n"" +"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,2131,"""found   : function (new:Date, ?=, ?=, ?=, ?=, ?=, ?=, ?=): string\n"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,1483,"function ((number|undefined)): string"");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,1483,"""function (number=): string"");"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,1497,"function (?, (number|undefined)): string"");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,1497,"""function (?, number=): string"");"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,1641,"function (this:Date, ?): string"");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,1641,"""function (this:Date, ?=): string"");"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2429,"found   : function (new:Date, ?, ?, ?, ?, ?, ?, ?): string\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2429,"""found   : function (new:Date, ?=, ?=, ?=, ?=, ?=, ?=, ?=): string\n"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4762,"found   : function (new:Object, *): ?\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4762,"""found   : function (new:Object, *=): ?\n"" +"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,663,"function ((Object|null|undefined), (Object|null|undefined)): ?"","
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,663,"""function ((Object|null)=, (Object|null)=): ?"","
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,680,"ssertEquals(""function (new:Object, *): ?"", obj.toString());"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,680,"assertEquals(""function (new:Object, *=): ?"", obj.toString());"
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,264,"function ((Date|null|undefined), string, number):"" +"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,264,"""function ((Date|null|undefined), string=, number=):"" +"
