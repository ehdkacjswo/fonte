is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,19,import com.google.common.base.Join;
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,21,import com.google.common.collect.Sets;
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,28,mport com.google.javascript.jscomp.graph.LinkedUndirectedGraph;
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,31,import com.google.javascript.jscomp.graph.LinkedUndirectedGraph;
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,32,import com.google.javascript.jscomp.graph.UndiGraph;
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,32,mport com.google.javascript.jscomp.graph.UndiGraph;
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,63,"rivate final Deque<GraphColoring<Var, ?>> colorings;"
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,65,** Logs all name assignments */
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,66,rivate StringBuilder coalescedLog;
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,65,"private final Deque<GraphColoring<Var, Void>> colorings;"
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,66,private final boolean usePseudoNames;
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,75,oalesceVariableNames(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,76,"* @param usePseudoNames For debug purposes, when merging variable foo and bar"
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,77,"* to foo, rename both variable to foo_bar."
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,79,"CoalesceVariableNames(AbstractCompiler compiler, boolean usePseudoNames) {"
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,78,oalescedLog = new StringBuilder();
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,82,this.usePseudoNames = usePseudoNames;
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,85,"/ Lastly, write the report to the debug log."
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,86,"ompiler.addToDebugLog(""JS vars coalesced:\n"" + coalescedLog.toString());"
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,87,oalescedLog = new StringBuilder();
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,110,"raphColoring<Var, ?> coloring ="
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,110,"GraphColoring<Var, Void> coloring ="
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,140,f (vNode.getValue().equals(coalescedVar)) {
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,141,"/ The coalesced name is itself, nothing to do."
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,142,eturn;
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,141,if (!usePseudoNames) {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,142,if (vNode.getValue().equals(coalescedVar)) {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,143,"// The coalesced name is itself, nothing to do."
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,144,return;
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,145,f (var.getNameNode() == n) {
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,146,"oalescedLog.append(n.getString()).append("" => "")"
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,147,"append(coalescedVar.name).append("" in "")"
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,148,append(t.getSourceName()).append(':')
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,149,append(n.getLineno()).append('\n');
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,147,// Rename.
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,148,n.setString(coalescedVar.name);
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,149,compiler.reportCodeChange();
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,152,/ Rename.
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,153,.setString(coalescedVar.name);
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,154,ompiler.reportCodeChange();
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,151,if (NodeUtil.isVar(parent)) {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,152,removeVarDeclaration(n);
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,154,} else {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,155,"// This code block is slow but since usePseudoName is for debugging,"
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,156,// we should not sacrifice performance for non-debugging compilation to
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,157,// make this fast.
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,158,String pseudoName = null;
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,159,Set<String> allMergedNames = Sets.newTreeSet();
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,160,for (Iterator<Var> i = t.getScope().getVars(); i.hasNext();) {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,161,Var iVar = i.next();
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,162,if (coalescedVar.equals(colorings.peek().getPartitionSuperNode(iVar))) {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,163,allMergedNames.add(iVar.name);
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,167,// Keep its original name.
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,168,if (allMergedNames.size() == 1) {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,169,return;
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,172,"pseudoName = Join.join(""_"", allMergedNames);"
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,174,"while (t.getScope().isDeclared(pseudoName, true)) {"
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,175,"pseudoName += ""$"";"
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,178,n.setString(pseudoName);
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,179,compiler.reportCodeChange();
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,156,f (NodeUtil.isVar(parent)) {
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,157,emoveVarDeclaration(n);
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,181,if (!vNode.getValue().equals(coalescedVar) && NodeUtil.isVar(parent)) {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,182,removeVarDeclaration(n);
True,src/com/google/javascript/jscomp/CompilationLevel.java,src/com/google/javascript/jscomp/CompilationLevel.java,141,options.reserveRawExports = true;
False,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,57,rivate static final Flag<CompilationLevel> FLAG_compilation_level
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,57,static final Flag<CompilationLevel> FLAG_compilation_level
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,69,"@FlagSpec(help = ""Enable debugging opitons."")"
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,70,static final Flag<Boolean> FLAG_debug
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,71,= Flag.value(false);
False,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,93,rivate static final Flag<List<FormattingOption>> FLAG_formatting
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,97,static final Flag<List<FormattingOption>> FLAG_formatting
False,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,98,rivate static final Flag<Boolean> FLAG_process_closure_primitives
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,102,static final Flag<Boolean> FLAG_process_closure_primitives
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,119,if (FLAG_debug.get()) {
True,src/com/google/javascript/jscomp/CompilerRunner.java,src/com/google/javascript/jscomp/CompilerRunner.java,120,level.setDebugOptionsForCompilationLevel(options);
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1384,eturn new CoalesceVariableNames(compiler);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1384,"return new CoalesceVariableNames(compiler, options.generatePseudoNames);"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,409,f (autoboxesTo() != null) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,410,eturn autoboxesTo().isSubtype(that);
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,412,f (unboxesTo() != null) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,413,eturn unboxesTo().isSubtype(that);
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,30,private boolean usePseudoName = false;
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,32,@Override
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,33,protected int getNumRepetitions() {
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,34,return 1;
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,37,@Override
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,38,public void setUp() {
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,39,usePseudoName = false;
False,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,35,ew CoalesceVariableNames(compiler));
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,47,"new CoalesceVariableNames(compiler, usePseudoName));"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,344,public void testUsePseduoNames() {
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,345,usePseudoName = true;
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,346,"inFunction(""var x   = 0; print(x  ); var   y = 1; print(  y)"","
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,347,"""var x_y = 0; print(x_y);     x_y = 1; print(x_y)"");"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,349,"inFunction(""var x_y = 1; var x   = 0; print(x  ); var     y = 1;"" +"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,350,"""print(  y); print(x_y);"","
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,352,"""var x_y = 1; var x_y$ = 0; print(x_y$);     x_y$ = 1;"" + """" +"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,353,"""print(x_y$); print(x_y);"");"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,355,"inFunction(""var x_y = 1; function f() {"" +"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,356,"""var x    = 0; print(x  ); var y = 1; print( y);"" +"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,357,"""print(x_y);}"","
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,359,"""var x_y = 1; function f() {"" +"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,360,"""var x_y$ = 0; print(x_y$); x_y$ = 1; print(x_y$);"" +"
True,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java,361,"""print(x_y);}"");"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,49,Flags.resetAllFlagsForTest();
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,127,public void testDebugFlag1() {
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,128,CompilerRunner.FLAG_compilation_level.setForTest(
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,129,CompilationLevel.SIMPLE_OPTIMIZATIONS);
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,130,CompilerRunner.FLAG_debug.setForTest(false);
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,131,"testSame(""function foo(a) {}"");"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,134,public void testDebugFlag2() {
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,135,CompilerRunner.FLAG_compilation_level.setForTest(
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,136,CompilationLevel.SIMPLE_OPTIMIZATIONS);
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,137,CompilerRunner.FLAG_debug.setForTest(true);
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,138,"test(""function foo(a) {}"","
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,139,"""function foo($a$$) {}"");"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,142,public void testDebugFlag3() {
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,143,CompilerRunner.FLAG_compilation_level.setForTest(
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,144,CompilationLevel.ADVANCED_OPTIMIZATIONS);
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,145,CompilerRunner.FLAG_warning_level.setForTest(
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,146,WarningLevel.QUIET);
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,147,CompilerRunner.FLAG_debug.setForTest(false);
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,148,"test(""function Foo() {};"" +"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,149,"""Foo.x = 1;"" +"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,150,"""function f() {throw new Foo().x;} f();"","
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,151,"""function a() {};"" +"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,152,"""throw new a().a;"");"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,155,public void testDebugFlag4() {
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,156,CompilerRunner.FLAG_compilation_level.setForTest(
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,157,CompilationLevel.ADVANCED_OPTIMIZATIONS);
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,158,CompilerRunner.FLAG_warning_level.setForTest(
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,159,WarningLevel.QUIET);
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,160,CompilerRunner.FLAG_debug.setForTest(true);
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,161,"test(""function Foo() {};"" +"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,162,"""Foo.x = 1;"" +"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,163,"""function f() {throw new Foo().x;} f();"","
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,164,"""function $Foo$$() {};"" +"
True,test/com/google/javascript/jscomp/CompilerRunnerTest.java,test/com/google/javascript/jscomp/CompilerRunnerTest.java,165,"""throw new $Foo$$().$x$;"");"
False,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1609," parse(""@throws {Number} This is a description.*/"", true);"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1609,"= parse(""@throws {number} This is a description.*/"", true);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1187,ssertTrue(NUMBER_OBJECT_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1187,assertFalse(NUMBER_OBJECT_TYPE.canAssignTo(NUMBER_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1196,ssertTrue(NUMBER_OBJECT_TYPE.canAssignTo(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1196,assertFalse(NUMBER_OBJECT_TYPE.canAssignTo(
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1320,ssertTrue(NUMBER_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1320,assertFalse(NUMBER_TYPE.canAssignTo(OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1925,ssertTrue(STRING_OBJECT_TYPE.canAssignTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1925,assertFalse(STRING_OBJECT_TYPE.canAssignTo(STRING_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1931,ssertTrue(STRING_OBJECT_TYPE.canAssignTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1931,assertFalse(STRING_OBJECT_TYPE.canAssignTo(STRING_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2078,ssertTrue(STRING_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2078,assertFalse(STRING_TYPE.canAssignTo(STRING_OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2080,ssertTrue(STRING_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2080,assertFalse(STRING_TYPE.canAssignTo(OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2952,ssertTrue(BOOLEAN_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2952,assertFalse(BOOLEAN_TYPE.canAssignTo(OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3252,ssertTrue(elementsType.canAssignTo(OBJECT_TYPE)); // autoboxing
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3252,assertFalse(elementsType.canAssignTo(OBJECT_TYPE)); // no more autoboxing
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4766, Tests that special union types can assign to other types. For instance
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4767," <code>(number,Number)</code> can assign to <code>number</code> or"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4768," <code>Number</code> even though <code>number &lt; (number, Number)</code>"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4769," and <code>Number &lt; (number,Number)</code>. Unions containing the unknown"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4770, type should be able to assign to any other type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4766,* Tests that special union types can assign to other types.  Unions
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4767,* containing the unknown type should be able to assign to any other
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4768,* type.
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4777,ssertTrue(numbers.canAssignTo(NUMBER_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4778,ssertTrue(numbers.canAssignTo(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4775,assertFalse(numbers.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4776,assertFalse(numbers.canAssignTo(NUMBER_OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4783,ssertTrue(strings.canAssignTo(STRING_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4784,ssertTrue(strings.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4781,assertFalse(strings.canAssignTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4782,assertFalse(strings.canAssignTo(STRING_OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4789,ssertTrue(booleans.canAssignTo(BOOLEAN_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4790,ssertTrue(booleans.canAssignTo(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4787,assertFalse(booleans.canAssignTo(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4788,assertFalse(booleans.canAssignTo(BOOLEAN_OBJECT_TYPE));
