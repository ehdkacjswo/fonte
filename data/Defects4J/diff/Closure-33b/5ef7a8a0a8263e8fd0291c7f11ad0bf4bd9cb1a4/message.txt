
First class support for AMD[1] and Common JS[2] modules in closure compiler.

The AMD specific pass, compiles AMD modules to CJS modules. The CJS pass
turns the modules into a form that can be concatenated without the need
to enclose the code in an immediate function to protect the scope. This makes
applying our optimizations significantly more effective.

Attempts to set up correct requires and provides for each module and to order
modules correctly. This part of my CL needs some help. I'm having trouble
understanding the original design and feel that what I wrote looks
sub-optimal.

I did integration testing by compiling the dojo library which uses AMD.
Size reduction looks good and cross module code motion as well as dead
code elimination works.
[1] https://github.com/amdjs/amdjs-api/wiki/AMD
[2] http://wiki.commonjs.org/wiki/Modules/1.1.1

R=johnlenz,nicksantos
DELTA=1113  (1109 added, 0 deleted, 4 changed)


Revision created by MOE tool push_codebase.
MOE_MIGRATION=3981


git-svn-id: https://closure-compiler.googlecode.com/svn/trunk@1684 b0f006be-c8cd-11de-a2e8-8d36a3108c74
