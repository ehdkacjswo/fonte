is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,344,"inal Vector3D p10    = (Vector3D) oPlane.toSpace(new Vector2D(1.0, 0.0));"
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,345,"inal Vector3D p01    = (Vector3D) oPlane.toSpace(new Vector2D(0.0, 1.0));"
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,346,inal Vector2D  tP00   = (Vector2D) tPlane.toSubSpace(apply(p00));
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,347,inal Vector2D  tP10   = (Vector2D) tPlane.toSubSpace(apply(p10));
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,348,inal Vector2D  tP01   = (Vector2D) tPlane.toSubSpace(apply(p01));
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,344,"final Vector3D p10    = oPlane.toSpace(new Vector2D(1.0, 0.0));"
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,345,"final Vector3D p01    = oPlane.toSpace(new Vector2D(0.0, 1.0));"
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,346,final Vector2D  tP00   = tPlane.toSubSpace(apply(p00));
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,347,final Vector2D  tP10   = tPlane.toSubSpace(apply(p10));
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,348,final Vector2D  tP01   = tPlane.toSubSpace(apply(p01));
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,410,inal Vector2D shift  = (Vector2D) tPlane.toSubSpace(apply(oPlane.getOrigin()));
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java,410,final Vector2D shift  = tPlane.toSubSpace(apply(oPlane.getOrigin()));
False,src/test/java/org/apache/commons/math/geometry/euclidean/threed/PlaneTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/threed/PlaneTest.java,133,ine     l   = (Line) pA.intersection(pB);
True,src/test/java/org/apache/commons/math/geometry/euclidean/threed/PlaneTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/threed/PlaneTest.java,133,Line     l   = pA.intersection(pB);
False,src/test/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSetTest.java,131,"ewB.subtract((Vector3D) tree.getBarycenter()).getNorm(),"
True,src/test/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSetTest.java,131,"newB.subtract(tree.getBarycenter()).getNorm(),"
False,src/test/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSetTest.java,175,ector3D v = (Vector3D) plane.toSpace(vertices[0][i]);
True,src/test/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSetTest.java,175,Vector3D v = plane.toSpace(vertices[0][i]);
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,45,"(Vector1D) l.toSubSpace(new Vector2D(-3,  4))).getX(),"
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,45,"(l.toSubSpace(new Vector2D(-3,  4))).getX(),"
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,48,"(Vector1D) l.toSubSpace(new Vector2D( 3, -4))).getX(),"
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,48,"(l.toSubSpace(new Vector2D( 3, -4))).getX(),"
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,51,"(Vector1D) l.toSubSpace(new Vector2D( 7, -1))).getX(),"
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,51,"(l.toSubSpace(new Vector2D( 7, -1))).getX(),"
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,54,"(Vector1D) l.toSubSpace(new Vector2D(-1, -7))).getX(),"
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,54,"(l.toSubSpace(new Vector2D(-1, -7))).getX(),"
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,70,ector2D point = (Vector2D) l.toSpace(pA);
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,71,"ssert.assertEquals(a, ((Vector1D) l.toSubSpace(point)).getX(), 1.0e-10);"
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,70,Vector2D point = l.toSpace(pA);
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,71,"Assert.assertEquals(a, (l.toSubSpace(point)).getX(), 1.0e-10);"
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,75,"ssert.assertEquals(a, ((Vector1D) l.toSubSpace(point)).getX(), 1.0e-10);"
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,75,"Assert.assertEquals(a, (l.toSubSpace(point)).getX(), 1.0e-10);"
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,123,ector2D p  = (Vector2D) l1.intersection(l2);
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/LineTest.java,123,Vector2D p  = l1.intersection(l2);
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,235,nterval v10 = (Interval) i1.get(0);
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,236,ector2D p10Lower = (Vector2D) l1.toSpace(new Vector1D(v10.getLower()));
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,235,Interval v10 = i1.get(0);
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,236,Vector2D p10Lower = l1.toSpace(new Vector1D(v10.getLower()));
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,239,ector2D p10Upper = (Vector2D) l1.toSpace(new Vector1D(v10.getUpper()));
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,239,Vector2D p10Upper = l1.toSpace(new Vector1D(v10.getUpper()));
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,242,nterval v11 = (Interval) i1.get(1);
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,243,ector2D p11Lower = (Vector2D) l1.toSpace(new Vector1D(v11.getLower()));
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,242,Interval v11 = i1.get(1);
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,243,Vector2D p11Lower = l1.toSpace(new Vector1D(v11.getLower()));
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,246,ector2D p11Upper = (Vector2D) l1.toSpace(new Vector1D(v11.getUpper()));
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,246,Vector2D p11Upper = l1.toSpace(new Vector1D(v11.getUpper()));
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,254,nterval v20 = (Interval) i2.get(0);
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,255,ector2D p20Lower = (Vector2D) l2.toSpace(new Vector1D(v20.getLower()));
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,254,Interval v20 = i2.get(0);
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,255,Vector2D p20Lower = l2.toSpace(new Vector1D(v20.getLower()));
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,258,ector2D p20Upper = (Vector2D) l2.toSpace(new Vector1D(v20.getUpper()));
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,258,Vector2D p20Upper = l2.toSpace(new Vector1D(v20.getUpper()));
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,821,ector2D p = (Vector2D) l0.intersection(l1);
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,822,eturn ((Vector1D) l0.toSubSpace(p)).getX();
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,821,Vector2D p = l0.intersection(l1);
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,822,return (l0.toSubSpace(p)).getX();
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,830, ((Vector1D) line.toSubSpace(start)).getX();
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,830,: (line.toSubSpace(start)).getX();
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,832, ((Vector1D) line.toSubSpace(end)).getX()
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,832,? (line.toSubSpace(end)).getX()
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,839,ouble lower = ((Vector1D) line.toSubSpace(start)).getX();
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,840,ouble upper = ((Vector1D) line.toSubSpace(end)).getX();
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,839,double lower = (line.toSubSpace(start)).getX();
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,840,double upper = (line.toSubSpace(end)).getX();
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,856,ouble x  = ((Vector1D) line.toSubSpace(p)).getX();
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,857,ouble x1 = ((Vector1D) line.toSubSpace(p1)).getX();
False,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,858,ouble x2 = ((Vector1D) line.toSubSpace(p2)).getX();
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,856,double x  = (line.toSubSpace(p)).getX();
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,857,double x1 = (line.toSubSpace(p1)).getX();
True,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSetTest.java,858,double x2 = (line.toSubSpace(p2)).getX();
False,src/test/java/org/apache/commons/math/geometry/partitioning/utilities/AVLTreeTest.java,src/test/java/org/apache/commons/math/geometry/partitioning/utilities/AVLTreeTest.java,160,eturn ((Integer) node.getElement()).intValue();
True,src/test/java/org/apache/commons/math/geometry/partitioning/utilities/AVLTreeTest.java,src/test/java/org/apache/commons/math/geometry/partitioning/utilities/AVLTreeTest.java,160,return node.getElement().intValue();
