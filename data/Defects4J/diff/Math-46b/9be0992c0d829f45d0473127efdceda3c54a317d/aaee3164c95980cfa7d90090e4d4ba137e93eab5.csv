is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,76," #optimize(MultivariateRealFunction,GoalType,double[]) optimize}."
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,76,"* #optimize(int,MultivariateRealFunction,GoalType,double[]) optimize}."
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,78," restarts. The {@link #optimize(MultivariateRealFunction,GoalType,double[])"
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,78,"* restarts. The {@link #optimize(int,MultivariateRealFunction,GoalType,double[])"
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,82," #optimize(MultivariateRealFunction,GoalType,double[]) optimize} method."
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,82,"* #optimize(int,MultivariateRealFunction,GoalType,double[]) optimize} method."
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,90," elements will be null if the {@link #optimize(MultivariateRealFunction,GoalType,double[])"
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,90,"* elements will be null if the {@link #optimize(int,MultivariateRealFunction,GoalType,double[])"
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,97," #optimize(MultivariateRealFunction,GoalType,double[]) optimize}"
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,97,"* #optimize(int,MultivariateRealFunction,GoalType,double[]) optimize}"
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,117,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,118,ublic void setMaxEvaluations(int maxEvaluations) {
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,119,his.maxEvaluations = maxEvaluations;
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,120,ptimizer.setMaxEvaluations(maxEvaluations);
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,136,"ublic RealPointValuePair optimize(final FUNC f,"
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,130,"public RealPointValuePair optimize(int maxEval, final FUNC f,"
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,138,ouble[] startPoint) throws MathUserException {
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,132,double[] startPoint) {
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,133,maxEvaluations = maxEval;
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,146,"ptima[i] = optimizer.optimize(f, goal,"
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,141,"optima[i] = optimizer.optimize(maxEval - totalEvaluations, f, goal,"
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,153,inal int usedEvaluations = optimizer.getEvaluations();
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,154,ptimizer.setMaxEvaluations(optimizer.getMaxEvaluations() - usedEvaluations);
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,155,otalEvaluations += usedEvaluations;
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java,148,totalEvaluations += optimizer.getEvaluations();
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,76," #optimize(MultivariateVectorialFunction,double[],double[],double[]) optimize}."
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,76,"* #optimize(int,MultivariateVectorialFunction,double[],double[],double[]) optimize}."
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,78," restarts. The {@link #optimize(MultivariateVectorialFunction,double[],double[],double[])"
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,78,"* restarts. The {@link #optimize(int,MultivariateVectorialFunction,double[],double[],double[])"
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,82," #optimize(MultivariateVectorialFunction,double[],double[],double[]) optimize} method."
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,82,"* #optimize(int,MultivariateVectorialFunction,double[],double[],double[]) optimize} method."
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,91," #optimize(MultivariateVectorialFunction,double[],double[],double[]) optimize} method did"
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,91,"* #optimize(int,MultivariateVectorialFunction,double[],double[],double[]) optimize} method did"
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,98," #optimize(MultivariateVectorialFunction,double[],double[],double[]) optimize} has not been"
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,98,"* #optimize(int,MultivariateVectorialFunction,double[],double[],double[]) optimize} has not been"
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,118,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,119,ublic void setMaxEvaluations(int maxEvaluations) {
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,120,his.maxEvaluations = maxEvaluations;
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,121,ptimizer.setMaxEvaluations(maxEvaluations);
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,137,"ublic VectorialPointValuePair optimize(final FUNC f,"
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,131,"public VectorialPointValuePair optimize(int maxEval, final FUNC f,"
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,139,ouble[] startPoint)
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,140,hrows MathUserException {
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,133,double[] startPoint) {
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,134,maxEvaluations = maxEval;
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,137,totalEvaluations = 0;
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,149,"ptima[i] = optimizer.optimize(f, target, weights,"
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,143,"optima[i] = optimizer.optimize(maxEval - totalEvaluations, f, target, weights,"
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,158,inal int usedEvaluations = optimizer.getEvaluations();
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,159,ptimizer.setMaxEvaluations(optimizer.getMaxEvaluations() - usedEvaluations);
False,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,160,otalEvaluations += usedEvaluations;
True,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java,152,totalEvaluations += optimizer.getEvaluations();
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,21,mport org.apache.commons.math.exception.MathUserException;
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,45,* @param maxEval Maximum number of function evaluations.
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,54, @throws MathUserException if objective function throws one during search
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,54,* @throws org.apache.commons.math.exception.MathUserException if the
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,55,* objective function throws one during search.
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,56,"ealPointValuePair optimize(FUNC f, GoalType goalType, double[] startPoint) throws MathUserException;"
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,57,"RealPointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java,58,double[] startPoint);
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,21,mport org.apache.commons.math.exception.MathUserException;
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,49,* @param maxEval Maximum number of function evaluations.
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,56, @throws MathUserException if function throws one during search.
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,56,* @throws org.apache.commons.math.exception.MathUserException if the
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,57,* function throws one during search.
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,58,"ectorialPointValuePair optimize(FUNC f, double[] target, double[] weight,"
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,59,ouble[] startPoint) throws MathUserException;
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,59,"VectorialPointValuePair optimize(int maxEval, FUNC f, double[] target,"
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java,60,"double[] weight, double[] startPoint);"
False,src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java,38, Set the maximal number of function evaluations.
False,src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java,40, @param maxEvaluations Maximal number of function evaluations.
False,src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java,42,oid setMaxEvaluations(int maxEvaluations);
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,61,"his(new SimpleScalarValueChecker(), Integer.MAX_VALUE);"
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,61,this(new SimpleScalarValueChecker());
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,65, @param maxEvaluations Maximum number of function evaluations.
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,67,"rotected BaseAbstractScalarOptimizer(ConvergenceChecker<RealPointValuePair> checker,"
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,68,nt maxEvaluations) {
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,66,protected BaseAbstractScalarOptimizer(ConvergenceChecker<RealPointValuePair> checker) {
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,70,valuations.setMaximalCount(maxEvaluations);
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,73,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,74,ublic void setMaxEvaluations(int maxEvaluations) {
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,75,valuations.setMaximalCount(maxEvaluations);
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,105, @throws MathUserException if objective function throws one
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,97,* @throws org.apache.commons.math.exception.MathUserException if the
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,98,* objective function throws one.
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,107,rotected double computeObjectiveValue(double[] point) throws MathUserException {
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,100,protected double computeObjectiveValue(double[] point) {
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,117,"ublic RealPointValuePair optimize(FUNC f,"
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,118,"oalType goalType,"
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,119,ouble[] startPoint) throws MathUserException {
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,110,"public RealPointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,111,double[] startPoint) {
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,124,evaluations.setMaximalCount(maxEval);
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,160, @return the point/value pair giving the optimal value for objective function.
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,161, @throws MathUserException if objective function throws one
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,153,* @return the point/value pair giving the optimal value for the
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,154,* objective function.
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,155,* @throws org.apache.commons.math.exception.MathUserException if
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,156,* the objective function throws one.
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,163,rotected abstract RealPointValuePair doOptimize() throws MathUserException;
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java,158,protected abstract RealPointValuePair doOptimize();
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,21,mport org.apache.commons.math.exception.MathUserException;
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,63,"his(new SimpleVectorialValueChecker(),  Integer.MAX_VALUE);"
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,62,this(new SimpleVectorialValueChecker());
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,67, @param maxEvaluations Maximum number of function evaluations.
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,69,"rotected BaseAbstractVectorialOptimizer(ConvergenceChecker<VectorialPointValuePair> checker,"
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,70,nt maxEvaluations) {
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,67,protected BaseAbstractVectorialOptimizer(ConvergenceChecker<VectorialPointValuePair> checker) {
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,72,valuations.setMaximalCount(maxEvaluations);
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,75,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,76,ublic void setMaxEvaluations(int maxEvaluations) {
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,77,valuations.setMaximalCount(maxEvaluations);
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,107, @throws MathUserException if objective function throws one
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,98,* @throws org.apache.commons.math.exception.MathUserException if the
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,99,* objective function throws one.
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,109,rotected double[] computeObjectiveValue(double[] point) throws MathUserException {
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,101,protected double[] computeObjectiveValue(double[] point) {
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,119,"ublic VectorialPointValuePair optimize(FUNC f, double[] t, double[] w, double[] startPoint)"
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,120,hrows MathUserException {
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,111,"public VectorialPointValuePair optimize(int maxEval, FUNC f, double[] t, double[] w,"
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,112,double[] startPoint) {
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,131,evaluations.setMaximalCount(maxEval);
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,161, @return the point/value pair giving the optimal value for objective function
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,162, @throws MathUserException if function throws one during search.
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,154,* @return the point/value pair giving the optimal value for the
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,155,* objective function.
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,156,* @throws org.apache.commons.math.exception.MathUserException if
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,157,* the function throws one during search.
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,164,rotected abstract VectorialPointValuePair doOptimize() throws MathUserException;
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java,159,protected abstract VectorialPointValuePair doOptimize();
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,23,mport org.apache.commons.math.exception.MathUserException;
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,99,ublic void setMaxEvaluations(int maxEvaluations) {
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,100,uper.setMaxEvaluations(maxEvaluations);
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,102,/ We must allow at least as many iterations to the underlying line
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,103,/ search optimizer. Because the line search inner class will call
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,104,"/ ""computeObjectiveValue"" in this class, we ensure that this class"
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,105,"/ will be the first to eventually throw ""TooManyEvaluationsException""."
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,106,ine.setMaxEvaluations(maxEvaluations);
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,109,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,110,Override
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,111,rotected RealPointValuePair doOptimize() throws MathUserException {
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,98,protected RealPointValuePair doOptimize() {
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,258, @throws MathUserException if objective function throws one.
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,245,* @throws org.apache.commons.math.exception.MathUserException if the
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,246,* objective function throws one.
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,260,"ublic UnivariateRealPointValuePair search(final double[] p, final double[] d)"
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,261,hrows MathUserException {
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,248,"public UnivariateRealPointValuePair search(final double[] p, final double[] d) {"
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,264,ublic double value(double alpha) throws MathUserException {
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,251,public double value(double alpha) {
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,276,"eturn optimize(f, goal, bracket.getLo(), bracket.getHi(),"
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,277,racket.getMid());
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,263,"// Passing ""MAX_VALUE"" as a dummy value because it is the enclosing"
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,264,// class that counts the number of evaluations (and will eventually
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,265,// generate the exception).
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,266,"return optimize(Integer.MAX_VALUE, f, goal,"
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,267,"bracket.getLo(), bracket.getHi(), bracket.getMid());"
False,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,58,"  Each call to {@link #optimize(MultivariateRealFunction,GoalType,double[])"
True,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,58,"*  Each call to {@link #optimize(int,MultivariateRealFunction,GoalType,double[])"
False,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,112,** Fit a curve.
False,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,113, <p>This method compute the coefficients of the curve that best
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,111,* Fit a curve.
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,112,* This method compute the coefficients of the curve that best
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,113,* fit the sample of observed points previously given through calls
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,114,* to the {@link #addObservedPoint(WeightedObservedPoint)
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,115,* addObservedPoint} method.
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,117,* @param f parametric function to fit.
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,118,* @param initialGuess first guess of the function parameters.
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,119,* @return the fitted parameters.
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,120,* @throws org.apache.commons.math.exception.DimensionMismatchException
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,121,* if the start point dimension is wrong.
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,122,* @throws org.apache.commons.math.exception.MathUserException if the
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,123,* parametric function throws one.
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,125,"public double[] fit(final ParametricRealFunction f, final double[] initialGuess) {"
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,126,"return fit(Integer.MAX_VALUE, f, initialGuess);"
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,130,* Fit a curve.
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,131,* This method compute the coefficients of the curve that best
False,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,116, addObservedPoint} method.</p>
False,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,117, @param f parametric function to fit
False,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,118, @param initialGuess first guess of the function parameters
False,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,119, @return fitted parameters
False,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,120, @exception org.apache.commons.math.exception.ConvergenceException
False,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,121, if the algorithm failed to converge.
False,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,122, @exception org.apache.commons.math.exception.DimensionMismatchException
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,134,* addObservedPoint} method.
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,136,* @param f parametric function to fit.
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,137,* @param initialGuess first guess of the function parameters.
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,138,* @param maxEval Maximum number of function evaluations.
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,139,* @return the fitted parameters.
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,140,* @throws org.apache.commons.math.exception.TooManyEvaluationsException
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,141,* if the number of allowed evaluations is exceeded.
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,142,* @throws org.apache.commons.math.exception.DimensionMismatchException
False,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,124, @throws MathUserException if the parametric function throws one
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,144,* @throws org.apache.commons.math.exception.MathUserException if the
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,145,* parametric function throws one.
False,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,126,"ublic double[] fit(final ParametricRealFunction f,"
False,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,127,inal double[] initialGuess) throws MathUserException {
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,147,"public double[] fit(int maxEval, final ParametricRealFunction f,"
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,148,final double[] initialGuess) {
False,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,140,"ptimizer.optimize(new TheoreticalValuesFunction(f), target, weights, initialGuess);"
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,161,"optimizer.optimize(maxEval, new TheoreticalValuesFunction(f),"
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,162,"target, weights, initialGuess);"
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,81, @param maxEvaluations Maximal number of function evaluations.
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,83,"rotected AbstractLeastSquaresOptimizer(ConvergenceChecker<VectorialPointValuePair> checker,"
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,84,nt maxEvaluations) {
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,85,"uper(checker, maxEvaluations);"
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,82,protected AbstractLeastSquaresOptimizer(ConvergenceChecker<VectorialPointValuePair> checker) {
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,83,super(checker);
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,234,"ublic VectorialPointValuePair optimize(final DifferentiableMultivariateVectorialFunction f,"
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,232,"public VectorialPointValuePair optimize(int maxEval,"
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,233,"final DifferentiableMultivariateVectorialFunction f,"
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,254,"eturn super.optimize(f, target, weights, startPoint);"
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,253,"return super.optimize(maxEval, f, target, weights, startPoint);"
False,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,54, @param maxEvaluations Maximum number of function evaluations.
False,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,56,"rotected AbstractScalarDifferentiableOptimizer(ConvergenceChecker<RealPointValuePair> checker,"
False,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,57,nt maxEvaluations) {
False,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,58,"uper(checker, maxEvaluations);"
True,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,55,protected AbstractScalarDifferentiableOptimizer(ConvergenceChecker<RealPointValuePair> checker) {
True,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,56,super(checker);
False,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,77,"ublic RealPointValuePair optimize(final DifferentiableMultivariateRealFunction f,"
True,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,75,"public RealPointValuePair optimize(int maxEval,"
True,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,76,"final DifferentiableMultivariateRealFunction f,"
False,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,83,"eturn super.optimize(f, goalType, startPoint);"
True,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,82,"return super.optimize(maxEval, f, goalType, startPoint);"
False,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,21,mport org.apache.commons.math.exception.MathUserException;
False,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,53,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,54,ublic void setMaxEvaluations(int maxEvaluations) {
False,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,55,valuations.setMaximalCount(maxEvaluations);
False,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,100, @throws MathUserException if objective function throws one
True,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,94,* @throws org.apache.commons.math.exception.MathUserException if the
True,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,95,* objective function throws one.
False,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,102,rotected double computeObjectiveValue(double point) throws MathUserException {
True,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,97,protected double computeObjectiveValue(double point) {
False,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,112,"ublic UnivariateRealPointValuePair optimize(UnivariateRealFunction f,"
True,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,107,"public UnivariateRealPointValuePair optimize(int maxEval, UnivariateRealFunction f,"
False,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,115,ouble startValue) throws MathUserException {
True,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,110,double startValue) {
True,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,125,evaluations.setMaximalCount(maxEval);
False,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,137,"ublic UnivariateRealPointValuePair optimize(UnivariateRealFunction f,"
True,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,133,"public UnivariateRealPointValuePair optimize(int maxEval,"
True,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,134,"UnivariateRealFunction f,"
False,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,139,"ouble min, double max) throws MathUserException {"
False,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,140,"eturn optimize(f, goalType, min, max, min + 0.5 * (max - min));"
True,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,136,"double min, double max){"
True,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,137,"return optimize(maxEval, f, goalType, min, max, min + 0.5 * (max - min));"
False,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,164, @throws MathUserException if the function to optimize throws one during search.
True,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,161,* @throws org.apache.commons.math.exception.MathUserException if the
True,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,162,* function to optimize throws one during search.
False,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,166,rotected abstract UnivariateRealPointValuePair doOptimize() throws MathUserException;
True,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,164,protected abstract UnivariateRealPointValuePair doOptimize();
False,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,21,mport org.apache.commons.math.exception.MathUserException;
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,49,* @param maxEval Maximum number of function evaluations.
False,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,57, @throws MathUserException if the function to optimize throws one during search.
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,57,* @throws org.apache.commons.math.exception.MathUserException if the
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,58,* function to optimize throws one during search.
False,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,59,"nivariateRealPointValuePair optimize(FUNC f, GoalType goalType,"
False,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,60,"ouble min, double max) throws MathUserException;"
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,60,"UnivariateRealPointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,61,"double min, double max);"
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,73,* @param maxEval Maximum number of function evaluations.
False,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,81, @throws MathUserException if the function to optimize throws one during search.
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,83,* @throws org.apache.commons.math.exception.MathUserException if the
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,84,* function to optimize throws one during search.
False,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,83,"nivariateRealPointValuePair optimize(FUNC f, GoalType goalType,"
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,86,"UnivariateRealPointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
False,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,85,ouble startValue) throws MathUserException;
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java,88,double startValue);
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,100,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,101,ublic void setMaxEvaluations(int maxEvaluations) {
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,102,his.maxEvaluations = maxEvaluations;
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,103,ptimizer.setMaxEvaluations(maxEvaluations);
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,108," #optimize(UnivariateRealFunction,GoalType,double,double) optimize}."
True,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,102,"* #optimize(int,UnivariateRealFunction,GoalType,double,double) optimize}."
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,110," restarts. The {@link #optimize(UnivariateRealFunction,GoalType,double,double) optimize}"
True,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,104,"* restarts. The {@link #optimize(int,UnivariateRealFunction,GoalType,double,double) optimize}"
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,113," returned by the {@link #optimize(UnivariateRealFunction,GoalType,double,double) optimize}"
True,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,107,"* returned by the {@link #optimize(int,UnivariateRealFunction,GoalType,double,double) optimize}"
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,123," #optimize(UnivariateRealFunction,GoalType,double,double) optimize}"
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,124, method did throw a {@link MathUserException}). This also means that
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,125," if the first element is not {@code null}, it is the best point found"
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,126, across all starts.
True,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,117,"* #optimize(int,UnivariateRealFunction,GoalType,double,double) optimize}"
True,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,118,* method did throw a {@link MathUserException}).
True,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,119,"* This also means that if the first element is not {@code null}, it is"
True,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,120,* the best point found across all starts.
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,130," #optimize(UnivariateRealFunction,GoalType,double,double) optimize}"
True,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,124,"* #optimize(int,UnivariateRealFunction,GoalType,double,double) optimize}"
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,141,"ublic UnivariateRealPointValuePair optimize(final FUNC f,"
True,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,135,"public UnivariateRealPointValuePair optimize(int maxEval, final FUNC f,"
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,143,"inal double min, final double max)"
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,144,hrows MathUserException {
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,145,"eturn optimize(f, goal, min, max, min + 0.5 * (max - min));"
True,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,137,"final double min, final double max) {"
True,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,138,"return optimize(maxEval, f, goal, min, max, min + 0.5 * (max - min));"
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,149,"ublic UnivariateRealPointValuePair optimize(final FUNC f, final GoalType goal,"
True,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,142,"public UnivariateRealPointValuePair optimize(int maxEval, final FUNC f,"
True,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,143,"final GoalType goal,"
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,151,inal double startValue)
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,152,hrows MathUserException {
True,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,145,final double startValue) {
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,161,"ptima[i] = optimizer.optimize(f, goal, min, max, s);"
True,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,154,"optima[i] = optimizer.optimize(maxEval - totalEvaluations, f, goal, min, max, s);"
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,167,inal int usedEvaluations = optimizer.getEvaluations();
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,168,ptimizer.setMaxEvaluations(optimizer.getMaxEvaluations() - usedEvaluations);
False,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,169,otalEvaluations += usedEvaluations;
True,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,160,totalEvaluations += optimizer.getEvaluations();
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,30,mport org.apache.commons.math.exception.MathUserException;
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,42,ublic void testCircleFitting() throws MathUserException {
True,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,41,public void testCircleFitting() {
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,58,ptimizer.setMaxEvaluations(200);
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,59,"ssertEquals(200, optimizer.getMaxEvaluations());"
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,63,"ptimizer.optimize(circle, GoalType.MINIMIZE, new double[] { 98.680, 47.345 });"
True,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,60,"optimizer.optimize(200, circle, GoalType.MINIMIZE, new double[] { 98.680, 47.345 });"
True,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,61,"assertEquals(200, optimizer.getMaxEvaluations());"
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,116,ublic double value(double[] variables)
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,117,"hrows IllegalArgumentException, MathUserException {"
True,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,114,public double value(double[] variables) {
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,103,ublic void testTrivial() throws MathUserException {
True,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,103,public void testTrivial() {
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,115,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,126,"ptimizer.optimize(problem, problem.target, new double[] { 1 }, new double[] { 0 });"
True,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,125,"optimizer.optimize(100, problem, problem.target, new double[] { 1 }, new double[] { 0 });"
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,141,ublic void testNoOptimum() throws MathUserException {
True,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,140,public void testNoOptimum() {
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,151,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,153,ptimizer.optimize(new DifferentiableMultivariateVectorialFunction() {
True,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,151,"optimizer.optimize(100, new DifferentiableMultivariateVectorialFunction() {"
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,157,ublic double[] value(double[] point) throws MathUserException {
True,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java,155,public double[] value(double[] point) {
False,src/test/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizerTest.java,49,ptimizer.setMaxEvaluations(1100);
False,src/test/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizerTest.java,51,"ptimizer.optimize(rosenbrock, GoalType.MINIMIZE, new double[] { -1.2, 1.0 });"
True,src/test/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizerTest.java,50,"optimizer.optimize(1100, rosenbrock, GoalType.MINIMIZE, new double[] { -1.2, 1.0 });"
False,src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java,135,ptim.setMaxEvaluations(1000);
False,src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java,137,"inal RealPointValuePair result = optim.optimize(func, goal, init);"
True,src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java,136,"final RealPointValuePair result = optim.optimize(1000, func, goal, init);"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,21,mport org.apache.commons.math.exception.MathUserException;
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,31,ublic void testMinimizeMaximize() throws MathUserException {
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,30,public void testMinimizeMaximize() {
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,43,ublic double value(double[] variables) throws MathUserException {
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,42,public double value(double[] variables) {
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,52,ptimizer.setMaxEvaluations(200);
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,57,"ptimum = optimizer.optimize(fourExtrema, GoalType.MINIMIZE, new double[] { -3, 0 });"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,55,"optimum = optimizer.optimize(200, fourExtrema, GoalType.MINIMIZE, new double[] { -3, 0 });"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,64,"ptimum = optimizer.optimize(fourExtrema, GoalType.MINIMIZE, new double[] { 1, 0 });"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,62,"optimum = optimizer.optimize(200, fourExtrema, GoalType.MINIMIZE, new double[] { 1, 0 });"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,72,"ptimum = optimizer.optimize(fourExtrema, GoalType.MAXIMIZE, new double[] { -3.0, 0.0 });"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,70,"optimum = optimizer.optimize(200, fourExtrema, GoalType.MAXIMIZE, new double[] { -3.0, 0.0 });"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,80,"ptimum = optimizer.optimize(fourExtrema, GoalType.MAXIMIZE, new double[] { 1, 0 });"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,78,"optimum = optimizer.optimize(200, fourExtrema, GoalType.MAXIMIZE, new double[] { 1, 0 });"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,89,ublic void testRosenbrock() throws MathUserException {
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,87,public void testRosenbrock() {
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,93,ublic double value(double[] x) throws MathUserException {
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,91,public double value(double[] x) {
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,103,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,108,"ptimizer.optimize(rosenbrock, GoalType.MINIMIZE, new double[] { -1.2, 1 });"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,105,"optimizer.optimize(100, rosenbrock, GoalType.MINIMIZE, new double[] { -1.2, 1 });"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,117,ublic void testPowell() throws MathUserException {
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,114,public void testPowell() {
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,121,ublic double value(double[] x) throws MathUserException {
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,118,public double value(double[] x) {
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,133,ptimizer.setMaxEvaluations(1000);
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,136,"ptimizer.optimize(powell, GoalType.MINIMIZE, new double[] { 3, -1, 0, 1 });"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,132,"optimizer.optimize(1000, powell, GoalType.MINIMIZE, new double[] { 3, -1, 0, 1 });"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,144,ublic void testMath283() throws MathUserException {
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,140,public void testMath283() {
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,148,ptimizer.setMaxEvaluations(1000);
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,151,"ealPointValuePair estimate = optimizer.optimize(function,"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,146,"RealPointValuePair estimate = optimizer.optimize(1000, function,"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,23,mport org.apache.commons.math.exception.MathUserException;
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,36,ublic void testMinimizeMaximize()
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,37,hrows MathUserException {
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,35,public void testMinimizeMaximize() {
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,59,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,64,"ptimum = optimizer.optimize(fourExtrema, GoalType.MINIMIZE, new double[] { -3, 0 });"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,61,"optimum = optimizer.optimize(100, fourExtrema, GoalType.MINIMIZE, new double[] { -3, 0 });"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,71,"ptimum = optimizer.optimize(fourExtrema, GoalType.MINIMIZE, new double[] { 1, 0 });"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,68,"optimum = optimizer.optimize(100, fourExtrema, GoalType.MINIMIZE, new double[] { 1, 0 });"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,79,"ptimum = optimizer.optimize(fourExtrema, GoalType.MAXIMIZE, new double[] { -3, 0 });"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,76,"optimum = optimizer.optimize(100, fourExtrema, GoalType.MAXIMIZE, new double[] { -3, 0 });"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,86,"ptimum = optimizer.optimize(fourExtrema, GoalType.MAXIMIZE, new double[] { 1, 0 });"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,83,"optimum = optimizer.optimize(100, fourExtrema, GoalType.MAXIMIZE, new double[] { 1, 0 });"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,95,ublic void testRosenbrock()
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,96,hrows MathUserException {
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,92,public void testRosenbrock() {
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,100,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,105,"ptimizer.optimize(rosenbrock, GoalType.MINIMIZE, new double[] { -1.2, 1 });"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,100,"optimizer.optimize(100, rosenbrock, GoalType.MINIMIZE, new double[] { -1.2, 1 });"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,114,ublic void testPowell()
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,115,hrows MathUserException {
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,109,public void testPowell() {
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,119,ptimizer.setMaxEvaluations(200);
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,122,"ptimizer.optimize(powell, GoalType.MINIMIZE, new double[] { 3, -1, 0, 1 });"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,115,"optimizer.optimize(200, powell, GoalType.MINIMIZE, new double[] { 3, -1, 0, 1 });"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,130,ublic void testLeastSquares1()
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,131,hrows MathUserException {
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,123,public void testLeastSquares1() {
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,144,ptimizer.setMaxEvaluations(200);
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,147,"ptimizer.optimize(ls, GoalType.MINIMIZE, new double[] { 10, 10 });"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,138,"optimizer.optimize(200, ls, GoalType.MINIMIZE, new double[] { 10, 10 });"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,156,ublic void testLeastSquares2()
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,157,hrows MathUserException {
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,147,public void testLeastSquares2() {
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,170,ptimizer.setMaxEvaluations(200);
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,173,"ptimizer.optimize(ls, GoalType.MINIMIZE, new double[] { 10, 10 });"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,162,"optimizer.optimize(200, ls, GoalType.MINIMIZE, new double[] { 10, 10 });"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,182,ublic void testLeastSquares3()
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,183,hrows MathUserException {
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,171,public void testLeastSquares3() {
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,198,ptimizer.setMaxEvaluations(200);
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,201,"ptimizer.optimize(ls, GoalType.MINIMIZE, new double[] { 10, 10 });"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,188,"optimizer.optimize(200, ls, GoalType.MINIMIZE, new double[] { 10, 10 });"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,210,ublic void testMaxIterations() throws MathUserException {
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,197,public void testMaxIterations() {
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,213,ptimizer.setMaxEvaluations(20);
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,215,"ptimizer.optimize(powell, GoalType.MINIMIZE, new double[] { 3, -1, 0, 1 });"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,201,"optimizer.optimize(20, powell, GoalType.MINIMIZE, new double[] { 3, -1, 0, 1 });"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,225,ublic double value(double[] x) throws MathUserException {
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,211,public double value(double[] x) {
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,112,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,115,"ptimizer.optimize(problem, problem.target, new double[] { 1 }, new double[] { 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,114,"optimizer.optimize(100, problem, problem.target, new double[] { 1 }, new double[] { 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,128,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,131,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,129,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,151,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,154,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1, 1, 1, 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,151,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1, 1, 1, 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,170,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,173,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0, 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,169,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0, 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,193,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,196,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1, 1, 1, 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,191,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1, 1, 1, 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,216,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,219,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0, 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,213,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0, 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,234,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,237,"ptimizer.optimize(problem1, problem1.target, new double[] { 1, 1, 1, 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,230,"optimizer.optimize(100, problem1, problem1.target, new double[] { 1, 1, 1, 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,252,"ptimizer.optimize(problem2, problem2.target, new double[] { 1, 1, 1, 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,245,"optimizer.optimize(100, problem2, problem2.target, new double[] { 1, 1, 1, 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,271,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,274,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,266,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,291,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,294,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1, 1, 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,285,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1, 1, 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,310,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,313,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,303,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,329,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,331,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 1, 1 });"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,320,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 1, 1 });"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,340,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,344,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1 }, new double[] { 0, 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,332,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1 }, new double[] { 0, 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,350,"ptimizer.optimize(problem, problem.target,"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,338,"optimizer.optimize(100, problem, problem.target,"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,359,"ptimizer.optimize(problem, new double[] { 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,347,"optimizer.optimize(100, problem, new double[] { 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,377,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,380,"ptimizer.optimize(circle, new double[] { 0, 0, 0, 0, 0 },"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,367,"optimizer.optimize(100, circle, new double[] { 0, 0, 0, 0, 0 },"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,397,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,400,"ptimizer.optimize(circle, new double[] { 0, 0, 0, 0, 0 },"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,386,"optimizer.optimize(100, circle, new double[] { 0, 0, 0, 0, 0 },"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,451,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,454,"ptimizer.optimize(circle, target, weights, new double[] { -12, -12 });"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,439,"optimizer.optimize(100, circle, target, weights, new double[] { -12, -12 });"
False,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,461,"ptimizer.optimize(circle, target, weights, new double[] { 0, 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java,446,"optimizer.optimize(100, circle, target, weights, new double[] { 0, 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,116,"ptimizer.optimize(problem, problem.target, new double[] { 1 }, new double[] { 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,116,"optimizer.optimize(100, problem, problem.target, new double[] { 1 }, new double[] { 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,136,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,136,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,156,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1, 1, 1, 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,156,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1, 1, 1, 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,173,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0, 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,173,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0, 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,193,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1, 1, 1, 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,193,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1, 1, 1, 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,213,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0, 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,213,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0, 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,232,"ptimizer.optimize(problem1, problem1.target, new double[] { 1, 1, 1, 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,232,"optimizer.optimize(100, problem1, problem1.target, new double[] { 1, 1, 1, 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,247,"ptimizer.optimize(problem2, problem2.target, new double[] { 1, 1, 1, 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,247,"optimizer.optimize(100, problem2, problem2.target, new double[] { 1, 1, 1, 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,265,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,265,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,281,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1, 1, 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,281,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1, 1, 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,299,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,299,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,314,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 1, 1 });"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,314,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 1, 1 });"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,324,"ptimizer.optimize(problem, problem.target, new double[] { 1, 1 }, new double[] { 0, 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,324,"optimizer.optimize(100, problem, problem.target, new double[] { 1, 1 }, new double[] { 0, 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,330,"ptimizer.optimize(problem, problem.target,"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,330,"optimizer.optimize(100, problem, problem.target,"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,339,"ptimizer.optimize(problem, new double[] { 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,339,"optimizer.optimize(100, problem, new double[] { 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,373,ptimizer.setMaxEvaluations(maxCostEval);
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,374,"ptimizer.optimize(problem, new double[] { 0, 0, 0, 0, 0 }, new double[] { 1, 1, 1, 1, 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,373,"optimizer.optimize(maxCostEval, problem, new double[] { 0, 0, 0, 0, 0 },"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,374,"new double[] { 1, 1, 1, 1, 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,393,"ptimizer.optimize(circle, new double[] { 0, 0, 0, 0, 0 }, new double[] { 1, 1, 1, 1, 1 },"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,393,"optimizer.optimize(100, circle, new double[] { 0, 0, 0, 0, 0 }, new double[] { 1, 1, 1, 1, 1 },"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,421,"ptimizer.optimize(circle, target, weights, new double[] { 98.680, 47.345 });"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,421,"optimizer.optimize(100, circle, target, weights, new double[] { 98.680, 47.345 });"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,475,"ptimizer.optimize(circle, target, weights, new double[] { -12, -12 });"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,475,"optimizer.optimize(100, circle, target, weights, new double[] { -12, -12 });"
False,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,495,"ptimizer.optimize(problem,"
True,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java,495,"optimizer.optimize(100, problem,"
False,src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java,src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java,496,ptimizer.setMaxEvaluations(400 * (function.getN() + 1));
False,src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java,src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java,500,"ptimizer.optimize(function,"
True,src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java,src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java,499,"optimizer.optimize(400 * (function.getN() + 1), function,"
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,104,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,107,"ptimizer.optimize(problem, GoalType.MINIMIZE, new double[] { 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,106,"optimizer.optimize(100, problem, GoalType.MINIMIZE, new double[] { 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,120,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,123,"ptimizer.optimize(problem, GoalType.MINIMIZE, new double[] { 0, 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,121,"optimizer.optimize(100, problem, GoalType.MINIMIZE, new double[] { 0, 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,142,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,145,"ptimizer.optimize(problem, GoalType.MINIMIZE, new double[] { 0, 0, 0, 0, 0, 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,142,"optimizer.optimize(100, problem, GoalType.MINIMIZE, new double[] { 0, 0, 0, 0, 0, 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,160,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,163,"ptimizer.optimize(problem, GoalType.MINIMIZE, new double[] { 0, 0, 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,159,"optimizer.optimize(100, problem, GoalType.MINIMIZE, new double[] { 0, 0, 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,184,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,200,"ptimizer.optimize(problem, GoalType.MINIMIZE, new double[] { 0, 0, 0, 0, 0, 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,195,"optimizer.optimize(100, problem, GoalType.MINIMIZE, new double[] { 0, 0, 0, 0, 0, 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,219,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,222,"ptimizer.optimize(problem, GoalType.MINIMIZE, new double[] { 0, 0, 0 });"
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,216,"optimizer.optimize(100, problem, GoalType.MINIMIZE, new double[] { 0, 0, 0 });"
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,236,ptimizer.setMaxEvaluations(200);
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,241,"ptimizer.optimize(problem1, GoalType.MINIMIZE, new double[] { 0, 1, 2, 3 });"
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,234,"optimizer.optimize(200, problem1, GoalType.MINIMIZE, new double[] { 0, 1, 2, 3 });"
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,254,"ptimizer.optimize(problem2, GoalType.MINIMIZE, new double[] { 0, 1, 2, 3 });"
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,247,"optimizer.optimize(200, problem2, GoalType.MINIMIZE, new double[] { 0, 1, 2, 3 });"
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,272,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,275,"ptimizer.optimize(problem, GoalType.MINIMIZE, new double[] { 7, 6, 5, 4 });"
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,267,"optimizer.optimize(100, problem, GoalType.MINIMIZE, new double[] { 7, 6, 5, 4 });"
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,291,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,294,"ptimizer.optimize(problem, GoalType.MINIMIZE, new double[] { 2, 2, 2, 2, 2, 2 });"
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,285,"optimizer.optimize(100, problem, GoalType.MINIMIZE, new double[] { 2, 2, 2, 2, 2, 2 });"
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,308,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,311,"ptimizer.optimize(problem, GoalType.MINIMIZE, new double[] { 1, 1 });"
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,301,"optimizer.optimize(100, problem, GoalType.MINIMIZE, new double[] { 1, 1 });"
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,327,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,330,"ptimizer.optimize(problem, GoalType.MINIMIZE, new double[] { 1, 1 });"
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,319,"optimizer.optimize(100, problem, GoalType.MINIMIZE, new double[] { 1, 1 });"
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,345,ptimizer.setMaxEvaluations(100);
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,350,"ptimizer.optimize(circle, GoalType.MINIMIZE, new double[] { 98.680, 47.345 });"
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,338,"optimizer.optimize(100, circle, GoalType.MINIMIZE, new double[] { 98.680, 47.345 });"
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,40,ptimizer.setMaxEvaluations(200);
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,41,"ssertEquals(200, optimizer.getMaxEvaluations());"
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,42,"ssertEquals(3 * Math.PI / 2, optimizer.optimize(f, GoalType.MINIMIZE, 4, 5).getPoint(),1e-8);"
True,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,40,"assertEquals(3 * Math.PI / 2, optimizer.optimize(200, f, GoalType.MINIMIZE, 4, 5).getPoint(),1e-8);"
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,44,"ssertEquals(3 * Math.PI / 2, optimizer.optimize(f, GoalType.MINIMIZE, 1, 5).getPoint(), 1e-8);"
True,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,42,"assertEquals(200, optimizer.getMaxEvaluations());"
True,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,43,"assertEquals(3 * Math.PI / 2, optimizer.optimize(200, f, GoalType.MINIMIZE, 1, 5).getPoint(), 1e-8);"
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,47,ptimizer.setMaxEvaluations(10);
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,49,"ptimizer.optimize(f, GoalType.MINIMIZE, 4, 5);"
True,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,47,"optimizer.optimize(10, f, GoalType.MINIMIZE, 4, 5);"
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,61,ptimizer.setMaxEvaluations(200);
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,62,"ssertEquals(-0.27195613, optimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2).getPoint(), 1.0e-8);"
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,63,"ssertEquals( 0.82221643, optimizer.optimize(f, GoalType.MINIMIZE,  0.3,  0.9).getPoint(), 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,59,"assertEquals(-0.27195613, optimizer.optimize(200, f, GoalType.MINIMIZE, -0.3, -0.2).getPoint(), 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,60,"assertEquals( 0.82221643, optimizer.optimize(200, f, GoalType.MINIMIZE,  0.3,  0.9).getPoint(), 1.0e-8);"
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,67,"ssertEquals(-0.27195613, optimizer.optimize(f, GoalType.MINIMIZE, -1.0, 0.2).getPoint(), 1.0e-8);"
True,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,64,"assertEquals(-0.27195613, optimizer.optimize(200, f, GoalType.MINIMIZE, -1.0, 0.2).getPoint(), 1.0e-8);"
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,76,ptimizer.setMaxEvaluations(40);
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,89,"tat[0].addValue(optimizer.optimize(f, GoalType.MINIMIZE, min, max, start).getPoint());"
True,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,85,"stat[0].addValue(optimizer.optimize(40, f, GoalType.MINIMIZE, min, max, start).getPoint());"
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,100,Test(expected = TooManyEvaluationsException.class)
True,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,96,@Test
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,106,"ssertEquals(0.27195613, optimizer.optimize(f, GoalType.MAXIMIZE, 0.2, 0.3).getPoint(), 1e-8);"
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,107,ptimizer.setMaxEvaluations(5);
True,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,102,"assertEquals(0.27195613, optimizer.optimize(100, f, GoalType.MAXIMIZE, 0.2, 0.3).getPoint(), 1e-8);"
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,109,"ptimizer.optimize(f, GoalType.MAXIMIZE, 0.2, 0.3);"
True,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,104,"optimizer.optimize(5, f, GoalType.MAXIMIZE, 0.2, 0.3);"
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,117,ublic void testMinEndpoints() throws Exception {
True,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,112,public void testMinEndpoints() {
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,120,ptimizer.setMaxEvaluations(50);
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,123,"ouble result = optimizer.optimize(f, GoalType.MINIMIZE, 3 * Math.PI / 2, 5).getPoint();"
True,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,117,"double result = optimizer.optimize(50, f, GoalType.MINIMIZE, 3 * Math.PI / 2, 5).getPoint();"
False,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,126,"esult = optimizer.optimize(f, GoalType.MINIMIZE, 4, 3 * Math.PI / 2).getPoint();"
True,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,120,"result = optimizer.optimize(50, f, GoalType.MINIMIZE, 4, 3 * Math.PI / 2).getPoint();"
False,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,39,nderlying.setMaxEvaluations(300);
False,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,44,"ptimizer.optimize(f, GoalType.MINIMIZE, -100.0, 100.0);"
True,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,43,"optimizer.optimize(300, f, GoalType.MINIMIZE, -100.0, 100.0);"
False,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,62,nderlying.setMaxEvaluations(300);
False,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,69," optimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2);"
True,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,67,"= optimizer.optimize(300, f, GoalType.MINIMIZE, -0.3, -0.2);"
False,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,92,nderlying.setMaxEvaluations(300);
False,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,100," optimizer.optimize(f, GoalType.MINIMIZE, -0.3, -0.2);"
True,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java,97,"= optimizer.optimize(300, f, GoalType.MINIMIZE, -0.3, -0.2);"
