is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,19,import java.util.Collection;
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,49,/** Singleton OneWayAnova instance using default implementation. */
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,50,private static OneWayAnova oneWayAnova =
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,51,new OneWayAnovaImpl();
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,111,* Set the (singleton) OneWayAnova instance
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,113,* @param oneWayAnova the new instance to use
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,114,* @since 1.2
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,116,public static void setOneWayAnova(OneWayAnova oneWayAnova) {
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,117,TestUtils.oneWayAnova = oneWayAnova;
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,121,* Return a (singleton) OneWayAnova instance.  Does not create a new instance.
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,123,* @return a OneWayAnova instance
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,124,* @since 1.2
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,126,public static OneWayAnova getOneWayAnova() {
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,127,return oneWayAnova;
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,351,* @since 1.2
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,361,* @since 1.2
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,372,* @since 1.2
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,381,* @see org.apache.commons.math.stat.inference.OneWayAnova#anovaFValue(Collection)
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,383,* @since 1.2
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,385,public static double oneWayAnovaFValue(Collection categoryData)
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,386,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,387,return oneWayAnova.anovaFValue(categoryData);
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,391,* @see org.apache.commons.math.stat.inference.OneWayAnova#anovaPValue(Collection)
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,393,* @since 1.2
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,395,public static double oneWayAnovaPValue(Collection categoryData)
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,396,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,397,return oneWayAnova.anovaPValue(categoryData);
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,401,"* @see org.apache.commons.math.stat.inference.OneWayAnova#anovaTest(Collection,double)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,403,* @since 1.2
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,405,"public static boolean oneWayAnovaTest(Collection categoryData, double alpha)"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,406,"throws IllegalArgumentException, MathException {"
True,src/java/org/apache/commons/math/stat/inference/TestUtils.java,src/java/org/apache/commons/math/stat/inference/TestUtils.java,407,"return oneWayAnova.anovaTest(categoryData, alpha);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,19,import java.util.ArrayList;
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,20,import java.util.List;
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,447,private double[] classA =
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,448,"{93.0, 103.0, 95.0, 101.0};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,449,private double[] classB =
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,450,"{99.0, 92.0, 102.0, 100.0, 102.0};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,451,private double[] classC =
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,452,"{110.0, 115.0, 111.0, 117.0, 128.0};"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,454,private List classes = new ArrayList();
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,455,private OneWayAnova oneWayAnova = new OneWayAnovaImpl();
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,457,public void testOneWayAnovaUtils() throws Exception {
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,458,classes.add(classA);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,459,classes.add(classB);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,460,classes.add(classC);
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,461,"assertEquals(oneWayAnova.anovaFValue(classes),"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,462,"TestUtils.oneWayAnovaFValue(classes), 10E-12);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,463,"assertEquals(oneWayAnova.anovaPValue(classes),"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,464,"TestUtils.oneWayAnovaPValue(classes), 10E-12);"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,465,"assertEquals(oneWayAnova.anovaTest(classes, 0.01),"
True,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,src/test/org/apache/commons/math/stat/inference/TestUtilsTest.java,466,"TestUtils.oneWayAnovaTest(classes, 0.01));"
