is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,5,* reserved.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,9,* are met:
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,17,*    distribution.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,54,package org.apache.commons.lang.util;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,56,import java.io.Serializable;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,57,import java.util.Random;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,59,import org.apache.commons.lang.functor.Factory;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,60,import org.apache.commons.lang.functor.FactoryException;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,62,* <p><code>IdentifierUtils</code> provides a number of different identifier
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,63,* reference implementations.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,65,* <p>All the identifer factories are serializable and synchronized. The
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,66,* factories all implement the <i>functor</i>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,67,* {@link org.apache.commons.lang.functor.Factory Factory} interface</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,69,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,70,"* @version $Id: IdentifierUtils.java,v 1.1 2002/12/29 21:35:04 scolebourne Exp $"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,72,public class IdentifierUtils {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,75,* <p>Singleton instance of the
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,76,* <code>LongIdentifierFactory</code>.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,78,"* <p>The singleton instance will wrap, so in a long-lived server, the id"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,79,* may be duplicated.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,81,* <p>The objects returned are:</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,82,* <ul>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,83,* <li>new Long(0L)
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,84,* <li>new Long(1L)
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,85,* <li>new Long(2L)
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,86,* <li>...
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,87,* </ul>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,89,"public static final Factory LONG_IDENTIFIER_FACTORY = new LongIdentifierFactory(true, 0L);"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,91,* <p>Singleton instance of the <code>StringNumericIdentifierFactory</code>.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,92,* </p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,94,"* <p>The singleton instance will wrap, so in a long-lived server, the id"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,95,* may be duplicated.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,97,* <p>The objects returned are:</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,98,* <ul>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,99,"* <li>""0"""
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,100,"* <li>""1"""
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,101,"* <li>""2"""
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,102,* <li>...
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,103,* </ul>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,105,"public static final Factory STRING_NUMERIC_IDENTIFIER_FACTORY = new StringNumericIdentifierFactory(true, 0L);"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,107,* <p>Singleton instance of the
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,108,* <code>StringAlphanumericIdentifierFactory</code>.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,110,"* <p>The singleton instance will wrap, so in a long-lived server, the id"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,111,"* may be duplicated. However, the length is 15 in base-36, so thats a"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,112,* lot of identifiers.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,114,* <p>The objects returned are:</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,115,* <ul>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,116,"* <li>""000000000000001"""
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,117,"* <li>""000000000000002"""
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,118,"* <li>""000000000000003"""
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,119,* <li>...
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,120,"* <li>""00000000000000y"""
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,121,"* <li>""00000000000000z"""
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,122,"* <li>""000000000000010"""
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,123,"* <li>""000000000000011"""
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,124,* <li>...
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,125,"* <li>""00000000000001z"""
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,126,"* <li>""000000000000020"""
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,127,* <li>...
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,128,* </ul>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,130,"public static final Factory STRING_ALPHANUMERIC_IDENTIFIER_FACTORY = new StringAlphanumericIdentifierFactory(true, 15);"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,132,* <p>Singleton instance of the
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,133,* <code>StringSessionIdentifierFactory</code>.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,135,"* <p>The singleton instance may produce duplicates in a long-lived server,"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,136,* but its unlikely.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,138,* <p>The objects returned are 10 or more base-36 digits.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,140,public static final Factory STRING_SESSION_IDENTIFIER_FACTORY = new StringSessionIdentifierFactory();
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,145,* <p><code>IdentifierUtils</code> instances should NOT be constructed in
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,146,* standard programming.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,148,* <p>This constructor is public to permit tools that require a JavaBean instance
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,149,* to operate.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,151,public IdentifierUtils() {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,152,super();
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,158,* <p>Gets the next identifier using the singleton instance of the
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,159,* Long factory.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,160,* </p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,162,"* <p>The singleton instance will wrap, so in a long-lived server, the id"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,163,* may be duplicated.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,165,* @return a new identifier
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,167,public static Long nextLongIdentifier() {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,168,return (Long) LONG_IDENTIFIER_FACTORY.create();
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,172,* <p>Gets a new identifier factory that returns a series of Long objects
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,173,* increasing in size.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,175,* <p>The factory will wrap when the maximum <code>long</code> is
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,176,* reached and return negative numbers. It will start from zero.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,178,* @return a new identifier factory
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,180,public static Factory longIdentifierFactory() {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,181,"return new LongIdentifierFactory(true, 0L);"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,185,* <p>Gets a new identifier factory that returns a series of Long objects
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,186,* increasing in size.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,188,* @param wrap  should the factory wrap when it reaches the maximum
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,189,*  long value (or throw an exception)
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,190,* @param initialValue  the initial long value to start at
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,191,* @return a new identifier factory
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,193,"public static Factory longIdentifierFactory(boolean wrap, long initialValue) {"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,194,"return new LongIdentifierFactory(wrap, initialValue);"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,200,* <p>Gets the next identifier using the singleton instance of the
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,201,* String Numeric factory.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,202,* </p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,204,"* <p>The singleton instance will wrap, so in a long-lived server, the id"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,205,* may be duplicated.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,207,* @return a new identifier
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,209,public static String nextStringNumericIdentifier() {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,210,return (String) STRING_NUMERIC_IDENTIFIER_FACTORY.create();
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,214,* <p>Gets a new identifier factory that returns a series of String objects
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,215,* representing numbers increasing in size.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,217,* <p>The factory will wrap when the maximum <code>long</code> is
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,218,* reached and return negative numbers. It will start from zero.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,220,* @return a new identifier factory
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,222,public static Factory stringNumericIdentifierFactory() {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,223,"return new StringNumericIdentifierFactory(true, 0L);"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,227,* <p>Gets a new identifier factory that returns a series of String objects
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,228,* representing numbers increasing in size.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,230,* @param wrap  should the factory wrap when it reaches the maximum
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,231,*  long value (or throw an exception)
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,232,* @param initialValue  the initial long value to start at
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,233,* @return a new identifier factory
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,235,"public static Factory stringNumericIdentifierFactory(boolean wrap, long initialValue) {"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,236,"return new StringNumericIdentifierFactory(wrap, initialValue);"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,242,* <p>Gets the next identifier using the singleton instance of the
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,243,* String Alphanumeric factory.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,244,* </p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,246,"* <p>The singleton instance will wrap, so in a long-lived server, the id"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,247,* may be duplicated.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,249,* @return a new identifier
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,251,public static String nextStringAlphanumericIdentifier() {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,252,return (String) STRING_ALPHANUMERIC_IDENTIFIER_FACTORY.create();
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,256,* <p>Gets a new identifier factory that returns a series of String objects
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,257,* representing numbers increasing in size in base-36.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,259,* <p>The factory will wrap when the maximum size (15) is reached.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,261,* @return a new identifier factory
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,263,public static Factory stringAlphanumericIdentifierFactory() {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,264,"return new StringAlphanumericIdentifierFactory(true, 15);"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,268,* <p>Gets a new identifier factory that returns a series of String objects
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,269,* representing numbers increasing in size in base-36.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,271,* @param wrap  should the factory wrap when it reaches the maximum
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,272,*  size (or throw an exception)
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,273,* @param size  the number of characters the id should fill
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,274,* @return a new identifier factory
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,276,"public static Factory stringAlphanumericIdentifierFactory(boolean wrap, int size) {"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,277,"return new StringAlphanumericIdentifierFactory(wrap, size);"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,283,* <p>Gets the next identifier using the singleton instance of the
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,284,* String Session factory.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,285,* </p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,287,* <p>The singleton instance is not guaranteed to be unique (although its
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,288,"* pretty unlikely), so in a long- lived server, the id may be duplicated."
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,289,* </p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,291,* @return a new identifier
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,293,public static String nextStringSessionIdentifier() {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,294,return (String) STRING_SESSION_IDENTIFIER_FACTORY.create();
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,298,* <p>Gets a new identifier factory that returns a series of String objects
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,299,* that appear to be random and are suitable for use as session identifiers.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,300,* </p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,302,* <p>The generation routine is based on a random number and a counter
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,303,* within a 2 second time interval.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,305,* @return a new identifier factory
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,307,public static Factory stringSessionIdentifierFactory() {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,308,return new StringSessionIdentifierFactory();
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,314,* <code>LongIdentifierFactory</code> is an Identifier Factory
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,315,* that generates an incrementing number as a Long object.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,317,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,319,"private static class LongIdentifierFactory implements Factory, Serializable {"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,321,/** Should the counter wrap. */
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,322,private final boolean wrap;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,323,/** The counter. */
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,324,private long count = 0;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,327,* Constructor.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,329,* @param wrap  should the factory wrap when it reaches the maximum
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,330,*  long value (or throw an exception)
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,331,* @param initialValue  the initial long value to start at
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,333,"private LongIdentifierFactory(boolean wrap, long initialValue) {"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,334,super();
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,335,this.wrap = wrap;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,336,this.count = initialValue;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,340,* Create a new identifier.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,342,* @return a new identifier as a Long
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,344,public Object create() {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,345,long value = 0;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,346,if (wrap) {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,347,synchronized (this) {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,348,value = count++;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,350,} else {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,351,synchronized (this) {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,352,if (count == Long.MAX_VALUE) {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,353,"throw new FactoryException(""The maximum number of identifiers has been reached"");"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,355,value = count++;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,358,return new Long(value);
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,365,* <code>StringNumericIdentifierFactory</code> is an Identifier Factory
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,366,* that generates an incrementing number as a String object.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,368,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,370,"private static class StringNumericIdentifierFactory implements Factory, Serializable {"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,372,/** Should the counter wrap. */
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,373,private final boolean wrap;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,374,/** The counter. */
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,375,private long count = 0;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,378,* Constructor.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,380,* @param wrap  should the factory wrap when it reaches the maximum
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,381,*  long value (or throw an exception)
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,382,* @param initialValue  the initial long value to start at
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,384,"private StringNumericIdentifierFactory(boolean wrap, long initialValue) {"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,385,super();
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,386,this.wrap = wrap;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,387,this.count = initialValue;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,391,* Create a new identifier.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,393,* @return a new identifier as a String
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,395,public Object create() {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,396,long value = 0;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,397,if (wrap) {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,398,synchronized (this) {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,399,value = count++;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,401,} else {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,402,synchronized (this) {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,403,if (count == Long.MAX_VALUE) {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,404,"throw new FactoryException(""The maximum number of identifiers has been reached"");"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,406,value = count++;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,409,return Long.toString(value);
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,417,* <code>StringAlphanumericIdentifierFactory</code> is an Identifier Factory
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,418,* that generates an incrementing incrementing number in base 36 as a String
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,419,* object.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,421,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,423,"private static class StringAlphanumericIdentifierFactory implements Factory, Serializable {"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,425,/** Should the counter wrap. */
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,426,private final boolean wrap;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,427,/** The counter. */
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,428,private char[] count = null;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,431,* Constructor.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,433,* @param wrap  should the factory wrap when it reaches the maximum
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,434,*  long value (or throw an exception)
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,435,* @param size  the size of the identifier
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,437,"private StringAlphanumericIdentifierFactory(boolean wrap, int size) {"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,438,super();
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,439,this.wrap = wrap;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,440,if (size < 1) {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,441,"throw new IllegalArgumentException(""The size must be at least one"");"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,443,this.count = new char[size];
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,444,for (int i = 0; i < size; i++) {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,445,count[i] = '0';  // zero
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,450,* Create a new identifier.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,452,* @return a new identifier as a String
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,454,public synchronized Object create() {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,455,for (int i = count.length - 1; i >= 0; i--) {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,456,switch (count[i]) {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,457,case 122:  // z
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,458,count[i] = '0';
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,459,if (i == 0 && wrap == false) {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,460,"throw new FactoryException(""The maximum number of identifiers has been reached"");"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,462,break;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,464,case 57:  // 9
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,465,count[i] = 'a';
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,466,i = -1;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,467,break;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,469,default:
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,470,count[i]++;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,471,i = -1;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,472,break;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,475,return new String(count);
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,483,* <p><code>StringSessionIdentifierFactory</code> is an Identifier
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,484,* Factory that generates an alphanumeric 10+ character identifier. The
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,485,* exact length depends on the number of ids requested per time period.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,487,* <p>Originally designed for JServ sessions. Uses synchronized count and
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,488,"* time to ensure uniqueness. Not guaranteed unique across JVMs, but"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,489,* fairly safe none the less.</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,491,* @author Jon S. Stevens
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,492,* @author Neeme Praks
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,493,* @author Stephen Colebourne
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,495,"private static class StringSessionIdentifierFactory implements Factory, Serializable {"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,498,* We want to have a random string with a length of 6 characters.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,499,"* Since we encode it base-36, we modulo the random number with"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,500,* this value.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,502,private static final long MAX_RANDOM_LEN = 2176782336L; // 36 ** 6
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,504,* The identifier must be unique within the typical lifespan of a
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,505,* session; the value can roll over after that.  3 characters:
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,506,"* (this means a roll over after over a day, which is much larger"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,507,* than a typical lifespan).
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,509,private static final long MAX_TIME_SECTION_LEN = 46656L; // 36 ** 3
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,511,* Milliseconds between different tics.  The 3-character time
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,512,* string has a new value every 2 seconds.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,514,private static final long TIC_DIFFERENCE = 2000;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,516,/** The incrementing counter. */
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,517,private int counter = 0;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,518,/** The last time. */
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,519,private long lastTimeValue = 0;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,520,/** The randmonizer. */
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,521,private Random randomizer = new Random();
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,524,* Constructor.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,526,private StringSessionIdentifierFactory() {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,527,super();
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,531,* Create a new identifier. Only guaranteed unique within
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,532,"* this JVM, but fairly safe for cross JVM usage as well."
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,534,* <p>Format of identifier is
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,535,* [6 chars random][3 chars time][1+ chars count]</p>
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,537,* @return a new identifier as a Long
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,539,public Object create() {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,540,// Random value
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,542,long currentRandom = randomizer.nextLong();
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,543,if (currentRandom < 0) {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,544,currentRandom = -currentRandom;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,546,"// force value into 6 char range, and add to pad with zeros"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,547,"// this gives a length of 7, when converted to base 36, and"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,548,// the first character (always 1 from the add) is dropped
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,549,currentRandom %= MAX_RANDOM_LEN;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,550,currentRandom += MAX_RANDOM_LEN;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,552,long currentTimeValue = 0;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,553,int currentCount = 0;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,555,synchronized (this) {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,556,// Time
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,558,currentTimeValue = (System.currentTimeMillis() / TIC_DIFFERENCE);
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,560,"// force value into 3 char range, and add to pad with zeros"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,561,"// this gives a length of 4, when converted to base 36, and"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,562,// the first character (always 1 from the add) is dropped
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,563,currentTimeValue %= MAX_TIME_SECTION_LEN;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,564,currentTimeValue += MAX_TIME_SECTION_LEN;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,566,// Count
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,568,// Make the string unique by appending the count since last
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,569,// time flip.
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,571,// Count sessions only within tics (so the 'real' counter
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,572,// isn't exposed to the public).
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,573,if (lastTimeValue != currentTimeValue) {
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,574,lastTimeValue = currentTimeValue;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,575,counter = 0;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,577,currentCount = counter++;
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,580,// build string
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,582,StringBuffer id = new StringBuffer(15);
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,583,"id.append(Long.toString(currentRandom, 36).substring(1));  // 6 chars"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,584,"id.append(Long.toString(currentTimeValue, 36).substring(1));  // 3 chars"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,585,"id.append(Long.toString(currentCount, 36));  // 1+ chars"
True,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,586,return id.toString();
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,5,* reserved.
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,9,* are met:
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,17,*    distribution.
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,54,package org.apache.commons.lang.util;
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,57,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,59,import org.apache.commons.lang.functor.Factory;
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,60,import org.apache.commons.lang.functor.FactoryException;
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,62,* Tests the org.apache.commons.lang.util.IdentifierUtils class.
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,64,* @author Stephen Colebourne
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,65,"* @version $Id: IdentifierUtilsTest.java,v 1.1 2002/12/29 21:35:03 scolebourne Exp $"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,67,public class IdentifierUtilsTest extends junit.framework.TestCase {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,70,* Construct
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,72,public IdentifierUtilsTest(String name) {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,73,super(name);
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,77,* Return class aa a test suite.
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,79,public static Test suite() {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,80,TestSuite suite = new TestSuite(IdentifierUtilsTest.class);
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,81,"suite.setName(""IdentifierUtils Tests"");"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,82,return suite;
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,87,public void testLongIncrementing() {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,88,Factory f = IdentifierUtils.LONG_IDENTIFIER_FACTORY;
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,89,"assertEquals(new Long(0), f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,90,"assertEquals(new Long(1), f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,91,"assertEquals(new Long(2), f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,92,"assertEquals(new Long(3), f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,93,"assertEquals(new Long(4), IdentifierUtils.nextLongIdentifier());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,94,"assertEquals(new Long(5), f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,95,"assertEquals(new Long(6), IdentifierUtils.nextLongIdentifier());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,96,"assertEquals(new Long(7), IdentifierUtils.nextLongIdentifier());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,99,public void testLongIncrementingNoArgs() {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,100,Factory f = IdentifierUtils.longIdentifierFactory();
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,101,"assertEquals(new Long(0), f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,102,"assertEquals(new Long(1), f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,103,assertTrue(f != IdentifierUtils.LONG_IDENTIFIER_FACTORY);
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,106,public void testLongIncrementingInit() {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,107,"Factory f = IdentifierUtils.longIdentifierFactory(true, 100);"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,108,"assertEquals(new Long(100), f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,109,"assertEquals(new Long(101), f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,112,public void testLongIncrementingWrap() {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,113,"Factory f = IdentifierUtils.longIdentifierFactory(true, Long.MAX_VALUE);"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,114,"assertEquals(new Long(Long.MAX_VALUE), f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,115,"assertEquals(new Long(Long.MIN_VALUE), f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,118,public void testLongIncrementingNoWrap() {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,119,"Factory f = IdentifierUtils.longIdentifierFactory(false, Long.MAX_VALUE);"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,120,try {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,121,f.create();
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,122,fail();
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,123,} catch (FactoryException ex) {}
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,128,public void testStringNumericLong() {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,129,Factory f = IdentifierUtils.STRING_NUMERIC_IDENTIFIER_FACTORY;
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,130,"assertEquals(""0"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,131,"assertEquals(""1"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,132,"assertEquals(""2"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,133,"assertEquals(""3"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,134,"assertEquals(""4"", IdentifierUtils.nextStringNumericIdentifier());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,135,"assertEquals(""5"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,136,"assertEquals(""6"", IdentifierUtils.nextStringNumericIdentifier());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,137,"assertEquals(""7"", IdentifierUtils.nextStringNumericIdentifier());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,140,public void testStringNumericNoArgs() {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,141,Factory f = IdentifierUtils.stringNumericIdentifierFactory();
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,142,"assertEquals(""0"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,143,"assertEquals(""1"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,144,assertTrue(f != IdentifierUtils.STRING_NUMERIC_IDENTIFIER_FACTORY);
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,147,public void testStringNumericInit() {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,148,"Factory f = IdentifierUtils.stringNumericIdentifierFactory(true, 100);"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,149,"assertEquals(""100"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,150,"assertEquals(""101"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,153,public void testStringNumericWrap() {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,154,"Factory f = IdentifierUtils.stringNumericIdentifierFactory(true, Long.MAX_VALUE);"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,155,"assertEquals(Long.toString(Long.MAX_VALUE), f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,156,"assertEquals(Long.toString(Long.MIN_VALUE), f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,159,public void testStringNumericNoWrap() {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,160,"Factory f = IdentifierUtils.stringNumericIdentifierFactory(false, Long.MAX_VALUE);"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,161,try {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,162,f.create();
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,163,fail();
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,164,} catch (FactoryException ex) { }
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,169,public void testStringAlphanumeric() {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,170,Factory f = IdentifierUtils.STRING_ALPHANUMERIC_IDENTIFIER_FACTORY;
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,171,"assertEquals(""000000000000001"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,172,"assertEquals(""000000000000002"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,173,"assertEquals(""000000000000003"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,174,"assertEquals(""000000000000004"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,175,"assertEquals(""000000000000005"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,176,"assertEquals(""000000000000006"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,177,"assertEquals(""000000000000007"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,178,"assertEquals(""000000000000008"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,179,"assertEquals(""000000000000009"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,180,"assertEquals(""00000000000000a"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,181,"assertEquals(""00000000000000b"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,182,"assertEquals(""00000000000000c"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,183,"assertEquals(""00000000000000d"", IdentifierUtils.nextStringAlphanumericIdentifier());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,184,"assertEquals(""00000000000000e"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,185,"assertEquals(""00000000000000f"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,186,"assertEquals(""00000000000000g"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,187,"assertEquals(""00000000000000h"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,188,"assertEquals(""00000000000000i"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,189,"assertEquals(""00000000000000j"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,190,"assertEquals(""00000000000000k"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,191,"assertEquals(""00000000000000l"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,192,"assertEquals(""00000000000000m"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,193,"assertEquals(""00000000000000n"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,194,"assertEquals(""00000000000000o"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,195,"assertEquals(""00000000000000p"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,196,"assertEquals(""00000000000000q"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,197,"assertEquals(""00000000000000r"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,198,"assertEquals(""00000000000000s"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,199,"assertEquals(""00000000000000t"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,200,"assertEquals(""00000000000000u"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,201,"assertEquals(""00000000000000v"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,202,"assertEquals(""00000000000000w"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,203,"assertEquals(""00000000000000x"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,204,"assertEquals(""00000000000000y"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,205,"assertEquals(""00000000000000z"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,206,"assertEquals(""000000000000010"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,207,"assertEquals(""000000000000011"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,208,"assertEquals(""000000000000012"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,209,"assertEquals(""000000000000013"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,212,public void testLongAlphanumericNoArgs() {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,213,Factory f = IdentifierUtils.stringAlphanumericIdentifierFactory();
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,214,"assertEquals(""000000000000001"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,215,"assertEquals(""000000000000002"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,216,assertTrue(f != IdentifierUtils.STRING_ALPHANUMERIC_IDENTIFIER_FACTORY);
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,219,public void testStringAlphanumericWrap() {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,220,"Factory f = IdentifierUtils.stringAlphanumericIdentifierFactory(true, 1);"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,221,"assertEquals(""1"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,222,"assertEquals(""2"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,223,"assertEquals(""3"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,224,"assertEquals(""4"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,225,"assertEquals(""5"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,226,"assertEquals(""6"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,227,"assertEquals(""7"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,228,"assertEquals(""8"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,229,"assertEquals(""9"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,230,"assertEquals(""a"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,231,"assertEquals(""b"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,232,"assertEquals(""c"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,233,"assertEquals(""d"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,234,"assertEquals(""e"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,235,"assertEquals(""f"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,236,"assertEquals(""g"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,237,"assertEquals(""h"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,238,"assertEquals(""i"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,239,"assertEquals(""j"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,240,"assertEquals(""k"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,241,"assertEquals(""l"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,242,"assertEquals(""m"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,243,"assertEquals(""n"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,244,"assertEquals(""o"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,245,"assertEquals(""p"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,246,"assertEquals(""q"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,247,"assertEquals(""r"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,248,"assertEquals(""s"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,249,"assertEquals(""t"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,250,"assertEquals(""u"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,251,"assertEquals(""v"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,252,"assertEquals(""w"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,253,"assertEquals(""x"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,254,"assertEquals(""y"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,255,"assertEquals(""z"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,256,"assertEquals(""0"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,259,public void testStringAlphanumericNoWrap() {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,260,"Factory f = IdentifierUtils.stringAlphanumericIdentifierFactory(false, 1);"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,261,"assertEquals(""1"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,262,"assertEquals(""2"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,263,"assertEquals(""3"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,264,"assertEquals(""4"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,265,"assertEquals(""5"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,266,"assertEquals(""6"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,267,"assertEquals(""7"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,268,"assertEquals(""8"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,269,"assertEquals(""9"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,270,"assertEquals(""a"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,271,"assertEquals(""b"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,272,"assertEquals(""c"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,273,"assertEquals(""d"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,274,"assertEquals(""e"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,275,"assertEquals(""f"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,276,"assertEquals(""g"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,277,"assertEquals(""h"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,278,"assertEquals(""i"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,279,"assertEquals(""j"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,280,"assertEquals(""k"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,281,"assertEquals(""l"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,282,"assertEquals(""m"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,283,"assertEquals(""n"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,284,"assertEquals(""o"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,285,"assertEquals(""p"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,286,"assertEquals(""q"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,287,"assertEquals(""r"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,288,"assertEquals(""s"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,289,"assertEquals(""t"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,290,"assertEquals(""u"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,291,"assertEquals(""v"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,292,"assertEquals(""w"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,293,"assertEquals(""x"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,294,"assertEquals(""y"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,295,"assertEquals(""z"", f.create());"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,296,try {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,297,f.create();
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,298,fail();
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,299,} catch (FactoryException ex) {}
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,304,public void testStringSession() {
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,305,Factory f = IdentifierUtils.STRING_SESSION_IDENTIFIER_FACTORY;
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,306,assertTrue(f != IdentifierUtils.stringSessionIdentifierFactory());
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,308,String a = (String) f.create();
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,309,String b = (String) IdentifierUtils.nextStringSessionIdentifier();
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,310,assertTrue(a.length() >= 10);
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,311,assertTrue(b.length() >= 10);
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,312,"// could fail, but unlikely"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,313,"assertTrue(a.substring(6, 9) != b.substring(6, 9));"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,314,"assertEquals(""0"", a.substring(9));"
True,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,315,"assertEquals(""1"", b.substring(9));"
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,64," @version $Id: UtilTestSuite.java,v 1.1 2002/12/18 02:50:36 bayard Exp $"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,64,"* @version $Id: UtilTestSuite.java,v 1.2 2002/12/29 21:35:03 scolebourne Exp $"
True,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,89,suite.addTest(IdentifierUtilsTest.suite());
