is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,417,* This format is difficult to test using the current time because the
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,418,"* parseCVS method applies the default date of January 1, 1970 to the"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,419,* parsed time. The most straightforward way to test the parse is to
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,420,"* pass in a known value, and test the output against this know value."
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,417,"ow.set(Calendar.MILLISECOND, 0);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,418,"ow.set(Calendar.SECOND, 0);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,419,"ow.set(Calendar.DAY_OF_MONTH, 1);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,420,"ow.set(Calendar.MONTH, Calendar.JANUARY);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,421,"ow.set(Calendar.YEAR, 1970);"
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,422,"ssertEquals(""parseCVS format h:mm z"","
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,423,"ow, DateUtils.parseCVS(new SimpleDateFormat(""H:mm z"").format(now.getTime())), 50);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,423,"now.setTime(new SimpleDateFormat(""h:mm z"").parse(""16:30 GMT""));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,424,"assertEquals(""parseCVS format h:mm z 16:30 GMT"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,425,"now, DateUtils.parseCVS(""16:30 GMT""), 50);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,426,now = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,427,"now.setTime(new SimpleDateFormat(""h:mm z"").parse(""16:30 EST""));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,428,"assertEquals(""parseCVS format h:mm z 16:30 EST"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,429,"now, DateUtils.parseCVS(""16:30 EST""), 50);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,430,now = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,431,"now.setTime(new SimpleDateFormat(""h:mm z"").parse(""16:30 GMT-05:00""));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,432,"assertEquals(""parseCVS format h:mm z 16:30 GMT-05:00"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,433,"now, DateUtils.parseCVS(""16:30 GMT-05:00""), 50);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,434,now = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,435,"now.setTime(new SimpleDateFormat(""h:mm z"").parse(""16:30 GMT+01:00""));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,436,"assertEquals(""parseCVS format h:mm z 16:30 GMT+01:00"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,437,"now, DateUtils.parseCVS(""16:30 GMT+01:00""), 50);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,439,now = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,440,"now.setTime(new SimpleDateFormat(""h:mm z"").parse(""06:30 GMT""));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,441,"assertEquals(""parseCVS format h:mm z 06:30 GMT"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,442,"now, DateUtils.parseCVS(""06:30 GMT""), 50);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,443,now = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,444,"now.setTime(new SimpleDateFormat(""h:mm z"").parse(""06:30 EST""));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,445,"assertEquals(""parseCVS format h:mm z 06:30 EST"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,446,"now, DateUtils.parseCVS(""06:30 EST""), 50);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,447,now = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,448,"now.setTime(new SimpleDateFormat(""h:mm z"").parse(""06:30 GMT-05:00""));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,449,"assertEquals(""parseCVS format h:mm z 06:30 GMT-05:00"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,450,"now, DateUtils.parseCVS(""06:30 GMT-05:00""), 50);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,451,now = Calendar.getInstance();
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,452,"now.setTime(new SimpleDateFormat(""h:mm z"").parse(""06:30 GMT+01:00""));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,453,"assertEquals(""parseCVS format h:mm z 06:30 GMT+01:00"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,454,"now, DateUtils.parseCVS(""06:30 GMT+01:00""), 50);"
