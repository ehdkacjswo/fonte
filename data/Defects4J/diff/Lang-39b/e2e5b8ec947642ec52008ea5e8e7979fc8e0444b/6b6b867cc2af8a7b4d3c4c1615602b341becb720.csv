is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,409,* Sets the years field to a date returning a new object.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,410,* The original date object is unchanged.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,412,"* @param date  the date, not null"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,413,* @param amount the amount to set
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,414,* @return a new Date object set with the specified value
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,415,* @throws IllegalArgumentException if the date is null
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,417,"public static Date setYears(Date date, int amount) {"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,418,"return set(date, Calendar.YEAR, amount);"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,423,* Sets the months field to a date returning a new object.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,424,* The original date object is unchanged.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,426,"* @param date  the date, not null"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,427,* @param amount the amount to set
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,428,* @return a new Date object set with the specified value
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,429,* @throws IllegalArgumentException if the date is null
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,431,"public static Date setMonths(Date date, int amount) {"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,432,"return set(date, Calendar.MONTH, amount);"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,437,* Sets the day of month field to a date returning a new object.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,438,* The original date object is unchanged.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,440,"* @param date  the date, not null"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,441,* @param amount the amount to set
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,442,* @return a new Date object set with the specified value
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,443,* @throws IllegalArgumentException if the date is null
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,445,"public static Date setDays(Date date, int amount) {"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,446,"return set(date, Calendar.DAY_OF_MONTH, amount);"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,451,* Sets the hours field to a date returning a new object.  Hours range
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,452,* from  0-23.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,453,* The original date object is unchanged.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,455,"* @param date  the date, not null"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,456,* @param amount the amount to set
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,457,* @return a new Date object set with the specified value
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,458,* @throws IllegalArgumentException if the date is null
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,460,"public static Date setHours(Date date, int amount) {"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,461,"return set(date, Calendar.HOUR_OF_DAY, amount);"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,466,* Sets the minute field to a date returning a new object.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,467,* The original date object is unchanged.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,469,"* @param date  the date, not null"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,470,* @param amount the amount to set
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,471,* @return a new Date object set with the specified value
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,472,* @throws IllegalArgumentException if the date is null
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,474,"public static Date setMinutes(Date date, int amount) {"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,475,"return set(date, Calendar.MINUTE, amount);"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,480,* Sets the seconds field to a date returning a new object.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,481,* The original date object is unchanged.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,483,"* @param date  the date, not null"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,484,* @param amount the amount to set
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,485,* @return a new Date object set with the specified value
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,486,* @throws IllegalArgumentException if the date is null
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,488,"public static Date setSeconds(Date date, int amount) {"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,489,"return set(date, Calendar.SECOND, amount);"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,494,* Sets the miliseconds field to a date returning a new object.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,495,* The original date object is unchanged.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,497,"* @param date  the date, not null"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,498,* @param amount the amount to set
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,499,* @return a new Date object set with the specified value
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,500,* @throws IllegalArgumentException if the date is null
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,502,"public static Date setMilliseconds(Date date, int amount) {"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,503,"return set(date, Calendar.MILLISECOND, amount);"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,508,* Sets the specified field to a date returning a new object.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,509,* This does not use a lenient calendar.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,510,* The original date object is unchanged.
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,512,"* @param date  the date, not null"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,513,* @param amount the amount to set
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,514,* @return a new Date object set with the specified value
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,515,* @throws IllegalArgumentException if the date is null
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,517,"private static Date set(Date date, int calendarField, int amount) {"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,518,if (date == null) {
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,519,"throw new IllegalArgumentException(""The date must not be null"");"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,521,"// getInstance() returns a new object, so this method is thread safe."
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,522,Calendar c = Calendar.getInstance();
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,523,c.setLenient(false);
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,524,c.setTime(date);
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,525,"c.set(calendarField, amount);"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,526,return c.getTime();
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,460,public void testSetYears() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,461,Date base = new Date(MILLIS_TEST);
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,462,"Date result = DateUtils.setYears(base, 2000);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,463,"assertNotSame(base, result);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,464,"assertDate(base, 2000, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,465,"assertDate(result, 2000, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,467,"result = DateUtils.setYears(base, 2008);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,468,"assertNotSame(base, result);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,469,"assertDate(base, 2000, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,470,"assertDate(result, 2008, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,472,"result = DateUtils.setYears(base, 2005);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,473,"assertNotSame(base, result);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,474,"assertDate(base, 2000, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,475,"assertDate(result, 2005, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,479,public void testSetMonths() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,480,Date base = new Date(MILLIS_TEST);
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,481,"Date result = DateUtils.setMonths(base, 5);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,482,"assertNotSame(base, result);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,483,"assertDate(base, 2000, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,484,"assertDate(result, 2000, 5, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,486,"result = DateUtils.setMonths(base, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,487,"assertNotSame(base, result);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,488,"assertDate(base, 2000, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,489,"assertDate(result, 2000, 1, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,491,try {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,492,"result = DateUtils.setMonths(base, 12);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,493,"fail(""DateUtils.setMonths did not throw an expected IllegalArguementException."");"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,494,} catch (IllegalArgumentException e) {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,500,public void testSetDays() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,501,Date base = new Date(MILLIS_TEST);
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,502,"Date result = DateUtils.setDays(base, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,503,"assertNotSame(base, result);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,504,"assertDate(base, 2000, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,505,"assertDate(result, 2000, 6, 1, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,507,"result = DateUtils.setDays(base, 29);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,508,"assertNotSame(base, result);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,509,"assertDate(base, 2000, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,510,"assertDate(result, 2000, 6, 29, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,512,try {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,513,"result = DateUtils.setDays(base, 32);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,514,"fail(""DateUtils.setDays did not throw an expected IllegalArguementException."");"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,515,} catch (IllegalArgumentException e) {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,521,public void testSetHours() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,522,Date base = new Date(MILLIS_TEST);
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,523,"Date result = DateUtils.setHours(base, 0);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,524,"assertNotSame(base, result);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,525,"assertDate(base, 2000, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,526,"assertDate(result, 2000, 6, 5, 0, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,528,"result = DateUtils.setHours(base, 23);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,529,"assertNotSame(base, result);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,530,"assertDate(base, 2000, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,531,"assertDate(result, 2000, 6, 5, 23, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,533,try {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,534,"result = DateUtils.setHours(base, 24);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,535,"fail(""DateUtils.setHours did not throw an expected IllegalArguementException."");"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,536,} catch (IllegalArgumentException e) {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,542,public void testSetMinutes() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,543,Date base = new Date(MILLIS_TEST);
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,544,"Date result = DateUtils.setMinutes(base, 0);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,545,"assertNotSame(base, result);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,546,"assertDate(base, 2000, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,547,"assertDate(result, 2000, 6, 5, 4, 0, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,549,"result = DateUtils.setMinutes(base, 59);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,550,"assertNotSame(base, result);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,551,"assertDate(base, 2000, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,552,"assertDate(result, 2000, 6, 5, 4, 59, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,554,try {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,555,"result = DateUtils.setMinutes(base, 60);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,556,"fail(""DateUtils.setMinutes did not throw an expected IllegalArguementException."");"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,557,} catch (IllegalArgumentException e) {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,563,public void testSetSeconds() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,564,Date base = new Date(MILLIS_TEST);
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,565,"Date result = DateUtils.setSeconds(base, 0);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,566,"assertNotSame(base, result);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,567,"assertDate(base, 2000, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,568,"assertDate(result, 2000, 6, 5, 4, 3, 0, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,570,"result = DateUtils.setSeconds(base, 59);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,571,"assertNotSame(base, result);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,572,"assertDate(base, 2000, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,573,"assertDate(result, 2000, 6, 5, 4, 3, 59, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,575,try {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,576,"result = DateUtils.setSeconds(base, 60);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,577,"fail(""DateUtils.setSeconds did not throw an expected IllegalArguementException."");"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,578,} catch (IllegalArgumentException e) {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,584,public void testSetMilliseconds() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,585,Date base = new Date(MILLIS_TEST);
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,586,"Date result = DateUtils.setMilliseconds(base, 0);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,587,"assertNotSame(base, result);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,588,"assertDate(base, 2000, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,589,"assertDate(result, 2000, 6, 5, 4, 3, 2, 0);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,591,"result = DateUtils.setMilliseconds(base, 999);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,592,"assertNotSame(base, result);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,593,"assertDate(base, 2000, 6, 5, 4, 3, 2, 1);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,594,"assertDate(result, 2000, 6, 5, 4, 3, 2, 999);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,596,try {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,597,"result = DateUtils.setMilliseconds(base, 1000);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,598,"fail(""DateUtils.setMilliseconds did not throw an expected IllegalArguementException."");"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,599,} catch (IllegalArgumentException e) {
