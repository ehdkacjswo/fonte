is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,74," @version $Id: NumberUtils.java,v 1.14 2003/09/13 03:11:30 psteitz Exp $"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,74,"* @version $Id: NumberUtils.java,v 1.15 2003/09/23 15:46:42 fredrik Exp $"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,141,* @deprecated Use {@link #toInt(String)}
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,142,*  This method will be removed in Commons Lang 3.0
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,143,"eturn stringToInt(str, 0);"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,145,return toInt(str);
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,149,"* <p>Convert a <code>String</code> to an <code>int</code>, returning"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,150,* <code>zero</code> if the conversion fails.</p>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,152,"* <p>If the string is <code>null</code>, <code>zero</code> is returned.</p>"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,154,* <pre>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,155,*   NumberUtils.toInt(null) = 0
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,156,"*   NumberUtils.toInt("""")   = 0"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,157,"*   NumberUtils.toInt(""1"")  = 1"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,158,* </pre>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,160,"* @param str  the string to convert, may be null"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,161,"* @return the int represented by the string, or <code>zero</code> if"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,162,*  conversion fails
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,164,public static int toInt(String str) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,165,"return toInt(str, 0);"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,183,"* @deprecated Use {@link #toInt(String, int)}"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,184,*  This method will be removed in Commons Lang 3.0
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,187,"return toInt(str, defaultValue);"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,191,"* <p>Convert a <code>String</code> to an <code>int</code>, returning a"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,192,* default value if the conversion fails.</p>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,194,"* <p>If the string is <code>null</code>, the default value is returned.</p>"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,196,* <pre>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,197,"*   NumberUtils.toInt(null, 1) = 1"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,198,"*   NumberUtils.toInt("""", 1)   = 1"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,199,"*   NumberUtils.toInt(""1"", 0)  = 1"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,200,* </pre>
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,202,"* @param str  the string to convert, may be null"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,203,* @param defaultValue  the default value
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,204,"* @return the int represented by the string, or the default if conversion fails"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,206,"public static int toInt(String str, int defaultValue) {"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,177,   NumberUtils.stringToLong(null) = 0L
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,178,"   NumberUtils.stringToLong("""")   = 0L"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,179,"   NumberUtils.stringToLong(""1"")  = 1L"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,221,*   NumberUtils.toLong(null) = 0L
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,222,"*   NumberUtils.toLong("""")   = 0L"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,223,"*   NumberUtils.toLong(""1"")  = 1L"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,187,ublic static long stringToLong(String str) {
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,188,"eturn stringToLong(str, 0L);"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,231,public static long toLong(String str) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,232,"return toLong(str, 0L);"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,198,"   NumberUtils.stringToLong(null, 1L) = 1L"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,199,"   NumberUtils.stringToLong("""", 1L)   = 1L"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,200,"   NumberUtils.stringToLong(""1"", 0L)  = 1L"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,242,"*   NumberUtils.toLong(null, 1L) = 1L"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,243,"*   NumberUtils.toLong("""", 1L)   = 1L"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,244,"*   NumberUtils.toLong(""1"", 0L)  = 1L"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,208,"ublic static long stringToLong(String str, long defaultValue) {"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,252,"public static long toLong(String str, long defaultValue) {"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,224,   NumberUtils.stringToFloat(null)   = 0.0f
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,225,"   NumberUtils.stringToFloat("""")     = 0.0f"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,226,"   NumberUtils.stringToFloat(""1.5"")  = 1.5f"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,268,*   NumberUtils.toFloat(null)   = 0.0f
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,269,"*   NumberUtils.toFloat("""")     = 0.0f"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,270,"*   NumberUtils.toFloat(""1.5"")  = 1.5f"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,234,ublic static float stringToFloat(String str) {
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,235,"eturn stringToFloat(str, 0.0f);"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,278,public static float toFloat(String str) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,279,"return toFloat(str, 0.0f);"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,246,"   NumberUtils.stringToFloat(null, 1.1f)   = 1.0f"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,247,"   NumberUtils.stringToFloat("""", 1.1f)     = 1.1f"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,248,"   NumberUtils.stringToFloat(""1.5"", 0.0f)  = 1.5f"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,290,"*   NumberUtils.toFloat(null, 1.1f)   = 1.0f"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,291,"*   NumberUtils.toFloat("""", 1.1f)     = 1.1f"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,292,"*   NumberUtils.toFloat(""1.5"", 0.0f)  = 1.5f"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,257,"ublic static float stringToFloat(String str, float defaultValue) {"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,301,"public static float toFloat(String str, float defaultValue) {"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,276,   NumberUtils.stringToDouble(null)   = 0.0d
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,277,"   NumberUtils.stringToDouble("""")     = 0.0d"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,278,"   NumberUtils.stringToDouble(""1.5"")  = 1.5d"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,320,*   NumberUtils.toDouble(null)   = 0.0d
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,321,"*   NumberUtils.toDouble("""")     = 0.0d"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,322,"*   NumberUtils.toDouble(""1.5"")  = 1.5d"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,286,ublic static double stringToDouble(String str) {
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,287,"eturn stringToDouble(str, 0.0d);"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,330,public static double toDouble(String str) {
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,331,"return toDouble(str, 0.0d);"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,298,"   NumberUtils.stringToDouble(null, 1.1d)   = 1.1d"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,299,"   NumberUtils.stringToDouble("""", 1.1d)     = 1.1d"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,300,"   NumberUtils.stringToDouble(""1.5"", 0.0d)  = 1.5d"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,342,"*   NumberUtils.toDouble(null, 1.1d)   = 1.1d"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,343,"*   NumberUtils.toDouble("""", 1.1d)     = 1.1d"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,344,"*   NumberUtils.toDouble(""1.5"", 0.0d)  = 1.5d"
False,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,309,"ublic static double stringToDouble(String str, double defaultValue) {"
True,src/java/org/apache/commons/lang/math/NumberUtils.java,src/java/org/apache/commons/lang/math/NumberUtils.java,353,"public static double toDouble(String str, double defaultValue) {"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,78," @version $Id: NumberUtilsTest.java,v 1.9 2003/09/05 15:55:09 psteitz Exp $"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,78,"* @version $Id: NumberUtilsTest.java,v 1.10 2003/09/23 15:46:41 fredrik Exp $"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,109, Test for int stringToInt(String)
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,109,* Test for {@link NumberUtils#stringToInt(String)}.
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,119," Test for int stringToInt(String, int)"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,119,* Test for {@link NumberUtils#toInt(String)}.
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,121,public void testToIntString() {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,122,"assertTrue(""toInt(String) 1 failed"", NumberUtils.toInt(""12345"") == 12345);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,123,"assertTrue(""toInt(String) 2 failed"", NumberUtils.toInt(""abc"") == 0);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,124,"assertTrue(""toInt(empty) failed"", NumberUtils.toInt("""") == 0);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,125,"assertTrue(""toInt(null) failed"", NumberUtils.toInt(null) == 0);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,129,"* Test for {@link NumberUtils#stringToInt(String, int)}."
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,127, Test for long stringToLong(String)
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,137,"* Test for {@link NumberUtils#toInt(String, int)}."
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,139,public void testToIntStringI() {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,140,"assertTrue(""toInt(String,int) 1 failed"", NumberUtils.toInt(""12345"", 5) == 12345);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,141,"assertTrue(""toInt(String,int) 2 failed"", NumberUtils.toInt(""1234.5"", 5) == 5);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,145,* Test for {@link NumberUtils#toLong(String)}.
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,129,ublic void testStringToLongString() {
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,130,"ssertTrue(""stringToLong(String) 1 failed"", NumberUtils.stringToLong(""12345"") == 12345l);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,131,"ssertTrue(""stringToLong(String) 2 failed"", NumberUtils.stringToLong(""abc"") == 0l);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,132,"ssertTrue(""stringToLong(String) 3 failed"", NumberUtils.stringToLong(""1L"") == 0l);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,133,"ssertTrue(""stringToLong(String) 4 failed"", NumberUtils.stringToLong(""1l"") == 0l);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,134,"ssertTrue(""stringToLong(Long.MAX_VALUE) failed"", NumberUtils.stringToLong(Long.MAX_VALUE+"""") == Long.MAX_VALUE);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,135,"ssertTrue(""stringToLong(Long.MIN_VALUE) failed"", NumberUtils.stringToLong(Long.MIN_VALUE+"""") == Long.MIN_VALUE);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,136,"ssertTrue(""stringToLong(empty) failed"", NumberUtils.stringToLong("""") == 0l);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,137,"ssertTrue(""stringToLong(null) failed"", NumberUtils.stringToLong(null) == 0l);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,147,public void testToLongString() {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,148,"assertTrue(""toLong(String) 1 failed"", NumberUtils.toLong(""12345"") == 12345l);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,149,"assertTrue(""toLong(String) 2 failed"", NumberUtils.toLong(""abc"") == 0l);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,150,"assertTrue(""toLong(String) 3 failed"", NumberUtils.toLong(""1L"") == 0l);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,151,"assertTrue(""toLong(String) 4 failed"", NumberUtils.toLong(""1l"") == 0l);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,152,"assertTrue(""toLong(Long.MAX_VALUE) failed"", NumberUtils.toLong(Long.MAX_VALUE+"""") == Long.MAX_VALUE);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,153,"assertTrue(""toLong(Long.MIN_VALUE) failed"", NumberUtils.toLong(Long.MIN_VALUE+"""") == Long.MIN_VALUE);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,154,"assertTrue(""toLong(empty) failed"", NumberUtils.toLong("""") == 0l);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,155,"assertTrue(""toLong(null) failed"", NumberUtils.toLong(null) == 0l);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,141," Test for long stringToLong(String, long)"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,159,"* Test for {@link NumberUtils#toLong(String, long)}."
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,143,ublic void testStringToLongStringL() {
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,144,"ssertTrue(""stringToLong(String,long) 1 failed"", NumberUtils.stringToLong(""12345"", 5l) == 12345l);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,145,"ssertTrue(""stringToLong(String,long) 2 failed"", NumberUtils.stringToLong(""1234.5"", 5l) == 5l);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,161,public void testToLongStringL() {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,162,"assertTrue(""toLong(String,long) 1 failed"", NumberUtils.toLong(""12345"", 5l) == 12345l);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,163,"assertTrue(""toLong(String,long) 2 failed"", NumberUtils.toLong(""1234.5"", 5l) == 5l);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,149, Test for float stringToFloat(String)
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,167,* Test for {@link NumberUtils#toFloat(String)}.
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,151,ublic void testStringToFloatString() {
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,152,"ssertTrue(""stringToFloat(String) 1 failed"", NumberUtils.stringToFloat(""-1.2345"") == -1.2345f);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,153,"ssertTrue(""stringToFloat(String) 2 failed"", NumberUtils.stringToFloat(""1.2345"") == 1.2345f);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,154,"ssertTrue(""stringToFloat(String) 3 failed"", NumberUtils.stringToFloat(""abc"") == 0.0f);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,155,"ssertTrue(""stringToFloat(Float.MAX_VALUE) failed"", NumberUtils.stringToFloat(Float.MAX_VALUE+"""") ==  Float.MAX_VALUE);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,156,"ssertTrue(""stringToFloat(Float.MIN_VALUE) failed"", NumberUtils.stringToFloat(Float.MIN_VALUE+"""") == Float.MIN_VALUE);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,157,"ssertTrue(""stringToFloat(empty) failed"", NumberUtils.stringToFloat("""") == 0.0f);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,158,"ssertTrue(""stringToFloat(null) failed"", NumberUtils.stringToFloat(null) == 0.0f);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,169,public void testToFloatString() {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,170,"assertTrue(""toFloat(String) 1 failed"", NumberUtils.toFloat(""-1.2345"") == -1.2345f);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,171,"assertTrue(""toFloat(String) 2 failed"", NumberUtils.toFloat(""1.2345"") == 1.2345f);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,172,"assertTrue(""toFloat(String) 3 failed"", NumberUtils.toFloat(""abc"") == 0.0f);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,173,"assertTrue(""toFloat(Float.MAX_VALUE) failed"", NumberUtils.toFloat(Float.MAX_VALUE+"""") ==  Float.MAX_VALUE);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,174,"assertTrue(""toFloat(Float.MIN_VALUE) failed"", NumberUtils.toFloat(Float.MIN_VALUE+"""") == Float.MIN_VALUE);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,175,"assertTrue(""toFloat(empty) failed"", NumberUtils.toFloat("""") == 0.0f);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,176,"assertTrue(""toFloat(null) failed"", NumberUtils.toFloat(null) == 0.0f);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,162," Test for float stringToFloat(String, float)"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,180,"* Test for {@link NumberUtils#toFloat(String, float)}."
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,164,ublic void testStringToFloatStringF() {
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,165,"ssertTrue(""stringToFloat(String,int) 1 failed"", NumberUtils.stringToFloat(""1.2345"", 5.1f) == 1.2345f);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,166,"ssertTrue(""stringToFloat(String,int) 2 failed"", NumberUtils.stringToFloat(""a"", 5.0f) == 5.0f);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,182,public void testToFloatStringF() {
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,183,"assertTrue(""toFloat(String,int) 1 failed"", NumberUtils.toFloat(""1.2345"", 5.1f) == 1.2345f);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,184,"assertTrue(""toFloat(String,int) 2 failed"", NumberUtils.toFloat(""a"", 5.0f) == 5.0f);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,170, Test for double stringToDouble(String)
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,188,* Test for {@link NumberUtils#toDouble(String)}.
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,173,"ssertTrue(""stringToDouble(String) 1 failed"", NumberUtils.stringToDouble(""-1.2345"") == -1.2345d);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,174,"ssertTrue(""stringToDouble(String) 2 failed"", NumberUtils.stringToDouble(""1.2345"") == 1.2345d);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,175,"ssertTrue(""stringToDouble(String) 3 failed"", NumberUtils.stringToDouble(""abc"") == 0.0d);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,176,"ssertTrue(""stringToDouble(Double.MAX_VALUE) failed"", NumberUtils.stringToDouble(Double.MAX_VALUE+"""") == Double.MAX_VALUE);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,177,"ssertTrue(""stringToDouble(Double.MIN_VALUE) failed"", NumberUtils.stringToDouble(Double.MIN_VALUE+"""") == Double.MIN_VALUE);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,178,"ssertTrue(""stringToDouble(empty) failed"", NumberUtils.stringToDouble("""") == 0.0d);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,179,"ssertTrue(""stringToDouble(null) failed"", NumberUtils.stringToDouble(null) == 0.0d);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,191,"assertTrue(""toDouble(String) 1 failed"", NumberUtils.toDouble(""-1.2345"") == -1.2345d);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,192,"assertTrue(""toDouble(String) 2 failed"", NumberUtils.toDouble(""1.2345"") == 1.2345d);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,193,"assertTrue(""toDouble(String) 3 failed"", NumberUtils.toDouble(""abc"") == 0.0d);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,194,"assertTrue(""toDouble(Double.MAX_VALUE) failed"", NumberUtils.toDouble(Double.MAX_VALUE+"""") == Double.MAX_VALUE);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,195,"assertTrue(""toDouble(Double.MIN_VALUE) failed"", NumberUtils.toDouble(Double.MIN_VALUE+"""") == Double.MIN_VALUE);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,196,"assertTrue(""toDouble(empty) failed"", NumberUtils.toDouble("""") == 0.0d);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,197,"assertTrue(""toDouble(null) failed"", NumberUtils.toDouble(null) == 0.0d);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,183," Test for double stringToFloat(String, float)"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,201,"* Test for {@link NumberUtils#toDouble(String, double)}."
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,186,"ssertTrue(""stringToDouble(String,int) 1 failed"", NumberUtils.stringToDouble(""1.2345"", 5.1d) == 1.2345d);"
False,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,187,"ssertTrue(""stringToDouble(String,int) 2 failed"", NumberUtils.stringToDouble(""a"", 5.0d) == 5.0d);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,204,"assertTrue(""toDouble(String,int) 1 failed"", NumberUtils.toDouble(""1.2345"", 5.1d) == 1.2345d);"
True,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,src/test/org/apache/commons/lang/math/NumberUtilsTest.java,205,"assertTrue(""toDouble(String,int) 2 failed"", NumberUtils.toDouble(""a"", 5.0d) == 5.0d);"
