is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,929,* Returns a new period with the specified period added.
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,930,* <p>
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,931,* Each field of the period is added separately. Thus a period of
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,932,* 2 hours 30 minutes plus 3 hours 40 minutes will produce a result
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,933,* of 5 hours 70 minutes.
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,934,* <p>
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,935,* If the period being added contains a non-zero amount for a field that
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,936,* is not supported in this period then an exception is thrown.
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,937,* <p>
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,938,* This period instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,940,"* @param period  the period to add, null adds zero and returns this"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,941,* @return the new updated period
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,942,* @throws UnsupportedOperationException if any field is not supported
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,943,* @since 1.5
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,945,public Period plus(ReadablePeriod period) {
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,946,if (period == null) {
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,947,return this;
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,949,int[] values = getValues();  // cloned
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,950,"getPeriodType().addIndexedField(this, PeriodType.YEAR_INDEX, values, period.get(DurationFieldType.YEARS_TYPE));"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,951,"getPeriodType().addIndexedField(this, PeriodType.MONTH_INDEX, values, period.get(DurationFieldType.MONTHS_TYPE));"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,952,"getPeriodType().addIndexedField(this, PeriodType.WEEK_INDEX, values, period.get(DurationFieldType.WEEKS_TYPE));"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,953,"getPeriodType().addIndexedField(this, PeriodType.DAY_INDEX, values, period.get(DurationFieldType.DAYS_TYPE));"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,954,"getPeriodType().addIndexedField(this, PeriodType.HOUR_INDEX, values, period.get(DurationFieldType.HOURS_TYPE));"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,955,"getPeriodType().addIndexedField(this, PeriodType.MINUTE_INDEX, values, period.get(DurationFieldType.MINUTES_TYPE));"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,956,"getPeriodType().addIndexedField(this, PeriodType.SECOND_INDEX, values, period.get(DurationFieldType.SECONDS_TYPE));"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,957,"getPeriodType().addIndexedField(this, PeriodType.MILLI_INDEX, values, period.get(DurationFieldType.MILLIS_TYPE));"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,958,"return new Period(values, getPeriodType());"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1108,* Returns a new period with the specified period subtracted.
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1109,* <p>
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1110,* Each field of the period is subtracted separately. Thus a period of
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1111,* 3 hours 30 minutes minus 2 hours 40 minutes will produce a result
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1112,* of 1 hour and -10 minutes.
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1113,* <p>
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1114,* If the period being added contains a non-zero amount for a field that
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1115,* is not supported in this period then an exception is thrown.
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1116,* <p>
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1117,* This period instance is immutable and unaffected by this method call.
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1119,"* @param period  the period to add, null adds zero and returns this"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1120,* @return the new updated period
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1121,* @throws UnsupportedOperationException if any field is not supported
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1122,* @since 1.5
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1124,public Period minus(ReadablePeriod period) {
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1125,if (period == null) {
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1126,return this;
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1128,int[] values = getValues();  // cloned
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1129,"getPeriodType().addIndexedField(this, PeriodType.YEAR_INDEX, values, -period.get(DurationFieldType.YEARS_TYPE));"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1130,"getPeriodType().addIndexedField(this, PeriodType.MONTH_INDEX, values, -period.get(DurationFieldType.MONTHS_TYPE));"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1131,"getPeriodType().addIndexedField(this, PeriodType.WEEK_INDEX, values, -period.get(DurationFieldType.WEEKS_TYPE));"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1132,"getPeriodType().addIndexedField(this, PeriodType.DAY_INDEX, values, -period.get(DurationFieldType.DAYS_TYPE));"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1133,"getPeriodType().addIndexedField(this, PeriodType.HOUR_INDEX, values, -period.get(DurationFieldType.HOURS_TYPE));"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1134,"getPeriodType().addIndexedField(this, PeriodType.MINUTE_INDEX, values, -period.get(DurationFieldType.MINUTES_TYPE));"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1135,"getPeriodType().addIndexedField(this, PeriodType.SECOND_INDEX, values, -period.get(DurationFieldType.SECONDS_TYPE));"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1136,"getPeriodType().addIndexedField(this, PeriodType.MILLI_INDEX, values, -period.get(DurationFieldType.MILLIS_TYPE));"
True,JodaTime/src/java/org/joda/time/Period.java,JodaTime/src/java/org/joda/time/Period.java,1137,"return new Period(values, getPeriodType());"
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,703,* @return true if the array is updated
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,707,if (valueToAdd == 0) {
True,JodaTime/src/java/org/joda/time/PeriodType.java,JodaTime/src/java/org/joda/time/PeriodType.java,708,return false;
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,711,"Period base = new Period(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,712,"Period baseDaysOnly = new Period(0, 0, 0, 10, 0, 0, 0, 0, PeriodType.days());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,714,Period test = base.plus((ReadablePeriod) null);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,715,"assertSame(base, test);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,717,test = base.plus(Period.years(10));
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,718,"assertEquals(11, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,719,"assertEquals(2, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,720,"assertEquals(3, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,721,"assertEquals(4, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,722,"assertEquals(5, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,723,"assertEquals(6, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,724,"assertEquals(7, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,725,"assertEquals(8, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,727,test = base.plus(Years.years(10));
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,728,"assertEquals(11, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,729,"assertEquals(2, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,730,"assertEquals(3, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,731,"assertEquals(4, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,732,"assertEquals(5, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,733,"assertEquals(6, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,734,"assertEquals(7, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,735,"assertEquals(8, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,737,test = base.plus(Period.days(10));
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,738,"assertEquals(1, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,739,"assertEquals(2, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,740,"assertEquals(3, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,741,"assertEquals(14, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,742,"assertEquals(5, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,743,"assertEquals(6, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,744,"assertEquals(7, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,745,"assertEquals(8, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,747,test = baseDaysOnly.plus(Period.years(0));
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,748,"assertEquals(0, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,749,"assertEquals(0, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,750,"assertEquals(0, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,751,"assertEquals(10, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,752,"assertEquals(0, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,753,"assertEquals(0, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,754,"assertEquals(0, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,755,"assertEquals(0, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,757,test = baseDaysOnly.plus(baseDaysOnly);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,758,"assertEquals(0, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,759,"assertEquals(0, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,760,"assertEquals(0, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,761,"assertEquals(20, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,762,"assertEquals(0, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,763,"assertEquals(0, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,764,"assertEquals(0, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,765,"assertEquals(0, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,767,try {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,768,baseDaysOnly.plus(Period.years(1));
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,769,fail();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,770,} catch (UnsupportedOperationException ex) {}
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,772,try {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,773,Period.days(Integer.MAX_VALUE).plus(Period.days(1));
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,774,fail();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,775,} catch (ArithmeticException ex) {}
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,777,try {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,778,Period.days(Integer.MIN_VALUE).plus(Period.days(-1));
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,779,fail();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,780,} catch (ArithmeticException ex) {}
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,784,public void testMinus() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,785,"Period base = new Period(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,786,"Period baseDaysOnly = new Period(0, 0, 0, 10, 0, 0, 0, 0, PeriodType.days());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,788,Period test = base.minus((ReadablePeriod) null);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,789,"assertSame(base, test);"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,791,test = base.minus(Period.years(10));
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,792,"assertEquals(-9, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,793,"assertEquals(2, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,794,"assertEquals(3, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,795,"assertEquals(4, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,796,"assertEquals(5, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,797,"assertEquals(6, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,798,"assertEquals(7, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,799,"assertEquals(8, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,801,test = base.minus(Years.years(10));
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,802,"assertEquals(-9, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,803,"assertEquals(2, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,804,"assertEquals(3, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,805,"assertEquals(4, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,806,"assertEquals(5, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,807,"assertEquals(6, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,808,"assertEquals(7, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,809,"assertEquals(8, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,811,test = base.minus(Period.days(10));
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,812,"assertEquals(1, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,813,"assertEquals(2, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,814,"assertEquals(3, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,815,"assertEquals(-6, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,816,"assertEquals(5, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,817,"assertEquals(6, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,818,"assertEquals(7, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,819,"assertEquals(8, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,821,test = baseDaysOnly.minus(Period.years(0));
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,822,"assertEquals(0, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,823,"assertEquals(0, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,824,"assertEquals(0, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,825,"assertEquals(10, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,826,"assertEquals(0, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,827,"assertEquals(0, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,828,"assertEquals(0, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,829,"assertEquals(0, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,831,test = baseDaysOnly.minus(baseDaysOnly);
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,832,"assertEquals(0, test.getYears());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,833,"assertEquals(0, test.getMonths());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,834,"assertEquals(0, test.getWeeks());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,835,"assertEquals(0, test.getDays());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,836,"assertEquals(0, test.getHours());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,837,"assertEquals(0, test.getMinutes());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,838,"assertEquals(0, test.getSeconds());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,839,"assertEquals(0, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,841,try {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,842,baseDaysOnly.minus(Period.years(1));
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,843,fail();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,844,} catch (UnsupportedOperationException ex) {}
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,846,try {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,847,Period.days(Integer.MAX_VALUE).minus(Period.days(-1));
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,848,fail();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,849,} catch (ArithmeticException ex) {}
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,851,try {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,852,Period.days(Integer.MIN_VALUE).minus(Period.days(1));
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,853,fail();
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,854,} catch (ArithmeticException ex) {}
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,858,public void testPlusFields() {
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,736,ublic void testPlusZero() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,884,public void testPlusFieldsZero() {
False,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,764,ublic void testMinus() {
True,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,JodaTime/src/test/org/joda/time/TestPeriod_Basics.java,912,public void testMinusFields() {
