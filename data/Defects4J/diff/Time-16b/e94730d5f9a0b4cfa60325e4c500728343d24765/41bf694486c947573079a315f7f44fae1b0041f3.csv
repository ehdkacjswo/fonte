is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,10,* are met:
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,54,package org.joda.time.convert;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,56,import java.util.Calendar;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,57,import java.util.TimeZone;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,60,* A basic mock testing class for an unknown calendar.
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,62,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,64,public class MockUnknownCalendar extends Calendar {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,66,private long millis;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,67,private TimeZone zone;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,69,MockUnknownCalendar(long millis) {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,70,this.millis = millis;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,72,MockUnknownCalendar(TimeZone zone) {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,73,this.zone = zone;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,76,public long getTimeInMillis() {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,77,return millis;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,79,public TimeZone getTimeZone() {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,80,return zone;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,83,protected void computeTime() {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,85,protected void computeFields() {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,87,"public void add(int field, int amount) {"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,89,"public void roll(int field, boolean up) {"
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,91,public int getMinimum(int field) {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,92,return 0;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,94,public int getMaximum(int field) {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,95,return 0;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,97,public int getGreatestMinimum(int field) {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,98,return 0;
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,100,public int getLeastMaximum(int field) {
True,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java,101,return 0;
True,JodaTime/src/test/org/joda/time/convert/TestAll.java,JodaTime/src/test/org/joda/time/convert/TestAll.java,75,suite.addTest(TestCalendarConverter.suite());
True,JodaTime/src/test/org/joda/time/convert/TestAll.java,JodaTime/src/test/org/joda/time/convert/TestAll.java,76,suite.addTest(TestDateConverter.suite());
True,JodaTime/src/test/org/joda/time/convert/TestAll.java,JodaTime/src/test/org/joda/time/convert/TestAll.java,78,suite.addTest(TestNullConverter.suite());
True,JodaTime/src/test/org/joda/time/convert/TestAll.java,JodaTime/src/test/org/joda/time/convert/TestAll.java,79,suite.addTest(TestReadableInstantConverter.suite());
True,JodaTime/src/test/org/joda/time/convert/TestAll.java,JodaTime/src/test/org/joda/time/convert/TestAll.java,81,suite.addTest(TestReadableDurationConverter.suite());
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,10,* are met:
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,54,package org.joda.time.convert;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,56,import java.lang.reflect.Constructor;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,57,import java.lang.reflect.Field;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,58,import java.lang.reflect.Modifier;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,59,import java.util.Calendar;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,60,import java.util.Date;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,61,import java.util.GregorianCalendar;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,62,import java.util.TimeZone;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,64,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,65,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,67,import org.joda.time.Chronology;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,68,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,69,import org.joda.time.chrono.BuddhistChronology;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,70,import org.joda.time.chrono.GJChronology;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,71,import org.joda.time.chrono.GregorianChronology;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,72,import org.joda.time.chrono.ISOChronology;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,73,import org.joda.time.chrono.JulianChronology;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,76,* This class is a Junit unit test for CalendarConverter.
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,78,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,80,public class TestCalendarConverter extends TestCase {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,82,private static final DateTimeZone UTC = DateTimeZone.UTC;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,83,"private static final DateTimeZone PARIS = DateTimeZone.getInstance(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,84,"private static final DateTimeZone MOSCOW = DateTimeZone.getInstance(""Europe/Moscow"");"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,85,private static final Chronology JULIAN = JulianChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,86,private static final Chronology ISO = ISOChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,88,private DateTimeZone zone = null;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,90,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,91,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,94,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,95,return new TestSuite(TestCalendarConverter.class);
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,98,public TestCalendarConverter(String name) {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,99,super(name);
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,103,public void testSingleton() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,104,Class cls = CalendarConverter.class;
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,105,"assertEquals(false, Modifier.isPublic(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,106,"assertEquals(false, Modifier.isProtected(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,107,"assertEquals(false, Modifier.isPrivate(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,109,Constructor con = cls.getDeclaredConstructor(null);
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,110,"assertEquals(1, cls.getDeclaredConstructors().length);"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,111,"assertEquals(true, Modifier.isProtected(con.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,113,"Field fld = cls.getDeclaredField(""INSTANCE"");"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,114,"assertEquals(false, Modifier.isPublic(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,115,"assertEquals(false, Modifier.isProtected(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,116,"assertEquals(false, Modifier.isPrivate(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,120,public void testSupportedType() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,121,"assertEquals(Calendar.class, CalendarConverter.INSTANCE.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,125,public void testGetInstantMillis_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,126,GregorianCalendar cal = new GregorianCalendar();
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,127,cal.setTime(new Date(123L));
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,128,"assertEquals(123L, CalendarConverter.INSTANCE.getInstantMillis(cal));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,131,public void testGetInstantMillis_Object_Zone() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,132,GregorianCalendar cal = new GregorianCalendar();
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,133,cal.setTime(new Date(123L));
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,134,"assertEquals(123L, CalendarConverter.INSTANCE.getInstantMillis(cal, PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,135,"assertEquals(123L, cal.getTime().getTime());"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,136,"assertEquals(123L, CalendarConverter.INSTANCE.getInstantMillis(cal, (DateTimeZone) null));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,137,"assertEquals(123L, cal.getTime().getTime());"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,140,public void testGetInstantMillis_Object_Chronology() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,141,GregorianCalendar cal = new GregorianCalendar();
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,142,cal.setTime(new Date(123L));
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,143,"assertEquals(123L, CalendarConverter.INSTANCE.getInstantMillis(cal, JULIAN));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,144,"assertEquals(123L, cal.getTime().getTime());"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,145,"assertEquals(123L, CalendarConverter.INSTANCE.getInstantMillis(cal, (Chronology) null));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,146,"assertEquals(123L, cal.getTime().getTime());"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,150,public void testGetChronology_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,151,"GregorianCalendar cal = new GregorianCalendar(TimeZone.getTimeZone(""Europe/Paris""));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,152,"assertEquals(GJChronology.getInstance(PARIS), CalendarConverter.INSTANCE.getChronology(cal));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,154,"cal = new GregorianCalendar(TimeZone.getTimeZone(""Europe/Moscow""));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,155,cal.setGregorianChange(new Date(0L));
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,156,"assertEquals(GJChronology.getInstance(MOSCOW, 0L, 4), CalendarConverter.INSTANCE.getChronology(cal));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,158,"cal = new GregorianCalendar(TimeZone.getTimeZone(""Europe/Moscow""));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,159,cal.setGregorianChange(new Date(Long.MAX_VALUE));
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,160,"assertEquals(JulianChronology.getInstance(MOSCOW), CalendarConverter.INSTANCE.getChronology(cal));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,162,"cal = new GregorianCalendar(TimeZone.getTimeZone(""Europe/Moscow""));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,163,cal.setGregorianChange(new Date(Long.MIN_VALUE));
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,164,"assertEquals(GregorianChronology.getInstance(MOSCOW), CalendarConverter.INSTANCE.getChronology(cal));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,166,"Calendar uc = new MockUnknownCalendar(TimeZone.getTimeZone(""Europe/Moscow""));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,167,"assertEquals(ISOChronology.getInstance(MOSCOW), CalendarConverter.INSTANCE.getChronology(uc));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,169,try {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,170,"Calendar bc = (Calendar) Class.forName(""sun.util.BuddhistCalendar"").newInstance();"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,171,"bc.setTimeZone(TimeZone.getTimeZone(""Europe/Moscow""));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,172,"assertEquals(BuddhistChronology.getInstance(MOSCOW), CalendarConverter.INSTANCE.getChronology(bc));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,173,} catch (ClassNotFoundException ex) {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,174,// ignore
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,178,public void testGetChronology_Object_Zone() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,179,"GregorianCalendar cal = new GregorianCalendar(TimeZone.getTimeZone(""Europe/Paris""));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,180,"assertEquals(GJChronology.getInstance(MOSCOW), CalendarConverter.INSTANCE.getChronology(cal, MOSCOW));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,182,"cal = new GregorianCalendar(TimeZone.getTimeZone(""Europe/Moscow""));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,183,"assertEquals(GJChronology.getInstance(), CalendarConverter.INSTANCE.getChronology(cal, (DateTimeZone) null));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,185,"cal = new GregorianCalendar(TimeZone.getTimeZone(""Europe/Moscow""));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,186,cal.setGregorianChange(new Date(0L));
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,187,"assertEquals(GJChronology.getInstance(MOSCOW, 0L, 4), CalendarConverter.INSTANCE.getChronology(cal, MOSCOW));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,189,"cal = new GregorianCalendar(TimeZone.getTimeZone(""Europe/Moscow""));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,190,cal.setGregorianChange(new Date(Long.MAX_VALUE));
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,191,"assertEquals(JulianChronology.getInstance(PARIS), CalendarConverter.INSTANCE.getChronology(cal, PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,193,"cal = new GregorianCalendar(TimeZone.getTimeZone(""Europe/Moscow""));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,194,cal.setGregorianChange(new Date(Long.MIN_VALUE));
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,195,"assertEquals(GregorianChronology.getInstance(PARIS), CalendarConverter.INSTANCE.getChronology(cal, PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,197,"Calendar uc = new MockUnknownCalendar(TimeZone.getTimeZone(""Europe/Moscow""));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,198,"assertEquals(ISOChronology.getInstance(PARIS), CalendarConverter.INSTANCE.getChronology(uc, PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,200,try {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,201,"Calendar bc = (Calendar) Class.forName(""sun.util.BuddhistCalendar"").newInstance();"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,202,"bc.setTimeZone(TimeZone.getTimeZone(""Europe/Moscow""));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,203,"assertEquals(BuddhistChronology.getInstance(PARIS), CalendarConverter.INSTANCE.getChronology(bc, PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,204,} catch (ClassNotFoundException ex) {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,205,// ignore
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,209,public void testGetChronology_Object_Chronology() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,210,"GregorianCalendar cal = new GregorianCalendar(TimeZone.getTimeZone(""Europe/Paris""));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,211,"assertEquals(JULIAN, CalendarConverter.INSTANCE.getChronology(cal, JULIAN));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,212,"assertEquals(ISO, CalendarConverter.INSTANCE.getChronology(cal, (Chronology) null));"
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,216,public void testToString() {
True,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java,217,"assertEquals(""Converter[java.util.Calendar]"", CalendarConverter.INSTANCE.toString());"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,10,* are met:
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,54,package org.joda.time.convert;
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,56,import java.lang.reflect.Constructor;
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,57,import java.lang.reflect.Field;
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,58,import java.lang.reflect.Modifier;
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,59,import java.util.Date;
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,61,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,62,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,64,import org.joda.time.Chronology;
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,65,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,66,import org.joda.time.chrono.ISOChronology;
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,67,import org.joda.time.chrono.JulianChronology;
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,70,* This class is a Junit unit test for DateConverter.
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,72,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,74,public class TestDateConverter extends TestCase {
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,76,private static final DateTimeZone UTC = DateTimeZone.UTC;
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,77,"private static final DateTimeZone PARIS = DateTimeZone.getInstance(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,78,private static final Chronology ISO = ISOChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,79,private static final Chronology JULIAN = JulianChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,80,private static final Chronology ISO_PARIS = ISOChronology.getInstance(PARIS);
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,82,private DateTimeZone zone = null;
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,84,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,85,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,88,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,89,return new TestSuite(TestDateConverter.class);
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,92,public TestDateConverter(String name) {
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,93,super(name);
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,97,public void testSingleton() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,98,Class cls = DateConverter.class;
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,99,"assertEquals(false, Modifier.isPublic(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,100,"assertEquals(false, Modifier.isProtected(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,101,"assertEquals(false, Modifier.isPrivate(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,103,Constructor con = cls.getDeclaredConstructor(null);
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,104,"assertEquals(1, cls.getDeclaredConstructors().length);"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,105,"assertEquals(true, Modifier.isProtected(con.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,107,"Field fld = cls.getDeclaredField(""INSTANCE"");"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,108,"assertEquals(false, Modifier.isPublic(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,109,"assertEquals(false, Modifier.isProtected(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,110,"assertEquals(false, Modifier.isPrivate(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,114,public void testSupportedType() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,115,"assertEquals(Date.class, DateConverter.INSTANCE.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,119,public void testGetInstantMillis_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,120,"assertEquals(123L, DateConverter.INSTANCE.getInstantMillis(new Date(123L)));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,123,public void testGetInstantMillis_Object_Zone() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,124,"assertEquals(123L, DateConverter.INSTANCE.getInstantMillis(new Date(123L), PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,125,"assertEquals(123L, DateConverter.INSTANCE.getInstantMillis(new Date(123L), (DateTimeZone) null));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,128,public void testGetInstantMillis_Object_Chronology() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,129,"assertEquals(123L, DateConverter.INSTANCE.getInstantMillis(new Date(123L), JULIAN));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,130,"assertEquals(123L, DateConverter.INSTANCE.getInstantMillis(new Date(123L), (Chronology) null));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,134,public void testGetChronology_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,135,"assertEquals(ISO, DateConverter.INSTANCE.getChronology(new Date(123L)));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,138,public void testGetChronology_Object_Zone() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,139,"assertEquals(ISO_PARIS, DateConverter.INSTANCE.getChronology(new Date(123L), PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,140,"assertEquals(ISO, DateConverter.INSTANCE.getChronology(new Date(123L), (DateTimeZone) null));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,143,public void testGetChronology_Object_Chronology() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,144,"assertEquals(JULIAN, DateConverter.INSTANCE.getChronology(new Date(123L), JULIAN));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,145,"assertEquals(ISO, DateConverter.INSTANCE.getChronology(new Date(123L), (Chronology) null));"
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,149,public void testToString() {
True,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,JodaTime/src/test/org/joda/time/convert/TestDateConverter.java,150,"assertEquals(""Converter[java.util.Date]"", DateConverter.INSTANCE.toString());"
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,65,import org.joda.time.DurationType;
False,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,69, This class is a Junit unit test for TimeOfDay.
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,70,* This class is a Junit unit test for LongConverter.
False,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,148,/ TODO duration tests
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,149,public void testGetDurationMillis_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,150,"assertEquals(123L, LongConverter.INSTANCE.getDurationMillis(new Long(123L)));"
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,153,public void testGetDurationType_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,154,"assertEquals(DurationType.getMillisType(), LongConverter.INSTANCE.getDurationType(new Long(123L)));"
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,157,public void testIsPrecise_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,JodaTime/src/test/org/joda/time/convert/TestLongConverter.java,158,"assertEquals(true, LongConverter.INSTANCE.isPrecise(new Long(123L)));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,10,* are met:
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,54,package org.joda.time.convert;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,56,import java.lang.reflect.Constructor;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,57,import java.lang.reflect.Field;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,58,import java.lang.reflect.Modifier;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,60,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,61,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,63,import org.joda.time.Chronology;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,64,import org.joda.time.DateTimeConstants;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,65,import org.joda.time.DateTimeUtils;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,66,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,67,import org.joda.time.chrono.ISOChronology;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,68,import org.joda.time.chrono.JulianChronology;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,71,* This class is a Junit unit test for NullConverter.
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,73,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,75,public class TestNullConverter extends TestCase {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,77,private long TEST_TIME_NOW =
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,78,20 * DateTimeConstants.MILLIS_PER_DAY
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,79,+ 10L * DateTimeConstants.MILLIS_PER_HOUR
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,80,+ 20L * DateTimeConstants.MILLIS_PER_MINUTE
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,81,+ 30L * DateTimeConstants.MILLIS_PER_SECOND
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,82,+ 40L;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,84,private static final DateTimeZone UTC = DateTimeZone.UTC;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,85,"private static final DateTimeZone PARIS = DateTimeZone.getInstance(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,86,private static final Chronology ISO = ISOChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,87,private static final Chronology JULIAN = JulianChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,88,private static final Chronology ISO_PARIS = ISOChronology.getInstance(PARIS);
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,90,private DateTimeZone zone = null;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,92,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,93,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,96,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,97,return new TestSuite(TestNullConverter.class);
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,100,public TestNullConverter(String name) {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,101,super(name);
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,104,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,105,DateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW);
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,108,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,109,DateTimeUtils.setCurrentMillisSystem();
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,113,public void testSingleton() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,114,Class cls = NullConverter.class;
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,115,"assertEquals(false, Modifier.isPublic(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,116,"assertEquals(false, Modifier.isProtected(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,117,"assertEquals(false, Modifier.isPrivate(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,119,Constructor con = cls.getDeclaredConstructor(null);
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,120,"assertEquals(1, cls.getDeclaredConstructors().length);"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,121,"assertEquals(true, Modifier.isProtected(con.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,123,"Field fld = cls.getDeclaredField(""INSTANCE"");"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,124,"assertEquals(false, Modifier.isPublic(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,125,"assertEquals(false, Modifier.isProtected(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,126,"assertEquals(false, Modifier.isPrivate(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,130,public void testSupportedType() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,131,"assertEquals(null, NullConverter.INSTANCE.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,135,public void testGetInstantMillis_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,136,"assertEquals(TEST_TIME_NOW, NullConverter.INSTANCE.getInstantMillis(null));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,139,public void testGetInstantMillis_Object_Zone() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,140,"assertEquals(TEST_TIME_NOW, NullConverter.INSTANCE.getInstantMillis(null, PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,141,"assertEquals(TEST_TIME_NOW, NullConverter.INSTANCE.getInstantMillis(null, (DateTimeZone) null));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,144,public void testGetInstantMillis_Object_Chronology() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,145,"assertEquals(TEST_TIME_NOW, NullConverter.INSTANCE.getInstantMillis(null, JULIAN));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,146,"assertEquals(TEST_TIME_NOW, NullConverter.INSTANCE.getInstantMillis(null, (Chronology) null));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,150,public void testGetChronology_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,151,"assertEquals(ISO, NullConverter.INSTANCE.getChronology(null));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,154,public void testGetChronology_Object_Zone() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,155,"assertEquals(ISO_PARIS, NullConverter.INSTANCE.getChronology(null, PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,156,"assertEquals(ISO, NullConverter.INSTANCE.getChronology(null, (DateTimeZone) null));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,159,public void testGetChronology_Object_Chronology() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,160,"assertEquals(JULIAN, NullConverter.INSTANCE.getChronology(null, JULIAN));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,161,"assertEquals(ISO, NullConverter.INSTANCE.getChronology(null, (Chronology) null));"
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,165,public void testToString() {
True,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,JodaTime/src/test/org/joda/time/convert/TestNullConverter.java,166,"assertEquals(""Converter[null]"", NullConverter.INSTANCE.toString());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,10,* are met:
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,54,package org.joda.time.convert;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,56,import java.lang.reflect.Constructor;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,57,import java.lang.reflect.Field;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,58,import java.lang.reflect.Modifier;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,60,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,61,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,63,import org.joda.time.Chronology;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,64,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,65,import org.joda.time.Duration;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,66,import org.joda.time.DurationType;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,67,import org.joda.time.ReadableDuration;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,68,import org.joda.time.chrono.ISOChronology;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,69,import org.joda.time.chrono.JulianChronology;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,72,* This class is a Junit unit test for ReadableDurationConverter.
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,74,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,76,public class TestReadableDurationConverter extends TestCase {
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,78,private static final DateTimeZone UTC = DateTimeZone.UTC;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,79,"private static final DateTimeZone PARIS = DateTimeZone.getInstance(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,80,private static final Chronology ISO = ISOChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,81,private static final Chronology JULIAN = JulianChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,82,private static final Chronology ISO_PARIS = ISOChronology.getInstance(PARIS);
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,84,private DateTimeZone zone = null;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,86,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,87,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,90,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,91,return new TestSuite(TestReadableDurationConverter.class);
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,94,public TestReadableDurationConverter(String name) {
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,95,super(name);
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,99,public void testSingleton() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,100,Class cls = ReadableDurationConverter.class;
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,101,"assertEquals(false, Modifier.isPublic(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,102,"assertEquals(false, Modifier.isProtected(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,103,"assertEquals(false, Modifier.isPrivate(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,105,Constructor con = cls.getDeclaredConstructor(null);
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,106,"assertEquals(1, cls.getDeclaredConstructors().length);"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,107,"assertEquals(true, Modifier.isProtected(con.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,109,"Field fld = cls.getDeclaredField(""INSTANCE"");"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,110,"assertEquals(false, Modifier.isPublic(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,111,"assertEquals(false, Modifier.isProtected(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,112,"assertEquals(false, Modifier.isPrivate(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,116,public void testSupportedType() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,117,"assertEquals(ReadableDuration.class, ReadableDurationConverter.INSTANCE.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,121,public void testGetDurationMillis_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,122,"assertEquals(123L, ReadableDurationConverter.INSTANCE.getDurationMillis(new Duration(DurationType.getMillisType(), 123L)));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,123,try {
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,124,"ReadableDurationConverter.INSTANCE.getDurationMillis(new Duration(DurationType.getYearMonthType(), 1, 2, 0, 1, 0, 0, 0, 0));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,125,fail();
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,126,} catch (Exception ex) {}
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,129,public void testGetDurationType_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,130,"assertEquals(DurationType.getMillisType(), ReadableDurationConverter.INSTANCE.getDurationType(new Duration(DurationType.getMillisType(), 123L)));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,131,"assertEquals(DurationType.getYearMonthType(), ReadableDurationConverter.INSTANCE.getDurationType(new Duration(DurationType.getYearMonthType(), 1, 2, 0, 1, 0, 0, 0, 0)));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,134,public void testIsPrecise_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,135,"assertEquals(true, ReadableDurationConverter.INSTANCE.isPrecise(new Duration(DurationType.getMillisType(), 123L)));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,136,"assertEquals(false, ReadableDurationConverter.INSTANCE.isPrecise(new Duration(DurationType.getYearMonthType(), 1, 2, 0, 1, 0, 0, 0, 0)));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,140,public void testToString() {
True,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java,141,"assertEquals(""Converter[org.joda.time.ReadableDuration]"", ReadableDurationConverter.INSTANCE.toString());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,10,* are met:
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,54,package org.joda.time.convert;
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,56,import java.lang.reflect.Constructor;
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,57,import java.lang.reflect.Field;
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,58,import java.lang.reflect.Modifier;
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,60,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,61,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,63,import org.joda.time.Chronology;
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,64,import org.joda.time.DateTime;
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,65,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,66,import org.joda.time.Instant;
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,67,import org.joda.time.ReadableInstant;
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,68,import org.joda.time.chrono.ISOChronology;
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,69,import org.joda.time.chrono.JulianChronology;
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,72,* This class is a Junit unit test for ReadableInstantConverter.
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,74,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,76,public class TestReadableInstantConverter extends TestCase {
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,78,private static final DateTimeZone UTC = DateTimeZone.UTC;
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,79,"private static final DateTimeZone PARIS = DateTimeZone.getInstance(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,80,private static final Chronology ISO = ISOChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,81,private static final Chronology JULIAN = JulianChronology.getInstance();
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,82,private static final Chronology ISO_PARIS = ISOChronology.getInstance(PARIS);
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,84,private DateTimeZone zone = null;
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,86,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,87,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,90,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,91,return new TestSuite(TestReadableInstantConverter.class);
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,94,public TestReadableInstantConverter(String name) {
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,95,super(name);
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,99,public void testSingleton() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,100,Class cls = ReadableInstantConverter.class;
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,101,"assertEquals(false, Modifier.isPublic(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,102,"assertEquals(false, Modifier.isProtected(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,103,"assertEquals(false, Modifier.isPrivate(cls.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,105,Constructor con = cls.getDeclaredConstructor(null);
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,106,"assertEquals(1, cls.getDeclaredConstructors().length);"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,107,"assertEquals(true, Modifier.isProtected(con.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,109,"Field fld = cls.getDeclaredField(""INSTANCE"");"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,110,"assertEquals(false, Modifier.isPublic(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,111,"assertEquals(false, Modifier.isProtected(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,112,"assertEquals(false, Modifier.isPrivate(fld.getModifiers()));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,116,public void testSupportedType() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,117,"assertEquals(ReadableInstant.class, ReadableInstantConverter.INSTANCE.getSupportedType());"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,121,public void testGetInstantMillis_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,122,"assertEquals(123L, ReadableInstantConverter.INSTANCE.getInstantMillis(new Instant(123L)));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,123,"assertEquals(123L, ReadableInstantConverter.INSTANCE.getInstantMillis(new DateTime(123L)));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,126,public void testGetInstantMillis_Object_Zone() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,127,"assertEquals(123L, ReadableInstantConverter.INSTANCE.getInstantMillis(new Instant(123L), PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,128,"assertEquals(123L, ReadableInstantConverter.INSTANCE.getInstantMillis(new DateTime(123L), PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,129,"assertEquals(123L, ReadableInstantConverter.INSTANCE.getInstantMillis(new Instant(123L), (DateTimeZone) null));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,130,"assertEquals(123L, ReadableInstantConverter.INSTANCE.getInstantMillis(new DateTime(123L), (DateTimeZone) null));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,133,public void testGetInstantMillis_Object_Chronology() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,134,"assertEquals(123L, ReadableInstantConverter.INSTANCE.getInstantMillis(new Instant(123L), JULIAN));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,135,"assertEquals(123L, ReadableInstantConverter.INSTANCE.getInstantMillis(new DateTime(123L), JULIAN));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,136,"assertEquals(123L, ReadableInstantConverter.INSTANCE.getInstantMillis(new Instant(123L), (Chronology) null));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,137,"assertEquals(123L, ReadableInstantConverter.INSTANCE.getInstantMillis(new DateTime(123L), (Chronology) null));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,141,public void testGetChronology_Object() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,142,"assertEquals(ISO, ReadableInstantConverter.INSTANCE.getChronology(new Instant(123L)));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,143,"assertEquals(ISO, ReadableInstantConverter.INSTANCE.getChronology(new DateTime(123L)));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,146,public void testGetChronology_Object_Zone() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,147,"assertEquals(ISO_PARIS, ReadableInstantConverter.INSTANCE.getChronology(new Instant(123L), PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,148,"assertEquals(ISO_PARIS, ReadableInstantConverter.INSTANCE.getChronology(new DateTime(123L), PARIS));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,149,"assertEquals(ISO, ReadableInstantConverter.INSTANCE.getChronology(new Instant(123L), (DateTimeZone) null));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,150,"assertEquals(ISO, ReadableInstantConverter.INSTANCE.getChronology(new DateTime(123L), (DateTimeZone) null));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,153,public void testGetChronology_Object_Chronology() throws Exception {
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,154,"assertEquals(JULIAN, ReadableInstantConverter.INSTANCE.getChronology(new Instant(123L), JULIAN));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,155,"assertEquals(JULIAN, ReadableInstantConverter.INSTANCE.getChronology(new DateTime(123L), JULIAN));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,156,"assertEquals(ISO, ReadableInstantConverter.INSTANCE.getChronology(new Instant(123L), (Chronology) null));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,157,"assertEquals(ISO, ReadableInstantConverter.INSTANCE.getChronology(new DateTime(123L), (Chronology) null));"
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,161,public void testToString() {
True,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java,162,"assertEquals(""Converter[org.joda.time.ReadableInstant]"", ReadableInstantConverter.INSTANCE.toString());"
