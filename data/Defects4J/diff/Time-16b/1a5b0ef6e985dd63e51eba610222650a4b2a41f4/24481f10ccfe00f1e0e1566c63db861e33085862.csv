is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,521, Get the field from the type.
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,522, <p>
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,523, This method obtains the <code>DateTimeField</code> for the <code>DateTimeFieldType</code>.
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,524, It is essentially a generic way of calling one of the field methods.
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,526," @param type  a field type, usually obtained from DateTimeFieldType"
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,527, @return the chronology field
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,528, @throws IllegalArgumentException if the field is null
False,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,530,ublic abstract DateTimeField getField(DateTimeFieldType type);
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,221,hsMillis = lhsChrono.getField(iLowerLimit).roundFloor(lhsMillis);
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,222,hsMillis = rhsChrono.getField(iLowerLimit).roundFloor(rhsMillis);
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,221,lhsMillis = iLowerLimit.getField(lhsChrono).roundFloor(lhsMillis);
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,222,rhsMillis = iLowerLimit.getField(rhsChrono).roundFloor(rhsMillis);
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,226,hsMillis = lhsChrono.getField(iUpperLimit).remainder(lhsMillis);
False,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,227,hsMillis = rhsChrono.getField(iUpperLimit).remainder(rhsMillis);
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,226,lhsMillis = iUpperLimit.getField(lhsChrono).remainder(lhsMillis);
True,JodaTime/src/java/org/joda/time/DateTimeComparator.java,JodaTime/src/java/org/joda/time/DateTimeComparator.java,227,rhsMillis = iUpperLimit.getField(rhsChrono).remainder(rhsMillis);
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,57,mport java.util.HashMap;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,58,mport java.util.Map;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,62,* @author Brian S O'Neill
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,66,ublic class DateTimeFieldType implements Serializable {
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,65,public abstract class DateTimeFieldType implements Serializable {
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,71,** The cache of name to type used to ensure singletons. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,72,rivate static Map cCache = new HashMap();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,73,** The era field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,74,rivate static final DateTimeFieldType ERA = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,75,"era"", DurationFieldType.eras(), null);"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,76,** The yearOfEra field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,77,rivate static final DateTimeFieldType YEAR_OF_ERA = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,78,"yearOfEra"", DurationFieldType.years(), DurationFieldType.eras());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,79,** The centuryOfEra field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,80,rivate static final DateTimeFieldType CENTURY_OF_ERA = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,81,"centuryOfEra"", DurationFieldType.centuries(), DurationFieldType.eras());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,82,** The yearOfCentury field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,83,rivate static final DateTimeFieldType YEAR_OF_CENTURY = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,84,"yearOfCentury"", DurationFieldType.years(), DurationFieldType.centuries());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,85,** The year field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,86,rivate static final DateTimeFieldType YEAR = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,87,"year"", DurationFieldType.years(), null);"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,88,** The dayOfYear field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,89,rivate static final DateTimeFieldType DAY_OF_YEAR = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,90,"dayOfYear"", DurationFieldType.days(), DurationFieldType.years());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,91,** The monthOfYear field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,92,rivate static final DateTimeFieldType MONTH_OF_YEAR = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,93,"monthOfYear"", DurationFieldType.months(), DurationFieldType.years());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,94,** The dayOfMonth field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,95,rivate static final DateTimeFieldType DAY_OF_MONTH = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,96,"dayOfMonth"", DurationFieldType.days(), DurationFieldType.months());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,97,** The weekyearOfCentury field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,98,rivate static final DateTimeFieldType WEEKYEAR_OF_CENTURY = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,99,"weekyearOfCentury"", DurationFieldType.weekyears(), DurationFieldType.centuries());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,100,** The weekyear field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,101,rivate static final DateTimeFieldType WEEKYEAR = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,102,"weekyear"", DurationFieldType.weekyears(), null);"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,103,** The weekOfWeekyear field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,104,rivate static final DateTimeFieldType WEEK_OF_WEEKYEAR = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,105,"weekOfWeekyear"", DurationFieldType.weeks(), DurationFieldType.weekyears());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,106,** The dayOfWeek field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,107,rivate static final DateTimeFieldType DAY_OF_WEEK = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,108,"dayOfWeek"", DurationFieldType.days(), DurationFieldType.weeks());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,110,** The halfday field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,111,rivate static final DateTimeFieldType HALFDAY_OF_DAY = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,112,"halfdayOfDay"", DurationFieldType.halfdays(), DurationFieldType.days());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,113,** The hourOfHalfday field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,114,rivate static final DateTimeFieldType HOUR_OF_HALFDAY = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,115,"hourOfHalfday"", DurationFieldType.hours(), DurationFieldType.halfdays());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,116,** The clockhourOfHalfday field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,117,rivate static final DateTimeFieldType CLOCKHOUR_OF_HALFDAY = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,118,"clockhourOfHalfday"", DurationFieldType.hours(), DurationFieldType.halfdays());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,119,** The clockhourOfDay field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,120,rivate static final DateTimeFieldType CLOCKHOUR_OF_DAY = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,121,"clockhourOfDay"", DurationFieldType.hours(), DurationFieldType.days());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,122,** The hourOfDay field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,123,rivate static final DateTimeFieldType HOUR_OF_DAY = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,124,"hourOfDay"", DurationFieldType.hours(), DurationFieldType.days());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,125,** The minuteOfDay field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,126,rivate static final DateTimeFieldType MINUTE_OF_DAY = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,127,"minuteOfDay"", DurationFieldType.minutes(), DurationFieldType.days());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,128,** The minuteOfHour field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,129,rivate static final DateTimeFieldType MINUTE_OF_HOUR = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,130,"minuteOfHour"", DurationFieldType.minutes(), DurationFieldType.hours());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,131,** The secondOfDay field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,132,rivate static final DateTimeFieldType SECOND_OF_DAY = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,133,"secondOfDay"", DurationFieldType.seconds(), DurationFieldType.days());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,134,** The secondOfMinute field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,135,rivate static final DateTimeFieldType SECOND_OF_MINUTE = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,136,"secondOfMinute"", DurationFieldType.seconds(), DurationFieldType.minutes());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,137,** The millisOfDay field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,138,rivate static final DateTimeFieldType MILLIS_OF_DAY = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,139,"millisOfDay"", DurationFieldType.millis(), DurationFieldType.days());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,140,** The millisOfSecond field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,141,rivate static final DateTimeFieldType MILLIS_OF_SECOND = new DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,142,"millisOfSecond"", DurationFieldType.millis(), DurationFieldType.seconds());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,70,// Ordinals for standard field types.
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,71,static final byte
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,72,"ERA = 1,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,73,"YEAR_OF_ERA = 2,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,74,"CENTURY_OF_ERA = 3,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,75,"YEAR_OF_CENTURY = 4,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,76,"YEAR = 5,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,77,"DAY_OF_YEAR = 6,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,78,"MONTH_OF_YEAR = 7,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,79,"DAY_OF_MONTH = 8,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,80,"WEEKYEAR_OF_CENTURY = 9,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,81,"WEEKYEAR = 10,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,82,"WEEK_OF_WEEKYEAR = 11,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,83,"DAY_OF_WEEK = 12,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,84,"HALFDAY_OF_DAY = 13,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,85,"HOUR_OF_HALFDAY = 14,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,86,"CLOCKHOUR_OF_HALFDAY = 15,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,87,"CLOCKHOUR_OF_DAY = 16,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,88,"HOUR_OF_DAY = 17,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,89,"MINUTE_OF_DAY = 18,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,90,"MINUTE_OF_HOUR = 19,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,91,"SECOND_OF_DAY = 20,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,92,"SECOND_OF_MINUTE = 21,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,93,"MILLIS_OF_DAY = 22,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,94,MILLIS_OF_SECOND = 23;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,96,/** The era field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,97,private static final DateTimeFieldType ERA_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,98,"""era"", ERA, DurationFieldType.eras(), null);"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,99,/** The yearOfEra field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,100,private static final DateTimeFieldType YEAR_OF_ERA_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,101,"""yearOfEra"", YEAR_OF_ERA, DurationFieldType.years(), DurationFieldType.eras());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,102,/** The centuryOfEra field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,103,private static final DateTimeFieldType CENTURY_OF_ERA_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,104,"""centuryOfEra"", CENTURY_OF_ERA, DurationFieldType.centuries(), DurationFieldType.eras());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,105,/** The yearOfCentury field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,106,private static final DateTimeFieldType YEAR_OF_CENTURY_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,107,"""yearOfCentury"", YEAR_OF_CENTURY, DurationFieldType.years(), DurationFieldType.centuries());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,108,/** The year field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,109,private static final DateTimeFieldType YEAR_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,110,"""year"", YEAR, DurationFieldType.years(), null);"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,111,/** The dayOfYear field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,112,private static final DateTimeFieldType DAY_OF_YEAR_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,113,"""dayOfYear"", DAY_OF_YEAR, DurationFieldType.days(), DurationFieldType.years());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,114,/** The monthOfYear field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,115,private static final DateTimeFieldType MONTH_OF_YEAR_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,116,"""monthOfYear"", MONTH_OF_YEAR, DurationFieldType.months(), DurationFieldType.years());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,117,/** The dayOfMonth field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,118,private static final DateTimeFieldType DAY_OF_MONTH_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,119,"""dayOfMonth"", DAY_OF_MONTH, DurationFieldType.days(), DurationFieldType.months());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,120,/** The weekyearOfCentury field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,121,private static final DateTimeFieldType WEEKYEAR_OF_CENTURY_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,122,"""weekyearOfCentury"", WEEKYEAR_OF_CENTURY, DurationFieldType.weekyears(), DurationFieldType.centuries());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,123,/** The weekyear field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,124,private static final DateTimeFieldType WEEKYEAR_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,125,"""weekyear"", WEEKYEAR, DurationFieldType.weekyears(), null);"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,126,/** The weekOfWeekyear field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,127,private static final DateTimeFieldType WEEK_OF_WEEKYEAR_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,128,"""weekOfWeekyear"", WEEK_OF_WEEKYEAR, DurationFieldType.weeks(), DurationFieldType.weekyears());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,129,/** The dayOfWeek field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,130,private static final DateTimeFieldType DAY_OF_WEEK_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,131,"""dayOfWeek"", DAY_OF_WEEK, DurationFieldType.days(), DurationFieldType.weeks());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,133,/** The halfday field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,134,private static final DateTimeFieldType HALFDAY_OF_DAY_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,135,"""halfdayOfDay"", HALFDAY_OF_DAY, DurationFieldType.halfdays(), DurationFieldType.days());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,136,/** The hourOfHalfday field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,137,private static final DateTimeFieldType HOUR_OF_HALFDAY_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,138,"""hourOfHalfday"", HOUR_OF_HALFDAY, DurationFieldType.hours(), DurationFieldType.halfdays());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,139,/** The clockhourOfHalfday field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,140,private static final DateTimeFieldType CLOCKHOUR_OF_HALFDAY_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,141,"""clockhourOfHalfday"", CLOCKHOUR_OF_HALFDAY, DurationFieldType.hours(), DurationFieldType.halfdays());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,142,/** The clockhourOfDay field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,143,private static final DateTimeFieldType CLOCKHOUR_OF_DAY_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,144,"""clockhourOfDay"", CLOCKHOUR_OF_DAY, DurationFieldType.hours(), DurationFieldType.days());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,145,/** The hourOfDay field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,146,private static final DateTimeFieldType HOUR_OF_DAY_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,147,"""hourOfDay"", HOUR_OF_DAY, DurationFieldType.hours(), DurationFieldType.days());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,148,/** The minuteOfDay field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,149,private static final DateTimeFieldType MINUTE_OF_DAY_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,150,"""minuteOfDay"", MINUTE_OF_DAY, DurationFieldType.minutes(), DurationFieldType.days());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,151,/** The minuteOfHour field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,152,private static final DateTimeFieldType MINUTE_OF_HOUR_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,153,"""minuteOfHour"", MINUTE_OF_HOUR, DurationFieldType.minutes(), DurationFieldType.hours());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,154,/** The secondOfDay field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,155,private static final DateTimeFieldType SECOND_OF_DAY_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,156,"""secondOfDay"", SECOND_OF_DAY, DurationFieldType.seconds(), DurationFieldType.days());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,157,/** The secondOfMinute field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,158,private static final DateTimeFieldType SECOND_OF_MINUTE_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,159,"""secondOfMinute"", SECOND_OF_MINUTE, DurationFieldType.seconds(), DurationFieldType.minutes());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,160,/** The millisOfDay field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,161,private static final DateTimeFieldType MILLIS_OF_DAY_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,162,"""millisOfDay"", MILLIS_OF_DAY, DurationFieldType.millis(), DurationFieldType.days());"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,163,/** The millisOfSecond field type. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,164,private static final DateTimeFieldType MILLIS_OF_SECOND_TYPE = new StandardDateTimeFieldType(
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,165,"""millisOfSecond"", MILLIS_OF_SECOND, DurationFieldType.millis(), DurationFieldType.seconds());"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,146,** The name of the field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,147,rivate transient final DurationFieldType iUnitType;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,148,** The name of the field. */
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,149,rivate transient final DurationFieldType iRangeType;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,153, Factory method to obtain a DateTimeFieldType by name ensuring each
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,154, type is a singleton.
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,155, <p>
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,156," If the name is not found, an error is thrown."
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,158, @param name  the name to retrieve
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,159, @return the singleton type
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,161,ublic static synchronized DateTimeFieldType getInstance(String name) {
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,162,ateTimeFieldType type = (DateTimeFieldType) cCache.get(name);
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,163,f (type == null) {
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,164,"hrow new IllegalArgumentException(""The field '"" + name + ""' is unknown"");"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,166,eturn type;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,170, Factory method to define a DateTimeFieldType by name ensuring each
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,171, type is a singleton.
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,172, <p>
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,173," This method checks to see if the name is previously defined, in which"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,174, case it returns the previously defined type object.
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,175," If the name is not found, a new type is created."
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,176, <p>
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,177, It is intended that this method is called once in your program startup
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,178, and then you use the <code>getInstance</code> method. This could be
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,179, achieved by subclassing this class.
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,181," @param name  the name to define, such as 'hourOfMonth'"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,182," @param unitType  the unit type, such as 'hours'"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,183," @param rangeType  the range type, such as 'months'"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,184, @return the singleton type
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,186,ublic static synchronized DateTimeFieldType define(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,187,"tring name, DurationFieldType unitType, DurationFieldType rangeType) {"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,189,ateTimeFieldType type = (DateTimeFieldType) cCache.get(name);
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,190,f (type == null) {
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,191,"eturn new DateTimeFieldType(name, unitType, rangeType);"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,193,eturn type;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,201," @param unitType  the unit type, such as 'hours'"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,202," @param rangeType  the range type, such as 'months'"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,204,rivate DateTimeFieldType(
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,205,"tring name, DurationFieldType unitType, DurationFieldType rangeType) {"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,176,protected DateTimeFieldType(String name) {
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,209,UnitType = unitType;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,210,RangeType = rangeType;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,211,"Cache.put(name, this);"
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,215, Ensure a singleton is returned.
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,216, <p>
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,217, Note that types must be defined before deserialization.
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,219, @return the singleton type
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,221,rivate Object readResolve() {
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,222,eturn getInstance(iName);
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,232,eturn MILLIS_OF_SECOND;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,188,return MILLIS_OF_SECOND_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,241,eturn MILLIS_OF_DAY;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,197,return MILLIS_OF_DAY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,250,eturn SECOND_OF_MINUTE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,206,return SECOND_OF_MINUTE_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,259,eturn SECOND_OF_DAY;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,215,return SECOND_OF_DAY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,268,eturn MINUTE_OF_HOUR;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,224,return MINUTE_OF_HOUR_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,277,eturn MINUTE_OF_DAY;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,233,return MINUTE_OF_DAY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,286,eturn HOUR_OF_DAY;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,242,return HOUR_OF_DAY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,295,eturn CLOCKHOUR_OF_DAY;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,251,return CLOCKHOUR_OF_DAY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,304,eturn HOUR_OF_HALFDAY;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,260,return HOUR_OF_HALFDAY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,313,eturn CLOCKHOUR_OF_HALFDAY;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,269,return CLOCKHOUR_OF_HALFDAY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,322,eturn HALFDAY_OF_DAY;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,278,return HALFDAY_OF_DAY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,332,eturn DAY_OF_WEEK;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,288,return DAY_OF_WEEK_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,341,eturn DAY_OF_MONTH;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,297,return DAY_OF_MONTH_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,350,eturn DAY_OF_YEAR;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,306,return DAY_OF_YEAR_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,359,eturn WEEK_OF_WEEKYEAR;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,315,return WEEK_OF_WEEKYEAR_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,368,eturn WEEKYEAR;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,324,return WEEKYEAR_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,377,eturn WEEKYEAR_OF_CENTURY;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,333,return WEEKYEAR_OF_CENTURY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,386,eturn MONTH_OF_YEAR;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,342,return MONTH_OF_YEAR_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,395,eturn YEAR;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,351,return YEAR_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,404,eturn YEAR_OF_ERA;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,360,return YEAR_OF_ERA_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,413,eturn YEAR_OF_CENTURY;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,369,return YEAR_OF_CENTURY_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,422,eturn CENTURY_OF_ERA;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,378,return CENTURY_OF_ERA_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,431,eturn ERA;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,387,return ERA_TYPE;
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,454,ublic DurationFieldType getDurationType() {
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,455,eturn iUnitType;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,410,public abstract DurationFieldType getDurationType();
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,463,ublic DurationFieldType getRangeDurationType() {
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,464,eturn iRangeType;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,417,public abstract DurationFieldType getRangeDurationType();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,420,* Select a suitable field for this type from the given Chronology.
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,422,"* @param chronology Chronology to select a field from, null means"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,423,* ISOChronology in default zone
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,424,* @return a suitable field
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,426,public abstract DateTimeField getField(Chronology chronology);
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,437,private static class StandardDateTimeFieldType extends DateTimeFieldType {
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,438,/** Serialization version */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,439,private static final long serialVersionUID = -9937958251642L;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,441,"/** The ordinal of the standard field type, for switch statements */"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,442,private final byte iOrdinal;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,444,/** The unit duration of the field. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,445,private transient final DurationFieldType iUnitType;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,446,/** The range duration of the field. */
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,447,private transient final DurationFieldType iRangeType;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,450,* Constructor.
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,452,* @param name  the name to use
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,454,"StandardDateTimeFieldType(String name, byte ordinal,"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,455,"DurationFieldType unitType, DurationFieldType rangeType) {"
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,456,super(name);
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,457,iOrdinal = ordinal;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,458,iUnitType = unitType;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,459,iRangeType = rangeType;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,462,public DurationFieldType getDurationType() {
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,463,return iUnitType;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,466,public DurationFieldType getRangeDurationType() {
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,467,return iRangeType;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,470,public DateTimeField getField(Chronology chronology) {
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,471,chronology = DateTimeUtils.getChronology(chronology);
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,473,switch (iOrdinal) {
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,474,case ERA:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,475,return chronology.era();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,476,case YEAR_OF_ERA:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,477,return chronology.yearOfEra();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,478,case CENTURY_OF_ERA:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,479,return chronology.centuryOfEra();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,480,case YEAR_OF_CENTURY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,481,return chronology.yearOfCentury();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,482,case YEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,483,return chronology.year();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,484,case DAY_OF_YEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,485,return chronology.dayOfYear();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,486,case MONTH_OF_YEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,487,return chronology.monthOfYear();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,488,case DAY_OF_MONTH:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,489,return chronology.dayOfMonth();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,490,// TODO: Add to Chronology
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,491,//case WEEKYEAR_OF_CENTURY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,492,//return chronology.weekyearOfCentury();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,493,case WEEKYEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,494,return chronology.weekyear();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,495,case WEEK_OF_WEEKYEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,496,return chronology.weekOfWeekyear();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,497,case DAY_OF_WEEK:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,498,return chronology.dayOfWeek();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,499,case HALFDAY_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,500,return chronology.halfdayOfDay();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,501,case HOUR_OF_HALFDAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,502,return chronology.hourOfHalfday();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,503,case CLOCKHOUR_OF_HALFDAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,504,return chronology.clockhourOfHalfday();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,505,case CLOCKHOUR_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,506,return chronology.clockhourOfDay();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,507,case HOUR_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,508,return chronology.hourOfDay();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,509,case MINUTE_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,510,return chronology.minuteOfDay();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,511,case MINUTE_OF_HOUR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,512,return chronology.minuteOfHour();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,513,case SECOND_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,514,return chronology.secondOfDay();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,515,case SECOND_OF_MINUTE:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,516,return chronology.secondOfMinute();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,517,case MILLIS_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,518,return chronology.millisOfDay();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,519,case MILLIS_OF_SECOND:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,520,return chronology.millisOfSecond();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,521,default:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,522,// Shouldn't happen.
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,523,throw new IllegalStateException();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,528,* Ensure a singleton is returned.
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,530,* @return the singleton type
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,532,private Object readResolve() {
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,533,switch (iOrdinal) {
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,534,case ERA:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,535,return ERA_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,536,case YEAR_OF_ERA:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,537,return YEAR_OF_ERA_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,538,case CENTURY_OF_ERA:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,539,return CENTURY_OF_ERA_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,540,case YEAR_OF_CENTURY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,541,return YEAR_OF_CENTURY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,542,case YEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,543,return YEAR_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,544,case DAY_OF_YEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,545,return DAY_OF_YEAR_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,546,case MONTH_OF_YEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,547,return MONTH_OF_YEAR_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,548,case DAY_OF_MONTH:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,549,return DAY_OF_MONTH_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,550,case WEEKYEAR_OF_CENTURY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,551,return WEEKYEAR_OF_CENTURY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,552,case WEEKYEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,553,return WEEKYEAR_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,554,case WEEK_OF_WEEKYEAR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,555,return WEEK_OF_WEEKYEAR_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,556,case DAY_OF_WEEK:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,557,return DAY_OF_WEEK_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,558,case HALFDAY_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,559,return HALFDAY_OF_DAY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,560,case HOUR_OF_HALFDAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,561,return HOUR_OF_HALFDAY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,562,case CLOCKHOUR_OF_HALFDAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,563,return CLOCKHOUR_OF_HALFDAY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,564,case CLOCKHOUR_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,565,return CLOCKHOUR_OF_DAY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,566,case HOUR_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,567,return HOUR_OF_DAY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,568,case MINUTE_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,569,return MINUTE_OF_DAY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,570,case MINUTE_OF_HOUR:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,571,return MINUTE_OF_HOUR_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,572,case SECOND_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,573,return SECOND_OF_DAY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,574,case SECOND_OF_MINUTE:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,575,return SECOND_OF_MINUTE_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,576,case MILLIS_OF_DAY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,577,return MILLIS_OF_DAY_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,578,case MILLIS_OF_SECOND:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,579,return MILLIS_OF_SECOND_TYPE;
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,580,default:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,581,// Shouldn't happen.
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,582,return this;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,57,mport java.util.HashMap;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,58,mport java.util.Map;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,62,* @author Brian S O'Neill
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,66,ublic class DurationFieldType implements Serializable {
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,65,public abstract class DurationFieldType implements Serializable {
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,71,** The cache of name to type used to ensure singletons. */
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,72,rivate static Map cCache = new HashMap();
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,73,** The eras field. */
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,74,"rivate static final DurationFieldType ERAS = new DurationFieldType(""eras"");"
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,75,** The centuries field. */
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,76,"rivate static final DurationFieldType CENTURIES = new DurationFieldType(""centuries"");"
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,77,** The weekyears field. */
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,78,"rivate static final DurationFieldType WEEKYEARS = new DurationFieldType(""weekyears"");"
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,79,** The years field. */
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,80,"rivate static final DurationFieldType YEARS = new DurationFieldType(""years"");"
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,81,** The months field. */
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,82,"rivate static final DurationFieldType MONTHS = new DurationFieldType(""months"");"
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,83,** The weeks field. */
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,84,"rivate static final DurationFieldType WEEKS = new DurationFieldType(""weeks"");"
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,85,** The days field. */
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,86,"rivate static final DurationFieldType DAYS = new DurationFieldType(""days"");"
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,87,** The halfdays field. */
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,88,"rivate static final DurationFieldType HALFDAYS = new DurationFieldType(""halfdays"");"
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,89,** The hours field. */
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,90,"rivate static final DurationFieldType HOURS = new DurationFieldType(""hours"");"
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,91,** The minutes field. */
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,92,"rivate static final DurationFieldType MINUTES = new DurationFieldType(""minutes"");"
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,93,** The seconds field. */
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,94,"rivate static final DurationFieldType SECONDS = new DurationFieldType(""seconds"");"
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,95,** The millis field. */
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,96,"rivate static final DurationFieldType MILLIS = new DurationFieldType(""millis"");"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,70,// Ordinals for standard field types.
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,71,static final byte
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,72,"ERAS = 1,"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,73,"CENTURIES = 2,"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,74,"WEEKYEARS = 3,"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,75,"YEARS = 4,"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,76,"MONTHS = 5,"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,77,"WEEKS = 6,"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,78,"DAYS = 7,"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,79,"HALFDAYS = 8,"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,80,"HOURS = 9,"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,81,"MINUTES = 10,"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,82,"SECONDS = 11,"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,83,MILLIS = 12;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,98,** The name of the field. */
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,99,rivate final String iName;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,103, Factory method to obtain a DurationFieldType by name ensuring each
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,104, type is a singleton.
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,105, <p>
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,106," If the name is not found, an error is thrown."
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,108, @param name  the name to retrieve
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,109, @return the singleton type
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,111,ublic static synchronized DurationFieldType getInstance(String name) {
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,112,urationFieldType type = (DurationFieldType) cCache.get(name);
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,113,f (type == null) {
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,114,"hrow new IllegalArgumentException(""The field '"" + name + ""' is unknown"");"
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,116,eturn type;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,85,/** The eras field type. */
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,86,"static final DurationFieldType ERAS_TYPE = new StandardDurationFieldType(""eras"", ERAS);"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,87,/** The centuries field type. */
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,88,"static final DurationFieldType CENTURIES_TYPE = new StandardDurationFieldType(""centuries"", CENTURIES);"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,89,/** The weekyears field type. */
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,90,"static final DurationFieldType WEEKYEARS_TYPE = new StandardDurationFieldType(""weekyears"", WEEKYEARS);"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,91,/** The years field type. */
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,92,"static final DurationFieldType YEARS_TYPE = new StandardDurationFieldType(""years"", YEARS);"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,93,/** The months field type. */
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,94,"static final DurationFieldType MONTHS_TYPE = new StandardDurationFieldType(""months"", MONTHS);"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,95,/** The weeks field type. */
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,96,"static final DurationFieldType WEEKS_TYPE = new StandardDurationFieldType(""weeks"", WEEKS);"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,97,/** The days field type. */
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,98,"static final DurationFieldType DAYS_TYPE = new StandardDurationFieldType(""days"", DAYS);"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,99,/** The halfdays field type. */
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,100,"static final DurationFieldType HALFDAYS_TYPE = new StandardDurationFieldType(""halfdays"", HALFDAYS);"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,101,/** The hours field type. */
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,102,"static final DurationFieldType HOURS_TYPE = new StandardDurationFieldType(""hours"", HOURS);"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,103,/** The minutes field type. */
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,104,"static final DurationFieldType MINUTES_TYPE = new StandardDurationFieldType(""minutes"", MINUTES);"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,105,/** The seconds field type. */
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,106,"static final DurationFieldType SECONDS_TYPE = new StandardDurationFieldType(""seconds"", SECONDS);"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,107,/** The millis field type. */
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,108,"static final DurationFieldType MILLIS_TYPE = new StandardDurationFieldType(""millis"", MILLIS);"
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,120, Factory method to define a DurationFieldType by name ensuring each
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,121, type is a singleton.
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,122, <p>
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,123," This method checks to see if the name is previously defined, in which"
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,124, case it returns the previously defined type object.
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,125," If the name is not found, a new type is created."
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,126, <p>
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,127, It is intended that this method is called once in your program startup
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,128, and then you use the <code>getInstance</code> method. This could be
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,129, achieved by subclassing this class.
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,131, @param name  the name to retrieve
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,132, @return the singleton type
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,134,ublic static synchronized DurationFieldType define(String name) {
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,135,urationFieldType type = (DurationFieldType) cCache.get(name);
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,136,f (type == null) {
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,137,eturn new DurationFieldType(name);
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,139,eturn type;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,110,/** The name of the field type. */
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,111,private final String iName;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,146, @param name  the name to use
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,117,"* @param name  the name to use, which by convention, are plural."
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,148,rivate DurationFieldType(String name) {
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,119,protected DurationFieldType(String name) {
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,151,"Cache.put(name, this);"
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,155, Ensure a singleton is returned.
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,157, @return the singleton type
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,159,rivate Object readResolve() {
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,160,eturn getInstance(iName);
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,170,eturn MILLIS;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,131,return MILLIS_TYPE;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,179,eturn SECONDS;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,140,return SECONDS_TYPE;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,188,eturn MINUTES;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,149,return MINUTES_TYPE;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,197,eturn HOURS;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,158,return HOURS_TYPE;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,206,eturn HALFDAYS;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,167,return HALFDAYS_TYPE;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,216,eturn DAYS;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,177,return DAYS_TYPE;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,225,eturn WEEKS;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,186,return WEEKS_TYPE;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,234,eturn WEEKYEARS;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,195,return WEEKYEARS_TYPE;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,243,eturn MONTHS;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,204,return MONTHS_TYPE;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,252,eturn YEARS;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,213,return YEARS_TYPE;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,261,eturn CENTURIES;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,222,return CENTURIES_TYPE;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,270,eturn ERAS;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,231,return ERAS_TYPE;
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,276," By convention, names have a plural name."
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,237,"* By convention, names are plural."
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,246,* Select a suitable field for this type from the given Chronology.
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,248,"* @param chronology Chronology to select a field from, null means"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,249,* ISOChronology in default zone
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,250,* @return a suitable field
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,252,public abstract DurationField getField(Chronology chronology);
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,263,private static class StandardDurationFieldType extends DurationFieldType {
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,264,/** Serialization version */
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,265,private static final long serialVersionUID = 31156755687123L;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,267,"/** The ordinal of the standard field type, for switch statements */"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,268,private final byte iOrdinal;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,271,* Constructor.
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,273,* @param name  the name to use
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,275,"StandardDurationFieldType(String name, byte ordinal) {"
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,276,super(name);
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,277,iOrdinal = ordinal;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,280,public DurationField getField(Chronology chronology) {
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,281,chronology = DateTimeUtils.getChronology(chronology);
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,283,switch (iOrdinal) {
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,284,case ERAS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,285,return chronology.eras();
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,286,case CENTURIES:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,287,return chronology.centuries();
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,288,case WEEKYEARS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,289,return chronology.weekyears();
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,290,case YEARS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,291,return chronology.years();
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,292,case MONTHS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,293,return chronology.months();
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,294,case WEEKS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,295,return chronology.weeks();
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,296,case DAYS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,297,return chronology.days();
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,298,// TODO: Add to Chronology
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,299,//case HALFDAYS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,300,//return chronology.halfdays();
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,301,case HOURS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,302,return chronology.hours();
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,303,case MINUTES:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,304,return chronology.minutes();
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,305,case SECONDS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,306,return chronology.seconds();
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,307,case MILLIS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,308,return chronology.millis();
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,309,default:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,310,// Shouldn't happen.
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,311,throw new IllegalStateException();
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,316,* Ensure a singleton is returned.
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,318,* @return the singleton type
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,320,private Object readResolve() {
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,321,switch (iOrdinal) {
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,322,case ERAS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,323,return ERAS_TYPE;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,324,case CENTURIES:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,325,return CENTURIES_TYPE;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,326,case WEEKYEARS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,327,return WEEKYEARS_TYPE;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,328,case YEARS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,329,return YEARS_TYPE;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,330,case MONTHS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,331,return MONTHS_TYPE;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,332,case WEEKS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,333,return WEEKS_TYPE;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,334,case DAYS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,335,return DAYS_TYPE;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,336,case HALFDAYS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,337,return HALFDAYS_TYPE;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,338,case HOURS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,339,return HOURS_TYPE;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,340,case MINUTES:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,341,return MINUTES_TYPE;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,342,case SECONDS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,343,return SECONDS_TYPE;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,344,case MILLIS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,345,return MILLIS_TYPE;
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,346,default:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,347,// Shouldn't happen.
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,348,return this;
False,JodaTime/src/java/org/joda/time/base/AbstractDateTime.java,JodaTime/src/java/org/joda/time/base/AbstractDateTime.java,99, @throws IllegalArgumentException if the field is null
True,JodaTime/src/java/org/joda/time/base/AbstractDateTime.java,JodaTime/src/java/org/joda/time/base/AbstractDateTime.java,99,* @throws IllegalArgumentException if the field type is null
False,JodaTime/src/java/org/joda/time/base/AbstractDateTime.java,JodaTime/src/java/org/joda/time/base/AbstractDateTime.java,102,eturn getChronology().getField(type).get(getMillis());
True,JodaTime/src/java/org/joda/time/base/AbstractDateTime.java,JodaTime/src/java/org/joda/time/base/AbstractDateTime.java,102,if (type == null) {
True,JodaTime/src/java/org/joda/time/base/AbstractDateTime.java,JodaTime/src/java/org/joda/time/base/AbstractDateTime.java,103,"throw new IllegalArgumentException(""The DateTimeFieldType must not be null"");"
True,JodaTime/src/java/org/joda/time/base/AbstractDateTime.java,JodaTime/src/java/org/joda/time/base/AbstractDateTime.java,105,return type.getField(getChronology()).get(getMillis());
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,247, Get the field from the type.
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,248, <p>
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,249, This method obtains the <code>DateTimeField</code> for the <code>DateTimeFieldType</code>.
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,250, It is essentially a generic way of calling one of the field methods.
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,252," @param type  a field type, usually obtained from DateTimeFieldType"
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,253, @return the chronology field
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,254, @throws IllegalArgumentException if the field is null
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,256,ublic DateTimeField getField(DateTimeFieldType type) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,257,f (type == DateTimeFieldType.millisOfSecond()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,258,eturn millisOfSecond();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,259, else if (type == DateTimeFieldType.millisOfDay()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,260,eturn millisOfDay();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,261, else if (type == DateTimeFieldType.secondOfMinute()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,262,eturn secondOfMinute();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,263, else if (type == DateTimeFieldType.secondOfDay()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,264,eturn secondOfDay();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,265, else if (type == DateTimeFieldType.minuteOfHour()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,266,eturn minuteOfHour();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,267, else if (type == DateTimeFieldType.minuteOfDay()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,268,eturn minuteOfDay();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,269, else if (type == DateTimeFieldType.hourOfDay()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,270,eturn hourOfDay();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,271, else if (type == DateTimeFieldType.hourOfHalfday()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,272,eturn hourOfHalfday();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,273, else if (type == DateTimeFieldType.clockhourOfDay()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,274,eturn clockhourOfDay();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,275, else if (type == DateTimeFieldType.halfdayOfDay()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,276,eturn halfdayOfDay();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,277, else if (type == DateTimeFieldType.clockhourOfHalfday()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,278,eturn clockhourOfHalfday();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,279, else if (type == DateTimeFieldType.dayOfWeek()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,280,eturn dayOfWeek();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,281, else if (type == DateTimeFieldType.dayOfMonth()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,282,eturn dayOfMonth();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,283, else if (type == DateTimeFieldType.dayOfYear()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,284,eturn dayOfYear();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,285, else if (type == DateTimeFieldType.weekOfWeekyear()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,286,eturn weekOfWeekyear();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,287, else if (type == DateTimeFieldType.weekyear()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,288,eturn weekyear();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,289, else if (type == DateTimeFieldType.monthOfYear()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,290,eturn monthOfYear();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,291, else if (type == DateTimeFieldType.year()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,292,eturn year();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,293, else if (type == DateTimeFieldType.yearOfEra()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,294,eturn yearOfEra();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,295, else if (type == DateTimeFieldType.yearOfCentury()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,296,eturn yearOfCentury();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,297, else if (type == DateTimeFieldType.centuryOfEra()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,298,eturn centuryOfEra();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,299, else if (type == DateTimeFieldType.era()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,300,eturn era();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,301, else {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,302,"hrow new IllegalArgumentException(""Unrecognised field: "" + type);"
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,308, Get the field from the type.
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,309, <p>
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,310, This method obtains the <code>DurationField</code> for the <code>DurationFieldType</code>.
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,311, It is essentially a generic way of calling one of the field methods.
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,313," @param type  a field type, usually obtained from DurationFieldType"
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,314, @return the chronology field
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,315, @throws IllegalArgumentException if the field is null
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,317,ublic DurationField getField(DurationFieldType type) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,318,f (type == DurationFieldType.millis()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,319,eturn millis();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,320, else if (type == DurationFieldType.seconds()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,321,eturn seconds();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,322, else if (type == DurationFieldType.minutes()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,323,eturn minutes();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,324, else if (type == DurationFieldType.hours()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,325,eturn hours();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,326, else if (type == DurationFieldType.halfdays()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,327,eturn halfdays();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,328, else if (type == DurationFieldType.days()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,329,eturn days();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,330, else if (type == DurationFieldType.weeks()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,331,eturn weeks();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,332, else if (type == DurationFieldType.weekyears()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,333,eturn weekyears();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,334, else if (type == DurationFieldType.months()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,335,eturn months();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,336, else if (type == DurationFieldType.years()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,337,eturn years();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,338, else if (type == DurationFieldType.centuries()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,339,eturn centuries();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,340, else if (type == DurationFieldType.eras()) {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,341,eturn eras();
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,342, else {
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,343,"hrow new IllegalArgumentException(""Unrecognised field: "" + type);"
False,JodaTime/src/java/org/joda/time/field/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractPartialFieldProperty.java,274,nt otherValue = chrono.getField(getFieldType()).get(instant.getMillis());
True,JodaTime/src/java/org/joda/time/field/AbstractPartialFieldProperty.java,JodaTime/src/java/org/joda/time/field/AbstractPartialFieldProperty.java,274,int otherValue = getFieldType().getField(chrono).get(instant.getMillis());
