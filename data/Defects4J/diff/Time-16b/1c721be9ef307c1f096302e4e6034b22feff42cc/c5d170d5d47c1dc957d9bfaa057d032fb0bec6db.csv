is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,40,import org.joda.time.LocalDate;
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,489,rivate static class DateTimeOfYear {
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,490,static class DateTimeOfYear {
False,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,550,illis = parseTime(str);
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,551,"if (str.equals(""24:00"")) {"
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,552,LocalDate date = (day == -1 ?
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,553,"new LocalDate(2001, month, 1).plusMonths(1) :"
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,554,"new LocalDate(2001, month, day).plusDays(1));"
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,555,advance = (day != -1);
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,556,month = date.getMonthOfYear();
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,557,day = date.getDayOfMonth();
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,558,dayOfWeek = ((dayOfWeek - 1 + 1) % 7) + 1;
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,559,} else {
True,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java,560,millis = parseTime(str);
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,23,import java.util.StringTokenizer;
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,28,import org.joda.time.DateTime;
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,30,import org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear;
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,152,public void test_2400_fromDay() {
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,153,"StringTokenizer st = new StringTokenizer(""Apr Sun>=1  24:00"");"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,154,DateTimeOfYear test = new DateTimeOfYear(st);
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,155,"assertEquals(4, test.iMonthOfYear);  // Apr"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,156,"assertEquals(2, test.iDayOfMonth);   // 2nd"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,157,"assertEquals(1, test.iDayOfWeek);    // Mon"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,158,"assertEquals(0, test.iMillisOfDay);  // 00:00"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,159,"assertEquals(true, test.iAdvanceDayOfWeek);"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,162,public void test_2400_last() {
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,163,"StringTokenizer st = new StringTokenizer(""Mar lastSun 24:00"");"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,164,DateTimeOfYear test = new DateTimeOfYear(st);
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,165,"assertEquals(4, test.iMonthOfYear);  // Apr"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,166,"assertEquals(1, test.iDayOfMonth);   // 1st"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,167,"assertEquals(1, test.iDayOfWeek);    // Mon"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,168,"assertEquals(0, test.iMillisOfDay);  // 00:00"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,169,"assertEquals(false, test.iAdvanceDayOfWeek);"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,172,public void test_Amman_2003() {
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,173,"DateTimeZone zone = DateTimeZone.forID(""Asia/Amman"");"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,174,"DateTime dt = new DateTime(2003, 3, 1, 0, 0, zone);"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,175,long next = zone.nextTransition(dt.getMillis());
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,176,"assertEquals(next, new DateTime(2003, 3, 28, 0, 0, DateTimeZone.forOffsetHours(2)).getMillis());"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,179,public void test_Amman_2004() {
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,180,"DateTimeZone zone = DateTimeZone.forID(""Asia/Amman"");"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,181,"DateTime dt = new DateTime(2004, 3, 1, 0, 0, zone);"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,182,long next = zone.nextTransition(dt.getMillis());
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,183,"assertEquals(next, new DateTime(2004, 3, 26, 0, 0, DateTimeZone.forOffsetHours(2)).getMillis());"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,186,public void test_Amman_2005() {
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,187,"DateTimeZone zone = DateTimeZone.forID(""Asia/Amman"");"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,188,"DateTime dt = new DateTime(2005, 3, 1, 0, 0, zone);"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,189,long next = zone.nextTransition(dt.getMillis());
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,190,"assertEquals(next, new DateTime(2005, 4, 1, 0, 0, DateTimeZone.forOffsetHours(2)).getMillis());"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,193,public void test_Amman_2006() {
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,194,"DateTimeZone zone = DateTimeZone.forID(""Asia/Amman"");"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,195,"DateTime dt = new DateTime(2006, 3, 1, 0, 0, zone);"
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,196,long next = zone.nextTransition(dt.getMillis());
True,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,JodaTime/src/test/org/joda/time/tz/TestCompiler.java,197,"assertEquals(next, new DateTime(2006, 3, 31, 0, 0, DateTimeZone.forOffsetHours(2)).getMillis());"
