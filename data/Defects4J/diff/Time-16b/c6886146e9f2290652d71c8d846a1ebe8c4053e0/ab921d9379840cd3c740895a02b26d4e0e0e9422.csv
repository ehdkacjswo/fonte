is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,118,public void testPropertyGetEra() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,119,"DateTime test = new DateTime(1972, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,120,"assertSame(test.getChronology().era(), test.era().getField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,121,"assertEquals(""era"", test.era().getName());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,122,"assertEquals(""Property[era]"", test.era().toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,123,"assertSame(test, test.era().getInstant());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,124,"assertSame(test, test.era().getDateTime());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,125,"assertEquals(1, test.era().get());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,126,"assertEquals(""AD"", test.era().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,127,"assertEquals(""ap. J.-C."", test.era().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,128,"assertEquals(""AD"", test.era().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,129,"assertEquals(""ap. J.-C."", test.era().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,130,"assertEquals(test.getChronology().eras(), test.era().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,131,"assertEquals(null, test.era().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,132,"assertEquals(2, test.era().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,133,"assertEquals(9, test.era().getMaximumTextLength(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,134,"assertEquals(2, test.era().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,135,"assertEquals(9, test.era().getMaximumShortTextLength(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,139,public void testPropertyGetYearOfEra() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,140,"DateTime test = new DateTime(1972, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,141,"assertSame(test.getChronology().yearOfEra(), test.yearOfEra().getField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,142,"assertEquals(""yearOfEra"", test.yearOfEra().getName());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,143,"assertEquals(""Property[yearOfEra]"", test.yearOfEra().toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,144,"assertSame(test, test.yearOfEra().getInstant());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,145,"assertSame(test, test.yearOfEra().getDateTime());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,146,"assertEquals(1972, test.yearOfEra().get());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,147,"assertEquals(""1972"", test.yearOfEra().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,148,"assertEquals(""1972"", test.yearOfEra().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,149,"assertEquals(""1972"", test.yearOfEra().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,150,"assertEquals(""1972"", test.yearOfEra().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,151,"assertEquals(test.getChronology().years(), test.yearOfEra().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,152,"assertEquals(null, test.yearOfEra().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,153,"assertEquals(9, test.yearOfEra().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,154,"assertEquals(9, test.yearOfEra().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,158,public void testPropertyGetCenturyOfEra() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,159,"DateTime test = new DateTime(1972, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,160,"assertSame(test.getChronology().centuryOfEra(), test.centuryOfEra().getField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,161,"assertEquals(""centuryOfEra"", test.centuryOfEra().getName());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,162,"assertEquals(""Property[centuryOfEra]"", test.centuryOfEra().toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,163,"assertSame(test, test.centuryOfEra().getInstant());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,164,"assertSame(test, test.centuryOfEra().getDateTime());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,165,"assertEquals(19, test.centuryOfEra().get());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,166,"assertEquals(""19"", test.centuryOfEra().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,167,"assertEquals(""19"", test.centuryOfEra().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,168,"assertEquals(""19"", test.centuryOfEra().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,169,"assertEquals(""19"", test.centuryOfEra().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,170,"assertEquals(test.getChronology().centuries(), test.centuryOfEra().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,171,"assertEquals(null, test.centuryOfEra().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,172,"assertEquals(7, test.centuryOfEra().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,173,"assertEquals(7, test.centuryOfEra().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,177,public void testPropertyGetYearOfCentury() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,178,"DateTime test = new DateTime(1972, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,179,"assertSame(test.getChronology().yearOfCentury(), test.yearOfCentury().getField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,180,"assertEquals(""yearOfCentury"", test.yearOfCentury().getName());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,181,"assertEquals(""Property[yearOfCentury]"", test.yearOfCentury().toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,182,"assertSame(test, test.yearOfCentury().getInstant());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,183,"assertSame(test, test.yearOfCentury().getDateTime());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,184,"assertEquals(72, test.yearOfCentury().get());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,185,"assertEquals(""72"", test.yearOfCentury().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,186,"assertEquals(""72"", test.yearOfCentury().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,187,"assertEquals(""72"", test.yearOfCentury().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,188,"assertEquals(""72"", test.yearOfCentury().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,189,"assertEquals(test.getChronology().years(), test.yearOfCentury().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,190,"assertEquals(test.getChronology().centuries(), test.yearOfCentury().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,191,"assertEquals(2, test.yearOfCentury().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,192,"assertEquals(2, test.yearOfCentury().getMaximumShortTextLength(null));"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,216,/    public void testPropertyGetMonth() {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,217,"/        DateTime test = new DateTime(1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,218,"/        assertSame(test.getChronology().monthOfYear(), test.monthOfYear().getField());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,219,"/        assertEquals(""monthOfYear"", test.monthOfYear().getName());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,220,"/        assertEquals(""Property[monthOfYear]"", test.monthOfYear().toString());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,221,"/        assertSame(test, test.monthOfYear().getReadablePartial());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,222,"/        assertSame(test, test.monthOfYear().getDateTime());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,223,"/        assertEquals(6, test.monthOfYear().get());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,224,"/        assertEquals(""June"", test.monthOfYear().getAsText());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,225,"/        assertEquals(""juin"", test.monthOfYear().getAsText(Locale.FRENCH));"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,226,"/        assertEquals(""Jun"", test.monthOfYear().getAsShortText());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,227,"/        assertEquals(""juin"", test.monthOfYear().getAsShortText(Locale.FRENCH));"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,228,"/        assertEquals(test.getChronology().months(), test.monthOfYear().getDurationField());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,229,"/        assertEquals(test.getChronology().years(), test.monthOfYear().getRangeDurationField());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,230,"/        assertEquals(9, test.monthOfYear().getMaximumTextLength(null));"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,231,"/        assertEquals(3, test.monthOfYear().getMaximumShortTextLength(null));"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,232,"/        test = new DateTime(1972, 7, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,233,"/        assertEquals(""juillet"", test.monthOfYear().getAsText(Locale.FRENCH));"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,234,"/        assertEquals(""juil."", test.monthOfYear().getAsShortText(Locale.FRENCH));"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,237,/    public void testPropertyGetMaxMinValuesMonth() {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,238,"/        DateTime test = new DateTime(1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,239,"/        assertEquals(1, test.monthOfYear().getMinimumValue());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,240,"/        assertEquals(1, test.monthOfYear().getMinimumValueOverall());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,241,"/        assertEquals(12, test.monthOfYear().getMaximumValue());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,242,"/        assertEquals(12, test.monthOfYear().getMaximumValueOverall());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,245,/    public void testPropertyAddMonth() {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,246,"/        DateTime test = new DateTime(1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,247,/        DateTime copy = test.monthOfYear().addCopy(6);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,248,"/        check(test, 1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,249,"/        check(copy, 1972, 12, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,251,/        copy = test.monthOfYear().addCopy(7);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,252,"/        check(copy, 1973, 1, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,254,/        copy = test.monthOfYear().addCopy(-5);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,255,"/        check(copy, 1972, 1, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,257,/        copy = test.monthOfYear().addCopy(-6);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,258,"/        check(copy, 1971, 12, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,260,"/        test = new DateTime(1972, 1, 31);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,261,/        copy = test.monthOfYear().addCopy(1);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,262,"/        check(copy, 1972, 2, 29);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,264,/        copy = test.monthOfYear().addCopy(2);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,265,"/        check(copy, 1972, 3, 31);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,267,/        copy = test.monthOfYear().addCopy(3);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,268,"/        check(copy, 1972, 4, 30);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,270,"/        test = new DateTime(1971, 1, 31);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,271,/        copy = test.monthOfYear().addCopy(1);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,272,"/        check(copy, 1971, 2, 28);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,275,/    public void testPropertyAddInFieldMonth() {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,276,"/        DateTime test = new DateTime(1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,277,/        DateTime copy = test.monthOfYear().addWrappedToCopy(4);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,278,"/        check(test, 1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,279,"/        check(copy, 1972, 10, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,281,/        copy = test.monthOfYear().addWrappedToCopy(8);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,282,"/        check(copy, 1972, 2, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,284,/        copy = test.monthOfYear().addWrappedToCopy(-8);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,285,"/        check(copy, 1972, 10, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,287,"/        test = new DateTime(1972, 1, 31);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,288,/        copy = test.monthOfYear().addWrappedToCopy(1);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,289,"/        check(copy, 1972, 2, 29);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,291,/        copy = test.monthOfYear().addWrappedToCopy(2);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,292,"/        check(copy, 1972, 3, 31);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,294,/        copy = test.monthOfYear().addWrappedToCopy(3);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,295,"/        check(copy, 1972, 4, 30);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,297,"/        test = new DateTime(1971, 1, 31);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,298,/        copy = test.monthOfYear().addWrappedToCopy(1);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,299,"/        check(copy, 1971, 2, 28);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,302,/    public void testPropertySetMonth() {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,303,"/        DateTime test = new DateTime(1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,304,/        DateTime copy = test.monthOfYear().setCopy(12);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,305,"/        check(test, 1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,306,"/        check(copy, 1972, 12, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,308,"/        test = new DateTime(1972, 1, 31);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,309,/        copy = test.monthOfYear().setCopy(2);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,310,"/        check(copy, 1972, 2, 29);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,312,/        try {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,313,/            test.monthOfYear().setCopy(13);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,314,/            fail();
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,315,/        } catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,316,/        try {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,317,/            test.monthOfYear().setCopy(0);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,318,/            fail();
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,319,/        } catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,322,/    public void testPropertySetTextMonth() {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,323,"/        DateTime test = new DateTime(1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,324,"/        DateTime copy = test.monthOfYear().setCopy(""12"");"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,325,"/        check(test, 1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,326,"/        check(copy, 1972, 12, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,328,"/        copy = test.monthOfYear().setCopy(""December"");"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,329,"/        check(test, 1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,330,"/        check(copy, 1972, 12, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,332,"/        copy = test.monthOfYear().setCopy(""Dec"");"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,333,"/        check(test, 1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,334,"/        check(copy, 1972, 12, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,337,/    public void testPropertyCompareToMonth() {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,338,/        DateTime test1 = new DateTime(TEST_TIME1);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,339,/        DateTime test2 = new DateTime(TEST_TIME2);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,340,"/        assertEquals(true, test1.monthOfYear().compareTo(test2) < 0);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,341,"/        assertEquals(true, test2.monthOfYear().compareTo(test1) > 0);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,342,"/        assertEquals(true, test1.monthOfYear().compareTo(test1) == 0);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,343,/        try {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,344,/            test1.monthOfYear().compareTo((ReadablePartial) null);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,345,/            fail();
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,346,/        } catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,348,/        DateTime dt1 = new DateTime(TEST_TIME1);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,349,/        DateTime dt2 = new DateTime(TEST_TIME2);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,350,"/        assertEquals(true, test1.monthOfYear().compareTo(dt2) < 0);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,351,"/        assertEquals(true, test2.monthOfYear().compareTo(dt1) > 0);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,352,"/        assertEquals(true, test1.monthOfYear().compareTo(dt1) == 0);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,353,/        try {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,354,/            test1.monthOfYear().compareTo((ReadableInstant) null);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,355,/            fail();
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,356,/        } catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,360,/    public void testPropertyGetDay() {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,361,"/        DateTime test = new DateTime(1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,362,"/        assertSame(test.getChronology().dayOfMonth(), test.dayOfMonth().getField());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,363,"/        assertEquals(""dayOfMonth"", test.dayOfMonth().getName());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,364,"/        assertEquals(""Property[dayOfMonth]"", test.dayOfMonth().toString());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,365,"/        assertSame(test, test.dayOfMonth().getReadablePartial());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,366,"/        assertSame(test, test.dayOfMonth().getDateTime());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,367,"/        assertEquals(9, test.dayOfMonth().get());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,368,"/        assertEquals(""9"", test.dayOfMonth().getAsText());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,369,"/        assertEquals(""9"", test.dayOfMonth().getAsText(Locale.FRENCH));"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,370,"/        assertEquals(""9"", test.dayOfMonth().getAsShortText());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,371,"/        assertEquals(""9"", test.dayOfMonth().getAsShortText(Locale.FRENCH));"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,372,"/        assertEquals(test.getChronology().days(), test.dayOfMonth().getDurationField());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,373,"/        assertEquals(test.getChronology().months(), test.dayOfMonth().getRangeDurationField());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,374,"/        assertEquals(2, test.dayOfMonth().getMaximumTextLength(null));"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,375,"/        assertEquals(2, test.dayOfMonth().getMaximumShortTextLength(null));"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,378,/    public void testPropertyGetMaxMinValuesDay() {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,379,"/        DateTime test = new DateTime(1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,380,"/        assertEquals(1, test.dayOfMonth().getMinimumValue());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,381,"/        assertEquals(1, test.dayOfMonth().getMinimumValueOverall());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,382,"/        assertEquals(30, test.dayOfMonth().getMaximumValue());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,383,"/        assertEquals(31, test.dayOfMonth().getMaximumValueOverall());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,384,"/        test = new DateTime(1972, 7, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,385,"/        assertEquals(31, test.dayOfMonth().getMaximumValue());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,386,"/        test = new DateTime(1972, 2, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,387,"/        assertEquals(29, test.dayOfMonth().getMaximumValue());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,388,"/        test = new DateTime(1971, 2, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,389,"/        assertEquals(28, test.dayOfMonth().getMaximumValue());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,392,/    public void testPropertyAddDay() {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,393,"/        DateTime test = new DateTime(1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,394,/        DateTime copy = test.dayOfMonth().addCopy(9);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,395,"/        check(test, 1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,396,"/        check(copy, 1972, 6, 18);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,398,/        copy = test.dayOfMonth().addCopy(21);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,399,"/        check(copy, 1972, 6, 30);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,401,/        copy = test.dayOfMonth().addCopy(22);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,402,"/        check(copy, 1972, 7, 1);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,404,/        copy = test.dayOfMonth().addCopy(22 + 30);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,405,"/        check(copy, 1972, 7, 31);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,407,/        copy = test.dayOfMonth().addCopy(22 + 31);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,408,"/        check(copy, 1972, 8, 1);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,410,/        copy = test.dayOfMonth().addCopy(21 + 31 + 31 + 30 + 31 + 30 + 31);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,411,"/        check(copy, 1972, 12, 31);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,413,/        copy = test.dayOfMonth().addCopy(22 + 31 + 31 + 30 + 31 + 30 + 31);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,414,"/        check(copy, 1973, 1, 1);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,416,/        copy = test.dayOfMonth().addCopy(-8);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,417,"/        check(copy, 1972, 6, 1);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,419,/        copy = test.dayOfMonth().addCopy(-9);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,420,"/        check(copy, 1972, 5, 31);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,422,/        copy = test.dayOfMonth().addCopy(-8 - 31 - 30 - 31 - 29 - 31);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,423,"/        check(copy, 1972, 1, 1);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,425,/        copy = test.dayOfMonth().addCopy(-9 - 31 - 30 - 31 - 29 - 31);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,426,"/        check(copy, 1971, 12, 31);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,429,/    public void testPropertyAddInFieldDay() {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,430,"/        DateTime test = new DateTime(1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,431,/        DateTime copy = test.dayOfMonth().addWrappedToCopy(21);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,432,"/        check(test, 1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,433,"/        check(copy, 1972, 6, 30);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,435,/        copy = test.dayOfMonth().addWrappedToCopy(22);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,436,"/        check(copy, 1972, 6, 1);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,438,/        copy = test.dayOfMonth().addWrappedToCopy(-12);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,439,"/        check(copy, 1972, 6, 27);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,441,"/        test = new DateTime(1972, 7, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,442,/        copy = test.dayOfMonth().addWrappedToCopy(21);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,443,"/        check(copy, 1972, 7, 30);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,445,/        copy = test.dayOfMonth().addWrappedToCopy(22);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,446,"/        check(copy, 1972, 7, 31);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,448,/        copy = test.dayOfMonth().addWrappedToCopy(23);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,449,"/        check(copy, 1972, 7, 1);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,451,/        copy = test.dayOfMonth().addWrappedToCopy(-12);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,452,"/        check(copy, 1972, 7, 28);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,455,/    public void testPropertySetDay() {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,456,"/        DateTime test = new DateTime(1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,457,/        DateTime copy = test.dayOfMonth().setCopy(12);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,458,"/        check(test, 1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,459,"/        check(copy, 1972, 6, 12);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,461,/        try {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,462,/            test.dayOfMonth().setCopy(31);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,463,/            fail();
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,464,/        } catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,465,/        try {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,466,/            test.dayOfMonth().setCopy(0);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,467,/            fail();
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,468,/        } catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,471,/    public void testPropertySetTextDay() {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,472,"/        DateTime test = new DateTime(1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,473,"/        DateTime copy = test.dayOfMonth().setCopy(""12"");"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,474,"/        check(test, 1972, 6, 9);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,475,"/        check(copy, 1972, 6, 12);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,478,/    public void testPropertyCompareToDay() {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,479,/        DateTime test1 = new DateTime(TEST_TIME1);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,480,/        DateTime test2 = new DateTime(TEST_TIME2);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,481,"/        assertEquals(true, test1.dayOfMonth().compareTo(test2) < 0);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,482,"/        assertEquals(true, test2.dayOfMonth().compareTo(test1) > 0);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,483,"/        assertEquals(true, test1.dayOfMonth().compareTo(test1) == 0);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,484,/        try {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,485,/            test1.dayOfMonth().compareTo((ReadablePartial) null);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,486,/            fail();
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,487,/        } catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,489,/        DateTime dt1 = new DateTime(TEST_TIME1);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,490,/        DateTime dt2 = new DateTime(TEST_TIME2);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,491,"/        assertEquals(true, test1.dayOfMonth().compareTo(dt2) < 0);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,492,"/        assertEquals(true, test2.dayOfMonth().compareTo(dt1) > 0);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,493,"/        assertEquals(true, test1.dayOfMonth().compareTo(dt1) == 0);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,494,/        try {
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,495,/            test1.dayOfMonth().compareTo((ReadableInstant) null);
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,496,/            fail();
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,497,/        } catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,501,"/    private void check(DateTime test, int hour, int min, int sec) {"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,502,"/        assertEquals(hour, test.getYear());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,503,"/        assertEquals(min, test.getMonthOfYear());"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,504,"/        assertEquals(sec, test.getDayOfMonth());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,294,public void testPropertyGetMonth() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,295,"DateTime test = new DateTime(1972, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,296,"assertSame(test.getChronology().monthOfYear(), test.monthOfYear().getField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,297,"assertEquals(""monthOfYear"", test.monthOfYear().getName());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,298,"assertEquals(""Property[monthOfYear]"", test.monthOfYear().toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,299,"assertSame(test, test.monthOfYear().getInstant());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,300,"assertSame(test, test.monthOfYear().getDateTime());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,301,"assertEquals(6, test.monthOfYear().get());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,302,"assertEquals(""June"", test.monthOfYear().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,303,"assertEquals(""juin"", test.monthOfYear().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,304,"assertEquals(""Jun"", test.monthOfYear().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,305,"assertEquals(""juin"", test.monthOfYear().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,306,"assertEquals(test.getChronology().months(), test.monthOfYear().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,307,"assertEquals(test.getChronology().years(), test.monthOfYear().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,308,"assertEquals(9, test.monthOfYear().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,309,"assertEquals(3, test.monthOfYear().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,310,"test = new DateTime(1972, 7, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,311,"assertEquals(""juillet"", test.monthOfYear().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,312,"assertEquals(""juil."", test.monthOfYear().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,313,"assertEquals(1, test.monthOfYear().getMinimumValue());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,314,"assertEquals(1, test.monthOfYear().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,315,"assertEquals(12, test.monthOfYear().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,316,"assertEquals(12, test.monthOfYear().getMaximumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,319,public void testPropertyGetMaxMinValuesMonth() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,320,"DateTime test = new DateTime(1972, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,321,"assertEquals(1, test.monthOfYear().getMinimumValue());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,322,"assertEquals(1, test.monthOfYear().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,323,"assertEquals(12, test.monthOfYear().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,324,"assertEquals(12, test.monthOfYear().getMaximumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,327,public void testPropertyAddMonth() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,328,"DateTime test = new DateTime(1972, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,329,DateTime copy = test.monthOfYear().addToCopy(6);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,330,"assertEquals(""1972-06-09T00:00:00.000+01:00"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,331,"assertEquals(""1972-12-09T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,333,copy = test.monthOfYear().addToCopy(7);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,334,"assertEquals(""1973-01-09T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,336,copy = test.monthOfYear().addToCopy(-5);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,337,"assertEquals(""1972-01-09T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,339,copy = test.monthOfYear().addToCopy(-6);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,340,"assertEquals(""1971-12-09T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,342,"test = new DateTime(1972, 1, 31, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,343,copy = test.monthOfYear().addToCopy(1);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,344,"assertEquals(""1972-01-31T00:00:00.000Z"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,345,"assertEquals(""1972-02-29T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,347,copy = test.monthOfYear().addToCopy(2);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,348,"assertEquals(""1972-03-31T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,350,copy = test.monthOfYear().addToCopy(3);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,351,"assertEquals(""1972-04-30T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,353,"test = new DateTime(1971, 1, 31, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,354,copy = test.monthOfYear().addToCopy(1);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,355,"assertEquals(""1971-02-28T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,358,public void testPropertyAddInFieldMonth() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,359,"DateTime test = new DateTime(1972, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,360,DateTime copy = test.monthOfYear().addWrappedToCopy(4);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,361,"assertEquals(""1972-06-09T00:00:00.000+01:00"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,362,"assertEquals(""1972-10-09T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,364,copy = test.monthOfYear().addWrappedToCopy(8);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,365,"assertEquals(""1972-02-09T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,367,copy = test.monthOfYear().addWrappedToCopy(-8);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,368,"assertEquals(""1972-10-09T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,370,"test = new DateTime(1972, 1, 31, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,371,copy = test.monthOfYear().addWrappedToCopy(1);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,372,"assertEquals(""1972-01-31T00:00:00.000Z"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,373,"assertEquals(""1972-02-29T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,375,copy = test.monthOfYear().addWrappedToCopy(2);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,376,"assertEquals(""1972-03-31T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,378,copy = test.monthOfYear().addWrappedToCopy(3);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,379,"assertEquals(""1972-04-30T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,381,"test = new DateTime(1971, 1, 31, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,382,copy = test.monthOfYear().addWrappedToCopy(1);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,383,"assertEquals(""1971-01-31T00:00:00.000Z"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,384,"assertEquals(""1971-02-28T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,387,public void testPropertySetMonth() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,388,"DateTime test = new DateTime(1972, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,389,DateTime copy = test.monthOfYear().setCopy(12);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,390,"assertEquals(""1972-06-09T00:00:00.000+01:00"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,391,"assertEquals(""1972-12-09T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,393,"test = new DateTime(1972, 1, 31, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,394,copy = test.monthOfYear().setCopy(2);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,395,"assertEquals(""1972-02-29T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,397,try {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,398,test.monthOfYear().setCopy(13);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,399,fail();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,400,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,401,try {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,402,test.monthOfYear().setCopy(0);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,403,fail();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,404,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,407,public void testPropertySetTextMonth() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,408,"DateTime test = new DateTime(1972, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,409,"DateTime copy = test.monthOfYear().setCopy(""12"");"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,410,"assertEquals(""1972-06-09T00:00:00.000+01:00"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,411,"assertEquals(""1972-12-09T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,413,"copy = test.monthOfYear().setCopy(""December"");"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,414,"assertEquals(""1972-06-09T00:00:00.000+01:00"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,415,"assertEquals(""1972-12-09T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,417,"copy = test.monthOfYear().setCopy(""Dec"");"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,418,"assertEquals(""1972-06-09T00:00:00.000+01:00"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,419,"assertEquals(""1972-12-09T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,422,public void testPropertyCompareToMonth() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,423,DateTime test1 = new DateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,424,DateTime test2 = new DateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,425,"assertEquals(true, test1.monthOfYear().compareTo(test2) < 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,426,"assertEquals(true, test2.monthOfYear().compareTo(test1) > 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,427,"assertEquals(true, test1.monthOfYear().compareTo(test1) == 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,428,try {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,429,test1.monthOfYear().compareTo((ReadableInstant) null);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,430,fail();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,431,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,433,DateTime dt1 = new DateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,434,DateTime dt2 = new DateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,435,"assertEquals(true, test1.monthOfYear().compareTo(dt2) < 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,436,"assertEquals(true, test2.monthOfYear().compareTo(dt1) > 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,437,"assertEquals(true, test1.monthOfYear().compareTo(dt1) == 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,438,try {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,439,test1.monthOfYear().compareTo((ReadableInstant) null);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,440,fail();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,441,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,445,public void testPropertyGetDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,446,"DateTime test = new DateTime(1972, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,447,"assertSame(test.getChronology().dayOfMonth(), test.dayOfMonth().getField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,448,"assertEquals(""dayOfMonth"", test.dayOfMonth().getName());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,449,"assertEquals(""Property[dayOfMonth]"", test.dayOfMonth().toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,450,"assertSame(test, test.dayOfMonth().getInstant());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,451,"assertSame(test, test.dayOfMonth().getDateTime());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,452,"assertEquals(9, test.dayOfMonth().get());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,453,"assertEquals(""9"", test.dayOfMonth().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,454,"assertEquals(""9"", test.dayOfMonth().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,455,"assertEquals(""9"", test.dayOfMonth().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,456,"assertEquals(""9"", test.dayOfMonth().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,457,"assertEquals(test.getChronology().days(), test.dayOfMonth().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,458,"assertEquals(test.getChronology().months(), test.dayOfMonth().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,459,"assertEquals(2, test.dayOfMonth().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,460,"assertEquals(2, test.dayOfMonth().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,461,"assertEquals(1, test.dayOfMonth().getMinimumValue());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,462,"assertEquals(1, test.dayOfMonth().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,463,"assertEquals(30, test.dayOfMonth().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,464,"assertEquals(31, test.dayOfMonth().getMaximumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,467,public void testPropertyGetMaxMinValuesDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,468,"DateTime test = new DateTime(1972, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,469,"assertEquals(1, test.dayOfMonth().getMinimumValue());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,470,"assertEquals(1, test.dayOfMonth().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,471,"assertEquals(30, test.dayOfMonth().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,472,"assertEquals(31, test.dayOfMonth().getMaximumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,473,"test = new DateTime(1972, 7, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,474,"assertEquals(31, test.dayOfMonth().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,475,"test = new DateTime(1972, 2, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,476,"assertEquals(29, test.dayOfMonth().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,477,"test = new DateTime(1971, 2, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,478,"assertEquals(28, test.dayOfMonth().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,481,public void testPropertyAddDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,482,"DateTime test = new DateTime(1972, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,483,DateTime copy = test.dayOfMonth().addToCopy(9);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,484,"assertEquals(""1972-06-09T00:00:00.000+01:00"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,485,"assertEquals(""1972-06-18T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,487,copy = test.dayOfMonth().addToCopy(21);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,488,"assertEquals(""1972-06-30T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,490,copy = test.dayOfMonth().addToCopy(22);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,491,"assertEquals(""1972-07-01T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,493,copy = test.dayOfMonth().addToCopy(22 + 30);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,494,"assertEquals(""1972-07-31T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,496,copy = test.dayOfMonth().addToCopy(22 + 31);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,497,"assertEquals(""1972-08-01T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,499,copy = test.dayOfMonth().addToCopy(21 + 31 + 31 + 30 + 31 + 30 + 31);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,500,"assertEquals(""1972-12-31T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,502,copy = test.dayOfMonth().addToCopy(22 + 31 + 31 + 30 + 31 + 30 + 31);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,503,"assertEquals(""1973-01-01T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,505,copy = test.dayOfMonth().addToCopy(-8);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,506,"assertEquals(""1972-06-01T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,508,copy = test.dayOfMonth().addToCopy(-9);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,509,"assertEquals(""1972-05-31T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,511,copy = test.dayOfMonth().addToCopy(-8 - 31 - 30 - 31 - 29 - 31);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,512,"assertEquals(""1972-01-01T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,514,copy = test.dayOfMonth().addToCopy(-9 - 31 - 30 - 31 - 29 - 31);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,515,"assertEquals(""1971-12-31T00:00:00.000Z"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,518,public void testPropertyAddInFieldDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,519,"DateTime test = new DateTime(1972, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,520,DateTime copy = test.dayOfMonth().addWrappedToCopy(21);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,521,"assertEquals(""1972-06-09T00:00:00.000+01:00"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,522,"assertEquals(""1972-06-30T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,524,copy = test.dayOfMonth().addWrappedToCopy(22);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,525,"assertEquals(""1972-06-01T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,527,copy = test.dayOfMonth().addWrappedToCopy(-12);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,528,"assertEquals(""1972-06-27T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,530,"test = new DateTime(1972, 7, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,531,copy = test.dayOfMonth().addWrappedToCopy(21);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,532,"assertEquals(""1972-07-30T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,534,copy = test.dayOfMonth().addWrappedToCopy(22);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,535,"assertEquals(""1972-07-31T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,537,copy = test.dayOfMonth().addWrappedToCopy(23);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,538,"assertEquals(""1972-07-01T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,540,copy = test.dayOfMonth().addWrappedToCopy(-12);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,541,"assertEquals(""1972-07-28T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,544,public void testPropertySetDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,545,"DateTime test = new DateTime(1972, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,546,DateTime copy = test.dayOfMonth().setCopy(12);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,547,"assertEquals(""1972-06-09T00:00:00.000+01:00"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,548,"assertEquals(""1972-06-12T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,550,try {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,551,test.dayOfMonth().setCopy(31);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,552,fail();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,553,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,554,try {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,555,test.dayOfMonth().setCopy(0);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,556,fail();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,557,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,560,public void testPropertySetTextDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,561,"DateTime test = new DateTime(1972, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,562,"DateTime copy = test.dayOfMonth().setCopy(""12"");"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,563,"assertEquals(""1972-06-09T00:00:00.000+01:00"", test.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,564,"assertEquals(""1972-06-12T00:00:00.000+01:00"", copy.toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,567,public void testPropertyCompareToDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,568,DateTime test1 = new DateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,569,DateTime test2 = new DateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,570,"assertEquals(true, test1.dayOfMonth().compareTo(test2) < 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,571,"assertEquals(true, test2.dayOfMonth().compareTo(test1) > 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,572,"assertEquals(true, test1.dayOfMonth().compareTo(test1) == 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,573,try {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,574,test1.dayOfMonth().compareTo((ReadableInstant) null);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,575,fail();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,576,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,578,DateTime dt1 = new DateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,579,DateTime dt2 = new DateTime(TEST_TIME2);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,580,"assertEquals(true, test1.dayOfMonth().compareTo(dt2) < 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,581,"assertEquals(true, test2.dayOfMonth().compareTo(dt1) > 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,582,"assertEquals(true, test1.dayOfMonth().compareTo(dt1) == 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,583,try {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,584,test1.dayOfMonth().compareTo((ReadableInstant) null);
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,585,fail();
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,586,} catch (IllegalArgumentException ex) {}
