is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,28,mport org.joda.time.format.PeriodParser;
False,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,134,eriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,133,PeriodFormatter parser = ISOPeriodFormat.getInstance().standard();
False,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,140,"arser.parseMutablePeriod(period.getPeriodType(), str);"
True,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,139,parser.withParseType(period.getPeriodType()).parseMutablePeriod(str);
False,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,181,"eriod = periodParser.parsePeriod(getPeriodType(leftStr), leftStr);"
True,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,180,period = periodParser.withParseType(getPeriodType(leftStr)).parsePeriod(leftStr);
False,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,194,"eriod = periodParser.parsePeriod(getPeriodType(rightStr), rightStr);"
True,JodaTime/src/java/org/joda/time/convert/StringConverter.java,JodaTime/src/java/org/joda/time/convert/StringConverter.java,193,period = periodParser.withParseType(getPeriodType(rightStr)).parsePeriod(rightStr);
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,2,  Copyright 2001-2005 Stephen Colebourne
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,4,"  Licensed under the Apache License, Version 2.0 (the ""License"");"
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,5,  you may not use this file except in compliance with the License.
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,6,  You may obtain a copy of the License at
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,10,"  Unless required by applicable law or agreed to in writing, software"
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,11,"  distributed under the License is distributed on an ""AS IS"" BASIS,"
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,12,"  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,13,  See the License for the specific language governing permissions and
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,14,  limitations under the License.
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,16,ackage org.joda.time.format;
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,18,mport org.joda.time.MutablePeriod;
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,19,mport org.joda.time.Period;
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,20,mport org.joda.time.PeriodType;
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,21,mport org.joda.time.ReadablePeriod;
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,24," Abstract base class for implementing {@link PeriodPrinter}s,"
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,25," {@link PeriodParser}s, and {@link PeriodFormatter}s. This class"
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,26, intentionally does not implement any of those interfaces. You can subclass
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,27, and implement only the interfaces that you need to.
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,28, <p>
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,29, The print methods assume that your subclass has implemented PeriodPrinter or
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,30," PeriodFormatter. If not, a ClassCastException is thrown when calling those"
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,31, methods.
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,32, <p>
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,33," Likewise, the parse methods assume that your subclass has implemented"
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,34," PeriodParser or PeriodFormatter. If not, a ClassCastException is thrown"
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,35, when calling the parse methods.
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,37, @author Brian S O'Neill
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,38, @since 1.0
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,40,ublic abstract class BasePeriodFormatter {
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,42,ublic int countFieldsToPrint(ReadablePeriod period) {
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,43,"eturn ((PeriodPrinter) this).countFieldsToPrint(period, Integer.MAX_VALUE);"
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,46,ublic String print(ReadablePeriod period) {
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,47,eriodPrinter printer = (PeriodPrinter) this;
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,48,tringBuffer buf = new StringBuffer(printer.calculatePrintedLength(period));
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,49,"rinter.printTo(buf, period);"
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,50,eturn buf.toString();
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,54,"ublic Period parsePeriod(PeriodType type, String text) {"
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,55,"eturn ((PeriodParser) this).parseMutablePeriod(type, text).toPeriod();"
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,58,"ublic MutablePeriod parseMutablePeriod(PeriodType type, String text) {"
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,59,eriodParser parser = (PeriodParser) this;
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,60,"utablePeriod period = new MutablePeriod(0, type);"
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,62,"nt newPos = parser.parseInto(period, text, 0);"
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,63,f (newPos >= 0) {
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,64,f (newPos >= text.length()) {
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,65,eturn period;
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,67, else {
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,68,ewPos = ~newPos;
False,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,JodaTime/src/java/org/joda/time/format/BasePeriodFormatter.java,71,"hrow new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,18,import java.io.IOException;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,19,import java.io.Writer;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,20,import java.util.Locale;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,22,import org.joda.time.MutablePeriod;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,23,import org.joda.time.Period;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,24,import org.joda.time.PeriodType;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,25,import org.joda.time.ReadWritablePeriod;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,26,import org.joda.time.ReadablePeriod;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,19, Combined interface for printing and parsing.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,29,* Controls the printing and parsing of a time period to and from a string.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,30,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,31,* This class is the main API for printing and parsing used by most applications.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,32,* Instances of this class are created via one of three factory classes:
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,33,* <ul>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,34,* <li>{@link PeriodFormat} - formats by pattern and style</li>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,35,* <li>{@link ISOPeriodFormat} - ISO8601 formats</li>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,36,* <li>{@link PeriodFormatterBuilder} - complex formats created via method calls</li>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,37,* </ul>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,38,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,39,* An instance of this class holds a reference internally to one printer and
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,40,"* one parser. It is possible that one of these may be null, in which case the"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,41,* formatter cannot print/parse. This can be checked via the {@link #isPrinter()}
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,42,* and {@link #isParser()} methods.
False,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,21, See each extended interface for details of the methods.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,44,* The underlying printer/parser can be altered to behave exactly as required
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,45,* by using a decorator modifier:
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,46,* <ul>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,47,* <li>{@link #withLocale(Locale)} - returns a new formatter that uses the specified locale</li>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,48,* </ul>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,49,* This returns a new formatter (instances of this class are immutable).
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,50,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,51,* The main methods of the class are the <code>printXxx</code> and
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,52,* <code>parseXxx</code> methods. These are used as follows:
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,53,* <pre>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,54,* // print using the default locale
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,55,* String periodStr = formatter.print(period);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,56,* // print using the French locale
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,57,* String periodStr = formatter.withLocale(Locale.FRENCH).print(period);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,59,* // parse using the French locale
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,60,* Period date = formatter.withLocale(Locale.FRENCH).parsePeriod(str);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,61,* </pre>
False,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,27,"ublic interface PeriodFormatter extends PeriodPrinter, PeriodParser {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,67,public class PeriodFormatter {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,69,/** The internal printer used to output the datetime. */
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,70,private final PeriodPrinter iPrinter;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,71,/** The internal parser used to output the datetime. */
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,72,private final PeriodParser iParser;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,73,/** The locale to use for printing and parsing. */
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,74,private final Locale iLocale;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,75,/** The period type used in parsing. */
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,76,private final PeriodType iParseType;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,79,"* Creates a new formatter, however you will normally use the factory"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,80,* or the builder.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,82,"* @param printer  the internal printer, null if cannot print"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,83,"* @param parser  the internal parser, null if cannot parse"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,85,public PeriodFormatter(
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,86,"PeriodPrinter printer, PeriodParser parser) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,87,super();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,88,iPrinter = printer;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,89,iParser = parser;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,90,iLocale = null;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,91,iParseType = null;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,95,* Constructor.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,97,"* @param printer  the internal printer, null if cannot print"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,98,"* @param parser  the internal parser, null if cannot parse"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,99,* @param locale  the locale to use
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,100,* @param type  the parse period type
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,102,private PeriodFormatter(
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,103,"PeriodPrinter printer, PeriodParser parser,"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,104,"Locale locale, PeriodType type) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,105,super();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,106,iPrinter = printer;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,107,iParser = parser;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,108,iLocale = locale;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,109,iParseType = type;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,114,* Is this formatter capable of printing.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,116,* @return true if this is a printer
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,118,public boolean isPrinter() {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,119,return (iPrinter != null);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,123,* Gets the internal printer object that performs the real printing work.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,125,* @return the internal printer
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,127,public PeriodPrinter getPrinter() {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,128,return iPrinter;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,132,* Is this formatter capable of parsing.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,134,* @return true if this is a parser
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,136,public boolean isParser() {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,137,return (iParser != null);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,141,* Gets the internal parser object that performs the real parsing work.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,143,* @return the internal parser
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,145,public PeriodParser getParser() {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,146,return iParser;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,151,* Returns a new formatter with a different locale that will be used
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,152,* for printing and parsing.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,153,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,154,"* A PeriodFormatter is immutable, so a new instance is returned,"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,155,* and the original is unaltered and still usable.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,157,* @param locale  the locale to use
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,158,* @return the new formatter
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,160,public PeriodFormatter withLocale(Locale locale) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,161,if (locale == getLocale() || (locale != null && locale.equals(getLocale()))) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,162,return this;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,164,"return new PeriodFormatter(iPrinter, iParser, locale, iParseType);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,168,* Gets the locale that will be used for printing and parsing.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,170,* @return the locale to use
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,172,public Locale getLocale() {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,173,return iLocale;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,178,* Returns a new formatter with a different PeriodType for parsing.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,179,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,180,"* A PeriodFormatter is immutable, so a new instance is returned,"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,181,* and the original is unaltered and still usable.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,183,* @param type  the type to use in parsing
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,184,* @return the new formatter
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,186,public PeriodFormatter withParseType(PeriodType type) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,187,if (type == iParseType) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,188,return this;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,190,"return new PeriodFormatter(iPrinter, iParser, iLocale, type);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,194,* Gets the PeriodType that will be used for parsing.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,196,* @return the parse type to use
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,198,public PeriodType getParseType() {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,199,return iParseType;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,204,* Prints a ReadablePeriod to a StringBuffer.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,206,* @param buf  the formatted period is appended to this buffer
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,207,"* @param period  the period to format, not null"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,209,"public void printTo(StringBuffer buf, ReadablePeriod period) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,210,checkPrinter();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,211,checkPeriod(period);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,213,"getPrinter().printTo(buf, period, iLocale);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,217,* Prints a ReadablePeriod to a Writer.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,219,* @param out  the formatted period is written out
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,220,"* @param period  the period to format, not null"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,222,"public void printTo(Writer out, ReadablePeriod period) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,223,checkPrinter();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,224,checkPeriod(period);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,226,"getPrinter().printTo(out, period, iLocale);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,230,* Prints a ReadablePeriod to a new String.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,232,"* @param period  the period to format, not null"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,233,* @return the printed result
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,235,public String print(ReadablePeriod period) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,236,checkPrinter();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,237,checkPeriod(period);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,239,PeriodPrinter printer = getPrinter();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,240,"StringBuffer buf = new StringBuffer(printer.calculatePrintedLength(period, iLocale));"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,241,"printer.printTo(buf, period, iLocale);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,242,return buf.toString();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,246,* Checks whether printing is supported.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,248,* @throws UnsupportedOperationException if printing is not supported
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,250,private void checkPrinter() {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,251,if (iPrinter == null) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,252,"throw new UnsupportedOperationException(""Printing not supported"");"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,257,* Checks whether the period is non-null.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,259,* @throws IllegalArgumentException if the period is null
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,261,private void checkPeriod(ReadablePeriod period) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,262,if (period == null) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,263,"throw new IllegalArgumentException(""Period must not be null"");"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,269,"* Parses a period from the given text, at the given position, saving the"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,270,* result into the fields of the given ReadWritablePeriod. If the parse
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,271,"* succeeds, the return value is the new text position. Note that the parse"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,272,* may succeed without fully reading the text.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,273,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,274,* The parse type of the formatter is not used by this method.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,275,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,276,"* If it fails, the return value is negative, but the period may still be"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,277,"* modified. To determine the position where the parse failed, apply the"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,278,* one's complement operator (~) on the return value.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,280,* @param period  a period that will be modified
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,281,* @param text  text to parse
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,282,* @param position position to start parsing from
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,283,"* @return new position, if negative, parse failed. Apply complement"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,284,* operator (~) to get position of failure
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,285,* @throws IllegalArgumentException if any field is out of range
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,287,"public int parseInto(ReadWritablePeriod period, String text, int position) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,288,checkParser();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,289,checkPeriod(period);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,291,"return getParser().parseInto(period, text, position, iLocale);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,295,"* Parses a period from the given text, returning a new Period."
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,297,* @param text  text to parse
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,298,* @return parsed value in a Period object
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,299,* @throws IllegalArgumentException if any field is out of range
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,301,public Period parsePeriod(String text) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,302,checkParser();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,304,return parseMutablePeriod(text).toPeriod();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,308,"* Parses a period from the given text, returning a new MutablePeriod."
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,310,* @param text  text to parse
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,311,* @return parsed value in a MutablePeriod object
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,312,* @throws IllegalArgumentException if any field is out of range
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,314,public MutablePeriod parseMutablePeriod(String text) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,315,checkParser();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,317,"MutablePeriod period = new MutablePeriod(0, iParseType);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,318,"int newPos = getParser().parseInto(period, text, 0, iLocale);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,319,if (newPos >= 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,320,if (newPos >= text.length()) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,321,return period;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,323,} else {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,324,newPos = ~newPos;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,326,"throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,330,"* Deprecated, use withParseType(type).parsePeriod(p)."
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,332,* @deprecated use withParseType(type).parsePeriod(p).
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,334,"public Period parsePeriod(PeriodType type, String text) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,335,return withParseType(type).parsePeriod(text);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,339,"* Deprecated, use withParseType(type).parseMutablePeriod(p)."
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,341,* @deprecated use withParseType(type).parseMutablePeriod(p).
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,343,"public MutablePeriod parseMutablePeriod(PeriodType type, String text) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,344,return withParseType(type).parseMutablePeriod(text);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,348,* Checks whether parsing is supported.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,350,* @throws UnsupportedOperationException if parsing is not supported
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,352,private void checkParser() {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,353,if (iParser == null) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,354,"throw new UnsupportedOperationException(""Parsing not supported"");"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,JodaTime/src/java/org/joda/time/format/PeriodFormatter.java,29,/ Methods inherited
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,23,import java.util.Locale;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,32, PeriodFormatterBuilder is used for constructing {@link PeriodFormatter}s.
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,33, PeriodFormatters are built by appending specific fields and separators.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,33,* Factory that creates complex instances of PeriodFormatter via method calls.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,34,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,35,* Period formatting is performed by the {@link PeriodFormatter} class.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,36,"* Three classes provide factory methods to create formatters, and this is one."
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,37,* The others are {@link PeriodFormat} and {@link ISOPeriodFormat}.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,38,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,39,* PeriodFormatterBuilder is used for constructing formatters which are then
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,40,* used to print or parse. The formatters are built by appending specific fields
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,41,* or other formatters to an instanece of this builder.
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,83,/ List of PeriodFormatters used to build a final formatter.
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,84,rivate List iFormatters;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,90,// List of Printers and Parsers used to build a final formatter.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,91,private List iElementPairs;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,100,eturn toFormatter();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,107,return toFormatter().getPrinter();
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,110,eturn toFormatter();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,117,return toFormatter().getParser();
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,120,eriodFormatter formatter = toFormatter(iFormatters);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,127,PeriodFormatter formatter = toFormatter(iElementPairs);
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,125,rivate static PeriodFormatter toFormatter(List formatters) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,126,nt size = formatters.size();
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,127,f (size >= 1 && formatters.get(0) instanceof Separator) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,128,eparator sep = (Separator) formatters.get(0);
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,129,"eturn sep.finish(toFormatter(formatters.subList(1, size)));"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,132,private static PeriodFormatter toFormatter(List elementPairs) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,133,int size = elementPairs.size();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,134,if (size >= 2 && elementPairs.get(0) instanceof Separator) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,135,Separator sep = (Separator) elementPairs.get(0);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,136,"PeriodFormatter f = toFormatter(elementPairs.subList(2, size));"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,137,"sep = sep.finish(f.getPrinter(), f.getParser());"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,138,"return new PeriodFormatter(sep, sep);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,131,eturn (PeriodFormatter) createComposite(formatters);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,140,Object[] comp = createComposite(elementPairs);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,141,"return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,143,f (iFormatters == null) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,144,Formatters = new ArrayList();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,153,if (iElementPairs == null) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,154,iElementPairs = new ArrayList();
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,146,Formatters.clear();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,156,iElementPairs.clear();
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,161,Formatters.add(formatter);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,171,"append0(formatter.getPrinter(), formatter.getParser());"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,176,//     * Appends a printer parser pair.
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,178,//     * @return this PeriodFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,180,"//    public PeriodFormatterBuilder append(PeriodPrinter printer, PeriodParser parser) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,181,//        if (printer == null && parser == null) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,182,"//            throw new IllegalArgumentException(""No printer or parser supplied"");"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,184,//        clearPrefix();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,185,"//        append0(printer, parser);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,186,//        return this;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,178,Formatters.add(literal);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,202,"append0(literal, literal);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,453,Formatters.add(field);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,477,"append0(field, field);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,505,inal Object originalField;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,506,f (iFormatters.size() > 0) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,507,riginalField = iFormatters.get(iFormatters.size() - 1);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,529,final Object originalPrinter;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,530,final Object originalParser;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,531,if (iElementPairs.size() > 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,532,originalPrinter = iElementPairs.get(iElementPairs.size() - 2);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,533,originalParser = iElementPairs.get(iElementPairs.size() - 1);
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,509,riginalField = null;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,535,originalPrinter = null;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,536,originalParser = null;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,512,f (originalField == null || !(originalField instanceof FieldFormatter)) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,539,if (originalPrinter == null || originalParser == null ||
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,540,originalPrinter != originalParser ||
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,541,!(originalPrinter instanceof FieldFormatter)) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,517,"ieldFormatter newField = new FieldFormatter((FieldFormatter) originalField, suffix);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,518,"Formatters.set(iFormatters.size() - 1, newField);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,546,"FieldFormatter newField = new FieldFormatter((FieldFormatter) originalPrinter, suffix);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,547,"iElementPairs.set(iElementPairs.size() - 2, newField);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,548,"iElementPairs.set(iElementPairs.size() - 1, newField);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,646,ist formatters = iFormatters;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,647,f (formatters.size() == 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,676,List pairs = iElementPairs;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,677,if (pairs.size() == 0) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,649,ormatters.add
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,650,"new Separator(text, finalText, variants, Literal.EMPTY, useBefore, useAfter));"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,679,Separator separator = new Separator(
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,680,"text, finalText, variants,"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,681,"Literal.EMPTY, Literal.EMPTY, useBefore, useAfter);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,682,"append0(separator, separator);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,658,or (i=formatters.size(); --i>=0; ) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,659,f (formatters.get(i) instanceof Separator) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,660,astSeparator = (Separator) formatters.get(i);
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,661,"ormatters = formatters.subList(i + 1, formatters.size());"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,690,for (i=pairs.size(); --i>=0; ) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,691,if (pairs.get(i) instanceof Separator) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,692,lastSeparator = (Separator) pairs.get(i);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,693,"pairs = pairs.subList(i + 1, pairs.size());"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,696,i--;  // element pairs
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,667,f (lastSeparator != null && formatters.size() == 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,700,if (lastSeparator != null && pairs.size() == 0) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,670,eriodFormatter composite = createComposite(formatters);
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,671,ormatters.clear();
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,672,ormatters.add
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,673,"new Separator(text, finalText, variants, composite, useBefore, useAfter));"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,703,Object[] comp = createComposite(pairs);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,704,pairs.clear();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,705,Separator separator = new Separator(
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,706,"text, finalText, variants,"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,707,"(PeriodPrinter) comp[0], (PeriodParser) comp[1],"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,708,"useBefore, useAfter);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,709,pairs.add(separator);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,710,pairs.add(separator);
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,686,rivate static PeriodFormatter createComposite(List formatters) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,687,witch (formatters.size()) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,723,"private PeriodFormatterBuilder append0(PeriodPrinter printer, PeriodParser parser) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,724,iElementPairs.add(printer);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,725,iElementPairs.add(parser);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,726,return this;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,729,private static Object[] createComposite(List elementPairs) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,730,switch (elementPairs.size()) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,689,eturn Literal.EMPTY;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,732,"return new Object[] {Literal.EMPTY, Literal.EMPTY};"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,691,eturn (PeriodFormatter) formatters.get(0);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,734,"return new Object[] {elementPairs.get(0), elementPairs.get(1)};"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,693,eturn new Composite(formatters);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,736,Composite comp = new Composite(elementPairs);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,737,"return new Object[] {comp, comp};"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,901,xtends BasePeriodFormatter
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,902,mplements PeriodFormatter {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,945,"implements PeriodPrinter, PeriodParser {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,947,ublic int countFieldsToPrint(ReadablePeriod period) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,990,"public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,991,if (stopAt <= 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,992,return 0;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,954,"ublic int countFieldsToPrint(ReadablePeriod period, int stopAt) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,955,eturn stopAt <= 0 ? 0 : countFieldsToPrint(period);
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,958,ublic int calculatePrintedLength(ReadablePeriod period) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1000,"public int calculatePrintedLength(ReadablePeriod period, Locale locale) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,985,"ublic void printTo(StringBuffer buf, ReadablePeriod period) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1027,"public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1016,"ublic void printTo(Writer out, ReadablePeriod period) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1058,"public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1047,"ublic int parseInto(ReadWritablePeriod period,"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1048,"tring text, int position) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1089,public int parseInto(
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1090,"ReadWritablePeriod period, String text,"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1091,"int position, Locale locale) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1393,xtends BasePeriodFormatter
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1394,mplements PeriodFormatter {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1436,"implements PeriodPrinter, PeriodParser {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1402,"ublic int countFieldsToPrint(ReadablePeriod period, int stopAt) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1444,"public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1406,ublic int calculatePrintedLength(ReadablePeriod period) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1448,"public int calculatePrintedLength(ReadablePeriod period, Locale locale) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1410,"ublic void printTo(StringBuffer buf, ReadablePeriod period) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1452,"public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1414,"ublic void printTo(Writer out, ReadablePeriod period) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1456,"public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1418,"ublic int parseInto(ReadWritablePeriod period,"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1419,"tring periodStr, int position) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1460,public int parseInto(
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1461,"ReadWritablePeriod period, String periodStr,"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1462,"int position, Locale locale) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1433,xtends BasePeriodFormatter
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1434,mplements PeriodFormatter {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1476,"implements PeriodPrinter, PeriodParser {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1442,rivate PeriodFormatter iBefore;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1443,rivate PeriodFormatter iAfter;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1484,private PeriodPrinter iBeforePrinter;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1485,private PeriodPrinter iAfterPrinter;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1486,private PeriodParser iBeforeParser;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1487,private PeriodParser iAfterParser;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1446,"eriodFormatter before, boolean useBefore, boolean useAfter) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1490,"PeriodPrinter beforePrinter, PeriodParser beforeParser,"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1491,"boolean useBefore, boolean useAfter) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1469,Before = before;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1514,iBeforePrinter = beforePrinter;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1515,iBeforeParser = beforeParser;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1474,"ublic int countFieldsToPrint(ReadablePeriod period, int stopAt) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1475,"nt sum = iBefore.countFieldsToPrint(period, stopAt);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1520,"public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1521,"int sum = iBeforePrinter.countFieldsToPrint(period, stopAt, locale);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1477,"um += iAfter.countFieldsToPrint(period, stopAt);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1523,"sum += iAfterPrinter.countFieldsToPrint(period, stopAt, locale);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1482,ublic int calculatePrintedLength(ReadablePeriod period) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1483,eriodFormatter before = iBefore;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1484,eriodFormatter after = iAfter;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1528,"public int calculatePrintedLength(ReadablePeriod period, Locale locale) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1529,PeriodPrinter before = iBeforePrinter;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1530,PeriodPrinter after = iAfterPrinter;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1486,nt sum = before.calculatePrintedLength(period)
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1487, after.calculatePrintedLength(period);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1532,"int sum = before.calculatePrintedLength(period, locale)"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1533,"+ after.calculatePrintedLength(period, locale);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1490,"f (before.countFieldsToPrint(period, 1) > 0) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1536,"if (before.countFieldsToPrint(period, 1, locale) > 0) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1492,"nt afterCount = after.countFieldsToPrint(period, 2);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1538,"int afterCount = after.countFieldsToPrint(period, 2, locale);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1500," else if (iUseAfter && after.countFieldsToPrint(period, 1) > 0) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1546,"} else if (iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1507,"ublic void printTo(StringBuffer buf, ReadablePeriod period) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1508,eriodFormatter before = iBefore;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1509,eriodFormatter after = iAfter;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1553,"public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1554,PeriodPrinter before = iBeforePrinter;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1555,PeriodPrinter after = iAfterPrinter;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1511,"efore.printTo(buf, period);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1557,"before.printTo(buf, period, locale);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1513,"f (before.countFieldsToPrint(period, 1) > 0) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1559,"if (before.countFieldsToPrint(period, 1, locale) > 0) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1515,"nt afterCount = after.countFieldsToPrint(period, 2);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1561,"int afterCount = after.countFieldsToPrint(period, 2, locale);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1523," else if (iUseAfter && after.countFieldsToPrint(period, 1) > 0) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1569,"} else if (iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1526,"fter.printTo(buf, period);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1572,"after.printTo(buf, period, locale);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1529,"ublic void printTo(Writer out, ReadablePeriod period) throws IOException {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1530,eriodFormatter before = iBefore;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1531,eriodFormatter after = iAfter;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1575,"public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1576,PeriodPrinter before = iBeforePrinter;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1577,PeriodPrinter after = iAfterPrinter;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1533,"efore.printTo(out, period);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1579,"before.printTo(out, period, locale);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1535,"f (before.countFieldsToPrint(period, 1) > 0) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1581,"if (before.countFieldsToPrint(period, 1, locale) > 0) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1537,"nt afterCount = after.countFieldsToPrint(period, 2);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1583,"int afterCount = after.countFieldsToPrint(period, 2, locale);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1545," else if (iUseAfter && after.countFieldsToPrint(period, 1) > 0) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1591,"} else if (iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1548,"fter.printTo(out, period);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1594,"after.printTo(out, period, locale);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1551,"ublic int parseInto(ReadWritablePeriod period,"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1552,"tring periodStr, int position) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1597,public int parseInto(
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1598,"ReadWritablePeriod period, String periodStr,"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1599,"int position, Locale locale) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1554,"osition = iBefore.parseInto(period, periodStr, position);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1601,"position = iBeforeParser.parseInto(period, periodStr, position, locale);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1579,"osition = iAfter.parseInto(period, periodStr, position);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1626,"position = iAfterParser.parseInto(period, periodStr, position, locale);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1598,eparator finish(PeriodFormatter after) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1599,After = after;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1645,"Separator finish(PeriodPrinter afterPrinter, PeriodParser afterParser) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1646,iAfterPrinter = afterPrinter;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1647,iAfterParser = afterParser;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1609,xtends BasePeriodFormatter
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1610,mplements PeriodFormatter {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1657,"implements PeriodPrinter, PeriodParser {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1612,rivate final PeriodFormatter[] iFormatters;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1659,private final PeriodPrinter[] iPrinters;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1660,private final PeriodParser[] iParsers;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1662,Composite(List elementPairs) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1663,List printerList = new ArrayList();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1664,List parserList = new ArrayList();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1666,"decompose(elementPairs, printerList, parserList);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1668,if (printerList.size() <= 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1669,iPrinters = null;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1670,} else {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1671,iPrinters = (PeriodPrinter[]) printerList.toArray(
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1672,new PeriodPrinter[printerList.size()]);
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1614,omposite(List formatters) {
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1615,Formatters = (PeriodFormatter[]) formatters.toArray(
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1616,ew PeriodFormatter[formatters.size()]);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1675,if (parserList.size() <= 0) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1676,iParsers = null;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1677,} else {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1678,iParsers = (PeriodParser[]) parserList.toArray(
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1679,new PeriodParser[parserList.size()]);
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1619,"ublic int countFieldsToPrint(ReadablePeriod period, int stopAt) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1683,"public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1621,eriodFormatter[] printers = iFormatters;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1685,PeriodPrinter[] printers = iPrinters;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1623,um += printers[i].countFieldsToPrint(period);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1687,"sum += printers[i].countFieldsToPrint(period, Integer.MAX_VALUE, locale);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1628,ublic int calculatePrintedLength(ReadablePeriod period) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1692,"public int calculatePrintedLength(ReadablePeriod period, Locale locale) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1630,eriodFormatter[] printers = iFormatters;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1694,PeriodPrinter[] printers = iPrinters;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1632,um += printers[i].calculatePrintedLength(period);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1696,"sum += printers[i].calculatePrintedLength(period, locale);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1637,"ublic void printTo(StringBuffer buf, ReadablePeriod period) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1638,eriodFormatter[] printers = iFormatters;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1701,"public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1702,PeriodPrinter[] printers = iPrinters;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1641,"rinters[i].printTo(buf, period);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1705,"printers[i].printTo(buf, period, locale);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1645,"ublic void printTo(Writer out, ReadablePeriod period) throws IOException {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1646,eriodFormatter[] printers = iFormatters;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1709,"public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1710,PeriodPrinter[] printers = iPrinters;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1649,"rinters[i].printTo(out, period);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1713,"printers[i].printTo(out, period, locale);"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1653,"ublic int parseInto(ReadWritablePeriod period,"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1654,"tring periodStr, int position) {"
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1655,eriodFormatter[] parsers = iFormatters;
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1717,public int parseInto(
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1718,"ReadWritablePeriod period, String periodStr,"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1719,"int position, Locale locale) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1720,PeriodParser[] parsers = iParsers;
False,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1662,"osition = parsers[i].parseInto(period, periodStr, position);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1727,"position = parsers[i].parseInto(period, periodStr, position, locale);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1732,"private void decompose(List elementPairs, List printerList, List parserList) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1733,int size = elementPairs.size();
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1734,for (int i=0; i<size; i+=2) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1735,Object element = elementPairs.get(i);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1736,if (element instanceof PeriodPrinter) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1737,if (element instanceof Composite) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1738,"addArrayToList(printerList, ((Composite) element).iPrinters);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1739,} else {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1740,printerList.add(element);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1744,element = elementPairs.get(i + 1);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1745,if (element instanceof PeriodParser) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1746,if (element instanceof Composite) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1747,"addArrayToList(parserList, ((Composite) element).iParsers);"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1748,} else {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1749,parserList.add(element);
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1755,"private void addArrayToList(List list, Object[] array) {"
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1756,if (array != null) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1757,for (int i=0; i<array.length; i++) {
True,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java,1758,list.add(array[i]);
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,18,mport org.joda.time.Period;
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,19,mport org.joda.time.PeriodType;
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,20,mport org.joda.time.MutablePeriod;
True,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,18,import java.util.Locale;
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,24, Defines an interface for parsing textual representations of time periods.
True,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,23,* Internal interface for parsing textual representations of time periods.
True,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,24,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,25,"* Application users will rarely use this class directly. Instead, you"
True,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,26,* will use one of the factory classes to create a {@link PeriodFormatter}.
True,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,27,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,28,* The factory classes are:<br />
True,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,29,* - {@link PeriodFormatterBuilder}<br />
True,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,30,* - {@link PeriodFormat}<br />
True,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,31,* - {@link ISOPeriodFormat}<br />
True,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,34,* @author Stephen Colebourne
True,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,55,* @param locale  the locale to use for parsing
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,51,"nt parseInto(ReadWritablePeriod period, String periodStr, int position);"
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,54," Parses a period from the given text, returning a new Period."
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,56, @param type  defines which fields may be parsed
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,57, @param periodStr  text to parse
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,58, @return parsed value in a Period object
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,59, @throws IllegalArgumentException if any field is out of range
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,61,"eriod parsePeriod(PeriodType type, String periodStr);"
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,64," Parses a period from the given text, returning a new MutablePeriod."
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,66, @param type  defines which fields may be parsed
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,67, @param periodStr  text to parse
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,68, @return parsed value in a MutablePeriod object
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,69, @throws IllegalArgumentException if any field is out of range
False,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,71,"utablePeriod parseMutablePeriod(PeriodType type, String periodStr);"
True,JodaTime/src/java/org/joda/time/format/PeriodParser.java,JodaTime/src/java/org/joda/time/format/PeriodParser.java,60,"int parseInto(ReadWritablePeriod period, String periodStr, int position, Locale locale);"
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,20,import java.util.Locale;
False,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,24, Defines an interface for creating textual representations of time periods.
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,25,* Internal interface for printing textual representations of time periods.
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,26,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,27,"* Application users will rarely use this class directly. Instead, you"
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,28,* will use one of the factory classes to create a {@link PeriodFormatter}.
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,29,* <p>
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,30,* The factory classes are:<br />
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,31,* - {@link PeriodFormatterBuilder}<br />
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,32,* - {@link PeriodFormat}<br />
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,33,* - {@link ISOPeriodFormat}<br />
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,36,* @author Stephen Colebourne
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,48,* @param locale  the locale to use
False,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,40,nt calculatePrintedLength(ReadablePeriod period);
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,51,"int calculatePrintedLength(ReadablePeriod period, Locale iLocale);"
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,58,"* @param stopAt stop counting at this value, enter a number &ge; 256 to count all"
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,59,* @param locale  the locale to use
False,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,49,nt countFieldsToPrint(ReadablePeriod period);
False,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,52, Returns the amount of fields from the given period that this printer
False,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,53, will print.
False,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,55, @param period  the period to use
False,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,56, @param stopAt stop counting at this value
False,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,57, @return amount of fields printed
False,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,59,"nt countFieldsToPrint(ReadablePeriod period, int stopAt);"
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,62,"int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale iLocale);"
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,70,* @param locale  the locale to use
False,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,68,"oid printTo(StringBuffer buf, ReadablePeriod period);"
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,72,"void printTo(StringBuffer buf, ReadablePeriod period, Locale iLocale);"
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,79,* @param locale  the locale to use
False,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,76,"oid printTo(Writer out, ReadablePeriod period) throws IOException;"
False,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,79, Prints a ReadablePeriod to a new String.
False,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,81, @param period  the period to format
False,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,82, @return the printed result
False,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,84,tring print(ReadablePeriod period);
True,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,JodaTime/src/java/org/joda/time/format/PeriodPrinter.java,81,"void printTo(Writer out, ReadablePeriod period, Locale iLocale) throws IOException;"
True,JodaTime/src/test/org/joda/time/format/TestAll.java,JodaTime/src/test/org/joda/time/format/TestAll.java,43,suite.addTest(TestPeriodFormatter.suite());
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,93,eriodParser parser = ISOPeriodFormat.getInstance().standard();
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,94,"eriod p = parser.parsePeriod(PeriodType.standard(), ""P1Y2M3W4DT5H6M7.008S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,93,PeriodFormatter parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,94,"Period p = parser.parsePeriod(""P1Y2M3W4DT5H6M7.008S"");"
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,100,eriodParser parser = ISOPeriodFormat.getInstance().standard();
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,101,"eriod p = parser.parsePeriod(PeriodType.standard(), ""P0Y0M0W0DT5H6M7.008S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,100,PeriodFormatter parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,101,"Period p = parser.parsePeriod(""P0Y0M0W0DT5H6M7.008S"");"
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,107,eriodParser parser = ISOPeriodFormat.getInstance().standard();
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,108,"eriod p = parser.parsePeriod(PeriodType.standard(), ""P0DT5H6M7.008S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,107,PeriodFormatter parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,108,"Period p = parser.parsePeriod(""P0DT5H6M7.008S"");"
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,114,eriodParser parser = ISOPeriodFormat.getInstance().standard();
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,115,"eriod p = parser.parsePeriod(PeriodType.standard(), ""P2Y3DT5H6M7.008S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,114,PeriodFormatter parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,115,"Period p = parser.parsePeriod(""P2Y3DT5H6M7.008S"");"
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,121,eriodParser parser = ISOPeriodFormat.getInstance().standard();
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,122,"eriod p = parser.parsePeriod(PeriodType.standard(), ""P2YT5H6M7.008S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,121,PeriodFormatter parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,122,"Period p = parser.parsePeriod(""P2YT5H6M7.008S"");"
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,128,eriodParser parser = ISOPeriodFormat.getInstance().standard();
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,129,"eriod p = parser.parsePeriod(PeriodType.standard(), ""PT5H6M7.008S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,128,PeriodFormatter parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,129,"Period p = parser.parsePeriod(""PT5H6M7.008S"");"
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,135,eriodParser parser = ISOPeriodFormat.getInstance().standard();
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,136,"eriod p = parser.parsePeriod(PeriodType.standard(), ""P1Y2M3W4D"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,135,PeriodFormatter parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,136,"Period p = parser.parsePeriod(""P1Y2M3W4D"");"
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,142,eriodParser parser = ISOPeriodFormat.getInstance().standard();
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,143,"eriod p = parser.parsePeriod(PeriodType.standard(), ""PT5H6M7S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,142,PeriodFormatter parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,143,"Period p = parser.parsePeriod(""PT5H6M7S"");"
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,149,eriodParser parser = ISOPeriodFormat.getInstance().standard();
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,150,"eriod p = parser.parsePeriod(PeriodType.standard(), ""PT0S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,149,PeriodFormatter parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,150,"Period p = parser.parsePeriod(""PT0S"");"
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,156,eriodParser parser = ISOPeriodFormat.getInstance().standard();
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,157,"eriod p = parser.parsePeriod(PeriodType.standard(), ""P0D"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,156,PeriodFormatter parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,157,"Period p = parser.parsePeriod(""P0D"");"
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,163,eriodParser parser = ISOPeriodFormat.getInstance().standard();
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,164,"eriod p = parser.parsePeriod(PeriodType.standard(), ""P0Y"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,163,PeriodFormatter parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,164,"Period p = parser.parsePeriod(""P0Y"");"
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,170,eriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,170,PeriodFormatter parser = ISOPeriodFormat.getInstance().standard();
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,172,"arser.parsePeriod(PeriodType.standard(), ""P1Y2S"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,172,"parser.parsePeriod(""P1Y2S"");"
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,179,eriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,179,PeriodFormatter parser = ISOPeriodFormat.getInstance().standard();
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,181,"arser.parsePeriod(PeriodType.standard(), ""PS"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,181,"parser.parsePeriod(""PS"");"
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,188,eriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,188,PeriodFormatter parser = ISOPeriodFormat.getInstance().standard();
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,190,"arser.parsePeriod(PeriodType.standard(), ""PTS"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,190,"parser.parsePeriod(""PTS"");"
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,197,eriodParser parser = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,197,PeriodFormatter parser = ISOPeriodFormat.getInstance().standard();
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,199,"arser.parsePeriod(PeriodType.standard(), ""PXS"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java,199,"parser.parsePeriod(""PXS"");"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,93,eriodParser parser = PeriodFormat.getInstance().getDefault();
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,94,"eriod p = parser.parsePeriod(PeriodType.standard(), ""6 years, 3 months and 2 days"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,93,PeriodFormatter parser = PeriodFormat.getInstance().getDefault();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java,94,"Period p = parser.parsePeriod(""6 years, 3 months and 2 days"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,2,*  Copyright 2001-2005 Stephen Colebourne
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,4,"*  Licensed under the Apache License, Version 2.0 (the ""License"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,5,*  you may not use this file except in compliance with the License.
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,6,*  You may obtain a copy of the License at
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,10,"*  Unless required by applicable law or agreed to in writing, software"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,11,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,12,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,13,*  See the License for the specific language governing permissions and
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,14,*  limitations under the License.
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,16,package org.joda.time.format;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,18,import java.io.CharArrayWriter;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,19,import java.util.Locale;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,20,import java.util.TimeZone;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,22,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,23,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,25,import org.joda.time.Chronology;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,26,import org.joda.time.DateTimeConstants;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,27,import org.joda.time.DateTimeUtils;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,28,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,29,import org.joda.time.MutablePeriod;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,30,import org.joda.time.Period;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,31,import org.joda.time.PeriodType;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,34,* This class is a Junit unit test for Period Formating.
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,36,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,38,public class TestPeriodFormatter extends TestCase {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,40,private static final DateTimeZone UTC = DateTimeZone.UTC;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,41,"private static final DateTimeZone PARIS = DateTimeZone.forID(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,42,"private static final DateTimeZone LONDON = DateTimeZone.forID(""Europe/London"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,43,"private static final DateTimeZone TOKYO = DateTimeZone.forID(""Asia/Tokyo"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,44,"private static final DateTimeZone NEWYORK = DateTimeZone.forID(""America/New_York"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,45,private static final Chronology ISO_UTC = Chronology.getISOUTC();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,46,private static final Chronology ISO_PARIS = Chronology.getISO(PARIS);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,47,private static final Chronology BUDDHIST_PARIS = Chronology.getBuddhist(PARIS);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,49,long y2002days = 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,50,366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,51,365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,52,366 + 365;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,53,// 2002-06-09
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,54,private long TEST_TIME_NOW =
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,55,(y2002days + 31L + 28L + 31L + 30L + 31L + 9L -1L) * DateTimeConstants.MILLIS_PER_DAY;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,57,private DateTimeZone originalDateTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,58,private TimeZone originalTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,59,private Locale originalLocale = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,60,private PeriodFormatter f = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,62,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,63,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,66,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,67,return new TestSuite(TestPeriodFormatter.class);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,70,public TestPeriodFormatter(String name) {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,71,super(name);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,74,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,75,DateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,76,originalDateTimeZone = DateTimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,77,originalTimeZone = TimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,78,originalLocale = Locale.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,79,DateTimeZone.setDefault(LONDON);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,80,"TimeZone.setDefault(TimeZone.getTimeZone(""Europe/London""));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,81,Locale.setDefault(Locale.UK);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,82,f = ISOPeriodFormat.getInstance().standard();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,85,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,86,DateTimeUtils.setCurrentMillisSystem();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,87,DateTimeZone.setDefault(originalDateTimeZone);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,88,TimeZone.setDefault(originalTimeZone);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,89,Locale.setDefault(originalLocale);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,90,originalDateTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,91,originalTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,92,originalLocale = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,93,f = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,97,public void testPrint_simple() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,98,"Period p = new Period(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,99,"assertEquals(""P1Y2M3W4DT5H6M7.008S"", f.print(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,103,public void testPrint_bufferMethods() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,104,"Period p = new Period(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,105,StringBuffer buf = new StringBuffer();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,106,"f.printTo(buf, p);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,107,"assertEquals(""P1Y2M3W4DT5H6M7.008S"", buf.toString());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,109,buf = new StringBuffer();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,110,try {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,111,"f.printTo(buf, null);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,112,fail();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,113,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,117,public void testPrint_writerMethods() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,118,"Period p = new Period(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,119,CharArrayWriter out = new CharArrayWriter();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,120,"f.printTo(out, p);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,121,"assertEquals(""P1Y2M3W4DT5H6M7.008S"", out.toString());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,123,out = new CharArrayWriter();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,124,try {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,125,"f.printTo(out, null);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,126,fail();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,127,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,131,public void testWithGetLocaleMethods() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,132,PeriodFormatter f2 = f.withLocale(Locale.FRENCH);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,133,"assertEquals(Locale.FRENCH, f2.getLocale());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,134,"assertSame(f2, f2.withLocale(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,136,f2 = f.withLocale(null);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,137,"assertEquals(null, f2.getLocale());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,138,"assertSame(f2, f2.withLocale(null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,141,public void testWithGetParseTypeMethods() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,142,PeriodFormatter f2 = f.withParseType(PeriodType.dayTime());
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,143,"assertEquals(PeriodType.dayTime(), f2.getParseType());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,144,"assertSame(f2, f2.withParseType(PeriodType.dayTime()));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,146,f2 = f.withParseType(null);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,147,"assertEquals(null, f2.getParseType());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,148,"assertSame(f2, f2.withParseType(null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,151,public void testPrinterParserMethods() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,152,"Period p = new Period(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,153,"PeriodFormatter f2 = new PeriodFormatter(f.getPrinter(), f.getParser());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,154,"assertEquals(f.getPrinter(), f2.getPrinter());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,155,"assertEquals(f.getParser(), f2.getParser());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,156,"assertEquals(true, f2.isPrinter());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,157,"assertEquals(true, f2.isParser());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,158,assertNotNull(f2.print(p));
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,159,"assertNotNull(f2.parsePeriod(""P1Y2M3W4DT5H6M7.008S""));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,161,"f2 = new PeriodFormatter(f.getPrinter(), null);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,162,"assertEquals(f.getPrinter(), f2.getPrinter());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,163,"assertEquals(null, f2.getParser());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,164,"assertEquals(true, f2.isPrinter());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,165,"assertEquals(false, f2.isParser());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,166,assertNotNull(f2.print(p));
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,167,try {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,168,"assertNotNull(f2.parsePeriod(""P1Y2M3W4DT5H6M7.008S""));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,169,fail();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,170,} catch (UnsupportedOperationException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,172,"f2 = new PeriodFormatter(null, f.getParser());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,173,"assertEquals(null, f2.getPrinter());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,174,"assertEquals(f.getParser(), f2.getParser());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,175,"assertEquals(false, f2.isPrinter());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,176,"assertEquals(true, f2.isParser());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,177,try {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,178,f2.print(p);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,179,fail();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,180,} catch (UnsupportedOperationException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,181,"assertNotNull(f2.parsePeriod(""P1Y2M3W4DT5H6M7.008S""));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,185,public void testParsePeriod_simple() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,186,"Period expect = new Period(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,187,"assertEquals(expect, f.parsePeriod(""P1Y2M3W4DT5H6M7.008S""));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,189,try {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,190,"f.parsePeriod(""ABC"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,191,fail();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,192,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,195,public void testParsePeriod_parseType() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,196,"Period expect = new Period(0, 0, 0, 4, 5, 6, 7, 8, PeriodType.dayTime());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,197,"assertEquals(expect, f.withParseType(PeriodType.dayTime()).parsePeriod(""P4DT5H6M7.008S""));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,198,try {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,199,"f.withParseType(PeriodType.dayTime()).parsePeriod(""P3W4DT5H6M7.008S"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,200,fail();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,201,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,205,public void testParseMutablePeriod_simple() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,206,"MutablePeriod expect = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,207,"assertEquals(expect, f.parseMutablePeriod(""P1Y2M3W4DT5H6M7.008S""));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,209,try {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,210,"f.parseMutablePeriod(""ABC"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,211,fail();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,212,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,216,public void testParseInto_simple() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,217,"MutablePeriod expect = new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,218,MutablePeriod result = new MutablePeriod();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,219,"assertEquals(20, f.parseInto(result, ""P1Y2M3W4DT5H6M7.008S"", 0));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,220,"assertEquals(expect, result);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,222,try {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,223,"f.parseInto(null, ""P1Y2M3W4DT5H6M7.008S"", 0);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,224,fail();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,225,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java,227,"assertEquals(~0, f.parseInto(result, ""ABC"", 0));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,100,"ssertEquals(1, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,101,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,100,"assertEquals(1, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,101,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,107,"ssertEquals(1, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,108,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,107,"assertEquals(1, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,108,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,114,"ssertEquals(1, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,115,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,114,"assertEquals(1, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,115,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,121,"ssertEquals(1, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,122,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,121,"assertEquals(1, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,122,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,128,"ssertEquals(1, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,129,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,128,"assertEquals(1, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,129,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,135,"ssertEquals(1, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,136,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,135,"assertEquals(1, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,136,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,142,"ssertEquals(1, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,143,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,142,"assertEquals(1, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,143,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,150,"ssertEquals(5, f.calculatePrintedLength(p));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,151,"ssertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,150,"assertEquals(5, f.getPrinter().calculatePrintedLength(p, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,151,"assertEquals(1, f.getPrinter().countFieldsToPrint(p, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,155,"ssertEquals(5, f.calculatePrintedLength(p));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,156,"ssertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,155,"assertEquals(5, f.getPrinter().calculatePrintedLength(p, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,156,"assertEquals(1, f.getPrinter().countFieldsToPrint(p, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,160,"ssertEquals(5, f.calculatePrintedLength(p));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,161,"ssertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,160,"assertEquals(5, f.getPrinter().calculatePrintedLength(p, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,161,"assertEquals(1, f.getPrinter().countFieldsToPrint(p, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,165,"ssertEquals(5, f.calculatePrintedLength(p));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,166,"ssertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,165,"assertEquals(5, f.getPrinter().calculatePrintedLength(p, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,166,"assertEquals(1, f.getPrinter().countFieldsToPrint(p, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,170,"ssertEquals(5, f.calculatePrintedLength(p));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,171,"ssertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,170,"assertEquals(5, f.getPrinter().calculatePrintedLength(p, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,171,"assertEquals(1, f.getPrinter().countFieldsToPrint(p, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,175,"ssertEquals(5, f.calculatePrintedLength(p));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,176,"ssertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,175,"assertEquals(5, f.getPrinter().calculatePrintedLength(p, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,176,"assertEquals(1, f.getPrinter().countFieldsToPrint(p, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,180,"ssertEquals(6, f.calculatePrintedLength(p));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,181,"ssertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,180,"assertEquals(6, f.getPrinter().calculatePrintedLength(p, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,181,"assertEquals(1, f.getPrinter().countFieldsToPrint(p, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,185,"ssertEquals(6, f.calculatePrintedLength(p));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,186,"ssertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,185,"assertEquals(6, f.getPrinter().calculatePrintedLength(p, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,186,"assertEquals(1, f.getPrinter().countFieldsToPrint(p, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,193,"ssertEquals(1, f.calculatePrintedLength(p));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,194,"ssertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,193,"assertEquals(1, f.getPrinter().calculatePrintedLength(p, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,194,"assertEquals(1, f.getPrinter().countFieldsToPrint(p, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,198,"ssertEquals(5, f.calculatePrintedLength(p));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,199,"ssertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,198,"assertEquals(5, f.getPrinter().calculatePrintedLength(p, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,199,"assertEquals(1, f.getPrinter().countFieldsToPrint(p, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,203,"ssertEquals(5, f.calculatePrintedLength(p));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,204,"ssertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,203,"assertEquals(5, f.getPrinter().calculatePrintedLength(p, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,204,"assertEquals(1, f.getPrinter().countFieldsToPrint(p, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,208,"ssertEquals(1, f.calculatePrintedLength(p));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,209,"ssertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,208,"assertEquals(1, f.getPrinter().calculatePrintedLength(p, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,209,"assertEquals(1, f.getPrinter().countFieldsToPrint(p, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,213,"ssertEquals(5, f.calculatePrintedLength(p));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,214,"ssertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,213,"assertEquals(5, f.getPrinter().calculatePrintedLength(p, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,214,"assertEquals(1, f.getPrinter().countFieldsToPrint(p, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,218,"ssertEquals(5, f.calculatePrintedLength(p));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,219,"ssertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,218,"assertEquals(5, f.getPrinter().calculatePrintedLength(p, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,219,"assertEquals(1, f.getPrinter().countFieldsToPrint(p, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,223,"ssertEquals(6, f.calculatePrintedLength(p));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,224,"ssertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,223,"assertEquals(6, f.getPrinter().calculatePrintedLength(p, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,224,"assertEquals(1, f.getPrinter().countFieldsToPrint(p, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,228,"ssertEquals(6, f.calculatePrintedLength(p));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,229,"ssertEquals(1, f.countFieldsToPrint(p));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,228,"assertEquals(6, f.getPrinter().calculatePrintedLength(p, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,229,"assertEquals(1, f.getPrinter().countFieldsToPrint(p, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,235,"ssertEquals(1, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,236,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,235,"assertEquals(1, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,236,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,242,"ssertEquals(3, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,243,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,242,"assertEquals(3, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,243,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,250,"ssertEquals(7, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,251,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,250,"assertEquals(7, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,251,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,257,"ssertEquals(7, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,258,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,257,"assertEquals(7, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,258,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,271,"ssertEquals(6, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,272,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,271,"assertEquals(6, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,272,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,278,"ssertEquals(7, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,279,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,278,"assertEquals(7, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,279,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,301,"ssertEquals(7, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,302,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,301,"assertEquals(7, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,302,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,308,"ssertEquals(7, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,309,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,308,"assertEquals(7, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,309,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,329,"ssertEquals(6, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,330,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,329,"assertEquals(6, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,330,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,336,"ssertEquals(7, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,337,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,336,"assertEquals(7, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,337,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,366,"ssertEquals(3, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,367,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,366,"assertEquals(3, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,367,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,374,"ssertEquals(3, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,375,"ssertEquals(2, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,374,"assertEquals(3, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,375,"assertEquals(2, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,378,"ssertEquals(1, f.calculatePrintedLength(TIME_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,379,"ssertEquals(1, f.countFieldsToPrint(TIME_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,378,"assertEquals(1, f.getPrinter().calculatePrintedLength(TIME_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,379,"assertEquals(1, f.getPrinter().countFieldsToPrint(TIME_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,382,"ssertEquals(1, f.calculatePrintedLength(DATE_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,383,"ssertEquals(1, f.countFieldsToPrint(DATE_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,382,"assertEquals(1, f.getPrinter().calculatePrintedLength(DATE_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,383,"assertEquals(1, f.getPrinter().countFieldsToPrint(DATE_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,393,"ssertEquals(10, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,394,"ssertEquals(3, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,393,"assertEquals(10, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,394,"assertEquals(3, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,397,"ssertEquals(7, f.calculatePrintedLength(TIME_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,398,"ssertEquals(2, f.countFieldsToPrint(TIME_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,397,"assertEquals(7, f.getPrinter().calculatePrintedLength(TIME_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,398,"assertEquals(2, f.getPrinter().countFieldsToPrint(TIME_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,401,"ssertEquals(1, f.calculatePrintedLength(DATE_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,402,"ssertEquals(1, f.countFieldsToPrint(DATE_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,401,"assertEquals(1, f.getPrinter().calculatePrintedLength(DATE_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,402,"assertEquals(1, f.getPrinter().countFieldsToPrint(DATE_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,408,"ssertEquals(3, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,409,"ssertEquals(2, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,408,"assertEquals(3, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,409,"assertEquals(2, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,412,"ssertEquals(2, f.calculatePrintedLength(TIME_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,413,"ssertEquals(1, f.countFieldsToPrint(TIME_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,412,"assertEquals(2, f.getPrinter().calculatePrintedLength(TIME_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,413,"assertEquals(1, f.getPrinter().countFieldsToPrint(TIME_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,416,"ssertEquals(1, f.calculatePrintedLength(DATE_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,417,"ssertEquals(1, f.countFieldsToPrint(DATE_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,416,"assertEquals(1, f.getPrinter().calculatePrintedLength(DATE_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,417,"assertEquals(1, f.getPrinter().countFieldsToPrint(DATE_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,423,"ssertEquals(3, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,424,"ssertEquals(2, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,423,"assertEquals(3, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,424,"assertEquals(2, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,427,"ssertEquals(1, f.calculatePrintedLength(TIME_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,428,"ssertEquals(1, f.countFieldsToPrint(TIME_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,427,"assertEquals(1, f.getPrinter().calculatePrintedLength(TIME_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,428,"assertEquals(1, f.getPrinter().countFieldsToPrint(TIME_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,431,"ssertEquals(2, f.calculatePrintedLength(DATE_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,432,"ssertEquals(1, f.countFieldsToPrint(DATE_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,431,"assertEquals(2, f.getPrinter().calculatePrintedLength(DATE_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,432,"assertEquals(1, f.getPrinter().countFieldsToPrint(DATE_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,439,"ssertEquals(5, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,440,"ssertEquals(0, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,439,"assertEquals(5, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,440,"assertEquals(0, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,447,"ssertEquals(3, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,448,"ssertEquals(2, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,447,"assertEquals(3, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,448,"assertEquals(2, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,454,"ssertEquals(4, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,455,"ssertEquals(1, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,454,"assertEquals(4, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,455,"assertEquals(1, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,467,"ssertEquals(7, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,468,"ssertEquals(4, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,467,"assertEquals(7, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,468,"assertEquals(4, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,471,"ssertEquals(4, f.calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,472,"ssertEquals(1, f.countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,471,"assertEquals(4, f.getPrinter().calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,472,"assertEquals(1, f.getPrinter().countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,475,"ssertEquals(5, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,476,"ssertEquals(2, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,475,"assertEquals(5, f.getPrinter().calculatePrintedLength(YEAR_DAY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,476,"assertEquals(2, f.getPrinter().countFieldsToPrint(YEAR_DAY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,479,"ssertEquals(4, f.calculatePrintedLength(EMPTY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,480,"ssertEquals(1, f.countFieldsToPrint(EMPTY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,479,"assertEquals(4, f.getPrinter().calculatePrintedLength(EMPTY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,480,"assertEquals(1, f.getPrinter().countFieldsToPrint(EMPTY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,487,"ssertEquals(2, f.calculatePrintedLength(EMPTY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,488,"ssertEquals(1, f.countFieldsToPrint(EMPTY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,487,"assertEquals(2, f.getPrinter().calculatePrintedLength(EMPTY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,488,"assertEquals(1, f.getPrinter().countFieldsToPrint(EMPTY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,500,"ssertEquals(7, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,501,"ssertEquals(4, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,500,"assertEquals(7, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,501,"assertEquals(4, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,504,"ssertEquals(4, f.calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,505,"ssertEquals(1, f.countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,504,"assertEquals(4, f.getPrinter().calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,505,"assertEquals(1, f.getPrinter().countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,508,"ssertEquals(5, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,509,"ssertEquals(2, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,508,"assertEquals(5, f.getPrinter().calculatePrintedLength(YEAR_DAY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,509,"assertEquals(2, f.getPrinter().countFieldsToPrint(YEAR_DAY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,512,"ssertEquals(4, f.calculatePrintedLength(EMPTY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,513,"ssertEquals(1, f.countFieldsToPrint(EMPTY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,512,"assertEquals(4, f.getPrinter().calculatePrintedLength(EMPTY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,513,"assertEquals(1, f.getPrinter().countFieldsToPrint(EMPTY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,525,"ssertEquals(7, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,526,"ssertEquals(4, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,525,"assertEquals(7, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,526,"assertEquals(4, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,529,"ssertEquals(4, f.calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,530,"ssertEquals(1, f.countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,529,"assertEquals(4, f.getPrinter().calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,530,"assertEquals(1, f.getPrinter().countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,533,"ssertEquals(5, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,534,"ssertEquals(2, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,533,"assertEquals(5, f.getPrinter().calculatePrintedLength(YEAR_DAY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,534,"assertEquals(2, f.getPrinter().countFieldsToPrint(YEAR_DAY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,537,"ssertEquals(4, f.calculatePrintedLength(EMPTY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,538,"ssertEquals(1, f.countFieldsToPrint(EMPTY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,537,"assertEquals(4, f.getPrinter().calculatePrintedLength(EMPTY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,538,"assertEquals(1, f.getPrinter().countFieldsToPrint(EMPTY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,550,"ssertEquals(7, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,551,"ssertEquals(4, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,550,"assertEquals(7, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,551,"assertEquals(4, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,554,"ssertEquals(5, f.calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,555,"ssertEquals(2, f.countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,554,"assertEquals(5, f.getPrinter().calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,555,"assertEquals(2, f.getPrinter().countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,558,"ssertEquals(5, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,559,"ssertEquals(2, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,558,"assertEquals(5, f.getPrinter().calculatePrintedLength(YEAR_DAY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,559,"assertEquals(2, f.getPrinter().countFieldsToPrint(YEAR_DAY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,562,"ssertEquals(7, f.calculatePrintedLength(EMPTY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,563,"ssertEquals(4, f.countFieldsToPrint(EMPTY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,562,"assertEquals(7, f.getPrinter().calculatePrintedLength(EMPTY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,563,"assertEquals(4, f.getPrinter().countFieldsToPrint(EMPTY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,575,"ssertEquals(7, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,576,"ssertEquals(4, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,575,"assertEquals(7, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,576,"assertEquals(4, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,579,"ssertEquals(7, f.calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,580,"ssertEquals(4, f.countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,579,"assertEquals(7, f.getPrinter().calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,580,"assertEquals(4, f.getPrinter().countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,583,"ssertEquals(7, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,584,"ssertEquals(4, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,583,"assertEquals(7, f.getPrinter().calculatePrintedLength(YEAR_DAY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,584,"assertEquals(4, f.getPrinter().countFieldsToPrint(YEAR_DAY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,587,"ssertEquals(7, f.calculatePrintedLength(EMPTY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,588,"ssertEquals(4, f.countFieldsToPrint(EMPTY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,587,"assertEquals(7, f.getPrinter().calculatePrintedLength(EMPTY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,588,"assertEquals(4, f.getPrinter().countFieldsToPrint(EMPTY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,600,"ssertEquals(7, f.calculatePrintedLength(PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,601,"ssertEquals(4, f.countFieldsToPrint(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,600,"assertEquals(7, f.getPrinter().calculatePrintedLength(PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,601,"assertEquals(4, f.getPrinter().countFieldsToPrint(PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,604,"ssertEquals(3, f.calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,605,"ssertEquals(0, f.countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,604,"assertEquals(3, f.getPrinter().calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,605,"assertEquals(0, f.getPrinter().countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,608,"ssertEquals(5, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,609,"ssertEquals(2, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,608,"assertEquals(5, f.getPrinter().calculatePrintedLength(YEAR_DAY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,609,"assertEquals(2, f.getPrinter().countFieldsToPrint(YEAR_DAY_PERIOD, Integer.MAX_VALUE, null));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,612,"ssertEquals(3, f.calculatePrintedLength(EMPTY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,613,"ssertEquals(0, f.countFieldsToPrint(EMPTY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,612,"assertEquals(3, f.getPrinter().calculatePrintedLength(EMPTY_PERIOD, null));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,613,"assertEquals(0, f.getPrinter().countFieldsToPrint(EMPTY_PERIOD, Integer.MAX_VALUE, null));"
