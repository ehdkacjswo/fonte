is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,57,import java.util.Locale;
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,59,mport org.joda.time.property.DateTimeFieldProperty;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,60,import org.joda.time.property.AbstractReadableInstantFieldProperty;
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,401,ublic final DateTimeFieldProperty era() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,402,"eturn new DateTimeFieldProperty(this, getChronology().era());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,402,public final Property era() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,403,"return new Property(this, getChronology().era());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,410,ublic final DateTimeFieldProperty centuryOfEra() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,411,"eturn new DateTimeFieldProperty(this, getChronology().centuryOfEra());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,411,public final Property centuryOfEra() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,412,"return new Property(this, getChronology().centuryOfEra());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,419,ublic final DateTimeFieldProperty yearOfCentury() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,420,"eturn new DateTimeFieldProperty(this, getChronology().yearOfCentury());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,420,public final Property yearOfCentury() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,421,"return new Property(this, getChronology().yearOfCentury());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,428,ublic final DateTimeFieldProperty yearOfEra() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,429,"eturn new DateTimeFieldProperty(this, getChronology().yearOfEra());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,429,public final Property yearOfEra() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,430,"return new Property(this, getChronology().yearOfEra());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,437,ublic final DateTimeFieldProperty year() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,438,"eturn new DateTimeFieldProperty(this, getChronology().year());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,438,public final Property year() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,439,"return new Property(this, getChronology().year());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,446,ublic final DateTimeFieldProperty weekyear() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,447,"eturn new DateTimeFieldProperty(this, getChronology().weekyear());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,447,public final Property weekyear() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,448,"return new Property(this, getChronology().weekyear());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,455,ublic final DateTimeFieldProperty monthOfYear() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,456,"eturn new DateTimeFieldProperty(this, getChronology().monthOfYear());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,456,public final Property monthOfYear() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,457,"return new Property(this, getChronology().monthOfYear());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,464,ublic final DateTimeFieldProperty weekOfWeekyear() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,465,"eturn new DateTimeFieldProperty(this, getChronology().weekOfWeekyear());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,465,public final Property weekOfWeekyear() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,466,"return new Property(this, getChronology().weekOfWeekyear());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,473,ublic final DateTimeFieldProperty dayOfYear() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,474,"eturn new DateTimeFieldProperty(this, getChronology().dayOfYear());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,474,public final Property dayOfYear() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,475,"return new Property(this, getChronology().dayOfYear());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,482,ublic final DateTimeFieldProperty dayOfMonth() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,483,"eturn new DateTimeFieldProperty(this, getChronology().dayOfMonth());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,483,public final Property dayOfMonth() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,484,"return new Property(this, getChronology().dayOfMonth());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,491,ublic final DateTimeFieldProperty dayOfWeek() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,492,"eturn new DateTimeFieldProperty(this, getChronology().dayOfWeek());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,492,public final Property dayOfWeek() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,493,"return new Property(this, getChronology().dayOfWeek());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,502,ublic final DateTimeFieldProperty hourOfDay() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,503,"eturn new DateTimeFieldProperty(this, getChronology().hourOfDay());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,503,public final Property hourOfDay() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,504,"return new Property(this, getChronology().hourOfDay());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,511,ublic final DateTimeFieldProperty minuteOfDay() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,512,"eturn new DateTimeFieldProperty(this, getChronology().minuteOfDay());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,512,public final Property minuteOfDay() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,513,"return new Property(this, getChronology().minuteOfDay());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,520,ublic final DateTimeFieldProperty minuteOfHour() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,521,"eturn new DateTimeFieldProperty(this, getChronology().minuteOfHour());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,521,public final Property minuteOfHour() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,522,"return new Property(this, getChronology().minuteOfHour());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,529,ublic final DateTimeFieldProperty secondOfDay() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,530,"eturn new DateTimeFieldProperty(this, getChronology().secondOfDay());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,530,public final Property secondOfDay() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,531,"return new Property(this, getChronology().secondOfDay());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,538,ublic final DateTimeFieldProperty secondOfMinute() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,539,"eturn new DateTimeFieldProperty(this, getChronology().secondOfMinute());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,539,public final Property secondOfMinute() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,540,"return new Property(this, getChronology().secondOfMinute());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,547,ublic final DateTimeFieldProperty millisOfDay() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,548,"eturn new DateTimeFieldProperty(this, getChronology().millisOfDay());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,548,public final Property millisOfDay() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,549,"return new Property(this, getChronology().millisOfDay());"
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,556,ublic final DateTimeFieldProperty millisOfSecond() {
False,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,557,"eturn new DateTimeFieldProperty(this, getChronology().millisOfSecond());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,557,public final Property millisOfSecond() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,558,"return new Property(this, getChronology().millisOfSecond());"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,587,* DateTime.Property binds a DateTime to a DateTimeField allowing powerful
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,588,* datetime functionality to be easily accessed.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,589,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,590,"* The simplest use of this class is as an alternative get method, here used to"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,591,* get the year '1972' (as an int) and the month 'December' (as a String).
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,592,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,593,"* DateTime dt = new DateTime(1972, 12, 3, 0, 0, 0, 0);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,594,* int year = dt.year().get();
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,595,* String monthStr = dt.month().getAsText();
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,596,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,597,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,598,* Methods are also provided that allow date modification. These return new instances
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,599,* of DateTime - they do not modify the original. The example below yields two
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,600,* independent immutable date objects 20 years apart.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,601,* <pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,602,"* DateTime dt = new DateTime(1972, 12, 3, 0, 0, 0, 0);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,603,* DateTime dt20 = dt.year().addToCopy(20);
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,604,* </pre>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,605,* Serious modification of dates (ie. more than just changing one or two fields)
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,606,* should use the {@link org.joda.time.MutableDateTime MutableDateTime} class.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,607,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,608,"* DateTime.Propery itself is thread-safe and immutable, as well as the"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,609,* DateTime being operated on.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,611,* @author Stephen Colebourne
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,612,* @author Brian S O'Neill
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,613,* @since 1.0
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,615,public static class Property extends AbstractReadableInstantFieldProperty {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,617,static final long serialVersionUID = -6983323811635733510L;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,619,/** The instant this property is working against */
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,620,private final DateTime iInstant;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,621,/** The field this property is working against */
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,622,private final DateTimeField iField;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,625,* Constructor.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,627,* @param instant  the instant to set
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,628,* @param field  the field to use
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,630,"Property(DateTime instant, DateTimeField field) {"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,631,super();
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,632,iInstant = instant;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,633,iField = field;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,638,* Gets the field being used.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,640,* @return the field
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,642,public DateTimeField getField() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,643,return iField;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,647,* Gets the instant being used.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,649,* @return the instant
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,651,public ReadableInstant getReadableInstant() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,652,return iInstant;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,656,* Gets the datetime being used.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,658,* @return the datetime
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,660,public DateTime getDateTime() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,661,return iInstant;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,666,* Adds to this field in a copy of this DateTime.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,667,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,668,* The DateTime attached to this property is unchanged by this call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,669,* This operation is faster than converting a DateTime to a MutableDateTime
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,670,"* and back again when setting one field. When setting multiple fields,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,671,* it is generally quicker to make the conversion to MutableDateTime.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,673,* @param value  the value to add to the field in the copy
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,674,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,675,* @throws IllegalArgumentException if the value isn't valid
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,677,public DateTime addToCopy(int value) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,678,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,679,"return instant.withMillis(iField.add(instant.getMillis(), value));"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,683,* Adds to this field in a copy of this DateTime.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,684,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,685,* The DateTime attached to this property is unchanged by this call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,686,* This operation is faster than converting a DateTime to a MutableDateTime
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,687,"* and back again when setting one field. When setting multiple fields,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,688,* it is generally quicker to make the conversion to MutableDateTime.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,690,* @param value  the value to add to the field in the copy
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,691,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,692,* @throws IllegalArgumentException if the value isn't valid
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,694,public DateTime addToCopy(long value) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,695,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,696,"return instant.withMillis(iField.add(instant.getMillis(), value));"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,700,"* Adds to this field, possibly wrapped, in a copy of this DateTime."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,701,* A wrapped operation only changes this field.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,702,* Thus 31st January addWrapField one day goes to the 1st January.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,703,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,704,* The DateTime attached to this property is unchanged by this call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,705,* This operation is faster than converting a DateTime to a MutableDateTime
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,706,"* and back again when setting one field. When setting multiple fields,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,707,* it is generally quicker to make the conversion to MutableDateTime.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,709,* @param value  the value to add to the field in the copy
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,710,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,711,* @throws IllegalArgumentException if the value isn't valid
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,713,public DateTime addWrapFieldToCopy(int value) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,714,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,715,"return instant.withMillis(iField.addWrapField(instant.getMillis(), value));"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,720,* Sets this field in a copy of the DateTime.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,721,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,722,* The DateTime attached to this property is unchanged by this call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,723,* This operation is faster than converting a DateTime to a MutableDateTime
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,724,"* and back again when setting one field. When setting multiple fields,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,725,* it is generally quicker to make the conversion to MutableDateTime.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,727,* @param value  the value to set the field in the copy to
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,728,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,729,* @throws IllegalArgumentException if the value isn't valid
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,731,public DateTime setCopy(int value) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,732,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,733,"return instant.withMillis(iField.set(instant.getMillis(), value));"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,737,* Sets this field in a copy of the DateTime to a parsed text value.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,738,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,739,* The DateTime attached to this property is unchanged by this call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,740,* This operation is faster than converting a DateTime to a MutableDateTime
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,741,"* and back again when setting one field. When setting multiple fields,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,742,* it is generally quicker to make the conversion to MutableDateTime.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,744,* @param text  the text value to set
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,745,* @param locale  optional locale to use for selecting a text symbol
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,746,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,747,* @throws IllegalArgumentException if the text value isn't valid
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,749,"public DateTime setCopy(String text, Locale locale) {"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,750,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,751,"return instant.withMillis(iField.set(instant.getMillis(), text, locale));"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,755,* Sets this field in a copy of the DateTime to a parsed text value.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,756,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,757,* The DateTime attached to this property is unchanged by this call.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,758,* This operation is faster than converting a DateTime to a MutableDateTime
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,759,"* and back again when setting one field. When setting multiple fields,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,760,* it is generally quicker to make the conversion to MutableDateTime.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,762,* @param text  the text value to set
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,763,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,764,* @throws IllegalArgumentException if the text value isn't valid
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,766,public final DateTime setCopy(String text) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,767,"return setCopy(text, null);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,772,* Rounds to the lowest whole unit of this field on a copy of this DateTime.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,774,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,776,public DateTime roundFloorCopy() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,777,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,778,return instant.withMillis(iField.roundFloor(instant.getMillis()));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,782,* Rounds to the highest whole unit of this field on a copy of this DateTime.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,784,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,786,public DateTime roundCeilingCopy() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,787,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,788,return instant.withMillis(iField.roundCeiling(instant.getMillis()));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,792,"* Rounds to the nearest whole unit of this field on a copy of this DateTime,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,793,* favoring the floor if halfway.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,795,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,797,public DateTime roundHalfFloorCopy() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,798,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,799,return instant.withMillis(iField.roundHalfFloor(instant.getMillis()));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,803,"* Rounds to the nearest whole unit of this field on a copy of this DateTime,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,804,* favoring the ceiling if halfway.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,806,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,808,public DateTime roundHalfCeilingCopy() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,809,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,810,return instant.withMillis(iField.roundHalfCeiling(instant.getMillis()));
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,814,* Rounds to the nearest whole unit of this field on a copy of this
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,815,"* DateTime.  If halfway, the ceiling is favored over the floor only if"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,816,* it makes this field's value even.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,818,* @return a copy of the DateTime with the field value changed
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,820,public DateTime roundHalfEvenCopy() {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,821,DateTime instant = iInstant;
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,822,return instant.withMillis(iField.roundHalfEven(instant.getMillis()));
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,6, All rights reserved.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,10, are met:
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,18,    distribution.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,33,    permission of the Joda project.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,46, SUCH DAMAGE.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,54,ackage org.joda.time.property;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,56,mport java.util.Locale;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,58,mport org.joda.time.DateTime;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,59,mport org.joda.time.DateTimeField;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,60,mport org.joda.time.ReadableInstant;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,63, DateTimeFieldProperty binds a DateTime to a DateTimeField allowing powerful
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,64, datetime functionality to be easily accessed.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,65, <p>
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,66," The simplest use of this class is as an alternative get method, here used to"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,67, get the year '1972' (as an int) and the month 'December' (as a String).
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,68, <pre>
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,69," DateTime dt = new DateTime(1972, 12, 3, 0, 0, 0, 0);"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,70, int year = dt.year().get();
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,71, String monthStr = dt.month().getAsText();
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,72, </pre>
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,73, <p>
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,74, Methods are also provided that allow date modification. These return new instances
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,75, of DateTime - they do not modify the original. The example below yields two
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,76, independent immutable date objects 20 years apart.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,77, <pre>
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,78," DateTime dt = new DateTime(1972, 12, 3, 0, 0, 0, 0);"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,79, DateTime dt20 = dt.year().addToCopy(20);
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,80, </pre>
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,81, Serious modification of dates (ie. more than just changing one or two fields)
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,82, should use the {@link org.joda.time.MutableDateTime MutableDateTime} class.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,83, <p>
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,84," DateTimeFieldPropery itself is thread-safe and immutable, as well as the"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,85, DateTime being operated on.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,87, @author Stephen Colebourne
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,88, @author Brian S O'Neill
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,89, @since 1.0
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,91,ublic class DateTimeFieldProperty extends AbstractReadableInstantFieldProperty {
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,93,tatic final long serialVersionUID = -6983323811635733510L;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,95,** The instant this property is working against */
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,96,rivate final DateTime iInstant;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,97,** The field this property is working against */
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,98,rivate final DateTimeField iField;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,101, Constructor.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,103, @param instant  the instant to set
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,104, @param field  the field to use
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,106,"ublic DateTimeFieldProperty(DateTime instant, DateTimeField field) {"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,107,uper();
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,108,Instant = instant;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,109,Field = field;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,114, Gets the field being used.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,116, @return the field
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,118,ublic DateTimeField getField() {
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,119,eturn iField;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,123, Gets the instant being used.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,125, @return the instant
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,127,ublic ReadableInstant getReadableInstant() {
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,128,eturn iInstant;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,132, Gets the datetime being used.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,134, @return the datetime
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,136,ublic DateTime getDateTime() {
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,137,eturn iInstant;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,142, Adds to this field in a copy of this DateTime.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,143, <p>
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,144, The DateTime attached to this property is unchanged by this call.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,145, This operation is faster than converting a DateTime to a MutableDateTime
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,146," and back again when setting one field. When setting multiple fields,"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,147, it is generally quicker to make the conversion to MutableDateTime.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,149, @param value  the value to add to the field in the copy
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,150, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,151, @throws IllegalArgumentException if the value isn't valid
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,153,ublic DateTime addToCopy(int value) {
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,154,ateTime instant = iInstant;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,155,"eturn instant.withMillis(iField.add(instant.getMillis(), value));"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,159, Adds to this field in a copy of this DateTime.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,160, <p>
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,161, The DateTime attached to this property is unchanged by this call.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,162, This operation is faster than converting a DateTime to a MutableDateTime
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,163," and back again when setting one field. When setting multiple fields,"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,164, it is generally quicker to make the conversion to MutableDateTime.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,166, @param value  the value to add to the field in the copy
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,167, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,168, @throws IllegalArgumentException if the value isn't valid
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,170,ublic DateTime addToCopy(long value) {
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,171,ateTime instant = iInstant;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,172,"eturn instant.withMillis(iField.add(instant.getMillis(), value));"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,176," Adds to this field, possibly wrapped, in a copy of this DateTime."
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,177, A wrapped operation only changes this field.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,178, Thus 31st January addWrapField one day goes to the 1st January.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,179, <p>
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,180, The DateTime attached to this property is unchanged by this call.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,181, This operation is faster than converting a DateTime to a MutableDateTime
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,182," and back again when setting one field. When setting multiple fields,"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,183, it is generally quicker to make the conversion to MutableDateTime.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,185, @param value  the value to add to the field in the copy
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,186, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,187, @throws IllegalArgumentException if the value isn't valid
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,189,ublic DateTime addWrapFieldToCopy(int value) {
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,190,ateTime instant = iInstant;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,191,"eturn instant.withMillis(iField.addWrapField(instant.getMillis(), value));"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,196, Sets this field in a copy of the DateTime.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,197, <p>
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,198, The DateTime attached to this property is unchanged by this call.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,199, This operation is faster than converting a DateTime to a MutableDateTime
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,200," and back again when setting one field. When setting multiple fields,"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,201, it is generally quicker to make the conversion to MutableDateTime.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,203, @param value  the value to set the field in the copy to
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,204, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,205, @throws IllegalArgumentException if the value isn't valid
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,207,ublic DateTime setCopy(int value) {
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,208,ateTime instant = iInstant;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,209,"eturn instant.withMillis(iField.set(instant.getMillis(), value));"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,213, Sets this field in a copy of the DateTime to a parsed text value.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,214, <p>
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,215, The DateTime attached to this property is unchanged by this call.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,216, This operation is faster than converting a DateTime to a MutableDateTime
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,217," and back again when setting one field. When setting multiple fields,"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,218, it is generally quicker to make the conversion to MutableDateTime.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,220, @param text  the text value to set
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,221, @param locale  optional locale to use for selecting a text symbol
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,222, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,223, @throws IllegalArgumentException if the text value isn't valid
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,225,"ublic DateTime setCopy(String text, Locale locale) {"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,226,ateTime instant = iInstant;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,227,"eturn instant.withMillis(iField.set(instant.getMillis(), text, locale));"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,231, Sets this field in a copy of the DateTime to a parsed text value.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,232, <p>
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,233, The DateTime attached to this property is unchanged by this call.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,234, This operation is faster than converting a DateTime to a MutableDateTime
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,235," and back again when setting one field. When setting multiple fields,"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,236, it is generally quicker to make the conversion to MutableDateTime.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,238, @param text  the text value to set
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,239, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,240, @throws IllegalArgumentException if the text value isn't valid
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,242,ublic final DateTime setCopy(String text) {
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,243,"eturn setCopy(text, null);"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,248, Rounds to the lowest whole unit of this field on a copy of this DateTime.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,250, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,252,ublic DateTime roundFloorCopy() {
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,253,ateTime instant = iInstant;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,254,eturn instant.withMillis(iField.roundFloor(instant.getMillis()));
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,258, Rounds to the highest whole unit of this field on a copy of this DateTime.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,260, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,262,ublic DateTime roundCeilingCopy() {
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,263,ateTime instant = iInstant;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,264,eturn instant.withMillis(iField.roundCeiling(instant.getMillis()));
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,268," Rounds to the nearest whole unit of this field on a copy of this DateTime,"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,269, favoring the floor if halfway.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,271, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,273,ublic DateTime roundHalfFloorCopy() {
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,274,ateTime instant = iInstant;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,275,eturn instant.withMillis(iField.roundHalfFloor(instant.getMillis()));
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,279," Rounds to the nearest whole unit of this field on a copy of this DateTime,"
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,280, favoring the ceiling if halfway.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,282, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,284,ublic DateTime roundHalfCeilingCopy() {
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,285,ateTime instant = iInstant;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,286,eturn instant.withMillis(iField.roundHalfCeiling(instant.getMillis()));
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,290, Rounds to the nearest whole unit of this field on a copy of this DateTime.
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,291," If halfway, the ceiling is favored over the floor only if it makes this field's value even."
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,293, @return a copy of the DateTime with the field value changed
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,295,ublic DateTime roundHalfEvenCopy() {
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,296,ateTime instant = iInstant;
False,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,JodaTime/src/java/org/joda/time/property/DateTimeFieldProperty.java,297,eturn instant.withMillis(iField.roundHalfEven(instant.getMillis()));
