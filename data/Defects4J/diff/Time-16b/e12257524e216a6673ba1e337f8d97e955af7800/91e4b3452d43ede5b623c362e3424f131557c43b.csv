is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/main/java/org/joda/time/Duration.java,JodaTime/src/main/java/org/joda/time/Duration.java,49,* Parses a {@code Duration} from the specified string.
True,JodaTime/src/main/java/org/joda/time/Duration.java,JodaTime/src/main/java/org/joda/time/Duration.java,50,* <p>
True,JodaTime/src/main/java/org/joda/time/Duration.java,JodaTime/src/main/java/org/joda/time/Duration.java,51,"* This parses the format {@code PTa.bS}, as per {@link #toString()}."
True,JodaTime/src/main/java/org/joda/time/Duration.java,JodaTime/src/main/java/org/joda/time/Duration.java,53,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/Duration.java,JodaTime/src/main/java/org/joda/time/Duration.java,54,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/Duration.java,JodaTime/src/main/java/org/joda/time/Duration.java,56,public static Duration parse(String str) {
True,JodaTime/src/main/java/org/joda/time/Duration.java,JodaTime/src/main/java/org/joda/time/Duration.java,57,return new Duration(str);
True,JodaTime/src/main/java/org/joda/time/Interval.java,JodaTime/src/main/java/org/joda/time/Interval.java,59,* Parses a {@code Interval} from the specified string.
True,JodaTime/src/main/java/org/joda/time/Interval.java,JodaTime/src/main/java/org/joda/time/Interval.java,60,* <p>
True,JodaTime/src/main/java/org/joda/time/Interval.java,JodaTime/src/main/java/org/joda/time/Interval.java,61,* The String formats are described by {@link ISODateTimeFormat#dateTimeParser()}
True,JodaTime/src/main/java/org/joda/time/Interval.java,JodaTime/src/main/java/org/joda/time/Interval.java,62,"* and {@link ISOPeriodFormat#standard()}, and may be 'datetime/datetime',"
True,JodaTime/src/main/java/org/joda/time/Interval.java,JodaTime/src/main/java/org/joda/time/Interval.java,63,* 'datetime/period' or 'period/datetime'.
True,JodaTime/src/main/java/org/joda/time/Interval.java,JodaTime/src/main/java/org/joda/time/Interval.java,65,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/Interval.java,JodaTime/src/main/java/org/joda/time/Interval.java,66,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/Interval.java,JodaTime/src/main/java/org/joda/time/Interval.java,68,public static Interval parse(String str) {
True,JodaTime/src/main/java/org/joda/time/Interval.java,JodaTime/src/main/java/org/joda/time/Interval.java,69,return new Interval(str);
True,JodaTime/src/main/java/org/joda/time/MutableInterval.java,JodaTime/src/main/java/org/joda/time/MutableInterval.java,61,* Parses a {@code MutableInterval} from the specified string.
True,JodaTime/src/main/java/org/joda/time/MutableInterval.java,JodaTime/src/main/java/org/joda/time/MutableInterval.java,62,* <p>
True,JodaTime/src/main/java/org/joda/time/MutableInterval.java,JodaTime/src/main/java/org/joda/time/MutableInterval.java,63,* The String formats are described by {@link ISODateTimeFormat#dateTimeParser()}
True,JodaTime/src/main/java/org/joda/time/MutableInterval.java,JodaTime/src/main/java/org/joda/time/MutableInterval.java,64,"* and {@link ISOPeriodFormat#standard()}, and may be 'datetime/datetime',"
True,JodaTime/src/main/java/org/joda/time/MutableInterval.java,JodaTime/src/main/java/org/joda/time/MutableInterval.java,65,* 'datetime/period' or 'period/datetime'.
True,JodaTime/src/main/java/org/joda/time/MutableInterval.java,JodaTime/src/main/java/org/joda/time/MutableInterval.java,67,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/MutableInterval.java,JodaTime/src/main/java/org/joda/time/MutableInterval.java,68,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/MutableInterval.java,JodaTime/src/main/java/org/joda/time/MutableInterval.java,70,public static MutableInterval parse(String str) {
True,JodaTime/src/main/java/org/joda/time/MutableInterval.java,JodaTime/src/main/java/org/joda/time/MutableInterval.java,71,return new MutableInterval(str);
True,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,23,import org.joda.time.format.PeriodFormatter;
True,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,64,* Parses a {@code MutablePeriod} from the specified string.
True,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,65,* <p>
True,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,66,* This uses {@link ISOPeriodFormat#standard()}.
True,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,68,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,69,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,71,public static MutablePeriod parse(String str) {
True,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,72,"return parse(str, ISOPeriodFormat.standard());"
True,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,76,* Parses a {@code MutablePeriod} from the specified string using a formatter.
True,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,78,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,79,"* @param formatter  the formatter to use, not null"
True,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,80,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,82,"public static MutablePeriod parse(String str, PeriodFormatter formatter) {"
True,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,JodaTime/src/main/java/org/joda/time/MutablePeriod.java,83,return formatter.parsePeriod(str).toMutablePeriod();
True,JodaTime/src/main/java/org/joda/time/Period.java,JodaTime/src/main/java/org/joda/time/Period.java,24,import org.joda.time.format.PeriodFormatter;
True,JodaTime/src/main/java/org/joda/time/Period.java,JodaTime/src/main/java/org/joda/time/Period.java,71,* Parses a {@code Period} from the specified string.
True,JodaTime/src/main/java/org/joda/time/Period.java,JodaTime/src/main/java/org/joda/time/Period.java,72,* <p>
True,JodaTime/src/main/java/org/joda/time/Period.java,JodaTime/src/main/java/org/joda/time/Period.java,73,* This uses {@link ISOPeriodFormat#standard()}.
True,JodaTime/src/main/java/org/joda/time/Period.java,JodaTime/src/main/java/org/joda/time/Period.java,75,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/Period.java,JodaTime/src/main/java/org/joda/time/Period.java,76,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/Period.java,JodaTime/src/main/java/org/joda/time/Period.java,78,public static Period parse(String str) {
True,JodaTime/src/main/java/org/joda/time/Period.java,JodaTime/src/main/java/org/joda/time/Period.java,79,"return parse(str, ISOPeriodFormat.standard());"
True,JodaTime/src/main/java/org/joda/time/Period.java,JodaTime/src/main/java/org/joda/time/Period.java,83,* Parses a {@code Period} from the specified string using a formatter.
True,JodaTime/src/main/java/org/joda/time/Period.java,JodaTime/src/main/java/org/joda/time/Period.java,85,"* @param str  the string to parse, not null"
True,JodaTime/src/main/java/org/joda/time/Period.java,JodaTime/src/main/java/org/joda/time/Period.java,86,"* @param formatter  the formatter to use, not null"
True,JodaTime/src/main/java/org/joda/time/Period.java,JodaTime/src/main/java/org/joda/time/Period.java,87,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/Period.java,JodaTime/src/main/java/org/joda/time/Period.java,89,"public static Period parse(String str, PeriodFormatter formatter) {"
True,JodaTime/src/main/java/org/joda/time/Period.java,JodaTime/src/main/java/org/joda/time/Period.java,90,return formatter.parsePeriod(str);
True,JodaTime/src/test/java/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDuration_Constructors.java,107,public void testParse_noFormatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDuration_Constructors.java,108,"assertEquals(new Duration(3200), Duration.parse(""PT3.2S""));"
True,JodaTime/src/test/java/org/joda/time/TestDuration_Constructors.java,JodaTime/src/test/java/org/joda/time/TestDuration_Constructors.java,109,"assertEquals(new Duration(6000), Duration.parse(""PT6S""));"
True,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,105,public void testParse_noFormatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,106,"DateTime start = new DateTime(2010, 6, 30, 12, 30, ISOChronology.getInstance(PARIS));"
True,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,107,"DateTime end = new DateTime(2010, 7, 1, 14, 30, ISOChronology.getInstance(PARIS));"
True,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,108,"assertEquals(new Interval(start, end), Interval.parse(""2010-06-30T12:30/2010-07-01T14:30""));"
True,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,109,"assertEquals(new Interval(start, end), Interval.parse(""2010-06-30T12:30/P1DT2H""));"
True,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,110,"assertEquals(new Interval(start, end), Interval.parse(""P1DT2H/2010-07-01T14:30""));"
False,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,568,ublic Class getSupportedType() {
True,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,577,public Class<?> getSupportedType() {
False,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,594,ublic Class getSupportedType() {
True,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java,603,public Class<?> getSupportedType() {
False,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,88,ateTimeZone.setDefault(LONDON);
True,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,88,DateTimeZone.setDefault(PARIS);
True,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,111,public void testParse_noFormatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,112,"DateTime start = new DateTime(2010, 6, 30, 12, 30, ISOChronology.getInstance(PARIS));"
True,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,113,"DateTime end = new DateTime(2010, 7, 1, 14, 30, ISOChronology.getInstance(PARIS));"
True,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,114,"assertEquals(new MutableInterval(start, end), MutableInterval.parse(""2010-06-30T12:30/2010-07-01T14:30""));"
True,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,115,"assertEquals(new MutableInterval(start, end), MutableInterval.parse(""2010-06-30T12:30/P1DT2H""));"
True,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,116,"assertEquals(new MutableInterval(start, end), MutableInterval.parse(""P1DT2H/2010-07-01T14:30""));"
False,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,544,ublic Class getSupportedType() {
True,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,553,public Class<?> getSupportedType() {
False,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,570,ublic Class getSupportedType() {
True,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java,579,public Class<?> getSupportedType() {
True,JodaTime/src/test/java/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutablePeriod_Constructors.java,101,public void testParse_noFormatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestMutablePeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestMutablePeriod_Constructors.java,102,"assertEquals(new MutablePeriod(1, 2, 3, 4, 5, 6, 7, 890), MutablePeriod.parse(""P1Y2M3W4DT5H6M7.890S""));"
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,102,public void testParse_noFormatter() throws Throwable {
True,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java,103,"assertEquals(new Period(1, 2, 3, 4, 5, 6, 7, 890), Period.parse(""P1Y2M3W4DT5H6M7.890S""));"
