is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,358,rivate DateTimeFormat() {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,358,protected DateTimeFormat() {
False,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,131,rivate ISODateTimeFormat() {
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,131,protected ISODateTimeFormat() {
True,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java,132,super();
False,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,49,rivate ISOPeriodFormat() {
True,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,49,protected ISOPeriodFormat() {
True,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java,50,super();
False,JodaTime/src/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/java/org/joda/time/format/PeriodFormat.java,41,rivate PeriodFormat() {
True,JodaTime/src/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/java/org/joda/time/format/PeriodFormat.java,41,protected PeriodFormat() {
True,JodaTime/src/java/org/joda/time/format/PeriodFormat.java,JodaTime/src/java/org/joda/time/format/PeriodFormat.java,42,super();
True,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,261,try {
True,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,262,test1.compareTo(new TimeOfDay());
True,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,263,fail();
True,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,264,} catch (ClassCastException ex) {}
True,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,265,Partial partial = new Partial()
True,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,266,".with(DateTimeFieldType.centuryOfEra(), 1)"
True,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,267,".with(DateTimeFieldType.halfdayOfDay(), 0)"
True,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,268,".with(DateTimeFieldType.dayOfMonth(), 9);"
True,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,269,try {
True,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,270,"new YearMonthDay(1970, 6, 9).compareTo(partial);"
True,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,271,fail();
True,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java,272,} catch (ClassCastException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestAll.java,JodaTime/src/test/org/joda/time/format/TestAll.java,43,suite.addTest(TestDateTimeFormatterBuilder.suite());
True,JodaTime/src/test/org/joda/time/format/TestAll.java,JodaTime/src/test/org/joda/time/format/TestAll.java,46,suite.addTest(TestPeriodFormat.suite());
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,89,public void testSubclassableConstructor() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,90,DateTimeFormat f = new DateTimeFormat() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,91,// test constructor is protected
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,93,assertNotNull(f);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,2,*  Copyright 2001-2005 Stephen Colebourne
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,4,"*  Licensed under the Apache License, Version 2.0 (the ""License"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,5,*  you may not use this file except in compliance with the License.
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,6,*  You may obtain a copy of the License at
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,10,"*  Unless required by applicable law or agreed to in writing, software"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,11,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,12,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,13,*  See the License for the specific language governing permissions and
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,14,*  limitations under the License.
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,16,package org.joda.time.format;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,18,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,19,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,22,* This class is a Junit unit test for DateTimeFormatterBuilder.
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,24,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,26,public class TestDateTimeFormatterBuilder extends TestCase {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,28,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,29,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,32,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,33,return new TestSuite(TestDateTimeFormatterBuilder.class);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,36,public TestDateTimeFormatterBuilder(String name) {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,37,super(name);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,40,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,43,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,47,public void test_toFormatter() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,48,DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,49,try {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,50,bld.toFormatter();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,51,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,52,} catch (UnsupportedOperationException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,53,bld.appendLiteral('X');
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,54,assertNotNull(bld.toFormatter());
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,57,public void test_toPrinter() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,58,DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,59,try {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,60,bld.toPrinter();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,61,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,62,} catch (UnsupportedOperationException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,63,bld.appendLiteral('X');
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,64,assertNotNull(bld.toPrinter());
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,67,public void test_toParser() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,68,DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,69,try {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,70,bld.toParser();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,71,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,72,} catch (UnsupportedOperationException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,73,bld.appendLiteral('X');
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,74,assertNotNull(bld.toParser());
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,78,public void test_canBuildFormatter() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,79,DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,80,"assertEquals(false, bld.canBuildFormatter());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,81,bld.appendLiteral('X');
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,82,"assertEquals(true, bld.canBuildFormatter());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,85,public void test_canBuildPrinter() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,86,DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,87,"assertEquals(false, bld.canBuildPrinter());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,88,bld.appendLiteral('X');
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,89,"assertEquals(true, bld.canBuildPrinter());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,92,public void test_canBuildParser() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,93,DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,94,"assertEquals(false, bld.canBuildParser());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,95,bld.appendLiteral('X');
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,96,"assertEquals(true, bld.canBuildParser());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,100,public void test_append_Formatter() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,101,DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,102,bld.appendLiteral('Y');
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,103,DateTimeFormatter f = bld.toFormatter();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,105,DateTimeFormatterBuilder bld2 = new DateTimeFormatterBuilder();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,106,bld2.appendLiteral('X');
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,107,bld2.append(f);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,108,bld2.appendLiteral('Z');
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,109,"assertEquals(""XYZ"", bld2.toFormatter().print(0L));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,113,public void test_append_Printer() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,114,DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,115,bld.appendLiteral('Y');
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,116,DateTimePrinter p = bld.toPrinter();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,118,DateTimeFormatterBuilder bld2 = new DateTimeFormatterBuilder();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,119,bld2.appendLiteral('X');
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,120,bld2.append(p);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,121,bld2.appendLiteral('Z');
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java,122,"assertEquals(""XYZ"", bld2.toFormatter().print(0L));"
True,JodaTime/src/test/org/joda/time/format/TestISODateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestISODateTimeFormat.java,86,public void testSubclassableConstructor() {
True,JodaTime/src/test/org/joda/time/format/TestISODateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestISODateTimeFormat.java,87,ISODateTimeFormat f = new ISODateTimeFormat() {
True,JodaTime/src/test/org/joda/time/format/TestISODateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestISODateTimeFormat.java,88,// test constructor is protected
True,JodaTime/src/test/org/joda/time/format/TestISODateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestISODateTimeFormat.java,90,assertNotNull(f);
False,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,31, This class is a Junit unit test for PeriodFormatterBuilder.
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,31,* This class is a Junit unit test for ISOPeriodFormat.
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,93,public void testSubclassableConstructor() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,94,ISOPeriodFormat f = new ISOPeriodFormat() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,95,// test constructor is protected
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,97,assertNotNull(f);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,2,*  Copyright 2001-2005 Stephen Colebourne
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,4,"*  Licensed under the Apache License, Version 2.0 (the ""License"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,5,*  you may not use this file except in compliance with the License.
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,6,*  You may obtain a copy of the License at
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,10,"*  Unless required by applicable law or agreed to in writing, software"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,11,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,12,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,13,*  See the License for the specific language governing permissions and
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,14,*  limitations under the License.
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,16,package org.joda.time.format;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,18,import java.util.Locale;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,19,import java.util.TimeZone;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,21,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,22,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,24,import org.joda.time.DateTimeConstants;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,25,import org.joda.time.DateTimeUtils;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,26,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,27,import org.joda.time.Period;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,28,import org.joda.time.PeriodType;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,31,* This class is a Junit unit test for PeriodFormat.
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,33,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,35,public class TestPeriodFormat extends TestCase {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,37,"private static final Period PERIOD = new Period(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,38,"private static final Period EMPTY_PERIOD = new Period(0, 0, 0, 0, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,39,"private static final Period YEAR_DAY_PERIOD = new Period(1, 0, 0, 4, 5, 6, 7, 8, PeriodType.yearDayTime());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,40,"private static final Period EMPTY_YEAR_DAY_PERIOD = new Period(0, 0, 0, 0, 0, 0, 0, 0, PeriodType.yearDayTime());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,41,"private static final Period TIME_PERIOD = new Period(0, 0, 0, 0, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,42,"private static final Period DATE_PERIOD = new Period(1, 2, 3, 4, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,44,"private static final DateTimeZone PARIS = DateTimeZone.forID(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,45,"private static final DateTimeZone LONDON = DateTimeZone.forID(""Europe/London"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,46,"private static final DateTimeZone TOKYO = DateTimeZone.forID(""Asia/Tokyo"");"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,48,long y2002days = 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,49,366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,50,365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,51,366 + 365;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,52,// 2002-06-09
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,53,private long TEST_TIME_NOW =
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,54,(y2002days + 31L + 28L + 31L + 30L + 31L + 9L -1L) * DateTimeConstants.MILLIS_PER_DAY;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,56,private DateTimeZone originalDateTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,57,private TimeZone originalTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,58,private Locale originalLocale = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,60,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,61,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,64,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,65,return new TestSuite(TestPeriodFormat.class);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,68,public TestPeriodFormat(String name) {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,69,super(name);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,72,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,73,DateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,74,originalDateTimeZone = DateTimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,75,originalTimeZone = TimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,76,originalLocale = Locale.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,77,DateTimeZone.setDefault(LONDON);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,78,"TimeZone.setDefault(TimeZone.getTimeZone(""Europe/London""));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,79,Locale.setDefault(Locale.UK);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,82,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,83,DateTimeUtils.setCurrentMillisSystem();
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,84,DateTimeZone.setDefault(originalDateTimeZone);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,85,TimeZone.setDefault(originalTimeZone);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,86,Locale.setDefault(originalLocale);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,87,originalDateTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,88,originalTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,89,originalLocale = null;
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,93,public void testSubclassableConstructor() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,94,PeriodFormat f = new PeriodFormat() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,95,// test constructor is protected
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,97,assertNotNull(f);
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,101,public void testFormatStandard() {
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,102,"Period p = new Period(0, 0, 0, 1, 5, 6 ,7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java,103,"assertEquals(""1 day, 5 hours, 6 minutes, 7 seconds and 8 milliseconds"", PeriodFormat.getDefault().print(p));"
