is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,10,* are met:
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,54,package org.joda.time;
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,56,import org.joda.time.chrono.AbstractChronology;
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,57,import org.joda.time.chrono.ISOChronology;
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,60,* Mock class for unit testing.
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,62,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,64,class MockNullZoneChronology extends AbstractChronology {
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,66,public DateTimeZone getZone() {
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,67,return null;
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,69,public Chronology withUTC() {
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,70,return this;
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,72,public Chronology withZone(DateTimeZone zone) {
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,73,return this;
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,75,public DateTimeField dayOfMonth() {  // for DateMidnight test
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,76,return ISOChronology.getInstance().dayOfMonth();
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,78,public String toString() {
True,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,JodaTime/src/test/org/joda/time/MockNullZoneChronology.java,79,"return """";"
True,JodaTime/src/test/org/joda/time/TestAll.java,JodaTime/src/test/org/joda/time/TestAll.java,84,suite.addTest(TestDateMidnight_Properties.suite());
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,661,test = new DateMidnight(TEST_TIME1_UTC);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,662,result = test.withZoneRetainFields(LONDON);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,663,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,665,test = new DateMidnight(TEST_TIME1_UTC);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,666,result = test.withZoneRetainFields(null);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,667,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,669,"test = new DateMidnight(TEST_TIME1_UTC, new MockNullZoneChronology());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,670,result = test.withZoneRetainFields(LONDON);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java,671,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,10,* are met:
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,54,package org.joda.time;
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,56,import java.util.Locale;
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,58,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,59,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,62,* This class is a Junit unit test for DateTime.
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,64,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,66,public class TestDateMidnight_Properties extends TestCase {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,67,// Test in 2002/03 as time zones are more well known
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,68,// (before the late 90's they were all over the place)
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,70,"private static final DateTimeZone PARIS = DateTimeZone.getInstance(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,71,"private static final DateTimeZone LONDON = DateTimeZone.getInstance(""Europe/London"");"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,73,long y2002days = 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,74,366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 +
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,75,365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,76,366 + 365;
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,77,long y2003days = 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,78,366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 +
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,79,365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,80,366 + 365 + 365;
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,82,// 2002-06-09
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,83,private long TEST_TIME_NOW =
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,84,(y2002days + 31L + 28L + 31L + 30L + 31L + 9L -1L) * DateTimeConstants.MILLIS_PER_DAY;
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,86,// 2002-04-05 Fri
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,87,private long TEST_TIME1 =
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,88,(y2002days + 31L + 28L + 31L + 5L -1L) * DateTimeConstants.MILLIS_PER_DAY
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,89,+ 12L * DateTimeConstants.MILLIS_PER_HOUR
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,90,+ 24L * DateTimeConstants.MILLIS_PER_MINUTE;
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,92,// 2003-05-06 Tue
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,93,private long TEST_TIME2 =
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,94,(y2003days + 31L + 28L + 31L + 30L + 6L -1L) * DateTimeConstants.MILLIS_PER_DAY
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,95,+ 14L * DateTimeConstants.MILLIS_PER_HOUR
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,96,+ 28L * DateTimeConstants.MILLIS_PER_MINUTE;
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,98,private DateTimeZone zone = null;
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,99,private Locale locale = null;
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,101,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,102,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,105,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,106,return new TestSuite(TestDateMidnight_Properties.class);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,109,public TestDateMidnight_Properties(String name) {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,110,super(name);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,113,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,114,DateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,115,zone = DateTimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,116,locale = Locale.getDefault();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,117,DateTimeZone.setDefault(LONDON);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,118,Locale.setDefault(Locale.UK);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,121,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,122,DateTimeUtils.setCurrentMillisSystem();
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,123,DateTimeZone.setDefault(zone);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,124,Locale.setDefault(locale);
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,125,zone = null;
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,129,public void testTest() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,130,"assertEquals(""2002-06-09T00:00:00.000Z"", new Instant(TEST_TIME_NOW).toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,131,"assertEquals(""2002-04-05T12:24:00.000Z"", new Instant(TEST_TIME1).toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,132,"assertEquals(""2003-05-06T14:28:00.000Z"", new Instant(TEST_TIME2).toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,136,public void testPropertyGetEra() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,137,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,138,"assertSame(test.getChronology().era(), test.era().getField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,139,"assertEquals(""era"", test.era().getName());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,140,"assertEquals(""Property[era]"", test.era().toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,141,"assertSame(test, test.era().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,142,"assertSame(test, test.era().getDateMidnight());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,143,"assertEquals(1, test.era().get());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,144,"assertEquals(""AD"", test.era().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,145,"assertEquals(""ap. J.-C."", test.era().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,146,"assertEquals(""AD"", test.era().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,147,"assertEquals(""ap. J.-C."", test.era().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,148,"assertEquals(test.getChronology().eras(), test.era().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,149,"assertEquals(null, test.era().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,150,"assertEquals(2, test.era().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,151,"assertEquals(9, test.era().getMaximumTextLength(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,152,"assertEquals(2, test.era().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,153,"assertEquals(9, test.era().getMaximumShortTextLength(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,157,public void testPropertyGetYearOfEra() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,158,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,159,"assertSame(test.getChronology().yearOfEra(), test.yearOfEra().getField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,160,"assertEquals(""yearOfEra"", test.yearOfEra().getName());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,161,"assertEquals(""Property[yearOfEra]"", test.yearOfEra().toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,162,"assertSame(test, test.yearOfEra().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,163,"assertSame(test, test.yearOfEra().getDateMidnight());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,164,"assertEquals(2004, test.yearOfEra().get());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,165,"assertEquals(""2004"", test.yearOfEra().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,166,"assertEquals(""2004"", test.yearOfEra().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,167,"assertEquals(""2004"", test.yearOfEra().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,168,"assertEquals(""2004"", test.yearOfEra().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,169,"assertEquals(test.getChronology().years(), test.yearOfEra().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,170,"assertEquals(null, test.yearOfEra().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,171,"assertEquals(9, test.yearOfEra().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,172,"assertEquals(9, test.yearOfEra().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,176,public void testPropertyGetCenturyOfEra() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,177,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,178,"assertSame(test.getChronology().centuryOfEra(), test.centuryOfEra().getField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,179,"assertEquals(""centuryOfEra"", test.centuryOfEra().getName());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,180,"assertEquals(""Property[centuryOfEra]"", test.centuryOfEra().toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,181,"assertSame(test, test.centuryOfEra().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,182,"assertSame(test, test.centuryOfEra().getDateMidnight());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,183,"assertEquals(20, test.centuryOfEra().get());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,184,"assertEquals(""20"", test.centuryOfEra().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,185,"assertEquals(""20"", test.centuryOfEra().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,186,"assertEquals(""20"", test.centuryOfEra().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,187,"assertEquals(""20"", test.centuryOfEra().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,188,"assertEquals(test.getChronology().centuries(), test.centuryOfEra().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,189,"assertEquals(null, test.centuryOfEra().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,190,"assertEquals(7, test.centuryOfEra().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,191,"assertEquals(7, test.centuryOfEra().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,195,public void testPropertyGetYearOfCentury() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,196,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,197,"assertSame(test.getChronology().yearOfCentury(), test.yearOfCentury().getField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,198,"assertEquals(""yearOfCentury"", test.yearOfCentury().getName());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,199,"assertEquals(""Property[yearOfCentury]"", test.yearOfCentury().toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,200,"assertSame(test, test.yearOfCentury().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,201,"assertSame(test, test.yearOfCentury().getDateMidnight());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,202,"assertEquals(4, test.yearOfCentury().get());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,203,"assertEquals(""4"", test.yearOfCentury().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,204,"assertEquals(""4"", test.yearOfCentury().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,205,"assertEquals(""4"", test.yearOfCentury().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,206,"assertEquals(""4"", test.yearOfCentury().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,207,"assertEquals(test.getChronology().years(), test.yearOfCentury().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,208,"assertEquals(test.getChronology().centuries(), test.yearOfCentury().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,209,"assertEquals(2, test.yearOfCentury().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,210,"assertEquals(2, test.yearOfCentury().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,214,public void testPropertyGetWeekyear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,215,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,216,"assertSame(test.getChronology().weekyear(), test.weekyear().getField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,217,"assertEquals(""weekyear"", test.weekyear().getName());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,218,"assertEquals(""Property[weekyear]"", test.weekyear().toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,219,"assertSame(test, test.weekyear().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,220,"assertSame(test, test.weekyear().getDateMidnight());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,221,"assertEquals(2004, test.weekyear().get());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,222,"assertEquals(""2004"", test.weekyear().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,223,"assertEquals(""2004"", test.weekyear().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,224,"assertEquals(""2004"", test.weekyear().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,225,"assertEquals(""2004"", test.weekyear().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,226,"assertEquals(test.getChronology().weekyears(), test.weekyear().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,227,"assertEquals(null, test.weekyear().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,228,"assertEquals(9, test.weekyear().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,229,"assertEquals(9, test.weekyear().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,233,public void testPropertyGetYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,234,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,235,"assertSame(test.getChronology().year(), test.year().getField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,236,"assertEquals(""year"", test.year().getName());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,237,"assertEquals(""Property[year]"", test.year().toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,238,"assertSame(test, test.year().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,239,"assertSame(test, test.year().getDateMidnight());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,240,"assertEquals(2004, test.year().get());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,241,"assertEquals(""2004"", test.year().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,242,"assertEquals(""2004"", test.year().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,243,"assertEquals(""2004"", test.year().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,244,"assertEquals(""2004"", test.year().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,245,"assertEquals(test.getChronology().years(), test.year().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,246,"assertEquals(null, test.year().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,247,"assertEquals(9, test.year().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,248,"assertEquals(9, test.year().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,249,"assertEquals(-292275054, test.year().getMinimumValue());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,250,"assertEquals(-292275054, test.year().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,251,"assertEquals(292277023, test.year().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,252,"assertEquals(292277023, test.year().getMaximumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,256,public void testPropertyGetMonthOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,257,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,258,"assertSame(test.getChronology().monthOfYear(), test.monthOfYear().getField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,259,"assertEquals(""monthOfYear"", test.monthOfYear().getName());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,260,"assertEquals(""Property[monthOfYear]"", test.monthOfYear().toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,261,"assertSame(test, test.monthOfYear().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,262,"assertSame(test, test.monthOfYear().getDateMidnight());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,263,"assertEquals(6, test.monthOfYear().get());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,264,"assertEquals(""June"", test.monthOfYear().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,265,"assertEquals(""juin"", test.monthOfYear().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,266,"assertEquals(""Jun"", test.monthOfYear().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,267,"assertEquals(""juin"", test.monthOfYear().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,268,"assertEquals(test.getChronology().months(), test.monthOfYear().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,269,"assertEquals(test.getChronology().years(), test.monthOfYear().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,270,"assertEquals(9, test.monthOfYear().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,271,"assertEquals(3, test.monthOfYear().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,272,"test = new DateMidnight(2004, 7, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,273,"assertEquals(""juillet"", test.monthOfYear().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,274,"assertEquals(""juil."", test.monthOfYear().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,275,"assertEquals(1, test.monthOfYear().getMinimumValue());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,276,"assertEquals(1, test.monthOfYear().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,277,"assertEquals(12, test.monthOfYear().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,278,"assertEquals(12, test.monthOfYear().getMaximumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,279,"assertEquals(1, test.monthOfYear().getMinimumValue());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,280,"assertEquals(1, test.monthOfYear().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,281,"assertEquals(12, test.monthOfYear().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,282,"assertEquals(12, test.monthOfYear().getMaximumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,286,public void testPropertyGetDayOfMonth() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,287,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,288,"assertSame(test.getChronology().dayOfMonth(), test.dayOfMonth().getField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,289,"assertEquals(""dayOfMonth"", test.dayOfMonth().getName());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,290,"assertEquals(""Property[dayOfMonth]"", test.dayOfMonth().toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,291,"assertSame(test, test.dayOfMonth().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,292,"assertSame(test, test.dayOfMonth().getDateMidnight());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,293,"assertEquals(9, test.dayOfMonth().get());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,294,"assertEquals(""9"", test.dayOfMonth().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,295,"assertEquals(""9"", test.dayOfMonth().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,296,"assertEquals(""9"", test.dayOfMonth().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,297,"assertEquals(""9"", test.dayOfMonth().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,298,"assertEquals(test.getChronology().days(), test.dayOfMonth().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,299,"assertEquals(test.getChronology().months(), test.dayOfMonth().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,300,"assertEquals(2, test.dayOfMonth().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,301,"assertEquals(2, test.dayOfMonth().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,302,"assertEquals(1, test.dayOfMonth().getMinimumValue());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,303,"assertEquals(1, test.dayOfMonth().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,304,"assertEquals(30, test.dayOfMonth().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,305,"assertEquals(31, test.dayOfMonth().getMaximumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,306,"assertEquals(false, test.dayOfMonth().isLeap());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,307,"assertEquals(0, test.dayOfMonth().getLeapAmount());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,308,"assertEquals(null, test.dayOfMonth().getLeapDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,312,public void testPropertyGetDayOfYear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,313,// 31+29+31+30+31+9 = 161
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,314,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,315,"assertSame(test.getChronology().dayOfYear(), test.dayOfYear().getField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,316,"assertEquals(""dayOfYear"", test.dayOfYear().getName());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,317,"assertEquals(""Property[dayOfYear]"", test.dayOfYear().toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,318,"assertSame(test, test.dayOfYear().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,319,"assertSame(test, test.dayOfYear().getDateMidnight());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,320,"assertEquals(161, test.dayOfYear().get());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,321,"assertEquals(""161"", test.dayOfYear().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,322,"assertEquals(""161"", test.dayOfYear().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,323,"assertEquals(""161"", test.dayOfYear().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,324,"assertEquals(""161"", test.dayOfYear().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,325,"assertEquals(test.getChronology().days(), test.dayOfYear().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,326,"assertEquals(test.getChronology().years(), test.dayOfYear().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,327,"assertEquals(3, test.dayOfYear().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,328,"assertEquals(3, test.dayOfYear().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,329,"assertEquals(false, test.dayOfYear().isLeap());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,330,"assertEquals(0, test.dayOfYear().getLeapAmount());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,331,"assertEquals(null, test.dayOfYear().getLeapDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,335,public void testPropertyGetWeekOfWeekyear() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,336,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,337,"assertSame(test.getChronology().weekOfWeekyear(), test.weekOfWeekyear().getField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,338,"assertEquals(""weekOfWeekyear"", test.weekOfWeekyear().getName());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,339,"assertEquals(""Property[weekOfWeekyear]"", test.weekOfWeekyear().toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,340,"assertSame(test, test.weekOfWeekyear().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,341,"assertSame(test, test.weekOfWeekyear().getDateMidnight());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,342,"assertEquals(24, test.weekOfWeekyear().get());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,343,"assertEquals(""24"", test.weekOfWeekyear().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,344,"assertEquals(""24"", test.weekOfWeekyear().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,345,"assertEquals(""24"", test.weekOfWeekyear().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,346,"assertEquals(""24"", test.weekOfWeekyear().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,347,"assertEquals(test.getChronology().weeks(), test.weekOfWeekyear().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,348,"assertEquals(test.getChronology().weekyears(), test.weekOfWeekyear().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,349,"assertEquals(2, test.weekOfWeekyear().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,350,"assertEquals(2, test.weekOfWeekyear().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,351,"assertEquals(false, test.weekOfWeekyear().isLeap());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,352,"assertEquals(0, test.weekOfWeekyear().getLeapAmount());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,353,"assertEquals(null, test.weekOfWeekyear().getLeapDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,357,public void testPropertyGetDayOfWeek() {
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,358,"DateMidnight test = new DateMidnight(2004, 6, 9);"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,359,"assertSame(test.getChronology().dayOfWeek(), test.dayOfWeek().getField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,360,"assertEquals(""dayOfWeek"", test.dayOfWeek().getName());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,361,"assertEquals(""Property[dayOfWeek]"", test.dayOfWeek().toString());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,362,"assertSame(test, test.dayOfWeek().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,363,"assertSame(test, test.dayOfWeek().getDateMidnight());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,364,"assertEquals(3, test.dayOfWeek().get());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,365,"assertEquals(""Wednesday"", test.dayOfWeek().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,366,"assertEquals(""mercredi"", test.dayOfWeek().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,367,"assertEquals(""Wed"", test.dayOfWeek().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,368,"assertEquals(""mer."", test.dayOfWeek().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,369,"assertEquals(test.getChronology().days(), test.dayOfWeek().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,370,"assertEquals(test.getChronology().weeks(), test.dayOfWeek().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,371,"assertEquals(9, test.dayOfWeek().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,372,"assertEquals(8, test.dayOfWeek().getMaximumTextLength(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,373,"assertEquals(3, test.dayOfWeek().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,374,"assertEquals(4, test.dayOfWeek().getMaximumShortTextLength(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,375,"assertEquals(1, test.dayOfWeek().getMinimumValue());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,376,"assertEquals(1, test.dayOfWeek().getMinimumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,377,"assertEquals(7, test.dayOfWeek().getMaximumValue());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,378,"assertEquals(7, test.dayOfWeek().getMaximumValueOverall());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,379,"assertEquals(false, test.dayOfWeek().isLeap());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,380,"assertEquals(0, test.dayOfWeek().getLeapAmount());"
True,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java,381,"assertEquals(null, test.dayOfWeek().getLeapDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,69,import org.joda.time.chrono.AbstractChronology;
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,227,"assertEquals(true, new DateTime(TEST_TIME1, new MockEqualsChronology()).equals(new DateTime(TEST_TIME1, new MockEqualsChronology())));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,228,"assertEquals(false, new DateTime(TEST_TIME1, new MockEqualsChronology()).equals(new DateTime(TEST_TIME1, ISOChronology.getInstance())));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,243,class MockEqualsChronology extends AbstractChronology {
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,244,public boolean equals(Object obj) {
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,245,return obj instanceof MockEqualsChronology;
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,247,public DateTimeZone getZone() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,248,return null;
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,250,public Chronology withUTC() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,251,return this;
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,253,public Chronology withZone(DateTimeZone zone) {
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,254,return this;
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,256,public String toString() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,257,"return """";"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,653,test = new DateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,654,result = test.withZoneRetainFields(LONDON);
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,655,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,657,test = new DateTime(TEST_TIME1);
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,658,result = test.withZoneRetainFields(null);
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,659,"assertSame(test, result);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,666,"test = new DateTime(TEST_TIME1, new MockNullZoneChronology());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,667,result = test.withZoneRetainFields(LONDON);
True,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,JodaTime/src/test/org/joda/time/TestDateTime_Basics.java,668,"assertSame(test, result);"
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,67,/    // Summer time:
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,68,/    // 1968-02-18 to 1971-10-31 - +01:00 all year round!
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,69,/    // 1972  UK  Mar 19 - Oct 29
False,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,70,/    // 1973  UK  Mar 18 - Oct 28
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,214,public void testPropertyGetWeekyear() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,215,"DateTime test = new DateTime(2004, 6, 9, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,216,"assertSame(test.getChronology().weekyear(), test.weekyear().getField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,217,"assertEquals(""weekyear"", test.weekyear().getName());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,218,"assertEquals(""Property[weekyear]"", test.weekyear().toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,219,"assertSame(test, test.weekyear().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,220,"assertSame(test, test.weekyear().getDateTime());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,221,"assertEquals(2004, test.weekyear().get());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,222,"assertEquals(""2004"", test.weekyear().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,223,"assertEquals(""2004"", test.weekyear().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,224,"assertEquals(""2004"", test.weekyear().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,225,"assertEquals(""2004"", test.weekyear().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,226,"assertEquals(test.getChronology().weekyears(), test.weekyear().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,227,"assertEquals(null, test.weekyear().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,228,"assertEquals(9, test.weekyear().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,229,"assertEquals(9, test.weekyear().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1044,public void testPropertyGetHourOfDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1045,"DateTime test = new DateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1046,"assertSame(test.getChronology().hourOfDay(), test.hourOfDay().getField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1047,"assertEquals(""hourOfDay"", test.hourOfDay().getName());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1048,"assertEquals(""Property[hourOfDay]"", test.hourOfDay().toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1049,"assertSame(test, test.hourOfDay().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1050,"assertSame(test, test.hourOfDay().getDateTime());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1051,"assertEquals(13, test.hourOfDay().get());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1052,"assertEquals(""13"", test.hourOfDay().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1053,"assertEquals(""13"", test.hourOfDay().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1054,"assertEquals(""13"", test.hourOfDay().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1055,"assertEquals(""13"", test.hourOfDay().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1056,"assertEquals(test.getChronology().hours(), test.hourOfDay().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1057,"assertEquals(test.getChronology().days(), test.hourOfDay().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1058,"assertEquals(2, test.hourOfDay().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1059,"assertEquals(2, test.hourOfDay().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1063,public void testPropertyGetMinuteOfHour() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1064,"DateTime test = new DateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1065,"assertSame(test.getChronology().minuteOfHour(), test.minuteOfHour().getField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1066,"assertEquals(""minuteOfHour"", test.minuteOfHour().getName());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1067,"assertEquals(""Property[minuteOfHour]"", test.minuteOfHour().toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1068,"assertSame(test, test.minuteOfHour().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1069,"assertSame(test, test.minuteOfHour().getDateTime());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1070,"assertEquals(23, test.minuteOfHour().get());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1071,"assertEquals(""23"", test.minuteOfHour().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1072,"assertEquals(""23"", test.minuteOfHour().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1073,"assertEquals(""23"", test.minuteOfHour().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1074,"assertEquals(""23"", test.minuteOfHour().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1075,"assertEquals(test.getChronology().minutes(), test.minuteOfHour().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1076,"assertEquals(test.getChronology().hours(), test.minuteOfHour().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1077,"assertEquals(2, test.minuteOfHour().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1078,"assertEquals(2, test.minuteOfHour().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1082,public void testPropertyGetMinuteOfDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1083,"DateTime test = new DateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1084,"assertSame(test.getChronology().minuteOfDay(), test.minuteOfDay().getField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1085,"assertEquals(""minuteOfDay"", test.minuteOfDay().getName());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1086,"assertEquals(""Property[minuteOfDay]"", test.minuteOfDay().toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1087,"assertSame(test, test.minuteOfDay().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1088,"assertSame(test, test.minuteOfDay().getDateTime());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1089,"assertEquals(803, test.minuteOfDay().get());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1090,"assertEquals(""803"", test.minuteOfDay().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1091,"assertEquals(""803"", test.minuteOfDay().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1092,"assertEquals(""803"", test.minuteOfDay().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1093,"assertEquals(""803"", test.minuteOfDay().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1094,"assertEquals(test.getChronology().minutes(), test.minuteOfDay().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1095,"assertEquals(test.getChronology().days(), test.minuteOfDay().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1096,"assertEquals(4, test.minuteOfDay().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1097,"assertEquals(4, test.minuteOfDay().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1101,public void testPropertyGetSecondOfMinute() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1102,"DateTime test = new DateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1103,"assertSame(test.getChronology().secondOfMinute(), test.secondOfMinute().getField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1104,"assertEquals(""secondOfMinute"", test.secondOfMinute().getName());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1105,"assertEquals(""Property[secondOfMinute]"", test.secondOfMinute().toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1106,"assertSame(test, test.secondOfMinute().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1107,"assertSame(test, test.secondOfMinute().getDateTime());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1108,"assertEquals(43, test.secondOfMinute().get());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1109,"assertEquals(""43"", test.secondOfMinute().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1110,"assertEquals(""43"", test.secondOfMinute().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1111,"assertEquals(""43"", test.secondOfMinute().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1112,"assertEquals(""43"", test.secondOfMinute().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1113,"assertEquals(test.getChronology().seconds(), test.secondOfMinute().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1114,"assertEquals(test.getChronology().minutes(), test.secondOfMinute().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1115,"assertEquals(2, test.secondOfMinute().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1116,"assertEquals(2, test.secondOfMinute().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1120,public void testPropertyGetSecondOfDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1121,"DateTime test = new DateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1122,"assertSame(test.getChronology().secondOfDay(), test.secondOfDay().getField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1123,"assertEquals(""secondOfDay"", test.secondOfDay().getName());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1124,"assertEquals(""Property[secondOfDay]"", test.secondOfDay().toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1125,"assertSame(test, test.secondOfDay().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1126,"assertSame(test, test.secondOfDay().getDateTime());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1127,"assertEquals(48223, test.secondOfDay().get());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1128,"assertEquals(""48223"", test.secondOfDay().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1129,"assertEquals(""48223"", test.secondOfDay().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1130,"assertEquals(""48223"", test.secondOfDay().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1131,"assertEquals(""48223"", test.secondOfDay().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1132,"assertEquals(test.getChronology().seconds(), test.secondOfDay().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1133,"assertEquals(test.getChronology().days(), test.secondOfDay().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1134,"assertEquals(5, test.secondOfDay().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1135,"assertEquals(5, test.secondOfDay().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1139,public void testPropertyGetMillisOfSecond() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1140,"DateTime test = new DateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1141,"assertSame(test.getChronology().millisOfSecond(), test.millisOfSecond().getField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1142,"assertEquals(""millisOfSecond"", test.millisOfSecond().getName());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1143,"assertEquals(""Property[millisOfSecond]"", test.millisOfSecond().toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1144,"assertSame(test, test.millisOfSecond().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1145,"assertSame(test, test.millisOfSecond().getDateTime());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1146,"assertEquals(53, test.millisOfSecond().get());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1147,"assertEquals(""53"", test.millisOfSecond().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1148,"assertEquals(""53"", test.millisOfSecond().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1149,"assertEquals(""53"", test.millisOfSecond().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1150,"assertEquals(""53"", test.millisOfSecond().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1151,"assertEquals(test.getChronology().millis(), test.millisOfSecond().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1152,"assertEquals(test.getChronology().seconds(), test.millisOfSecond().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1153,"assertEquals(3, test.millisOfSecond().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1154,"assertEquals(3, test.millisOfSecond().getMaximumShortTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1158,public void testPropertyGetMillisOfDay() {
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1159,"DateTime test = new DateTime(2004, 6, 9, 13, 23, 43, 53);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1160,"assertSame(test.getChronology().millisOfDay(), test.millisOfDay().getField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1161,"assertEquals(""millisOfDay"", test.millisOfDay().getName());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1162,"assertEquals(""Property[millisOfDay]"", test.millisOfDay().toString());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1163,"assertSame(test, test.millisOfDay().getReadableInstant());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1164,"assertSame(test, test.millisOfDay().getDateTime());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1165,"assertEquals(48223053, test.millisOfDay().get());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1166,"assertEquals(""48223053"", test.millisOfDay().getAsText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1167,"assertEquals(""48223053"", test.millisOfDay().getAsText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1168,"assertEquals(""48223053"", test.millisOfDay().getAsShortText());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1169,"assertEquals(""48223053"", test.millisOfDay().getAsShortText(Locale.FRENCH));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1170,"assertEquals(test.getChronology().millis(), test.millisOfDay().getDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1171,"assertEquals(test.getChronology().days(), test.millisOfDay().getRangeDurationField());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1172,"assertEquals(8, test.millisOfDay().getMaximumTextLength(null));"
True,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,JodaTime/src/test/org/joda/time/TestDateTime_Properties.java,1173,"assertEquals(8, test.millisOfDay().getMaximumShortTextLength(null));"
