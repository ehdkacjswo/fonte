is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,268,"uper(instant, null);"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,268,"super(instant, null, ISODateTimeFormat.timeParser());"
False,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,298,"uper(instant, DateTimeUtils.getChronology(chronology));"
True,JodaTime/src/java/org/joda/time/TimeOfDay.java,JodaTime/src/java/org/joda/time/TimeOfDay.java,298,"super(instant, DateTimeUtils.getChronology(chronology), ISODateTimeFormat.timeParser());"
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,28,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,140,"* Constructs a partial from an Object that represents a time, using the"
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,141,* specified chronology.
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,142,* <p>
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,143,* The recognised object types are defined in
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,144,* {@link org.joda.time.convert.ConverterManager ConverterManager} and
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,145,"* include ReadableInstant, String, Calendar and Date."
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,146,* <p>
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,147,* The constructor uses the time zone of the chronology specified.
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,148,"* Once the constructor is complete, all further calculations are performed"
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,149,* without reference to a timezone (by switching to UTC).
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,151,* @param instant  the datetime object
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,152,"* @param chronology  the chronology, null means use converter"
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,153,"* @param parser  if converting from a String, the given parser is preferred"
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,154,* @throws IllegalArgumentException if the date is invalid
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,155,* @since 1.3
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,157,"protected BasePartial(Object instant, Chronology chronology, DateTimeFormatter parser) {"
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,158,super();
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,159,PartialConverter converter = ConverterManager.getInstance().getPartialConverter(instant);
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,160,"chronology = converter.getChronology(instant, chronology);"
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,161,chronology = DateTimeUtils.getChronology(chronology);
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,162,iChronology = chronology.withUTC();
True,JodaTime/src/java/org/joda/time/base/BasePartial.java,JodaTime/src/java/org/joda/time/base/BasePartial.java,163,"iValues = converter.getPartialValues(this, instant, chronology, parser);"
False,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,110, @return the array of field values that match the
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,110,"* @return the array of field values that match the fieldSource, must be non-null valid"
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,111,* @throws ClassCastException if the object is invalid
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,119,* Extracts the values of the partial from an object of this converter's type.
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,120,"* The chrono parameter is a hint to the converter, should it require a"
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,121,* chronology to aid in conversion.
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,123,* @param fieldSource  a partial that provides access to the fields.
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,124,*  This partial may be incomplete and only getFieldType(int) should be used
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,125,* @param object  the object to convert
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,126,"* @param chrono  the chronology to use, which is the non-null result of getChronology()"
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,127,"* @param parser  if converting from a String, the given parser is preferred"
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,128,"* @return the array of field values that match the fieldSource, must be non-null valid"
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,129,* @throws ClassCastException if the object is invalid
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,130,* @since 1.3
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,132,"public int[] getPartialValues(ReadablePartial fieldSource, Object object, Chronology chrono,"
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,133,DateTimeFormatter parser)
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,135,"long instant = getInstantMillis(object, chrono, parser);"
True,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,JodaTime/src/java/org/joda/time/convert/AbstractConverter.java,136,"return chrono.get(fieldSource, instant);"
True,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,20,import org.joda.time.format.DateTimeFormatter;
True,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,60,* Extracts the values of the partial from an object of this converter's type.
True,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,61,"* The chrono parameter is a hint to the converter, should it require a"
True,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,62,* chronology to aid in conversion.
True,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,64,* @param fieldSource  a partial that provides access to the fields.
True,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,65,*  This partial may be incomplete and only getFieldType(int) should be used
True,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,66,* @param object  the object to convert
True,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,67,"* @param chrono  the chronology to use, which is the non-null result of getChronology()"
True,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,68,"* @param parser  if converting from a String, the given parser is preferred"
True,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,69,"* @return the array of field values that match the fieldSource, must be non-null valid"
True,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,70,* @throws ClassCastException if the object is invalid
True,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,71,* @since 1.3
True,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,73,"int[] getPartialValues(ReadablePartial fieldSource, Object object, Chronology chrono,"
True,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,JodaTime/src/java/org/joda/time/convert/PartialConverter.java,74,DateTimeFormatter parser);
