is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,68,"private static final String DEFAULT_IS_ASSIGNABLE_EX_MESSAGE = ""The validated class can not be converted to the %s class"";"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,69,"private static final String DEFAULT_IS_INSTANCE_OF_EX_MESSAGE = ""The validated object is not an instance of %s"";"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,922,* <p>Validate that the argument is an instance of the specified class; otherwise
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,923,* throwing an exception. This method is useful when validating according to an arbitrary
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,924,* class</p>
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,926,"* <pre>Validate.isInstanceOf(OkClass.class, object);</pre>"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,928,* <p>The message of the exception is &quot;The validated object is not an instance of&quot;
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,929,* followed by the name of the class</p>
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,931,* @param type the class the object must be validated against
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,932,* @param o the object to check
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,933,* @throws IllegalArgumentException if argument is not of specified class
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,934,"* @see #isInstanceOf(Class, Object, String, Object...)"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,936,"public static void isInstanceOf(Class<?> type, Object o)"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,938,if (type.isInstance(o) == false)
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,940,"throw new IllegalArgumentException(String.format(DEFAULT_IS_INSTANCE_OF_EX_MESSAGE, type.getName()));"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,945,* <p>Validate that the argument is an instance of the specified class; otherwise
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,946,* throwing an exception with the specified message. This method is useful when
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,947,* validating according to an arbitrary class</p>
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,949,"* <pre>Validate.isInstanceOf(OkClass.classs, object, ""Wrong class, object is of class %s"", object.getClass().getName());</pre>"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,951,* @param type the class the object must be validated against
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,952,* @param o the object to check
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,953,* @param message exception message
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,954,* @param values optional value for the exception message
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,955,* @throws IllegalArgumentException if argument is not of specified class
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,956,"* @see #isInstanceOf(Class, Object)"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,958,"public static void isInstanceOf(Class<?> type, Object o, String message, Object... values)"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,960,if (type.isInstance(o) == false)
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,962,"throw new IllegalArgumentException(String.format(message, values));"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,967,* <p>Validate that the argument can be converted to the specified class; otherwise
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,968,* throwing an exception with the specified message. This method is useful when
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,969,* validating if there will be no casting errors.</p>
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,971,"* <pre>Validate.isAssignableFrom(SuperClass.class, object.getClass());</pre>"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,973,* <p>The message of the exception is &quot;The validated object can not be converted to the&quot;
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,974,* followed by the name of the class and &quot;class&quot;</p>
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,976,* @param superType the class the class must be validated against
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,977,* @param type the class to check
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,978,* @throws IllegalArgumentException if argument can not be converted to the specified class
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,979,"* @see #isAssignableFrom(Class, Class, String, Object...)"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,981,"public static void isAssignableFrom(Class<?> superType, Class<?> type)"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,983,if (superType.isAssignableFrom(type) == false)
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,985,"throw new IllegalArgumentException(String.format(DEFAULT_IS_ASSIGNABLE_EX_MESSAGE, superType.getName()));"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,990,* <p>Validate that the argument can be converted to the specified class; otherwise
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,991,* throwing an exception. This method is useful when validating if there will be no
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,992,* casting errors.</p>
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,994,"* <pre>Validate.isAssignableFrom(SuperClass.class, object.getClass());</pre>"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,996,* <p>The message of the exception is &quot;The validated object can not be converted to the&quot;
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,997,* followed by the name of the class and &quot;class&quot;</p>
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,999,* @param superType the class the class must be validated against
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1000,* @param type the class to check
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1001,* @param message the exception message if invalid
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1002,* @param values the optional values for the formatted exception message
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1003,* @throws IllegalArgumentException if argument can not be converted to the specified class
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1004,"* @see #isAssignableFrom(Class, Class)"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1006,"public static void isAssignableFrom(Class<?> superType, Class<?> type, String message, Object... values)"
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1008,if (superType.isAssignableFrom(type) == false)
True,src/main/java/org/apache/commons/lang3/Validate.java,src/main/java/org/apache/commons/lang3/Validate.java,1010,"throw new IllegalArgumentException(String.format(message, values));"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,23,import java.util.AbstractList;
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,851,public void testIsInstanceOf() {
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,852,"Validate.isInstanceOf(String.class, ""hi"");"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,853,"Validate.isInstanceOf(Integer.class, 1);"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,854,try {
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,855,"Validate.isInstanceOf(List.class, ""hi"");"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,856,"fail(""Expecting IllegalArgumentException"");"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,857,} catch(IllegalArgumentException e) {
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,858,"assertEquals(""The validated object is not an instance of java.util.List"", e.getMessage());"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,862,public void testIsInstanceOf_withMessage() {
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,863,"Validate.isInstanceOf(String.class, ""hi"", ""Error"");"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,864,"Validate.isInstanceOf(Integer.class, 1, ""Error"");"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,865,try {
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,866,"Validate.isInstanceOf(List.class, ""hi"", ""Error"");"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,867,"fail(""Expecting IllegalArgumentException"");"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,868,} catch(IllegalArgumentException e) {
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,869,"assertEquals(""Error"", e.getMessage());"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,873,public void testIsAssignable() {
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,874,"Validate.isAssignableFrom(CharSequence.class, String.class);"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,875,"Validate.isAssignableFrom(AbstractList.class, ArrayList.class);"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,876,try {
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,877,"Validate.isAssignableFrom(List.class, String.class);"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,878,"fail(""Expecting IllegalArgumentException"");"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,879,} catch(IllegalArgumentException e) {
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,880,"assertEquals(""The validated class can not be converted to the java.util.List class"", e.getMessage());"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,884,public void testIsAssignable_withMessage() {
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,885,"Validate.isAssignableFrom(CharSequence.class, String.class, ""Error"");"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,886,"Validate.isAssignableFrom(AbstractList.class, ArrayList.class, ""Error"");"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,887,try {
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,888,"Validate.isAssignableFrom(List.class, String.class, ""Error"");"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,889,"fail(""Expecting IllegalArgumentException"");"
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,890,} catch(IllegalArgumentException e) {
True,src/test/java/org/apache/commons/lang3/ValidateTest.java,src/test/java/org/apache/commons/lang3/ValidateTest.java,891,"assertEquals(""Error"", e.getMessage());"
