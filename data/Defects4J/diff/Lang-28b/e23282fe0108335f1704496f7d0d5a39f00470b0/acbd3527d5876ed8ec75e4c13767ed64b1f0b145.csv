is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,19,mport java.text.MessageFormat;
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,35, All validate functions exist in 4 variants:
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,37, <p>1st function with only the validation option</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,38, <pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,39, Validate.isNotNull(surName);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,40, </pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,42, <p>2nd function with an additional String message parameter. This should
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,43, be used only if no additional parameters have to be provided. Instead of using
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,44," String operations to create the message String, the following 3rd variant"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,45, should be used.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,46, <pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,47," Validate.isNotNull(surName, ""surname must be set"");"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,48, </pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,50," <p>Since commons-lang-3.0, for each validation function a similar 3rd validation function exists"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,51, with a list of additional message parameters as Objects in ellipsis notation.
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,52, This is used instead of simply passing a message String due to performance reasons!
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,53," When using a message string, all parameters would have to be string concatenated"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,54," before the call, even if no problem arises which would cost performance.</br>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,55," Instead of this, we will concatenate (with spaces) all given msgObjects.toString()"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,56, only in case of a failed validation! If the first parameter of the msgObject is a
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,57," String, it will be taken as the format string for {@code MessageFormat}.</p>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,59, <h3>Examples:</h3>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,60, <p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,61, Simply validating an Argument without further message:
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,62, <pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,63," public void myFn(String argString, Integer argInt) {"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,64,     Validate.notNull(argString);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,65,     Validate.notNull(argInt);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,66,     Validate.isTrue(argInt.intValue > 3);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,68, </pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,69, <p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,71, <p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,72, Validating an Argument and adding a message to the IllegalArgumentException:
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,73, <pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,74," public void myFn(String argString, Integer argInt) {"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,75,"     Validate.notNull(argInt, ""Integer parameter must be set);"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,76,"     Validate.isTrue(argInt.intValue > 3, ""Integer parameter must be <=3!"");"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,78, </pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,79, <p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,81, <p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,82, If the first parameter of the msgObject is a String {@code MessageFormat} will be used:
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,83, <pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,84,"     Validate.isTrue(argInt1.intValue > argInt2.intValue, ""param2 actually is {1} but must larger than param1 {0} !"", argInt1, argInt2);"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,85, </pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,86, </p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,88, <p>The same function sometimes exists multiple times in a 4th form with a single message String parameter
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,89," and an additional value parameter. This is essentially the same like the 3rd form, but with fixed"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,90, object values to preserve backward compatibility with Validate 2.0!<p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,91," <p>If the message String contains a <code>&quot;{0}&quot;</code>, it will be passed to"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,92," {@code MessageFormat} with the value parameter as single Object parameter. If not, the value parameter"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,93, will simply get concatenated to the message String separated with a space.
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,94,  </p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,96, @see MessageFormat
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,102," @author <a href=""mailto:struberg@yahoo.de"">Mark Struberg</a>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,142,"hrow new IllegalArgumentException(getMessage(message, value));"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,77,throw new IllegalArgumentException(message + value);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,169,"hrow new IllegalArgumentException(getMessage(message, value));"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,103,throw new IllegalArgumentException(message + value);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,196,"hrow new IllegalArgumentException(getMessage(message, value));"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,130,throw new IllegalArgumentException(message + value);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,252," <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,253, if the test result is <code>false</code>.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,255," <p>This is used when validating according to an arbitrary boolean expression,"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,256, such as validating a primitive number or using your own custom validation
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,257, expression.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,259, <pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,260," Validate.isTrue(argInt1.intValue > argInt2.intValue,"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,261,"                 ""param2 actually is {1} but must larger than param1 {0} !"", argInt1, argInt2);"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,262, </pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,264," <p>If the first msgObject is a String, the {@code MessageFormat} will be used to construct the message</p>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,265, <p>Otherwise the message in the exception is 'Validation failed: ' followed by all given
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,266, parameters delimited with spaces.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,268, @param expression  a boolean expression
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,269, @throws IllegalArgumentException if expression is <code>false</code>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,271,"ublic static void isTrue(boolean expression, Object... msgObjects) {"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,272,f (expression == false) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,273,hrow new IllegalArgumentException(getMessage(msgObjects));
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,318," <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,319, if the argument is <code>null</code>.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,321, <pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,322," Validate.notNull(myObject, ""This happens while processing user {0}, currentUser);"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,323, </pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,325," <p>If the first msgObject is a String, the {@code MessageFormat} will be used to construct the message</p>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,326, <p>Otherwise the message in the exception is 'Validation failed: ' followed by all given
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,327, parameters delimited with spaces.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,329, @param object Object to validate
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,330, @param msgObjects additional Objects added as text message to the InvalidArgumentException
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,332,"ublic static void notNull(Object object, Object... msgObjects) {"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,333,f (object == null) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,334,hrow new IllegalArgumentException(getMessage(msgObjects));
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,377," <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,378, if the argument array is empty (<code>null</code> or no elements).</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,380, <pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,381," Validate.notEmpty(myArray, ""This happens while processing user {0}, currentUser);"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,382, </pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,384," <p>If the first msgObject is a String, the {@code MessageFormat} will be used to construct the message</p>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,385, <p>Otherwise the message in the exception is 'Validation failed: ' followed by all given
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,386, parameters delimited with spaces.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,388, @param array  the array to check is not empty
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,389, @param msgObjects additional Objects added as text message to the InvalidArgumentException
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,390, @throws IllegalArgumentException if the array is empty
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,392,"ublic static void notEmpty(Object[] array, Object... msgObjects) {"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,393,"otEmpty(array, getMessage(msgObjects));"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,435," <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,436, if the argument Collection is empty (<code>null</code> or no elements).</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,438, <pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,439," Validate.notEmpty(myCollection, ""This happens while processing user {0}, currentUser);"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,440, </pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,442," <p>If the first msgObject is a String, the {@code MessageFormat} will be used to construct the message</p>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,443, <p>Otherwise the message in the exception is 'Validation failed: ' followed by all given
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,444, parameters delimited with spaces.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,446, @param collection  the collection to check is not empty
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,447, @param msgObjects additional Objects added as text message to the InvalidArgumentException
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,448, @throws IllegalArgumentException if the collection is empty
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,450,"ublic static void notEmpty(Collection<?> collection, Object... msgObjects) {"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,451,"otEmpty(collection, getMessage(msgObjects));"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,493," <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,494, if the argument Map is empty (<code>null</code> or no elements).</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,496, <pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,497," Validate.notEmpty(myMap, ""This happens while processing user {0}, currentUser);"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,498, </pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,500," <p>If the first msgObject is a String, the {@code MessageFormat} will be used to construct the message</p>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,501, <p>Otherwise the message in the exception is 'Validation failed: ' followed by all given
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,502, parameters delimited with spaces.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,504, @param map  the map to check is not empty
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,505, @param msgObjects additional Objects added as text message to the InvalidArgumentException
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,506, @throws IllegalArgumentException if the map is empty
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,508,"ublic static void notEmpty(Map<?,?> map, Object... msgObjects) {"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,509,"otEmpty(map, getMessage(msgObjects));"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,551," <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,552, if the argument String is empty (<code>null</code> or zero length).</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,554, <pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,555, Validate.notEmpty(myString);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,556, </pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,558," <p>If the first msgObject is a String, the {@code MessageFormat} will be used to construct the message</p>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,559, <p>Otherwise the message in the exception is 'Validation failed: ' followed by all given
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,560, parameters delimited with spaces.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,562, @param string  the string to check is not empty
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,563, @param msgObjects additional Objects added as text message to the InvalidArgumentException
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,564, @throws IllegalArgumentException if the string is empty
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,566,"ublic static void notEmpty(String string, Object... msgObjects) {"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,567,"otEmpty(string, getMessage(msgObjects));"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,627," <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,628, if the argument array has <code>null</code> elements or is
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,629, <code>null</code>.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,631, <pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,632, Validate.noNullElements(myArray);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,633, </pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,635," <p>If the first msgObject is a String, the {@code MessageFormat} will be used to construct the message</p>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,636, <p>Otherwise the message in the exception is 'Validation failed: ' followed by all given
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,637, parameters delimited with spaces.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,639, <p>If the array is null then the message in the exception is 'The validated object is null'.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,641, @param array  the array to check
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,642, @param msgObjects additional Objects added as text message to the InvalidArgumentException
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,643, @throws IllegalArgumentException if the array has <code>null</code>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,644,  elements or is <code>null</code>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,646,"ublic static void noNullElements(Object[] array, Object... msgObjects) {"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,647,alidate.notNull(array);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,648,or (int i = 0; i < array.length; i++) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,649,f (array[i] == null) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,650,/X TODO maybe we can add 'i' as 0-th element?
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,651,hrow new IllegalArgumentException(getMessage(msgObjects));
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,713," <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,714, if the argument Collection has <code>null</code> elements or is
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,715, <code>null</code>.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,717, <pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,718, Validate.noNullElements(myCollection);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,719, </pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,721," <p>If the first msgObject is a String, the {@code MessageFormat} will be used to construct the message</p>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,722, <p>Otherwise the message in the exception is 'Validation failed: ' followed by all given
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,723, parameters delimited with spaces.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,725, <p>If the collection is null then the message in the exception is 'The validated object is null'.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,727, @param collection  the collection to check
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,728, @param msgObjects additional Objects added as text message to the InvalidArgumentException
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,729, @throws IllegalArgumentException if the collection has
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,730,  <code>null</code> elements or is <code>null</code>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,732,"ublic static void noNullElements(Collection collection, Object... msgObjects) {"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,733,alidate.notNull(collection);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,734,nt i = 0;
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,735,or (Iterator it = collection.iterator(); it.hasNext(); i++) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,736,f (it.next() == null) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,737,/X TODO how about adding 'i' as 0-th element?
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,738,hrow new IllegalArgumentException(getMessage(msgObjects));
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,744,/ allElementsOfType collection
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,804, <p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,805," Validate an argument, throwing <code>IllegalArgumentException</code> if the argument collection is"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,806, <code>null</code> or has elements that are not of type <code>clazz</code> or a subclass.
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,807, </p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,809, <pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,810," Validate.allElementsOfType(collection, String.class);"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,811, </pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,813, <p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,814, The message in the exception is 'The validated collection contains an element not of type clazz at index: '.
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,815, </p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,817, @param collection
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,818,"            the collection to check, not null"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,819, @param clazz
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,820,"            the <code>Class</code> which the collection's elements are expected to be, not null"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,821, @since 2.1
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,823,"ublic static void allElementsOfType(Collection collection, Class clazz, Object... msgObjects) {"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,824,alidate.notNull(collection);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,825,alidate.notNull(clazz);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,826,nt i = 0;
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,827,or (Iterator it = collection.iterator(); it.hasNext(); i++) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,828,f (clazz.isInstance(it.next()) == false) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,829,/X TODO how to add clazz.getName() and i?
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,830,hrow new IllegalArgumentException(getMessage(msgObjects));
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,835,/ private helper functions
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,840, private helper function to create an error message from the given Objects
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,841, If the first object in msgObjects is of type {@code String} then
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,842, {@code MessageFormat} will be used to format the output message.
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,844, @param msgObjects
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,845, @return concatenated String representation of all the objects
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,847,rivate static String getMessage(Object... msgObjects) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,848,f (msgObjects.length > 0 && msgObjects[0] instanceof String) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,849,tring message = (String) msgObjects[0];
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,850,"f (msgObjects.length == 2 && !message.matches(""[^\\{]*\\{\\d*\\}.*"")) {"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,851,"/ if it doesn't contain {0}, {1} etc we simply use string concatenation"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,852,eturn message + msgObjects[1]; // no space between to act like original function!
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,855,essageFormat form = new MessageFormat((String) msgObjects[0]);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,856,bject[] params = new Object[msgObjects.length - 1];
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,857,"ystem.arraycopy(msgObjects, 1, params, 0, msgObjects.length - 1);"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,858,eturn form.format(params);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,860,lse {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,861,"tringBuffer sb = new StringBuffer(""Validation failed: ["");"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,862,or(int i = 0; i < msgObjects.length; i++) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,863,f (i > 0) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,864,b.append(' ');
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,866,b.append(msgObjects[i]);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,868,b.append(']');
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,869,eturn sb.toString();
