is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,47," @version $Id: ArrayUtils.java,v 1.49 2004/10/10 18:56:16 scolebourne Exp $"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,47,"* @version $Id: ArrayUtils.java,v 1.50 2005/01/22 04:22:12 bayard Exp $"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3194,Class clss = null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3195,if(array != null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3196,clss = array.getClass().getComponentType();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3197,} else
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3198,if(element != null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3199,clss = element.getClass();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3200,} else {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3201,return new Object[] { null };
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3203,"return (Object[]) add( (Object) array, index, element, clss );"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3207,* <p>Inserts the specified element at the specified position in the array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3208,* Shifts the element currently at that position (if any) and any subsequent
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3209,* elements to the right (adds one to their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3211,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3212,* array plus the given element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3213,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3214,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3216,"* <p>If the input array is <code>null</code>, a new one element array is returned"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3217,*  whose component type is the same as the element.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3219,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3220,"* ArrayUtils.add(null, 0, true)          = [true]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3221,"* ArrayUtils.add([true], 0, false)       = [false, true]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3222,"* ArrayUtils.add([false], 1, true)       = [false, true]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3223,"* ArrayUtils.add([true, false], 1, true) = [true, true, false]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3224,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3226,"* @param array  the array to add the element to, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3227,* @param index  the position of the new object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3228,* @param element  the object to add
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3229,* @return A new array containing the existing elements and the new element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3230,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3231,* (index < 0 || index > array.length).
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3233,"public static boolean[] add(boolean[] array, int index, boolean element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3234,"return (boolean[]) add( (Object) array, index, new Boolean(element), Boolean.TYPE );"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3238,* <p>Inserts the specified element at the specified position in the array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3239,* Shifts the element currently at that position (if any) and any subsequent
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3240,* elements to the right (adds one to their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3242,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3243,* array plus the given element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3244,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3245,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3247,"* <p>If the input array is <code>null</code>, a new one element array is returned"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3248,*  whose component type is the same as the element.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3250,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3251,"* ArrayUtils.add(null, 0, 'a')            = ['a']"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3252,"* ArrayUtils.add(['a'], 0, 'b')           = ['b', 'a']"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3253,"* ArrayUtils.add(['a', 'b'], 0, 'c')      = ['c', 'a', 'b']"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3254,"* ArrayUtils.add(['a', 'b'], 1, 'k')      = ['a', 'k', 'b']"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3255,"* ArrayUtils.add(['a', 'b', 'c'], 1, 't') = ['a', 't', 'b', 'c']"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3256,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3258,"* @param array  the array to add the element to, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3259,* @param index  the position of the new object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3260,* @param element  the object to add
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3261,* @return A new array containing the existing elements and the new element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3262,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3263,* (index < 0 || index > array.length).
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3265,"public static char[] add(char[] array, int index, char element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3266,"return (char[]) add( (Object) array, index, new Character(element), Character.TYPE );"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3270,* <p>Inserts the specified element at the specified position in the array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3271,* Shifts the element currently at that position (if any) and any subsequent
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3272,* elements to the right (adds one to their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3274,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3275,* array plus the given element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3276,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3277,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3279,"* <p>If the input array is <code>null</code>, a new one element array is returned"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3280,*  whose component type is the same as the element.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3282,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3283,"* ArrayUtils.add([1], 0, 2)         = [2, 1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3284,"* ArrayUtils.add([2, 6], 2, 3)      = [2, 6, 3]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3285,"* ArrayUtils.add([2, 6], 0, 1)      = [1, 2, 6]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3286,"* ArrayUtils.add([2, 6, 3], 2, 1)   = [2, 6, 1, 3]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3287,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3289,"* @param array  the array to add the element to, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3290,* @param index  the position of the new object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3291,* @param element  the object to add
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3292,* @return A new array containing the existing elements and the new element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3293,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3294,* (index < 0 || index > array.length).
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3296,"public static byte[] add(byte[] array, int index, byte element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3297,"return (byte[]) add( (Object) array, index, new Byte(element), Byte.TYPE );"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3301,* <p>Inserts the specified element at the specified position in the array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3302,* Shifts the element currently at that position (if any) and any subsequent
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3303,* elements to the right (adds one to their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3305,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3306,* array plus the given element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3307,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3308,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3310,"* <p>If the input array is <code>null</code>, a new one element array is returned"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3311,*  whose component type is the same as the element.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3313,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3314,"* ArrayUtils.add([1], 0, 2)         = [2, 1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3315,"* ArrayUtils.add([2, 6], 2, 10)     = [2, 6, 10]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3316,"* ArrayUtils.add([2, 6], 0, -4)     = [-4, 2, 6]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3317,"* ArrayUtils.add([2, 6, 3], 2, 1)   = [2, 6, 1, 3]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3318,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3320,"* @param array  the array to add the element to, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3321,* @param index  the position of the new object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3322,* @param element  the object to add
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3323,* @return A new array containing the existing elements and the new element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3324,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3325,* (index < 0 || index > array.length).
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3327,"public static short[] add(short[] array, int index, short element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3328,"return (short[]) add( (Object) array, index, new Short(element), Short.TYPE );"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3332,* <p>Inserts the specified element at the specified position in the array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3333,* Shifts the element currently at that position (if any) and any subsequent
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3334,* elements to the right (adds one to their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3336,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3337,* array plus the given element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3338,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3339,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3341,"* <p>If the input array is <code>null</code>, a new one element array is returned"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3342,*  whose component type is the same as the element.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3344,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3345,"* ArrayUtils.add([1], 0, 2)         = [2, 1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3346,"* ArrayUtils.add([2, 6], 2, 10)     = [2, 6, 10]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3347,"* ArrayUtils.add([2, 6], 0, -4)     = [-4, 2, 6]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3348,"* ArrayUtils.add([2, 6, 3], 2, 1)   = [2, 6, 1, 3]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3349,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3351,"* @param array  the array to add the element to, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3352,* @param index  the position of the new object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3353,* @param element  the object to add
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3354,* @return A new array containing the existing elements and the new element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3355,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3356,* (index < 0 || index > array.length).
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3358,"public static int[] add(int[] array, int index, int element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3359,"return (int[]) add( (Object) array, index, new Integer(element), Integer.TYPE );"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3363,* <p>Inserts the specified element at the specified position in the array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3364,* Shifts the element currently at that position (if any) and any subsequent
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3365,* elements to the right (adds one to their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3367,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3368,* array plus the given element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3369,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3370,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3372,"* <p>If the input array is <code>null</code>, a new one element array is returned"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3373,*  whose component type is the same as the element.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3375,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3376,"* ArrayUtils.add([1L], 0, 2L)           = [2L, 1L]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3377,"* ArrayUtils.add([2L, 6L], 2, 10L)      = [2L, 6L, 10L]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3378,"* ArrayUtils.add([2L, 6L], 0, -4L)      = [-4L, 2L, 6L]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3379,"* ArrayUtils.add([2L, 6L, 3L], 2, 1L)   = [2L, 6L, 1L, 3L]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3380,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3382,"* @param array  the array to add the element to, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3383,* @param index  the position of the new object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3384,* @param element  the object to add
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3385,* @return A new array containing the existing elements and the new element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3386,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3387,* (index < 0 || index > array.length).
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3389,"public static long[] add(long[] array, int index, long element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3390,"return (long[]) add( (Object) array, index, new Long(element), Long.TYPE );"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3394,* <p>Inserts the specified element at the specified position in the array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3395,* Shifts the element currently at that position (if any) and any subsequent
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3396,* elements to the right (adds one to their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3398,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3399,* array plus the given element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3400,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3401,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3403,"* <p>If the input array is <code>null</code>, a new one element array is returned"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3404,*  whose component type is the same as the element.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3406,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3407,"* ArrayUtils.add([1.1f], 0, 2.2f)               = [2.2f, 1.1f]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3408,"* ArrayUtils.add([2.3f, 6.4f], 2, 10.5f)        = [2.3f, 6.4f, 10.5f]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3409,"* ArrayUtils.add([2.6f, 6.7f], 0, -4.8f)        = [-4.8f, 2.6f, 6.7f]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3410,"* ArrayUtils.add([2.9f, 6.0f, 0.3f], 2, 1.0f)   = [2.9f, 6.0f, 1.0f, 0.3f]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3411,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3413,"* @param array  the array to add the element to, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3414,* @param index  the position of the new object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3415,* @param element  the object to add
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3416,* @return A new array containing the existing elements and the new element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3417,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3418,* (index < 0 || index > array.length).
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3420,"public static float[] add(float[] array, int index, float element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3421,"return (float[]) add( (Object) array, index, new Float(element), Float.TYPE );"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3425,* <p>Inserts the specified element at the specified position in the array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3426,* Shifts the element currently at that position (if any) and any subsequent
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3427,* elements to the right (adds one to their indices).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3429,* <p>This method returns a new array with the same elements of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3430,* array plus the given element on the specified position. The component
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3431,* type of the returned array is always the same as that of the input
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3432,* array.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3434,"* <p>If the input array is <code>null</code>, a new one element array is returned"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3435,*  whose component type is the same as the element.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3437,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3438,"* ArrayUtils.add([1.1], 0, 2.2)              = [2.2, 1.1]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3439,"* ArrayUtils.add([2.3, 6.4], 2, 10.5)        = [2.3, 6.4, 10.5]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3440,"* ArrayUtils.add([2.6, 6.7], 0, -4.8)        = [-4.8, 2.6, 6.7]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3441,"* ArrayUtils.add([2.9, 6.0, 0.3], 2, 1.0)    = [2.9, 6.0, 1.0, 0.3]"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3442,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3444,"* @param array  the array to add the element to, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3445,* @param index  the position of the new object
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3446,* @param element  the object to add
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3447,* @return A new array containing the existing elements and the new element
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3448,* @throws IndexOutOfBoundsException if the index is out of range
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3449,* (index < 0 || index > array.length).
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3451,"public static double[] add(double[] array, int index, double element) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3452,"return (double[]) add( (Object) array, index, new Double(element), Double.TYPE );"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3455,"private static Object add(Object array, int index, Object element, Class clss) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3198,"bject joinedArray = Array.newInstance(element != null ? element.getClass() : Object.class, 1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3460,"Object joinedArray = Array.newInstance(clss, 1);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3200,eturn (Object[]) joinedArray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3462,return joinedArray;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3202,nt length = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3464,int length = Array.getLength(array);
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3206,"bject result = Array.newInstance(array.getClass().getComponentType(), length + 1);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3468,"Object result = Array.newInstance(clss, length + 1);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3212,eturn (Object[]) result;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,3474,return result;
False,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,30," @version $Id: ArrayUtilsAddTest.java,v 1.4 2004/10/09 11:55:51 scolebourne Exp $"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,30,"* @version $Id: ArrayUtilsAddTest.java,v 1.5 2005/01/22 04:22:12 bayard Exp $"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,289,// boolean tests
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,290,"boolean[] booleanArray = ArrayUtils.add( null, 0, true );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,291,"assertTrue( Arrays.equals( new boolean[] { true }, booleanArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,292,"booleanArray = ArrayUtils.add( new boolean[] { true }, 0, false);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,293,"assertTrue( Arrays.equals( new boolean[] { false, true }, booleanArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,294,"booleanArray = ArrayUtils.add( new boolean[] { false }, 1, true);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,295,"assertTrue( Arrays.equals( new boolean[] { false, true }, booleanArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,296,"booleanArray = ArrayUtils.add( new boolean[] { true, false }, 1, true);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,297,"assertTrue( Arrays.equals( new boolean[] { true, true, false }, booleanArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,299,// char tests
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,300,"char[] charArray = ArrayUtils.add( (char[]) null, 0, 'a' );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,301,"assertTrue( Arrays.equals( new char[] { 'a' }, charArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,302,"charArray = ArrayUtils.add( new char[] { 'a' }, 0, 'b');"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,303,"assertTrue( Arrays.equals( new char[] { 'b', 'a' }, charArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,304,"charArray = ArrayUtils.add( new char[] { 'a', 'b' }, 0, 'c');"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,305,"assertTrue( Arrays.equals( new char[] { 'c', 'a', 'b' }, charArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,306,"charArray = ArrayUtils.add( new char[] { 'a', 'b' }, 1, 'k');"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,307,"assertTrue( Arrays.equals( new char[] { 'a', 'k', 'b' }, charArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,308,"charArray = ArrayUtils.add( new char[] { 'a', 'b', 'c' }, 1, 't');"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,309,"assertTrue( Arrays.equals( new char[] { 'a', 't', 'b', 'c' }, charArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,311,// short tests
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,312,"short[] shortArray = ArrayUtils.add( new short[] { 1 }, 0, (short) 2);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,313,"assertTrue( Arrays.equals( new short[] { 2, 1 }, shortArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,314,"shortArray = ArrayUtils.add( new short[] { 2, 6 }, 2, (short) 10);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,315,"assertTrue( Arrays.equals( new short[] { 2, 6, 10 }, shortArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,316,"shortArray = ArrayUtils.add( new short[] { 2, 6 }, 0, (short) -4);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,317,"assertTrue( Arrays.equals( new short[] { -4, 2, 6 }, shortArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,318,"shortArray = ArrayUtils.add( new short[] { 2, 6, 3 }, 2, (short) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,319,"assertTrue( Arrays.equals( new short[] { 2, 6, 1, 3 }, shortArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,321,// byte tests
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,322,"byte[] byteArray = ArrayUtils.add( new byte[] { 1 }, 0, (byte) 2);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,323,"assertTrue( Arrays.equals( new byte[] { 2, 1 }, byteArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,324,"byteArray = ArrayUtils.add( new byte[] { 2, 6 }, 2, (byte) 3);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,325,"assertTrue( Arrays.equals( new byte[] { 2, 6, 3 }, byteArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,326,"byteArray = ArrayUtils.add( new byte[] { 2, 6 }, 0, (byte) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,327,"assertTrue( Arrays.equals( new byte[] { 1, 2, 6 }, byteArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,328,"byteArray = ArrayUtils.add( new byte[] { 2, 6, 3 }, 2, (byte) 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,329,"assertTrue( Arrays.equals( new byte[] { 2, 6, 1, 3 }, byteArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,331,// int tests
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,332,"int[] intArray = ArrayUtils.add( new int[] { 1 }, 0, 2);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,333,"assertTrue( Arrays.equals( new int[] { 2, 1 }, intArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,334,"intArray = ArrayUtils.add( new int[] { 2, 6 }, 2, 10);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,335,"assertTrue( Arrays.equals( new int[] { 2, 6, 10 }, intArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,336,"intArray = ArrayUtils.add( new int[] { 2, 6 }, 0, -4);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,337,"assertTrue( Arrays.equals( new int[] { -4, 2, 6 }, intArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,338,"intArray = ArrayUtils.add( new int[] { 2, 6, 3 }, 2, 1);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,339,"assertTrue( Arrays.equals( new int[] { 2, 6, 1, 3 }, intArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,341,// long tests
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,342,"long[] longArray = ArrayUtils.add( new long[] { 1L }, 0, 2L);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,343,"assertTrue( Arrays.equals( new long[] { 2L, 1L }, longArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,344,"longArray = ArrayUtils.add( new long[] { 2L, 6L }, 2, 10L);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,345,"assertTrue( Arrays.equals( new long[] { 2L, 6L, 10L }, longArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,346,"longArray = ArrayUtils.add( new long[] { 2L, 6L }, 0, -4L);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,347,"assertTrue( Arrays.equals( new long[] { -4L, 2L, 6L }, longArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,348,"longArray = ArrayUtils.add( new long[] { 2L, 6L, 3L }, 2, 1L);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,349,"assertTrue( Arrays.equals( new long[] { 2L, 6L, 1L, 3L }, longArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,351,// float tests
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,352,"float[] floatArray = ArrayUtils.add( new float[] { 1.1f }, 0, 2.2f);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,353,"assertTrue( Arrays.equals( new float[] { 2.2f, 1.1f }, floatArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,354,"floatArray = ArrayUtils.add( new float[] { 2.3f, 6.4f }, 2, 10.5f);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,355,"assertTrue( Arrays.equals( new float[] { 2.3f, 6.4f, 10.5f }, floatArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,356,"floatArray = ArrayUtils.add( new float[] { 2.6f, 6.7f }, 0, -4.8f);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,357,"assertTrue( Arrays.equals( new float[] { -4.8f, 2.6f, 6.7f }, floatArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,358,"floatArray = ArrayUtils.add( new float[] { 2.9f, 6.0f, 0.3f }, 2, 1.0f);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,359,"assertTrue( Arrays.equals( new float[] { 2.9f, 6.0f, 1.0f, 0.3f }, floatArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,361,// double tests
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,362,"double[] doubleArray = ArrayUtils.add( new double[] { 1.1 }, 0, 2.2);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,363,"assertTrue( Arrays.equals( new double[] { 2.2, 1.1 }, doubleArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,364,"doubleArray = ArrayUtils.add( new double[] { 2.3, 6.4 }, 2, 10.5);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,365,"assertTrue( Arrays.equals( new double[] { 2.3, 6.4, 10.5 }, doubleArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,366,"doubleArray = ArrayUtils.add( new double[] { 2.6, 6.7 }, 0, -4.8);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,367,"assertTrue( Arrays.equals( new double[] { -4.8, 2.6, 6.7 }, doubleArray ) );"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,368,"doubleArray = ArrayUtils.add( new double[] { 2.9, 6.0, 0.3 }, 2, 1.0);"
True,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,src/test/org/apache/commons/lang/ArrayUtilsAddTest.java,369,"assertTrue( Arrays.equals( new double[] { 2.9, 6.0, 1.0, 0.3 }, doubleArray ) );"
