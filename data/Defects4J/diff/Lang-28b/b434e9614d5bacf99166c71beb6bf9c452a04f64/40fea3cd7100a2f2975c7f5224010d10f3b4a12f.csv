is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,56,import java.lang.reflect.Array;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,65," <p>Operations on arrays, primitive arrays (like <code>int[]</code>) and primitive wrapper arrays"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,66, (like <code>Integer[]</code>).</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,66,"* <p>Operations on arrays, primitive arrays (like <code>int[]</code>) and"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,67,* primitive wrapper arrays (like <code>Integer[]</code>).</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,83," @version $Id: ArrayUtils.java,v 1.28 2003/11/30 13:36:08 scolebourne Exp $"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,84,"* @version $Id: ArrayUtils.java,v 1.29 2003/12/05 23:37:18 scolebourne Exp $"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,446,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,447,* Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,449,* <p>The component type of the subarray is always the same as
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,450,"* that of the input array. Thus, if the input is an array of type"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,451,"* <code>Date</code>, the following usage is envisaged:</p>"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,453,* <pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,454,"* Date[] someDates = (Date[])ArrayUtils.subarray(allDates, 2, 5);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,455,* </pre>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,457,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,458,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,459,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,460,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,461,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,462,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,463,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,464,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,466,"public static Object[] subarray(Object[] array, int startIndexInclusive, int endIndexExclusive) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,467,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,468,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,470,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,471,startIndexInclusive = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,473,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,474,endIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,476,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,477,Class type = array.getClass().getComponentType();
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,478,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,479,"return (Object[]) Array.newInstance(type, 0);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,481,"Object[] subarray = (Object[]) Array.newInstance(type, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,482,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,483,return subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,487,* <p>Produces a new <code>long</code> array containing the elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,488,* between the start and end indices.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,446, Null array input produces null output.
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,447, The result is always an <code>Object[]</code> instance</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,491,* Null array input produces null output.</p>
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,450, @param startIndex  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,494,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,453, @param endIndex  elements upto endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,497,* @param endIndexExclusive  elements up to endIndex-1 are present in the
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,458,"ublic static Object[] subArray(Object[] array, int startIndexInclusive, int endIndexExclusive) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,502,"public static long[] subarray(long[] array, int startIndexInclusive, int endIndexExclusive) {"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,470,eturn EMPTY_OBJECT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,514,return EMPTY_LONG_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,517,long[] subarray = new long[newSize];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,518,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,519,return subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,523,* <p>Produces a new <code>int</code> array containing the elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,524,* between the start and end indices.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,526,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,527,* Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,529,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,530,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,531,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,532,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,533,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,534,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,535,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,536,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,538,"public static int[] subarray(int[] array, int startIndexInclusive, int endIndexExclusive) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,539,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,540,return null;
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,472,bject[] subArray = new Object[newSize];
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,473,"ystem.arraycopy(array, startIndexInclusive, subArray, 0, newSize);"
False,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,474,eturn subArray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,542,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,543,startIndexInclusive = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,545,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,546,endIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,548,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,549,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,550,return EMPTY_INT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,553,int[] subarray = new int[newSize];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,554,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,555,return subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,559,* <p>Produces a new <code>short</code> array containing the elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,560,* between the start and end indices.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,562,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,563,* Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,565,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,566,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,567,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,568,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,569,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,570,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,571,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,572,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,574,"public static short[] subarray(short[] array, int startIndexInclusive, int endIndexExclusive) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,575,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,576,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,578,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,579,startIndexInclusive = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,581,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,582,endIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,584,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,585,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,586,return EMPTY_SHORT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,589,short[] subarray = new short[newSize];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,590,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,591,return subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,595,* <p>Produces a new <code>char</code> array containing the elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,596,* between the start and end indices.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,598,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,599,* Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,601,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,602,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,603,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,604,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,605,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,606,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,607,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,608,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,610,"public static char[] subarray(char[] array, int startIndexInclusive, int endIndexExclusive) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,611,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,612,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,614,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,615,startIndexInclusive = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,617,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,618,endIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,620,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,621,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,622,return EMPTY_CHAR_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,625,char[] subarray = new char[newSize];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,626,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,627,return subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,631,* <p>Produces a new <code>byte</code> array containing the elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,632,* between the start and end indices.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,634,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,635,* Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,637,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,638,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,639,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,640,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,641,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,642,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,643,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,644,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,646,"public static byte[] subarray(byte[] array, int startIndexInclusive, int endIndexExclusive) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,647,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,648,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,650,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,651,startIndexInclusive = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,653,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,654,endIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,656,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,657,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,658,return EMPTY_BYTE_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,661,byte[] subarray = new byte[newSize];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,662,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,663,return subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,667,* <p>Produces a new <code>double</code> array containing the elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,668,* between the start and end indices.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,670,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,671,* Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,673,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,674,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,675,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,676,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,677,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,678,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,679,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,680,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,682,"public static double[] subarray(double[] array, int startIndexInclusive, int endIndexExclusive) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,683,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,684,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,686,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,687,startIndexInclusive = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,689,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,690,endIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,692,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,693,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,694,return EMPTY_DOUBLE_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,697,double[] subarray = new double[newSize];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,698,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,699,return subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,703,* <p>Produces a new <code>float</code> array containing the elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,704,* between the start and end indices.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,706,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,707,* Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,709,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,710,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,711,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,712,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,713,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,714,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,715,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,716,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,718,"public static float[] subarray(float[] array, int startIndexInclusive, int endIndexExclusive) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,719,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,720,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,722,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,723,startIndexInclusive = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,725,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,726,endIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,728,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,729,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,730,return EMPTY_FLOAT_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,733,float[] subarray = new float[newSize];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,734,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,735,return subarray;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,739,* <p>Produces a new <code>boolean</code> array containing the elements
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,740,* between the start and end indices.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,742,"* <p>The start index is inclusive, the end index exclusive."
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,743,* Null array input produces null output.</p>
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,745,* @param array  the array
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,746,* @param startIndexInclusive  the starting index. Undervalue (&lt;0)
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,747,"*      is promoted to 0, overvalue (&gt;array.length) results"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,748,*      in an empty array.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,749,* @param endIndexExclusive  elements up to endIndex-1 are present in the
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,750,*      returned subarray. Undervalue (&lt; startIndex) produces
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,751,"*      empty array, overvalue (&gt;array.length) is demoted to"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,752,*      array length.
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,754,"public static boolean[] subarray(boolean[] array, int startIndexInclusive, int endIndexExclusive) {"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,755,if (array == null) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,756,return null;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,758,if (startIndexInclusive < 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,759,startIndexInclusive = 0;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,761,if (endIndexExclusive > array.length) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,762,endIndexExclusive = array.length;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,764,int newSize = endIndexExclusive - startIndexInclusive;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,765,if (newSize <= 0) {
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,766,return EMPTY_BOOLEAN_ARRAY;
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,769,boolean[] subarray = new boolean[newSize];
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,770,"System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);"
True,src/java/org/apache/commons/lang/ArrayUtils.java,src/java/org/apache/commons/lang/ArrayUtils.java,771,return subarray;
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,59,import java.util.Date;
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,75," @version $Id: ArrayUtilsTest.java,v 1.17 2003/11/30 13:36:08 scolebourne Exp $"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,76,"* @version $Id: ArrayUtilsTest.java,v 1.18 2003/12/05 23:37:18 scolebourne Exp $"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,277,ublic void testSubArray() {
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,278,"bject[] inarray = { ""a"", ""b"", ""c"", ""d"", ""e"", ""f""};"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,278,public void testSubarrayObject() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,279,Object[] nullArray = null;
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,280,"Object[] objectArray = { ""a"", ""b"", ""c"", ""d"", ""e"", ""f""};"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,281,"tringUtils.join(ArrayUtils.subArray(inarray, 0, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,283,"StringUtils.join(ArrayUtils.subarray(objectArray, 0, 4)));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,283,"tringUtils.join(ArrayUtils.subArray(inarray, 0, inarray.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,285,"StringUtils.join(ArrayUtils.subarray(objectArray, 0, objectArray.length)));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,285,"tringUtils.join(ArrayUtils.subArray(inarray, 1, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,287,"StringUtils.join(ArrayUtils.subarray(objectArray, 1, 4)));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,287,"tringUtils.join(ArrayUtils.subArray(inarray, 1, inarray.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,289,"StringUtils.join(ArrayUtils.subarray(objectArray, 1, objectArray.length)));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,289,"ssertNull(""null input"", ArrayUtils.subArray(null, 0, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,291,"assertNull(""null input"", ArrayUtils.subarray(nullArray, 0, 3));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,291,"tringUtils.join(ArrayUtils.subArray(ArrayUtils.EMPTY_OBJECT_ARRAY, 1, 2)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,293,"StringUtils.join(ArrayUtils.subarray(ArrayUtils.EMPTY_OBJECT_ARRAY, 1, 2)));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,293,"tringUtils.join(ArrayUtils.subArray(inarray, 4, 2)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,295,"StringUtils.join(ArrayUtils.subarray(objectArray, 4, 2)));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,295,"tringUtils.join(ArrayUtils.subArray(inarray, 3, 3)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,297,"StringUtils.join(ArrayUtils.subarray(objectArray, 3, 3)));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,297,"tringUtils.join(ArrayUtils.subArray(inarray, -2, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,299,"StringUtils.join(ArrayUtils.subarray(objectArray, -2, 4)));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,299,"tringUtils.join(ArrayUtils.subArray(inarray, 33, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,301,"StringUtils.join(ArrayUtils.subarray(objectArray, 33, 4)));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,301,"tringUtils.join(ArrayUtils.subArray(inarray, 2, 33)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,303,"StringUtils.join(ArrayUtils.subarray(objectArray, 2, 33)));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,303,"tringUtils.join(ArrayUtils.subArray(inarray, -2, 12)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,305,"StringUtils.join(ArrayUtils.subarray(objectArray, -2, 12)));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,305,/ object-level tests
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,306,"ssertSame(""empty array, object test"", ArrayUtils.EMPTY_OBJECT_ARRAY,"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,307,"rrayUtils.subArray(ArrayUtils.EMPTY_OBJECT_ARRAY, 1, 2));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,308,"ssertSame(""start > end, object test"", ArrayUtils.EMPTY_OBJECT_ARRAY,"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,309,"rrayUtils.subArray(inarray, 4, 1));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,310,"ssertSame(""start > end, object test"", ArrayUtils.EMPTY_OBJECT_ARRAY,"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,311,"rrayUtils.subArray(inarray, 33, 1));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,312,"ssertSame(""start == end, object test"", ArrayUtils.EMPTY_OBJECT_ARRAY,"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,313,"rrayUtils.subArray(inarray, 3, 3));"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,314,"ssertSame(""start overshoot, any end, object test"", ArrayUtils.EMPTY_OBJECT_ARRAY,"
False,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,315,"rrayUtils.subArray(inarray, 8733, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,307,// array type tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,308,"Date[] dateArray = { new java.sql.Date(new Date().getTime()),"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,309,"new Date(), new Date(), new Date(), new Date() };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,311,"assertSame(""Object type"", Object.class,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,312,"ArrayUtils.subarray(objectArray, 2, 4).getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,313,"assertSame(""java.util.Date type"", java.util.Date.class,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,314,"ArrayUtils.subarray(dateArray, 1, 4).getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,315,"assertNotSame(""java.sql.Date type"", java.sql.Date.class,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,316,"ArrayUtils.subarray(dateArray, 1, 4).getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,317,try {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,318,"Object dummy = (java.sql.Date[])ArrayUtils.subarray(dateArray, 1,3);"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,319,"fail(""Invalid downcast"");"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,320,} catch (ClassCastException e) {}
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,323,public void testSubarrayLong() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,324,long[] nullArray = null;
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,325,"long[] array = { 999910, 999911, 999912, 999913, 999914, 999915 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,326,"long[] leftSubarray     = { 999910, 999911, 999912, 999913 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,327,"long[] midSubarray      = { 999911, 999912, 999913, 999914 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,328,"long[] rightSubarray    = { 999912, 999913, 999914, 999915 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,330,"assertTrue(""0 start, mid end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,331,"ArrayUtils.isEquals(leftSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,332,"ArrayUtils.subarray(array, 0, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,334,"assertTrue(""0 start, length end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,335,"ArrayUtils.isEquals(array,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,336,"ArrayUtils.subarray(array, 0, array.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,338,"assertTrue(""mid start, mid end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,339,"ArrayUtils.isEquals(midSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,340,"ArrayUtils.subarray(array, 1, 5)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,342,"assertTrue(""mid start, length end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,343,"ArrayUtils.isEquals(rightSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,344,"ArrayUtils.subarray(array, 2, array.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,347,"assertNull(""null input"", ArrayUtils.subarray(nullArray, 0, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,349,"assertEquals(""empty array"", ArrayUtils.EMPTY_LONG_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,350,"ArrayUtils.subarray(ArrayUtils.EMPTY_LONG_ARRAY, 1, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,352,"assertEquals(""start > end"", ArrayUtils.EMPTY_LONG_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,353,"ArrayUtils.subarray(array, 4, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,355,"assertEquals(""start == end"", ArrayUtils.EMPTY_LONG_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,356,"ArrayUtils.subarray(array, 3, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,358,"assertTrue(""start undershoot, normal end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,359,"ArrayUtils.isEquals(leftSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,360,"ArrayUtils.subarray(array, -2, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,362,"assertEquals(""start overshoot, any end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,363,"ArrayUtils.EMPTY_LONG_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,364,"ArrayUtils.subarray(array, 33, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,366,"assertTrue(""normal start, end overshoot"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,367,"ArrayUtils.isEquals(rightSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,368,"ArrayUtils.subarray(array, 2, 33)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,370,"assertTrue(""start undershoot, end overshoot"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,371,"ArrayUtils.isEquals(array,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,372,"ArrayUtils.subarray(array, -2, 12)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,374,// empty-return tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,376,"assertSame(""empty array, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,377,"ArrayUtils.EMPTY_LONG_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,378,"ArrayUtils.subarray(ArrayUtils.EMPTY_LONG_ARRAY, 1, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,380,"assertSame(""start > end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,381,"ArrayUtils.EMPTY_LONG_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,382,"ArrayUtils.subarray(array, 4, 1));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,384,"assertSame(""start == end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,385,"ArrayUtils.EMPTY_LONG_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,386,"ArrayUtils.subarray(array, 3, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,388,"assertSame(""start overshoot, any end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,389,"ArrayUtils.EMPTY_LONG_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,390,"ArrayUtils.subarray(array, 8733, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,392,// array type tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,394,"assertSame(""long type"", long.class,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,395,"ArrayUtils.subarray(array, 2, 4).getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,399,public void testSubarrayInt() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,400,int[] nullArray = null;
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,401,"int[] array = { 10, 11, 12, 13, 14, 15 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,402,"int[] leftSubarray  = { 10, 11, 12, 13 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,403,"int[] midSubarray   = { 11, 12, 13, 14 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,404,"int[] rightSubarray = { 12, 13, 14, 15 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,407,"assertTrue(""0 start, mid end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,408,"ArrayUtils.isEquals(leftSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,409,"ArrayUtils.subarray(array, 0, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,411,"assertTrue(""0 start, length end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,412,"ArrayUtils.isEquals(array,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,413,"ArrayUtils.subarray(array, 0, array.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,415,"assertTrue(""mid start, mid end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,416,"ArrayUtils.isEquals(midSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,417,"ArrayUtils.subarray(array, 1, 5)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,419,"assertTrue(""mid start, length end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,420,"ArrayUtils.isEquals(rightSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,421,"ArrayUtils.subarray(array, 2, array.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,424,"assertNull(""null input"", ArrayUtils.subarray(nullArray, 0, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,426,"assertEquals(""empty array"", ArrayUtils.EMPTY_INT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,427,"ArrayUtils.subarray(ArrayUtils.EMPTY_INT_ARRAY, 1, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,429,"assertEquals(""start > end"", ArrayUtils.EMPTY_INT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,430,"ArrayUtils.subarray(array, 4, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,432,"assertEquals(""start == end"", ArrayUtils.EMPTY_INT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,433,"ArrayUtils.subarray(array, 3, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,435,"assertTrue(""start undershoot, normal end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,436,"ArrayUtils.isEquals(leftSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,437,"ArrayUtils.subarray(array, -2, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,439,"assertEquals(""start overshoot, any end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,440,"ArrayUtils.EMPTY_INT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,441,"ArrayUtils.subarray(array, 33, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,443,"assertTrue(""normal start, end overshoot"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,444,"ArrayUtils.isEquals(rightSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,445,"ArrayUtils.subarray(array, 2, 33)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,447,"assertTrue(""start undershoot, end overshoot"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,448,"ArrayUtils.isEquals(array,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,449,"ArrayUtils.subarray(array, -2, 12)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,451,// empty-return tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,453,"assertSame(""empty array, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,454,"ArrayUtils.EMPTY_INT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,455,"ArrayUtils.subarray(ArrayUtils.EMPTY_INT_ARRAY, 1, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,457,"assertSame(""start > end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,458,"ArrayUtils.EMPTY_INT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,459,"ArrayUtils.subarray(array, 4, 1));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,461,"assertSame(""start == end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,462,"ArrayUtils.EMPTY_INT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,463,"ArrayUtils.subarray(array, 3, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,465,"assertSame(""start overshoot, any end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,466,"ArrayUtils.EMPTY_INT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,467,"ArrayUtils.subarray(array, 8733, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,469,// array type tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,471,"assertSame(""int type"", int.class,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,472,"ArrayUtils.subarray(array, 2, 4).getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,476,public void testSubarrayShort() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,477,short[] nullArray = null;
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,478,"short[] array = { 10, 11, 12, 13, 14, 15 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,479,"short[] leftSubarray    = { 10, 11, 12, 13 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,480,"short[] midSubarray     = { 11, 12, 13, 14 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,481,"short[] rightSubarray   = { 12, 13, 14, 15 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,484,"assertTrue(""0 start, mid end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,485,"ArrayUtils.isEquals(leftSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,486,"ArrayUtils.subarray(array, 0, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,488,"assertTrue(""0 start, length end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,489,"ArrayUtils.isEquals(array,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,490,"ArrayUtils.subarray(array, 0, array.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,492,"assertTrue(""mid start, mid end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,493,"ArrayUtils.isEquals(midSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,494,"ArrayUtils.subarray(array, 1, 5)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,496,"assertTrue(""mid start, length end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,497,"ArrayUtils.isEquals(rightSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,498,"ArrayUtils.subarray(array, 2, array.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,501,"assertNull(""null input"", ArrayUtils.subarray(nullArray, 0, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,503,"assertEquals(""empty array"", ArrayUtils.EMPTY_SHORT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,504,"ArrayUtils.subarray(ArrayUtils.EMPTY_SHORT_ARRAY, 1, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,506,"assertEquals(""start > end"", ArrayUtils.EMPTY_SHORT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,507,"ArrayUtils.subarray(array, 4, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,509,"assertEquals(""start == end"", ArrayUtils.EMPTY_SHORT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,510,"ArrayUtils.subarray(array, 3, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,512,"assertTrue(""start undershoot, normal end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,513,"ArrayUtils.isEquals(leftSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,514,"ArrayUtils.subarray(array, -2, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,516,"assertEquals(""start overshoot, any end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,517,"ArrayUtils.EMPTY_SHORT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,518,"ArrayUtils.subarray(array, 33, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,520,"assertTrue(""normal start, end overshoot"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,521,"ArrayUtils.isEquals(rightSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,522,"ArrayUtils.subarray(array, 2, 33)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,524,"assertTrue(""start undershoot, end overshoot"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,525,"ArrayUtils.isEquals(array,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,526,"ArrayUtils.subarray(array, -2, 12)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,528,// empty-return tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,530,"assertSame(""empty array, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,531,"ArrayUtils.EMPTY_SHORT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,532,"ArrayUtils.subarray(ArrayUtils.EMPTY_SHORT_ARRAY, 1, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,534,"assertSame(""start > end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,535,"ArrayUtils.EMPTY_SHORT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,536,"ArrayUtils.subarray(array, 4, 1));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,538,"assertSame(""start == end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,539,"ArrayUtils.EMPTY_SHORT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,540,"ArrayUtils.subarray(array, 3, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,542,"assertSame(""start overshoot, any end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,543,"ArrayUtils.EMPTY_SHORT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,544,"ArrayUtils.subarray(array, 8733, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,546,// array type tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,548,"assertSame(""short type"", short.class,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,549,"ArrayUtils.subarray(array, 2, 4).getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,553,public void testSubarrChar() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,554,char[] nullArray = null;
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,555,"char[] array = { 'a', 'b', 'c', 'd', 'e', 'f' };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,556,"char[] leftSubarray     = { 'a', 'b', 'c', 'd', };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,557,"char[] midSubarray      = { 'b', 'c', 'd', 'e', };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,558,"char[] rightSubarray    = { 'c', 'd', 'e', 'f', };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,561,"assertTrue(""0 start, mid end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,562,"ArrayUtils.isEquals(leftSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,563,"ArrayUtils.subarray(array, 0, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,565,"assertTrue(""0 start, length end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,566,"ArrayUtils.isEquals(array,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,567,"ArrayUtils.subarray(array, 0, array.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,569,"assertTrue(""mid start, mid end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,570,"ArrayUtils.isEquals(midSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,571,"ArrayUtils.subarray(array, 1, 5)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,573,"assertTrue(""mid start, length end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,574,"ArrayUtils.isEquals(rightSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,575,"ArrayUtils.subarray(array, 2, array.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,578,"assertNull(""null input"", ArrayUtils.subarray(nullArray, 0, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,580,"assertEquals(""empty array"", ArrayUtils.EMPTY_CHAR_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,581,"ArrayUtils.subarray(ArrayUtils.EMPTY_CHAR_ARRAY, 1, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,583,"assertEquals(""start > end"", ArrayUtils.EMPTY_CHAR_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,584,"ArrayUtils.subarray(array, 4, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,586,"assertEquals(""start == end"", ArrayUtils.EMPTY_CHAR_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,587,"ArrayUtils.subarray(array, 3, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,589,"assertTrue(""start undershoot, normal end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,590,"ArrayUtils.isEquals(leftSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,591,"ArrayUtils.subarray(array, -2, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,593,"assertEquals(""start overshoot, any end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,594,"ArrayUtils.EMPTY_CHAR_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,595,"ArrayUtils.subarray(array, 33, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,597,"assertTrue(""normal start, end overshoot"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,598,"ArrayUtils.isEquals(rightSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,599,"ArrayUtils.subarray(array, 2, 33)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,601,"assertTrue(""start undershoot, end overshoot"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,602,"ArrayUtils.isEquals(array,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,603,"ArrayUtils.subarray(array, -2, 12)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,605,// empty-return tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,607,"assertSame(""empty array, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,608,"ArrayUtils.EMPTY_CHAR_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,609,"ArrayUtils.subarray(ArrayUtils.EMPTY_CHAR_ARRAY, 1, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,611,"assertSame(""start > end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,612,"ArrayUtils.EMPTY_CHAR_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,613,"ArrayUtils.subarray(array, 4, 1));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,615,"assertSame(""start == end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,616,"ArrayUtils.EMPTY_CHAR_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,617,"ArrayUtils.subarray(array, 3, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,619,"assertSame(""start overshoot, any end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,620,"ArrayUtils.EMPTY_CHAR_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,621,"ArrayUtils.subarray(array, 8733, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,623,// array type tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,625,"assertSame(""char type"", char.class,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,626,"ArrayUtils.subarray(array, 2, 4).getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,630,public void testSubarrayByte() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,631,byte[] nullArray = null;
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,632,"byte[] array = { 10, 11, 12, 13, 14, 15 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,633,"byte[] leftSubarray     = { 10, 11, 12, 13 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,634,"byte[] midSubarray      = { 11, 12, 13, 14 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,635,"byte[] rightSubarray = { 12, 13, 14, 15 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,638,"assertTrue(""0 start, mid end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,639,"ArrayUtils.isEquals(leftSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,640,"ArrayUtils.subarray(array, 0, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,642,"assertTrue(""0 start, length end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,643,"ArrayUtils.isEquals(array,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,644,"ArrayUtils.subarray(array, 0, array.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,646,"assertTrue(""mid start, mid end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,647,"ArrayUtils.isEquals(midSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,648,"ArrayUtils.subarray(array, 1, 5)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,650,"assertTrue(""mid start, length end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,651,"ArrayUtils.isEquals(rightSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,652,"ArrayUtils.subarray(array, 2, array.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,655,"assertNull(""null input"", ArrayUtils.subarray(nullArray, 0, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,657,"assertEquals(""empty array"", ArrayUtils.EMPTY_BYTE_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,658,"ArrayUtils.subarray(ArrayUtils.EMPTY_BYTE_ARRAY, 1, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,660,"assertEquals(""start > end"", ArrayUtils.EMPTY_BYTE_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,661,"ArrayUtils.subarray(array, 4, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,663,"assertEquals(""start == end"", ArrayUtils.EMPTY_BYTE_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,664,"ArrayUtils.subarray(array, 3, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,666,"assertTrue(""start undershoot, normal end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,667,"ArrayUtils.isEquals(leftSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,668,"ArrayUtils.subarray(array, -2, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,670,"assertEquals(""start overshoot, any end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,671,"ArrayUtils.EMPTY_BYTE_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,672,"ArrayUtils.subarray(array, 33, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,674,"assertTrue(""normal start, end overshoot"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,675,"ArrayUtils.isEquals(rightSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,676,"ArrayUtils.subarray(array, 2, 33)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,678,"assertTrue(""start undershoot, end overshoot"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,679,"ArrayUtils.isEquals(array,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,680,"ArrayUtils.subarray(array, -2, 12)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,682,// empty-return tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,684,"assertSame(""empty array, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,685,"ArrayUtils.EMPTY_BYTE_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,686,"ArrayUtils.subarray(ArrayUtils.EMPTY_BYTE_ARRAY, 1, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,688,"assertSame(""start > end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,689,"ArrayUtils.EMPTY_BYTE_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,690,"ArrayUtils.subarray(array, 4, 1));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,692,"assertSame(""start == end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,693,"ArrayUtils.EMPTY_BYTE_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,694,"ArrayUtils.subarray(array, 3, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,696,"assertSame(""start overshoot, any end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,697,"ArrayUtils.EMPTY_BYTE_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,698,"ArrayUtils.subarray(array, 8733, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,700,// array type tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,702,"assertSame(""byte type"", byte.class,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,703,"ArrayUtils.subarray(array, 2, 4).getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,707,public void testSubarrayDouble() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,708,double[] nullArray = null;
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,709,"double[] array = { 10.123, 11.234, 12.345, 13.456, 14.567, 15.678 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,710,"double[] leftSubarray   = { 10.123, 11.234, 12.345, 13.456, };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,711,"double[] midSubarray    = { 11.234, 12.345, 13.456, 14.567, };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,712,"double[] rightSubarray  = { 12.345, 13.456, 14.567, 15.678 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,715,"assertTrue(""0 start, mid end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,716,"ArrayUtils.isEquals(leftSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,717,"ArrayUtils.subarray(array, 0, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,719,"assertTrue(""0 start, length end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,720,"ArrayUtils.isEquals(array,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,721,"ArrayUtils.subarray(array, 0, array.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,723,"assertTrue(""mid start, mid end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,724,"ArrayUtils.isEquals(midSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,725,"ArrayUtils.subarray(array, 1, 5)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,727,"assertTrue(""mid start, length end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,728,"ArrayUtils.isEquals(rightSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,729,"ArrayUtils.subarray(array, 2, array.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,732,"assertNull(""null input"", ArrayUtils.subarray(nullArray, 0, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,734,"assertEquals(""empty array"", ArrayUtils.EMPTY_DOUBLE_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,735,"ArrayUtils.subarray(ArrayUtils.EMPTY_DOUBLE_ARRAY, 1, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,737,"assertEquals(""start > end"", ArrayUtils.EMPTY_DOUBLE_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,738,"ArrayUtils.subarray(array, 4, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,740,"assertEquals(""start == end"", ArrayUtils.EMPTY_DOUBLE_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,741,"ArrayUtils.subarray(array, 3, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,743,"assertTrue(""start undershoot, normal end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,744,"ArrayUtils.isEquals(leftSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,745,"ArrayUtils.subarray(array, -2, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,747,"assertEquals(""start overshoot, any end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,748,"ArrayUtils.EMPTY_DOUBLE_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,749,"ArrayUtils.subarray(array, 33, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,751,"assertTrue(""normal start, end overshoot"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,752,"ArrayUtils.isEquals(rightSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,753,"ArrayUtils.subarray(array, 2, 33)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,755,"assertTrue(""start undershoot, end overshoot"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,756,"ArrayUtils.isEquals(array,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,757,"ArrayUtils.subarray(array, -2, 12)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,759,// empty-return tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,761,"assertSame(""empty array, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,762,"ArrayUtils.EMPTY_DOUBLE_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,763,"ArrayUtils.subarray(ArrayUtils.EMPTY_DOUBLE_ARRAY, 1, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,765,"assertSame(""start > end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,766,"ArrayUtils.EMPTY_DOUBLE_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,767,"ArrayUtils.subarray(array, 4, 1));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,769,"assertSame(""start == end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,770,"ArrayUtils.EMPTY_DOUBLE_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,771,"ArrayUtils.subarray(array, 3, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,773,"assertSame(""start overshoot, any end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,774,"ArrayUtils.EMPTY_DOUBLE_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,775,"ArrayUtils.subarray(array, 8733, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,777,// array type tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,779,"assertSame(""double type"", double.class,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,780,"ArrayUtils.subarray(array, 2, 4).getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,784,public void testSubarrayFloat() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,785,float[] nullArray = null;
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,786,"float[] array = { 10, 11, 12, 13, 14, 15 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,787,"float[] leftSubarray    = { 10, 11, 12, 13 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,788,"float[] midSubarray     = { 11, 12, 13, 14 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,789,"float[] rightSubarray   = { 12, 13, 14, 15 };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,792,"assertTrue(""0 start, mid end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,793,"ArrayUtils.isEquals(leftSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,794,"ArrayUtils.subarray(array, 0, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,796,"assertTrue(""0 start, length end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,797,"ArrayUtils.isEquals(array,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,798,"ArrayUtils.subarray(array, 0, array.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,800,"assertTrue(""mid start, mid end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,801,"ArrayUtils.isEquals(midSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,802,"ArrayUtils.subarray(array, 1, 5)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,804,"assertTrue(""mid start, length end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,805,"ArrayUtils.isEquals(rightSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,806,"ArrayUtils.subarray(array, 2, array.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,809,"assertNull(""null input"", ArrayUtils.subarray(nullArray, 0, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,811,"assertEquals(""empty array"", ArrayUtils.EMPTY_FLOAT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,812,"ArrayUtils.subarray(ArrayUtils.EMPTY_FLOAT_ARRAY, 1, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,814,"assertEquals(""start > end"", ArrayUtils.EMPTY_FLOAT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,815,"ArrayUtils.subarray(array, 4, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,817,"assertEquals(""start == end"", ArrayUtils.EMPTY_FLOAT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,818,"ArrayUtils.subarray(array, 3, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,820,"assertTrue(""start undershoot, normal end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,821,"ArrayUtils.isEquals(leftSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,822,"ArrayUtils.subarray(array, -2, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,824,"assertEquals(""start overshoot, any end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,825,"ArrayUtils.EMPTY_FLOAT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,826,"ArrayUtils.subarray(array, 33, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,828,"assertTrue(""normal start, end overshoot"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,829,"ArrayUtils.isEquals(rightSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,830,"ArrayUtils.subarray(array, 2, 33)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,832,"assertTrue(""start undershoot, end overshoot"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,833,"ArrayUtils.isEquals(array,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,834,"ArrayUtils.subarray(array, -2, 12)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,836,// empty-return tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,838,"assertSame(""empty array, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,839,"ArrayUtils.EMPTY_FLOAT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,840,"ArrayUtils.subarray(ArrayUtils.EMPTY_FLOAT_ARRAY, 1, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,842,"assertSame(""start > end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,843,"ArrayUtils.EMPTY_FLOAT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,844,"ArrayUtils.subarray(array, 4, 1));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,846,"assertSame(""start == end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,847,"ArrayUtils.EMPTY_FLOAT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,848,"ArrayUtils.subarray(array, 3, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,850,"assertSame(""start overshoot, any end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,851,"ArrayUtils.EMPTY_FLOAT_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,852,"ArrayUtils.subarray(array, 8733, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,854,// array type tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,856,"assertSame(""float type"", float.class,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,857,"ArrayUtils.subarray(array, 2, 4).getClass().getComponentType());"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,861,public void testSubarrayBoolean() {
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,862,boolean[] nullArray = null;
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,863,"boolean[] array = { true, true, false, true, false, true };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,864,"boolean[] leftSubarray  = { true, true, false, true  };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,865,"boolean[] midSubarray   = { true, false, true, false };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,866,"boolean[] rightSubarray = { false, true, false, true };"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,869,"assertTrue(""0 start, mid end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,870,"ArrayUtils.isEquals(leftSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,871,"ArrayUtils.subarray(array, 0, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,873,"assertTrue(""0 start, length end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,874,"ArrayUtils.isEquals(array,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,875,"ArrayUtils.subarray(array, 0, array.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,877,"assertTrue(""mid start, mid end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,878,"ArrayUtils.isEquals(midSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,879,"ArrayUtils.subarray(array, 1, 5)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,881,"assertTrue(""mid start, length end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,882,"ArrayUtils.isEquals(rightSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,883,"ArrayUtils.subarray(array, 2, array.length)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,886,"assertNull(""null input"", ArrayUtils.subarray(nullArray, 0, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,888,"assertEquals(""empty array"", ArrayUtils.EMPTY_BOOLEAN_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,889,"ArrayUtils.subarray(ArrayUtils.EMPTY_BOOLEAN_ARRAY, 1, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,891,"assertEquals(""start > end"", ArrayUtils.EMPTY_BOOLEAN_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,892,"ArrayUtils.subarray(array, 4, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,894,"assertEquals(""start == end"", ArrayUtils.EMPTY_BOOLEAN_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,895,"ArrayUtils.subarray(array, 3, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,897,"assertTrue(""start undershoot, normal end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,898,"ArrayUtils.isEquals(leftSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,899,"ArrayUtils.subarray(array, -2, 4)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,901,"assertEquals(""start overshoot, any end"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,902,"ArrayUtils.EMPTY_BOOLEAN_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,903,"ArrayUtils.subarray(array, 33, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,905,"assertTrue(""normal start, end overshoot"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,906,"ArrayUtils.isEquals(rightSubarray,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,907,"ArrayUtils.subarray(array, 2, 33)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,909,"assertTrue(""start undershoot, end overshoot"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,910,"ArrayUtils.isEquals(array,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,911,"ArrayUtils.subarray(array, -2, 12)));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,913,// empty-return tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,915,"assertSame(""empty array, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,916,"ArrayUtils.EMPTY_BOOLEAN_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,917,"ArrayUtils.subarray(ArrayUtils.EMPTY_BOOLEAN_ARRAY, 1, 2));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,919,"assertSame(""start > end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,920,"ArrayUtils.EMPTY_BOOLEAN_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,921,"ArrayUtils.subarray(array, 4, 1));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,923,"assertSame(""start == end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,924,"ArrayUtils.EMPTY_BOOLEAN_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,925,"ArrayUtils.subarray(array, 3, 3));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,927,"assertSame(""start overshoot, any end, object test"","
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,928,"ArrayUtils.EMPTY_BOOLEAN_ARRAY,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,929,"ArrayUtils.subarray(array, 8733, 4));"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,931,// array type tests
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,933,"assertSame(""boolean type"", boolean.class,"
True,src/test/org/apache/commons/lang/ArrayUtilsTest.java,src/test/org/apache/commons/lang/ArrayUtilsTest.java,934,"ArrayUtils.subarray(array, 2, 4).getClass().getComponentType());"
