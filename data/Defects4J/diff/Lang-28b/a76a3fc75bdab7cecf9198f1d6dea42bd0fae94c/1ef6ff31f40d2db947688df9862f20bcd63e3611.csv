is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,149," @version $Id: StringUtils.java,v 1.76 2003/07/21 00:41:13 scolebourne Exp $"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,149,"* @version $Id: StringUtils.java,v 1.77 2003/07/22 23:36:40 scolebourne Exp $"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1765, <p>Concatenates elements of an array into a single String.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1765,* <p>Concatenates elements of an array into a single String.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1766,* Null objects or empty strings within the array are represented by
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1767,* empty strings.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1767, <p>The difference from join is that concatenate has no delimiter.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1769,"* <p>The difference from join is that concatenate has no delimiter -- i.e., <br>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1770,"* <code>StringUtils.concatenate(array) = StringUtils.join(array, null)</code>.</p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1772,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1773,* StringUtils.concatenate(null)            = null
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1774,"* StringUtils.concatenate([])              = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1775,"* StringUtils.concatenate([null])          = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1776,"* StringUtils.concatenate([""a"", ""b"", ""c""]) = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1777,"* StringUtils.concatenate([null, """", ""a""]) = ""a"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1778,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1792,* Null objects or empty strings within the array are represented by
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1793,* empty strings.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1795,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1796,"* StringUtils.join(null, *)               = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1797,"* StringUtils.join([], *)                 = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1798,"* StringUtils.join([null], *)             = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1799,"* StringUtils.join([""a"", ""b"", ""c""], ';')  = ""a;b;c"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1800,"* StringUtils.join([""a"", ""b"", ""c""], null) = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1801,"* StringUtils.join([null, """", ""a""], ';')  = "";;a"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1802,* </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1810," A <code>null</code> separator is the same as an empty String ("""").</p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1832,"* A <code>null</code> separator is the same as an empty String ("""")."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1833,* Null objects or empty strings within the array are represented by
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1834,* empty strings.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1836,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1837,"* StringUtils.join(null, *)                = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1838,"* StringUtils.join([], *)                  = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1839,"* StringUtils.join([null], *)              = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1840,"* StringUtils.join([""a"", ""b"", ""c""], ""--"")  = ""a--b--c"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1841,"* StringUtils.join([""a"", ""b"", ""c""], null)  = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1842,"* StringUtils.join([""a"", ""b"", ""c""], """")    = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1843,"* StringUtils.join([null, """", ""a""], ',')   = "",,a"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1844,* </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1850, <p>No delimiter is added before or after the list.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1884,* <p>No delimiter is added before or after the list. Null objects or empty
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1885,* strings within the iteration are represented by empty strings.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1887,"* <p>See the examples here: {@link #join(Object[],char)}. </p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1917,"* <p>See the examples here: {@link #join(Object[],String)}. </p>"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2066, <p>Overlay a part of a String with another String.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2105,* <p>Overlays part of a String with another String.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2104," <p>Remove one newline from end of a String if it's there,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2143,"* <p>Removes one newline from end of a String if it's there,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2151,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2152,* StringUtils.chomp(null)          = null
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2153,"* StringUtils.chomp("""")            = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2154,"* StringUtils.chomp(""abc \r"")      = ""abc """
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2155,"* StringUtils.chomp(""abc\n"")       = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2156,"* StringUtils.chomp(""abc\r\n"")     = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2157,"* StringUtils.chomp(""abc\r\n\r\n"") = ""abc\r\n"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2158,"* StringUtils.chomp(""abc\n\r"")     = ""abc\n"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2159,"* StringUtils.chomp(""abc\n\rabc"")  = ""abc\n\rabc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2160,"* StringUtils.chomp(""\r"")          = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2161,"* StringUtils.chomp(""\n"")          = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2162,"* StringUtils.chomp(""\r\n"")        = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2163,* </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2145, <p>Remove <code>separator</code> from the end of
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2198,* <p>Removes <code>separator</code> from the end of
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2150," For the previous behavior, use {@link #slice(String,String)}.</p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2203,"* For the previous behavior, use {@link #slice(String,String)}."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2204,* This method uses {@link String#endsWith(String)}.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2206,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2207,"* StringUtils.chomp(null, *)         = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2208,"* StringUtils.chomp("""", *)           = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2209,"* StringUtils.chomp(""foobar"", ""bar"") = ""foo"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2210,"* StringUtils.chomp(""foobar"", ""baz"") = ""foobar"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2211,"* StringUtils.chomp(""foo"", ""foo"")    = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2212,"* StringUtils.chomp(""foo "", ""foo"")   = ""foo"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2213,"* StringUtils.chomp("" foo"", ""foo"")   = "" """
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2214,"* StringUtils.chomp(""foo"", ""foooo"")  = ""foo"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2215,"* StringUtils.chomp(""foo"", """")       = ""foo"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2216,"* StringUtils.chomp(""foo"", null)     = ""foo"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2217,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2341,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2342,* StringUtils.chop(null)          = null
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2343,"* StringUtils.chop("""")            = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2344,"* StringUtils.chop(""abc \r"")      = ""abc """
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2345,"* StringUtils.chop(""abc\n"")       = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2346,"* StringUtils.chop(""abc\r\n"")     = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2347,"* StringUtils.chop(""abc"")         = ""ab"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2348,"* StringUtils.chop(""abc\nabc"")    = ""abc\nab"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2349,"* StringUtils.chop(""a"")           = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2350,"* StringUtils.chop(""\r"")          = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2351,"* StringUtils.chop(""\n"")          = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2352,"* StringUtils.chop(""\r\n"")        = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2353,* </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2297, <p>Remove <code>\n</code> from end of a String if it's there.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2378,* <p>Removes <code>\n</code> from end of a String if it's there.
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2327," <p>Remove the last newline, and everything after it from a String.</p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2408,"* <p>Removes the last newline, and everything after it from a String.</p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2410,* <p>A <code>null</code> string input will return <code>null</code>.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2411,"* An empty ("""") string input will return the empty string.</p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2413,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2414,* StringUtils.slice(null)          = null
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2415,"* StringUtils.slice("""")            = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2416,"* StringUtils.slice(""abc \n"")      = ""abc """
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2417,"* StringUtils.slice(""abc\n"")       = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2418,"* StringUtils.slice(""abc\r\n"")     = ""abc\r"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2419,"* StringUtils.slice(""abc"")         = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2420,"* StringUtils.slice(""abc\nabc"")    = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2421,"* StringUtils.slice(""abc\nabc\n"")  = ""abc\nabc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2422,"* StringUtils.slice(""\n"")          = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2423,* </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2339, <p>Find the last occurence of a separator String;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2340, remove it and everything after it.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2435,"* <p>Finds the last occurence of a separator String,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2436,* returning everything before it. The separator is not returned.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2438,* <p>A <code>null</code> string input will return <code>null</code>.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2439,"* An empty ("""") string input will return the empty string."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2440,* An empty or <code>null</code> separator will return the input string.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2442,"* <p>This method is the opposite of {@link #sliceRemainder(String, String)}.</p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2444,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2445,"* StringUtils.slice(null, *)      = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2446,"* StringUtils.slice("""", *)        = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2447,"* StringUtils.slice(""abcba"", ""b"") = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2448,"* StringUtils.slice(""abc"", ""c"")   = ""ab"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2449,"* StringUtils.slice(""a"", ""a"")     = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2450,"* StringUtils.slice(""a"", ""z"")     = ""a"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2451,"* StringUtils.slice(""a"", null)    = ""a"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2452,"* StringUtils.slice(""a"", """")      = ""a"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2453,* </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2361," <p>Find the last occurence of a separator String, and return"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2362, everything after it.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2474,"* <p>Finds the last occurence of a separator String,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2475,* returning everything after it.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2477,* <p>A <code>null</code> string input will return <code>null</code>.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2478,"* An empty ("""") string input will return the empty string."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2479,* An empty or <code>null</code> separator will return the empty string.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2481,"* <p>This method is the opposite of {@link #slice(String, String)}.</p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2483,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2484,"* StringUtils.sliceRemainder(null, *)         = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2485,"* StringUtils.sliceRemainder("""", *)           = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2486,"* StringUtils.sliceRemainder(*, """")           = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2487,"* StringUtils.sliceRemainder(*, null)         = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2488,"* StringUtils.sliceRemainder(""abc"", ""a"")      = ""bc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2489,"* StringUtils.sliceRemainder(""abcba"", ""b"")    = ""a"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2490,"* StringUtils.sliceRemainder(""abc"", ""c"")      = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2491,"* StringUtils.sliceRemainder(""a"", ""a"")        = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2492,"* StringUtils.sliceRemainder(""a"", ""z"")        = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2493,* </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2389," <p>Find the first occurence of a separator String, and return"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2390, everything after it.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2520,"* <p>Finds the first occurence of a separator String,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2521,* returning everything before it. The separator is not returned.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2392," <p><em>(This method was formerly named prechomp.  Also, previously"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2393, it included the separator in the return value; now it does not.)</em></p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2523,* <p>A <code>null</code> string input will return <code>null</code>.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2524,"* An empty ("""") string input will return the empty string."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2525,* An empty or <code>null</code> separator will return the input string.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2527,"* <p>This method is the opposite of {@link #sliceFirst(String, String)}.</p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2529,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2530,"* StringUtils.sliceFirst(null, *)         = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2531,"* StringUtils.sliceFirst("""", *)           = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2532,"* StringUtils.sliceFirst(""abc"", ""a"")      = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2533,"* StringUtils.sliceFirst(""abcba"", ""b"")    = ""a"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2534,"* StringUtils.sliceFirst(""abc"", ""c"")      = ""ab"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2535,"* StringUtils.sliceFirst(""abc"", ""d"")      = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2536,"* StringUtils.sliceFirst(""abc"", """")       = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2537,"* StringUtils.sliceFirst(""abc"", null)     = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2538,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2540,"* <p><em>(This method was formerly named getPrechomp.  Also, it used to"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2541,"* include the separator, but now it does not.)</em></p>"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2397," @return String without sliced beginning, <code>null</code> if null String input"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2545,"* @return sliced String, <code>null</code> if null String input"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2399,"ublic static String sliceFirstRemainder(String str, String separator) {"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2400,f (str == null || str.length() == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2547,"public static String sliceFirst(String str, String separator) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2548,if (str == null || separator == null || str.length() == 0 || separator.length() == 0) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2403,f (separator == null || separator.length() == 0) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2404,"eturn """";"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2408,eturn str.substring(idx + separator.length());
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2553,"return str.substring(0, idx);"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2410,eturn str;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2555,"return """";"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2415, <p>Find the first occurence of a separator String;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2416, return everything before it (but not including the separator).</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2560,"* <p>Finds the first occurence of a separator String,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2561,* returning everything after it.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2418," <p><em>(This method was formerly named getPrechomp.  Also, it used to"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2419," include the separator, but now it does not.)</em></p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2563,* <p>A <code>null</code> string input will return <code>null</code>.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2564,"* An empty ("""") string input will return the empty string."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2565,* An empty or <code>null</code> separator will return the empty string.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2567,"* <p>This method is the opposite of {@link #sliceFirst(String, String)}.</p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2569,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2570,"* StringUtils.sliceFirstRemainder(null, *)         = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2571,"* StringUtils.sliceFirstRemainder("""", *)           = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2572,"* StringUtils.sliceFirstRemainder(*, """")           = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2573,"* StringUtils.sliceFirstRemainder(*, null)         = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2574,"* StringUtils.sliceFirstRemainder(""abc"", ""a"")      = ""bc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2575,"* StringUtils.sliceFirstRemainder(""abcba"", ""b"")    = ""cba"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2576,"* StringUtils.sliceFirstRemainder(""abc"", ""c"")      = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2577,"* StringUtils.sliceFirstRemainder(""abc"", ""d"")      = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2578,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2580,"* <p><em>(This method was formerly named prechomp.  Also, previously"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2581,* it included the separator in the return value; now it does not.)</em></p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2423," @return sliced String, <code>null</code> if null String input"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2585,"* @return String without sliced beginning, <code>null</code> if null String input"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2425,"ublic static String sliceFirst(String str, String separator) {"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2426,f (str == null || separator == null || str.length() == 0 || separator.length() == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2587,"public static String sliceFirstRemainder(String str, String separator) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2588,if (str == null || str.length() == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2591,if (separator == null || separator.length() == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2592,"return """";"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2431,"eturn str.substring(0, idx);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2596,return str.substring(idx + separator.length());
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2433,"eturn """";"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2598,return str;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3185, <p>How many times is the substring in the larger String.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3350,* <p>Counts how many times the substring appears in the larger String.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3187, <p>A <code>null</code> String input returns <code>0</code>.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3352,"* <p>A <code>null</code> or empty ("""") String input returns <code>0</code>.</p>"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3499, <p>Reverse a String as per {@link StringBuffer#reverse()}.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3664,* <p>Reverses a String as per {@link StringBuffer#reverse()}.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3588," <p>Turn ""Now is the time for all good men"" into ""Now is the time for...""</p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3753,* <p>Abbreviates a String using ellipses. This will turn
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3754,"* ""Now is the time for all good men"" into ""Now is the time for...""</p>"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3595,"   <li>If <code>maxWidth</code> is less than </code>3, throw an"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3761,"*   <li>If <code>maxWidth</code> is less than <code>4</code>, throw an"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3768,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3769,"* StringUtils.abbreviate(null, *)      = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3770,"* StringUtils.abbreviate("""", 4)        = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3771,"* StringUtils.abbreviate(""abcdefg"", 6) = ""abc..."""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3772,"* StringUtils.abbreviate(""abcdefg"", 7) = ""abcdefg"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3773,"* StringUtils.abbreviate(""abcdefg"", 8) = ""abcdefg"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3774,"* StringUtils.abbreviate(""abcdefg"", 4) = ""a..."""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3775,"* StringUtils.abbreviate(""abcdefg"", 3) = IllegalArgumentException"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3776,* </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3612," <p>Turn ""Now is the time for all good men"" into ""...is the time for...""</p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3788,* <p>Abbreviates a String using ellipses. This will turn
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3789,"* ""Now is the time for all good men"" into ""...is the time for...""</p>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3799,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3800,"* StringUtils.abbreviate(null, *, *)                = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3801,"* StringUtils.abbreviate("""", 0, 4)                  = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3802,"* StringUtils.abbreviate(""abcdefghijklmno"", -1, 10) = ""abcdefg..."""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3803,"* StringUtils.abbreviate(""abcdefghijklmno"", 0, 10)  = ""abcdefg..."""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3804,"* StringUtils.abbreviate(""abcdefghijklmno"", 1, 10)  = ""abcdefg..."""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3805,"* StringUtils.abbreviate(""abcdefghijklmno"", 4, 10)  = ""abcdefg..."""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3806,"* StringUtils.abbreviate(""abcdefghijklmno"", 5, 10)  = ""...fghi..."""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3807,"* StringUtils.abbreviate(""abcdefghijklmno"", 6, 10)  = ""...ghij..."""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3808,"* StringUtils.abbreviate(""abcdefghijklmno"", 8, 10)  = ""...ijklmno"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3809,"* StringUtils.abbreviate(""abcdefghijklmno"", 10, 10) = ""...ijklmno"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3810,"* StringUtils.abbreviate(""abcdefghijklmno"", 12, 10) = ""...ijklmno"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3811,"* StringUtils.abbreviate(""abcdefghij"", 0, 3)        = IllegalArgumentException"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3812,"* StringUtils.abbreviate(""abcdefghij"", 5, 6)        = IllegalArgumentException"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3813,* </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3660," <p>Compare two Strings, and return the portion where they differ."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3853,"* <p>Compares two Strings, and returns the portion where they differ."
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3698," <p>Compare two Strings, and return the index at which the"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3891,"* <p>Compares two Strings, and returns the index at which the"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3746, another. Where each change is a single character modification.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3939,"* another, where each change is a single character modification (deletion,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3940,* insertion or substitution).</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3748, <p>This implemmentation of the levenshtein distance algorithm
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3942,* <p>This implementation of the Levenshtein distance algorithm
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3945,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3946,"* StringUtils.getLevenshteinDistance(null, *)             = IllegalArgumentException"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3947,"* StringUtils.getLevenshteinDistance(*, null)             = IllegalArgumentException"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3948,"* StringUtils.getLevenshteinDistance("""","""")               = 0"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3949,"* StringUtils.getLevenshteinDistance("""",""a"")              = 1"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3950,"* StringUtils.getLevenshteinDistance(""aaapppp"", """")       = 7"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3951,"* StringUtils.getLevenshteinDistance(""frog"", ""fog"")       = 1"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3952,"* StringUtils.getLevenshteinDistance(""fly"", ""ant"")        = 3"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3953,"* StringUtils.getLevenshteinDistance(""elephant"", ""hippo"") = 7"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3954,"* StringUtils.getLevenshteinDistance(""hippo"", ""elephant"") = 7"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3955,"* StringUtils.getLevenshteinDistance(""hippo"", ""zzzzzzzz"") = 8"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3956,"* StringUtils.getLevenshteinDistance(""hello"", ""hallo"")    = 1"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3957,* </pre>
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,75," @version $Id: StringUtilsTest.java,v 1.36 2003/07/20 23:57:26 scolebourne Exp $"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,75,"* @version $Id: StringUtilsTest.java,v 1.37 2003/07/22 23:36:39 scolebourne Exp $"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,109,private static final String[] NULL_ARRAY_LIST = {null};
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,110,"private static final String[] MIXED_ARRAY_LIST = {null, """", ""foo""};"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,111,"private static final Object[] MIXED_TYPE_LIST = {new String(""foo""), new Long(2)};"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,194,ublic void testJoin() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,195,"ssertEquals(null, StringUtils.concatenate(null));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,196,"ssertEquals(null, StringUtils.join((Object[]) null, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,197,public void testJoin_ArrayChar() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,198,"ssertEquals(null, StringUtils.join((Iterator) null, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,199,"assertEquals(TEXT_LIST_CHAR, StringUtils.join(ARRAY_LIST, SEPARATOR_CHAR));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,200,"assertEquals("""", StringUtils.join(EMPTY_ARRAY_LIST, SEPARATOR_CHAR));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,201,"assertEquals("";;foo"", StringUtils.join(MIXED_ARRAY_LIST, SEPARATOR_CHAR));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,202,"assertEquals(""foo;2"", StringUtils.join(MIXED_TYPE_LIST, SEPARATOR_CHAR));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,205,public void testJoin_ArrayString() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,206,"assertEquals(null, StringUtils.join((Object[]) null, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,207,"assertEquals(TEXT_LIST_NOSEP, StringUtils.join(ARRAY_LIST, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,208,"assertEquals(TEXT_LIST_NOSEP, StringUtils.join(ARRAY_LIST, """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,210,"assertEquals("""", StringUtils.join(NULL_ARRAY_LIST, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,212,"assertEquals("""", StringUtils.join(EMPTY_ARRAY_LIST, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,213,"assertEquals("""", StringUtils.join(EMPTY_ARRAY_LIST, """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,214,"assertEquals("""", StringUtils.join(EMPTY_ARRAY_LIST, SEPARATOR));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,216,"assertEquals(TEXT_LIST, StringUtils.join(ARRAY_LIST, SEPARATOR));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,217,"assertEquals("",,foo"", StringUtils.join(MIXED_ARRAY_LIST, SEPARATOR));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,218,"assertEquals(""foo,2"", StringUtils.join(MIXED_TYPE_LIST, SEPARATOR));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,221,public void testJoin_IteratorChar() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,223,"assertEquals(TEXT_LIST_CHAR, StringUtils.join(Arrays.asList(ARRAY_LIST).iterator(), SEPARATOR_CHAR));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,224,"assertEquals("""", StringUtils.join(Arrays.asList(EMPTY_ARRAY_LIST).iterator(), SEPARATOR_CHAR));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,227,public void testJoin_IteratorString() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,228,"assertEquals(null, StringUtils.join((Iterator) null, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,229,"assertEquals(TEXT_LIST_NOSEP, StringUtils.join(Arrays.asList(ARRAY_LIST).iterator(), null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,230,"assertEquals(TEXT_LIST_NOSEP, StringUtils.join(Arrays.asList(ARRAY_LIST).iterator(), """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,232,"assertEquals("""", StringUtils.join(Arrays.asList(NULL_ARRAY_LIST).iterator(), null));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,201,"ssertEquals(""concatenate(Object[]) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,202,"EXT_LIST_NOSEP, StringUtils.concatenate(ARRAY_LIST));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,203,"ssertEquals(""join(Object[], String) failed"", TEXT_LIST,"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,204,"tringUtils.join(ARRAY_LIST, SEPARATOR));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,205,"ssertEquals(""join(Iterator, String) failed"", TEXT_LIST,"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,206,"tringUtils.join(Arrays.asList(ARRAY_LIST).iterator(),"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,207,EPARATOR));
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,209,"ssertEquals(""join(Object[], char) failed"", TEXT_LIST_CHAR,"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,210,"tringUtils.join(ARRAY_LIST, SEPARATOR_CHAR));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,211,"ssertEquals(""join(Iterator, char) failed"", TEXT_LIST_CHAR,"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,212,"tringUtils.join(Arrays.asList(ARRAY_LIST).iterator(),"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,213,EPARATOR_CHAR));
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,215,"ssertEquals(""join(Object[], null) failed"", TEXT_LIST_NOSEP,"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,216,"tringUtils.join(ARRAY_LIST, null));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,217,"ssertEquals(""join(Iterator, null) failed"", TEXT_LIST_NOSEP,"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,218,"tringUtils.join(Arrays.asList(ARRAY_LIST).iterator(),"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,219,ull));
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,221,"ssertEquals(""concatenate(Object[]) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,222,""", StringUtils.concatenate(EMPTY_ARRAY_LIST));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,223,"ssertEquals(""join(Object[], String) failed"", """","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,224,"tringUtils.join(EMPTY_ARRAY_LIST, SEPARATOR));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,225,"ssertEquals(""join(Iterator, String) failed"", """","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,226,"tringUtils.join(Arrays.asList(EMPTY_ARRAY_LIST).iterator(),"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,227,EPARATOR));
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,229,"ssertEquals(""join(Object[], char) failed"", """","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,230,"tringUtils.join(EMPTY_ARRAY_LIST, SEPARATOR_CHAR));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,231,"ssertEquals(""join(Iterator, char) failed"", """","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,232,"tringUtils.join(Arrays.asList(EMPTY_ARRAY_LIST).iterator(),"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,233,EPARATOR_CHAR));
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,235,"ssertEquals(""join(Object[], null) failed"", """","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,236,"tringUtils.join(EMPTY_ARRAY_LIST, null));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,237,"ssertEquals(""join(Iterator, null) failed"", """","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,238,"tringUtils.join(Arrays.asList(EMPTY_ARRAY_LIST).iterator(),"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,239,ull));
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,234,"assertEquals("""", StringUtils.join(Arrays.asList(EMPTY_ARRAY_LIST).iterator(), null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,235,"assertEquals("""", StringUtils.join(Arrays.asList(EMPTY_ARRAY_LIST).iterator(), """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,236,"assertEquals("""", StringUtils.join(Arrays.asList(EMPTY_ARRAY_LIST).iterator(), SEPARATOR));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,238,"assertEquals(TEXT_LIST, StringUtils.join(Arrays.asList(ARRAY_LIST).iterator(), SEPARATOR));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,241,public void testConcatenate_Array() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,242,"assertEquals(null, StringUtils.concatenate(null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,243,"assertEquals("""", StringUtils.concatenate(EMPTY_ARRAY_LIST));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,244,"assertEquals("""", StringUtils.concatenate(NULL_ARRAY_LIST));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,245,"assertEquals(""foo"", StringUtils.concatenate(MIXED_ARRAY_LIST));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,246,"assertEquals(""foo2"", StringUtils.concatenate(MIXED_TYPE_LIST));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,480,"{ FOO + "" \r"", FOO + "" "" },"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,491," FOO + ""\r\n"", FOO } ,"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,492," FOO + ""\n"" , FOO } ,"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,501,"{ FOO + ""\r\n"", FOO },"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,502,"{ FOO + ""\n"" , FOO },"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,504,"{ FOO + "" \r"", FOO + "" "" },"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,507,"{ FOO + ""\r\n\r\n"", FOO + ""\r\n"" },"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,509,"{ ""foo\n\rfoo"", ""foo\n\rfoo"" },"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,514,"{ null, null },"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,515,"{ FOO + ""\n\r"", FOO + ""\n""}"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,530,"assertEquals(""chomp(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,531,"""foobar"", StringUtils.chomp(""foobar"", """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,532,"assertEquals(""chomp(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,533,"""foobar"", StringUtils.chomp(""foobar"", null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,534,"assertEquals(""chomp(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,535,""""", StringUtils.chomp("""", ""foo""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,536,"assertEquals(""chomp(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,537,""""", StringUtils.chomp("""", null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,538,"assertEquals(""chomp(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,539,""""", StringUtils.chomp("""", """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,540,"assertEquals(""chomp(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,541,"null, StringUtils.chomp(null, ""foo""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,542,"assertEquals(""chomp(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,543,"null, StringUtils.chomp(null, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,544,"assertEquals(""chomp(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,545,"null, StringUtils.chomp(null, """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,546,"assertEquals(""chomp(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,547,""""", StringUtils.chomp(""foo"", ""foo""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,548,"assertEquals(""chomp(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,549,""" "", StringUtils.chomp("" foo"", ""foo""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,550,"assertEquals(""chomp(String, String) failed"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,551,"""foo "", StringUtils.chomp(""foo "", ""foo""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,585,"{""\n"", """"},"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,586,"{""abc \n"", ""abc ""},"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,587,"{""abc\r\n"", ""abc\r""},"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,556,"tring original = ""fooXXbarXXbaz"";"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,557,"tring sep = ""XX"";"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,559,"ssertEquals(""fooXXbar"", StringUtils.slice(original, sep) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,560,"ssertEquals(null, StringUtils.slice(null, sep) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,561,"ssertEquals(null, StringUtils.slice(null, null) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,562,"ssertEquals(""foo"", StringUtils.slice(""foo"", null) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,563,"ssertEquals(""foo"", StringUtils.slice(""foo"", ""b"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,564,"ssertEquals(""fo"", StringUtils.slice(""foo"", ""o"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,566,"ssertEquals(""baz"", StringUtils.sliceRemainder(original, sep) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,567,"ssertEquals(null, StringUtils.sliceRemainder(null, sep) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,568,"ssertEquals(null, StringUtils.sliceRemainder(null, null) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,569,"ssertEquals("""", StringUtils.sliceRemainder(""foo"", null) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,570,"ssertEquals("""", StringUtils.sliceRemainder(""foo"", ""b"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,571,"ssertEquals(""t"", StringUtils.sliceRemainder(""foot"", ""o"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,573,"ssertEquals(""foo"", StringUtils.sliceFirst(original, sep) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,575,"ssertEquals(""barXXbaz"", StringUtils.sliceFirstRemainder(original, sep) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,598,public void testSlice_StringString() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,599,"assertEquals(""fooXXbar"", StringUtils.slice(""fooXXbarXXbaz"", ""XX""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,601,"assertEquals(null, StringUtils.slice(null, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,602,"assertEquals(null, StringUtils.slice(null, """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,603,"assertEquals(null, StringUtils.slice(null, ""XX""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,604,"assertEquals("""", StringUtils.slice("""", null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,605,"assertEquals("""", StringUtils.slice("""", """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,606,"assertEquals("""", StringUtils.slice("""", ""XX""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,608,"assertEquals(""foo"", StringUtils.slice(""foo"", null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,609,"assertEquals(""foo"", StringUtils.slice(""foo"", ""b""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,610,"assertEquals(""fo"", StringUtils.slice(""foo"", ""o""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,611,"assertEquals(""abc\r\n"", StringUtils.slice(""abc\r\n"", ""d""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,612,"assertEquals(""abc"", StringUtils.slice(""abcdabc"", ""d""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,613,"assertEquals(""abcdabc"", StringUtils.slice(""abcdabcd"", ""d""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,614,"assertEquals(""a"", StringUtils.slice(""abc"", ""b""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,615,"assertEquals(""abc "", StringUtils.slice(""abc \n"", ""\n""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,616,"assertEquals(""a"", StringUtils.slice(""a"", null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,617,"assertEquals(""a"", StringUtils.slice(""a"", """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,618,"assertEquals("""", StringUtils.slice(""a"", ""a""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,621,public void testSliceRemainder_StringString() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,622,"assertEquals(""baz"", StringUtils.sliceRemainder(""fooXXbarXXbaz"", ""XX""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,624,"assertEquals(null, StringUtils.sliceRemainder(null, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,625,"assertEquals(null, StringUtils.sliceRemainder(null, """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,626,"assertEquals(null, StringUtils.sliceRemainder(null, ""XX""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,627,"assertEquals("""", StringUtils.sliceRemainder("""", null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,628,"assertEquals("""", StringUtils.sliceRemainder("""", """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,629,"assertEquals("""", StringUtils.sliceRemainder("""", ""a""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,631,"assertEquals("""", StringUtils.sliceRemainder(""foo"", null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,632,"assertEquals("""", StringUtils.sliceRemainder(""foo"", ""b""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,633,"assertEquals(""t"", StringUtils.sliceRemainder(""foot"", ""o""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,634,"assertEquals(""bc"", StringUtils.sliceRemainder(""abc"", ""a""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,635,"assertEquals(""a"", StringUtils.sliceRemainder(""abcba"", ""b""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,636,"assertEquals("""", StringUtils.sliceRemainder(""abc"", ""c""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,637,"assertEquals("""", StringUtils.sliceRemainder("""", ""d""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,638,"assertEquals("""", StringUtils.sliceRemainder(""abc"", """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,641,public void testSliceFirst_StringString() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,642,"assertEquals(""foo"", StringUtils.sliceFirst(""fooXXbarXXbaz"", ""XX""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,644,"assertEquals(null, StringUtils.sliceFirst(null, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,645,"assertEquals(null, StringUtils.sliceFirst(null, """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,646,"assertEquals(null, StringUtils.sliceFirst(null, ""XX""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,647,"assertEquals("""", StringUtils.sliceFirst("""", null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,648,"assertEquals("""", StringUtils.sliceFirst("""", """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,649,"assertEquals("""", StringUtils.sliceFirst("""", ""XX""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,651,"assertEquals(""foo"", StringUtils.sliceFirst(""foo"", null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,652,"assertEquals("""", StringUtils.sliceFirst(""foo"", ""b""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,653,"assertEquals(""f"", StringUtils.sliceFirst(""foot"", ""o""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,654,"assertEquals("""", StringUtils.sliceFirst(""abc"", ""a""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,655,"assertEquals(""a"", StringUtils.sliceFirst(""abcba"", ""b""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,656,"assertEquals(""ab"", StringUtils.sliceFirst(""abc"", ""c""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,657,"assertEquals(""abc"", StringUtils.sliceFirst(""abc"", """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,658,"assertEquals("""", StringUtils.sliceFirst(""abc"", ""d""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,661,public void testSliceFirstRemainder_StringString() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,662,"assertEquals(""barXXbaz"", StringUtils.sliceFirstRemainder(""fooXXbarXXbaz"", ""XX""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,664,"assertEquals(null, StringUtils.sliceFirstRemainder(null, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,665,"assertEquals(null, StringUtils.sliceFirstRemainder(null, """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,666,"assertEquals(null, StringUtils.sliceFirstRemainder(null, ""XX""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,667,"assertEquals("""", StringUtils.sliceFirstRemainder("""", null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,668,"assertEquals("""", StringUtils.sliceFirstRemainder("""", """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,669,"assertEquals("""", StringUtils.sliceFirstRemainder("""", ""XX""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,671,"assertEquals("""", StringUtils.sliceFirstRemainder(""foo"", null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,672,"assertEquals(""foo"", StringUtils.sliceFirstRemainder(""foo"", ""b""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,673,"assertEquals(""ot"", StringUtils.sliceFirstRemainder(""foot"", ""o""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,674,"assertEquals(""bc"", StringUtils.sliceFirstRemainder(""abc"", ""a""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,675,"assertEquals(""cba"", StringUtils.sliceFirstRemainder(""abcba"", ""b""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,676,"assertEquals("""", StringUtils.sliceFirstRemainder(""abc"", ""c""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,677,"assertEquals("""", StringUtils.sliceFirstRemainder(""abc"", """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,678,"assertEquals(""abc"", StringUtils.sliceFirstRemainder(""abc"", ""d""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,869,"assertEquals(""abc..."", StringUtils.abbreviate(""abcdefg"", 6));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,870,"assertEquals(""abcdefg"", StringUtils.abbreviate(""abcdefg"", 7));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,871,"assertEquals(""abcdefg"", StringUtils.abbreviate(""abcdefg"", 8));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,872,"assertEquals(""a..."", StringUtils.abbreviate(""abcdefg"", 4));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,873,"assertEquals("""", StringUtils.abbreviate("""", 4));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,875,try {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,876,"String res = StringUtils.abbreviate(""abc"", 3);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,877,"fail(""StringUtils.abbreviate expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,878,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,879,// empty
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,888,try {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,889,"String res = StringUtils.abbreviate(""abcdefghij"", 0, 3);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,890,"fail(""StringUtils.abbreviate expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,891,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,892,// empty
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,894,try {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,895,"String res = StringUtils.abbreviate(""abcdefghij"", 5, 6);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,896,"fail(""StringUtils.abbreviate expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,897,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,898,// empty
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,975,"assertEquals(8, StringUtils.getLevenshteinDistance(""hippo"", ""zzzzzzzz"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,976,"assertEquals(8, StringUtils.getLevenshteinDistance(""zzzzzzzz"", ""hippo"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,978,try {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,979,"int d = StringUtils.getLevenshteinDistance(""a"", null);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,980,"fail(""expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,981,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,982,// empty
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,984,try {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,985,"int d = StringUtils.getLevenshteinDistance(null, ""a"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,986,"fail(""expecting IllegalArgumentException"");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,987,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,988,// empty
