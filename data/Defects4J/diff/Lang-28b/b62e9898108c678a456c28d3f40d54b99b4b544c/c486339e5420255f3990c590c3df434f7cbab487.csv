is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,22,import org.apache.commons.lang.ArrayUtils;
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,245,his.text = input;
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,246,his.chars = input.toCharArray();  // no clone as toCharArray() clones
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,247,text = input;
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,248,if (input != null) {
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,249,chars = input.toCharArray();
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,250,} else {
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,251,chars = null;
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,317,* <p>
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,318,"* The input character array is not cloned, and must not be altered after"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,319,* passing in to this method.
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,312," @param input  the string which is to be parsed, cloned"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,321,"* @param input  the string which is to be parsed, not cloned"
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,317,his.chars = (char[]) input.clone();
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,326,this.chars = input;
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,331,* <p>
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,332,"* The input character array is not cloned, and must not be altered after"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,333,* passing in to this method.
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,323," @param input  the string which is to be parsed, cloned"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,335,"* @param input  the string which is to be parsed, not cloned"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,345,* <p>
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,346,"* The input character array is not cloned, and must not be altered after"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,347,* passing in to this method.
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,334," @param input  the string which is to be parsed, cloned"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,349,"* @param input  the string which is to be parsed, not cloned"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,359,* <p>
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,360,"* The input character array is not cloned, and must not be altered after"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,361,* passing in to this method.
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,345," @param input  the string which is to be parsed, cloned"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,363,"* @param input  the string which is to be parsed, not cloned"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,374,* <p>
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,375,"* The input character array is not cloned, and must not be altered after"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,376,* passing in to this method.
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,357," @param input  the string which is to be parsed, cloned"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,378,"* @param input  the string which is to be parsed, not cloned"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,390,* <p>
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,391,"* The input character array is not cloned, and must not be altered after"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,392,* passing in to this method.
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,370," @param input  the string which is to be parsed, cloned"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,394,"* @param input  the string which is to be parsed, not cloned"
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,440, @param input  the new string to tokenize
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,464,"* @param input  the new string to tokenize, null sets no text to parse"
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,444,his.text = input;
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,445,hars = input.toCharArray();  // no clone as toCharArray() clones
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,468,text = input;
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,469,if (input != null) {
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,470,chars = input.toCharArray();
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,471,} else {
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,472,chars = null;
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,480,* <p>
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,481,"* The input character array is not cloned, and must not be altered after"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,482,* passing in to this method.
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,453," @param input  the new character array to tokenize, cloned"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,484,"* @param input  the new character array to tokenize, not cloned, null sets no text to parse"
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,455,ublic void reset(char [] input) {
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,486,public void reset(char[] input) {
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,457,his.text = null;
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,458,hars = (char[]) input.clone();
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,488,text = null;
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,489,chars = input;
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,594,if (chars == null) {
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,595,return ArrayUtils.EMPTY_STRING_ARRAY;
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,815, Sets the field delimiter character
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,849,* Sets the field delimiter character.
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,824, Sets the field delimiter character
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,858,* Sets the field delimiter string.
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,826, @param delim  the delimiter character to use
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,860,* @param delim  the delimiter string to use
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,352,public void testConstructor_String() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,353,"StrTokenizer tok = new StrTokenizer(""a b"");"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,354,"assertEquals(""a"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,355,"assertEquals(""b"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,356,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,358,"tok = new StrTokenizer("""");"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,359,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,361,tok = new StrTokenizer((String) null);
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,362,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,366,public void testConstructor_String_char() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,367,"StrTokenizer tok = new StrTokenizer(""a b"", ' ');"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,368,"assertEquals(1, tok.getDelimiterMatcher().isMatch("" "".toCharArray(), 0, 0, 1));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,369,"assertEquals(""a"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,370,"assertEquals(""b"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,371,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,373,"tok = new StrTokenizer("""", ' ');"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,374,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,376,"tok = new StrTokenizer((String) null, ' ');"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,377,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,381,public void testConstructor_String_char_char() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,382,"StrTokenizer tok = new StrTokenizer(""a b"", ' ', '""');"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,383,"assertEquals(1, tok.getDelimiterMatcher().isMatch("" "".toCharArray(), 0, 0, 1));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,384,"assertEquals(1, tok.getQuoteMatcher().isMatch(""\"""".toCharArray(), 0, 0, 1));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,385,"assertEquals(""a"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,386,"assertEquals(""b"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,387,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,389,"tok = new StrTokenizer("""", ' ', '""');"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,390,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,392,"tok = new StrTokenizer((String) null, ' ', '""');"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,393,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,397,public void testConstructor_charArray() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,398,"StrTokenizer tok = new StrTokenizer(""a b"".toCharArray());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,399,"assertEquals(""a"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,400,"assertEquals(""b"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,401,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,403,tok = new StrTokenizer(new char[0]);
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,404,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,406,tok = new StrTokenizer((char[]) null);
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,407,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,411,public void testConstructor_charArray_char() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,412,"StrTokenizer tok = new StrTokenizer(""a b"".toCharArray(), ' ');"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,413,"assertEquals(1, tok.getDelimiterMatcher().isMatch("" "".toCharArray(), 0, 0, 1));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,414,"assertEquals(""a"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,415,"assertEquals(""b"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,416,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,418,"tok = new StrTokenizer(new char[0], ' ');"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,419,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,421,"tok = new StrTokenizer((char[]) null, ' ');"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,422,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,426,public void testConstructor_charArray_char_char() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,427,"StrTokenizer tok = new StrTokenizer(""a b"".toCharArray(), ' ', '""');"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,428,"assertEquals(1, tok.getDelimiterMatcher().isMatch("" "".toCharArray(), 0, 0, 1));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,429,"assertEquals(1, tok.getQuoteMatcher().isMatch(""\"""".toCharArray(), 0, 0, 1));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,430,"assertEquals(""a"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,431,"assertEquals(""b"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,432,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,434,"tok = new StrTokenizer(new char[0], ' ', '""');"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,435,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,437,"tok = new StrTokenizer((char[]) null, ' ', '""');"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,438,"assertEquals(false, tok.hasNext());"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,352,"tring input = ""a b c"";"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,353,trTokenizer tok = new StrTokenizer(input);
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,443,"StrTokenizer tok = new StrTokenizer(""a b c"");"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,447,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,453,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,457,public void testReset_String() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,458,"StrTokenizer tok = new StrTokenizer(""x x x"");"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,364,"ok.reset(""f g"".toCharArray());"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,365,"ssertEquals(""f"", tok.next());"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,366,"ssertEquals(""g"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,462,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,464,tok.reset((String) null);
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,465,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,469,public void testReset_charArray() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,470,"StrTokenizer tok = new StrTokenizer(""x x x"");"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,472,"char[] array = new char[] {'a', ' ', 'c'};"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,473,tok.reset(array);
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,474,array[1] = 'b'; // test linked array
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,475,"assertEquals(""abc"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,476,"assertEquals(false, tok.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,478,tok.reset((char[]) null);
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,479,"assertEquals(false, tok.hasNext());"
