is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,60,mport org.apache.commons.lang.math.NumberUtils;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,101," @version $Id: StringUtils.java,v 1.70 2003/07/20 00:37:09 scolebourne Exp $"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,99,"* @version $Id: StringUtils.java,v 1.71 2003/07/20 10:29:22 scolebourne Exp $"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,126, <p>A <code>String</code> containing all space characters (' ').</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,128, <p>Used for efficient space padding.  The length of the String expands as needed.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,130,"rivate static String spaces = new String("" "");"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,130,static {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,131,"padding[32] = ""                                "";"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2396, <p>Returns a String containing the requested number of
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2397, space characters (' ').</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2399, <pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2400," StringUtils.padding(0)  = """""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2401," StringUtils.padding(3)  = ""   """
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2402, StringUtils.padding(-2) = IndexOutOfBoundsException
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2403, </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2405, @param repeat  number of times to repeat space
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2406, @return a String with <code>repeat</code> spaces
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2407, @throws IndexOutOfBoundsException if <code>repeat &lt; 0</code>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2409,rivate static String padding(int repeat) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2410,hile (spaces.length() < repeat)  {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2411,paces = spaces.concat(spaces);
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2413,"eturn spaces.substring(0, repeat);"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2460,f (str == null) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2461,eturn null;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2463,nt pads = size - str.length();
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2464,f (pads <= 0) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2465,eturn str; // returns original String when possible
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2467,f (pads > PAD_LIMIT) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2468,"eturn rightPad(str, size, ' ');"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2470,eturn str.concat(padding(pads));
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2434,"return rightPad(str, size, ' ');"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2520," StringUtils.rightPad(null, 1, """")     = IllegalArgumentException"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2484,"* StringUtils.rightPad(null, 1, """")     = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2495,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2496,return null;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2535,f (str == null) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2536,eturn null;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2580,f (str == null) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2581,eturn null;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2583,nt pads = size - str.length();
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2584,f (pads <= 0) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2585,eturn str; // returns original String when possible
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2587,f (pads > PAD_LIMIT) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2588,"eturn leftPad(str, size, ' ');"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2590,eturn padding(pads).concat(str);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2544,"return leftPad(str, size, ' ');"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2640," StringUtils.leftPad(null, 1, """")     = IllegalArgumentException"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2594,"* StringUtils.leftPad(null, 1, """")     = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2605,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2606,return null;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2655,f (str == null) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2656,eturn null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2663,"return center(str, size, ' ');"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2667,* <p>Centers a String in a larger String of size <code>size</code>.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2668,* Uses a supplied character as the value to pad the String with.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2670,"* <p>If the size is less than the String length, the String is returned."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2671,* A <code>null</code> String returns <code>null</code>.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2672,* A negative size is treated as zero.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2674,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2675,"* StringUtils.center(null, -1, ' ')  = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2676,"* StringUtils.center(""ab"", -1, ' ')  = ""ab"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2677,"* StringUtils.center(null, 4, ' ')   = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2678,"* StringUtils.center("""", 4, ' ')     = ""    """
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2679,"* StringUtils.center(""ab"", 4, ' ')   = "" ab"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2680,"* StringUtils.center(""abcd"", 2, ' ') = ""abcd"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2681,"* StringUtils.center(""a"", 4, ' ')    = "" a  """
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2682,"* StringUtils.center(""a"", 4, 'y')    = ""yayy"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2683,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2685,"* @param str  the String to center, may be null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2686,"* @param size  the int size of new String, negative treated as zero"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2687,* @param padChar  the character to pad the new String with
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2688,"* @return centered String, <code>null</code> if null String input"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2690,"public static String center(String str, int size, char padChar) {"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2717,"tr = leftPad(str, strLen + pads / 2, ' ');"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2718,"tr = rightPad(str, size, ' ');"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2699,"str = leftPad(str, strLen + pads / 2, padChar);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2700,"str = rightPad(str, size, padChar);"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2723, <p>Centers a String in a larger String of size <code>size</code>.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2725, <p>Uses a supplied String as the value to pad the String with.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2705,* <p>Centers a String in a larger String of size <code>size</code>.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2706,* Uses a supplied String as the value to pad the String with.</p>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2737," StringUtils.center(""abcd"", 2, "" "") = "" abcd"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2718,"* StringUtils.center(""abcd"", 2, "" "") = ""abcd"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2739," StringUtils.center(""a"", 4, ""yz"")    = ""yayz"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2720,"* StringUtils.center(""a"", 4, ""yz"")   = ""yayz"""
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2742," StringUtils.center(null, 4, """")    = IllegalArgumentException"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2723,"* StringUtils.center(null, 4, """")    = null"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2752,f (padStr == null || padStr.length() == 0) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2753,"hrow new IllegalArgumentException(""Pad String must not be null or empty"");"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2736,if (padStr == null || padStr.length() == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2737,"throw new IllegalArgumentException(""Pad String must not be null or empty"");"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3478,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3479,"* StringUtils.difference(null, null) = null"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3480,"* StringUtils.difference("""", """") = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3481,"* StringUtils.difference("""", ""abc"") = ""abc"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3482,"* StringUtils.difference(""abc"", """") = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3483,"* StringUtils.difference(""abc"", ""abc"") = """""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3484,"* StringUtils.difference(""ab"", ""abxyz"") = ""xyz"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3485,"* StringUtils.difference(""abcde"", ""abxyz"") = ""xyz"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3486,"* StringUtils.difference(""abcde"", ""xyz"") = ""xyz"""
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3487,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3515,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3516,"* StringUtils.differenceAt(null, null) = -1"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3517,"* StringUtils.differenceAt("""", """") = -1"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3518,"* StringUtils.differenceAt("""", ""abc"") = 0"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3519,"* StringUtils.differenceAt(""abc"", """") = 0"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3520,"* StringUtils.differenceAt(""abc"", ""abc"") = -1"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3521,"* StringUtils.differenceAt(""ab"", ""abxyz"") = 2"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3522,"* StringUtils.differenceAt(""abcde"", ""abxyz"") = 2"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3523,"* StringUtils.differenceAt(""abcde"", ""xyz"") = 0"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3524,* </pre>
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3613,"[i][j] = NumberUtils.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3616,"d[i][j] = min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3625,* <p>Gets the minimum of three <code>int</code> values.</p>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3627,* @param a  value 1
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3628,* @param b  value 2
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3629,* @param c  value 3
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3630,* @return  the smallest of the values
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3632,"private static int min(int a, int b, int c) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3633,// Method copied from NumberUtils to avoid dependency on subpackage
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3634,if (b < a) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3635,a = b;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3637,if (c < a) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3638,a = c;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,3640,return a;
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,75," @version $Id: StringUtilsTest.java,v 1.31 2003/07/20 00:17:29 scolebourne Exp $"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,75,"* @version $Id: StringUtilsTest.java,v 1.32 2003/07/20 10:29:21 scolebourne Exp $"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,282,ublic void testSplit() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,282,public void testSplit_StringString_StringStringInt() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,301,ry {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,302,"inal String str = ""a"" + separator + ""b"" + separator + separator + noMatch + ""c"";"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,303,tring[] res;
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,304,"/ (str, sepStr)"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,305,"es = StringUtils.split(str, sepStr);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,306,"ssertEquals(3, res.length);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,307,"ssertEquals(""a"", res[0]);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,308,"ssertEquals(""b"", res[1]);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,309,"ssertEquals(noMatch + ""c"", res[2]);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,311,"inal String str2 = separator + ""a"" + separator;"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,312,"es = StringUtils.split(str2, sepStr);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,313,"ssertEquals(1, res.length);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,314,"ssertEquals(""a"", res[0]);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,316,"es = StringUtils.split(str, sepStr, -1);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,317,"ssertEquals(3, res.length);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,318,"ssertEquals(""a"", res[0]);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,319,"ssertEquals(""b"", res[1]);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,320,"ssertEquals(noMatch + ""c"", res[2]);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,322,"es = StringUtils.split(str, sepStr, 0);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,323,"ssertEquals(3, res.length);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,324,"ssertEquals(""a"", res[0]);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,325,"ssertEquals(""b"", res[1]);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,326,"ssertEquals(noMatch + ""c"", res[2]);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,328,"es = StringUtils.split(str, sepStr, 1);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,329,"ssertEquals(1, res.length);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,330,"ssertEquals(str, res[0]);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,332,"es = StringUtils.split(str, sepStr, 2);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,333,"ssertEquals(2, res.length);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,334,"ssertEquals(""a"", res[0]);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,335,"ssertEquals(str.substring(2), res[1]);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,337, catch (AssertionFailedError ex) {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,338,"ystem.out.println(""Failed on separator hex("" + Integer.toHexString(separator) +"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,339,"), noMatch hex("" + Integer.toHexString(noMatch) + ""), sepStr("" + sepStr + "")"");"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,340,hrow ex;
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,301,"String msg = ""Failed on separator hex("" + Integer.toHexString(separator) +"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,302,"""), noMatch hex("" + Integer.toHexString(noMatch) + ""), sepStr("" + sepStr + "")"";"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,304,"final String str = ""a"" + separator + ""b"" + separator + separator + noMatch + ""c"";"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,305,String[] res;
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,306,"// (str, sepStr)"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,307,"res = StringUtils.split(str, sepStr);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,308,"assertEquals(msg, 3, res.length);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,309,"assertEquals(msg, ""a"", res[0]);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,310,"assertEquals(msg, ""b"", res[1]);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,311,"assertEquals(msg, noMatch + ""c"", res[2]);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,313,"final String str2 = separator + ""a"" + separator;"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,314,"res = StringUtils.split(str2, sepStr);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,315,"assertEquals(msg, 1, res.length);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,316,"assertEquals(msg, ""a"", res[0]);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,318,"res = StringUtils.split(str, sepStr, -1);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,319,"assertEquals(msg, 3, res.length);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,320,"assertEquals(msg, ""a"", res[0]);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,321,"assertEquals(msg, ""b"", res[1]);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,322,"assertEquals(msg, noMatch + ""c"", res[2]);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,324,"res = StringUtils.split(str, sepStr, 0);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,325,"assertEquals(msg, 3, res.length);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,326,"assertEquals(msg, ""a"", res[0]);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,327,"assertEquals(msg, ""b"", res[1]);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,328,"assertEquals(msg, noMatch + ""c"", res[2]);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,330,"res = StringUtils.split(str, sepStr, 1);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,331,"assertEquals(msg, 1, res.length);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,332,"assertEquals(msg, str, res[0]);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,334,"res = StringUtils.split(str, sepStr, 2);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,335,"assertEquals(msg, 2, res.length);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,336,"assertEquals(msg, ""a"", res[0]);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,337,"assertEquals(msg, str.substring(2), res[1]);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,436,ublic void testRepeat() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,432,public void testRepeat_StringInt() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,445,ublic void testCenter() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,446,"ssertEquals(null, StringUtils.center(null, -1));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,447,"ssertEquals(null, StringUtils.center(null, 4));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,448,"ssertEquals(""ab"", StringUtils.center(""ab"", 0));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,449,"ssertEquals(""ab"", StringUtils.center(""ab"", -1));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,450,"ssertEquals(""ab"", StringUtils.center(""ab"", 1));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,451,"ssertEquals(""    "", StringUtils.center("""", 4));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,452,"ssertEquals("" ab "", StringUtils.center(""ab"", 4));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,453,"ssertEquals(""abcd"", StringUtils.center(""abcd"", 2));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,454,"ssertEquals("" a  "", StringUtils.center(""a"", 4));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,455,"ssertEquals(""  a  "", StringUtils.center(""a"", 5));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,457,"ssertEquals(null, StringUtils.center(null, -1, "" ""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,458,"ssertEquals(null, StringUtils.center(null, 4, "" ""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,459,"ssertEquals(""ab"", StringUtils.center(""ab"", 0, "" ""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,460,"ssertEquals(""ab"", StringUtils.center(""ab"", -1, "" ""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,461,"ssertEquals(""ab"", StringUtils.center(""ab"", 1, "" ""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,462,"ssertEquals(""    "", StringUtils.center("""", 4, "" ""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,463,"ssertEquals("" ab "", StringUtils.center(""ab"", 4, "" ""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,464,"ssertEquals(""abcd"", StringUtils.center(""abcd"", 2, "" ""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,465,"ssertEquals("" a  "", StringUtils.center(""a"", 4, "" ""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,466,"ssertEquals(""yayz"", StringUtils.center(""a"", 4, ""yz""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,467,"ssertEquals(""yzyayzy"", StringUtils.center(""a"", 7, ""yz""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,468,ry {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,469,"tringUtils.center(null, 4, null);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,470,ail();
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,471, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,473,ry {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,474,"tringUtils.center(""abc"", 4, null);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,475,ail();
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,476, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,478,ry {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,479,"tringUtils.center(""abc"", 4, """");"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,480,ail();
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,481, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,616,ublic void testPadFunctions() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,617,"ssertEquals(null, StringUtils.rightPad (null, 8) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,618,"ssertEquals(""1234    "", StringUtils.rightPad (""1234"", 8) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,620,"ssertEquals(null, StringUtils.rightPad (null, 8, ""-+"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,621,"ssertEquals(""1234-+-+"", StringUtils.rightPad (""1234"", 8, ""-+"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,622,"ssertEquals(""123456-+~"", StringUtils.rightPad (""123456"", 9, ""-+~"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,623,"ssertEquals(""123456-+"", StringUtils.rightPad (""123456"", 8, ""-+~"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,624,ry {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,625,"tringUtils.rightPad(null, 6, null);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,626,ail();
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,627, catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,573,public void testRightPad_StringInt() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,574,"assertEquals(null, StringUtils.rightPad(null, 5));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,575,"assertEquals(""     "", StringUtils.rightPad("""", 5));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,576,"assertEquals(""abc  "", StringUtils.rightPad(""abc"", 5));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,577,"assertEquals(""abc"", StringUtils.rightPad(""abc"", 2));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,578,"assertEquals(""abc"", StringUtils.rightPad(""abc"", -1));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,581,public void testRightPad_StringIntChar() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,582,"assertEquals(null, StringUtils.rightPad(null, 5, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,583,"assertEquals(""     "", StringUtils.rightPad("""", 5, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,584,"assertEquals(""abc  "", StringUtils.rightPad(""abc"", 5, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,585,"assertEquals(""abc"", StringUtils.rightPad(""abc"", 2, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,586,"assertEquals(""abc"", StringUtils.rightPad(""abc"", -1, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,587,"assertEquals(""abcxx"", StringUtils.rightPad(""abc"", 5, 'x'));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,590,public void testRightPad_StringIntString() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,591,"assertEquals(null, StringUtils.rightPad(null, 5, ""-+""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,592,"assertEquals(""     "", StringUtils.rightPad("""", 5, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,593,"assertEquals(null, StringUtils.rightPad(null, 8, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,594,"assertEquals(""abc-+-+"", StringUtils.rightPad(""abc"", 7, ""-+""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,595,"assertEquals(""abc-+~"", StringUtils.rightPad(""abc"", 6, ""-+~""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,596,"assertEquals(""abc-+"", StringUtils.rightPad(""abc"", 5, ""-+~""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,597,"assertEquals(""abc"", StringUtils.rightPad(""abc"", 2, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,598,"assertEquals(""abc"", StringUtils.rightPad(""abc"", -1, "" ""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,629,"tringUtils.rightPad(""123456"", 6, null);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,600,"StringUtils.rightPad(""abc56"", 6, null);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,633,"tringUtils.rightPad(""123456"", 6, """");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,604,"StringUtils.rightPad(""abc56"", 6, """");"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,637,"ssertEquals(null, StringUtils.leftPad (null, 8) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,638,"ssertEquals(""    1234"", StringUtils.leftPad(""1234"", 8) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,610,public void testLeftPad_StringInt() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,611,"assertEquals(null, StringUtils.leftPad(null, 5));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,612,"assertEquals(""     "", StringUtils.leftPad("""", 5));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,613,"assertEquals(""  abc"", StringUtils.leftPad(""abc"", 5));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,614,"assertEquals(""abc"", StringUtils.leftPad(""abc"", 2));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,617,public void testLeftPad_StringIntChar() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,618,"assertEquals(null, StringUtils.leftPad(null, 5, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,619,"assertEquals(""     "", StringUtils.leftPad("""", 5, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,620,"assertEquals(""  abc"", StringUtils.leftPad(""abc"", 5, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,621,"assertEquals(""xxabc"", StringUtils.leftPad(""abc"", 5, 'x'));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,622,"assertEquals(""abc"", StringUtils.leftPad(""abc"", 2, ' '));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,640,"ssertEquals(null, StringUtils.leftPad (null, 8, ""-+"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,641,"ssertEquals(""-+-+1234"", StringUtils.leftPad(""1234"", 8, ""-+"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,642,"ssertEquals(""-+~123456"", StringUtils.leftPad(""123456"", 9, ""-+~"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,643,"ssertEquals(""-+123456"", StringUtils.leftPad(""123456"", 8, ""-+~"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,625,public void testLeftPad_StringIntString() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,626,"assertEquals(null, StringUtils.leftPad(null, 5, ""-+""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,627,"assertEquals(null, StringUtils.leftPad(null, 5, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,628,"assertEquals(""     "", StringUtils.leftPad("""", 5, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,629,"assertEquals(""-+-+abc"", StringUtils.leftPad(""abc"", 7, ""-+""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,630,"assertEquals(""-+~abc"", StringUtils.leftPad(""abc"", 6, ""-+~""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,631,"assertEquals(""-+abc"", StringUtils.leftPad(""abc"", 5, ""-+~""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,632,"assertEquals(""abc"", StringUtils.leftPad(""abc"", 2, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,633,"assertEquals(""abc"", StringUtils.leftPad(""abc"", -1, "" ""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,645,"tringUtils.leftPad(null, 6, null);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,635,"StringUtils.leftPad(""abc56"", 6, null);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,649,"tringUtils.leftPad(""123456"", 6, null);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,639,"StringUtils.leftPad(""abc56"", 6, """");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,645,public void testCenter_StringInt() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,646,"assertEquals(null, StringUtils.center(null, -1));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,647,"assertEquals(null, StringUtils.center(null, 4));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,648,"assertEquals(""    "", StringUtils.center("""", 4));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,649,"assertEquals(""ab"", StringUtils.center(""ab"", 0));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,650,"assertEquals(""ab"", StringUtils.center(""ab"", -1));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,651,"assertEquals(""ab"", StringUtils.center(""ab"", 1));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,652,"assertEquals(""    "", StringUtils.center("""", 4));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,653,"assertEquals("" ab "", StringUtils.center(""ab"", 4));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,654,"assertEquals(""abcd"", StringUtils.center(""abcd"", 2));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,655,"assertEquals("" a  "", StringUtils.center(""a"", 4));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,656,"assertEquals(""  a  "", StringUtils.center(""a"", 5));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,659,public void testCenter_StringIntChar() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,660,"assertEquals(null, StringUtils.center(null, -1, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,661,"assertEquals(null, StringUtils.center(null, 4, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,662,"assertEquals(""    "", StringUtils.center("""", 4, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,663,"assertEquals(""ab"", StringUtils.center(""ab"", 0, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,664,"assertEquals(""ab"", StringUtils.center(""ab"", -1, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,665,"assertEquals(""ab"", StringUtils.center(""ab"", 1, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,666,"assertEquals(""    "", StringUtils.center("""", 4, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,667,"assertEquals("" ab "", StringUtils.center(""ab"", 4, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,668,"assertEquals(""abcd"", StringUtils.center(""abcd"", 2, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,669,"assertEquals("" a  "", StringUtils.center(""a"", 4, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,670,"assertEquals(""  a  "", StringUtils.center(""a"", 5, ' '));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,671,"assertEquals(""xxaxx"", StringUtils.center(""a"", 5, 'x'));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,674,public void testCenter_StringIntString() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,675,"assertEquals(null, StringUtils.center(null, 4, null));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,676,"assertEquals(null, StringUtils.center(null, -1, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,677,"assertEquals(null, StringUtils.center(null, 4, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,678,"assertEquals(""    "", StringUtils.center("""", 4, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,679,"assertEquals(""ab"", StringUtils.center(""ab"", 0, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,680,"assertEquals(""ab"", StringUtils.center(""ab"", -1, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,681,"assertEquals(""ab"", StringUtils.center(""ab"", 1, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,682,"assertEquals(""    "", StringUtils.center("""", 4, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,683,"assertEquals("" ab "", StringUtils.center(""ab"", 4, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,684,"assertEquals(""abcd"", StringUtils.center(""abcd"", 2, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,685,"assertEquals("" a  "", StringUtils.center(""a"", 4, "" ""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,686,"assertEquals(""yayz"", StringUtils.center(""a"", 4, ""yz""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,687,"assertEquals(""yzyayzy"", StringUtils.center(""a"", 7, ""yz""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,653,"tringUtils.leftPad(""123456"", 6, """");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,689,"StringUtils.center(""abc"", 4, null);"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,655, catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,691,} catch (IllegalArgumentException ex) {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,693,try {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,694,"StringUtils.center(""abc"", 4, """");"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,695,fail();
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,696,} catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,658,ublic void testReverse() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,701,public void testReverse_String() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,660,"ssertEquals(""sdrawkcab"", StringUtils.reverse(""backwards"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,704,"assertEquals(""sdrawkcab"", StringUtils.reverse(""backwards"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,664,ublic void testReverseDelimitedString() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,707,public void testReverseDelimitedString_StringChar() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,709,"assertEquals("""", StringUtils.reverseDelimitedString("""", '.') );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,715,public void testReverseDelimitedString_StringString() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,717,"assertEquals("""", StringUtils.reverseDelimitedString("""", null) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,718,"assertEquals("""", StringUtils.reverseDelimitedString("""", ""."") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,673,"ssertEquals(""org.apache.test"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,674,"tringUtils.reverseDelimitedString(""test.apache.org"", ""."") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,675,"ssertEquals(""reverseDelimitedString(empty-string,'.') failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,677,"tringUtils.reverseDelimitedString("""", ""."") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,678,"ssertEquals(""reverseDelimitedString(String,' ') failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,679,"once upon a time"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,680,"tringUtils.reverseDelimitedString(""time a upon once"","" "") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,721,"assertEquals(""c.b.a"", StringUtils.reverseDelimitedString(""a.b.c"", ""."") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,683,ublic void testDefaultFunctions() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,725,public void testDefault_String() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,686,"ssertEquals(FOO, StringUtils.defaultString(FOO) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,688,"ssertEquals(BAR, StringUtils.defaultString(null, BAR) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,689,"ssertEquals("""", StringUtils.defaultString("""", BAR) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,690,"ssertEquals(FOO, StringUtils.defaultString(FOO, BAR) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,692,"ssertEquals("""", StringUtils.defaultString((Object) """") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,693,"ssertEquals(FOO, StringUtils.defaultString((Object) FOO) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,728,"assertEquals(""abc"", StringUtils.defaultString(""abc"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,731,public void testDefault_StringString() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,732,"assertEquals(""xyz"", StringUtils.defaultString(null, ""xyz"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,733,"assertEquals("""", StringUtils.defaultString("""", ""xyz"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,734,"assertEquals(""abc"", StringUtils.defaultString(""abc"", ""xyz"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,737,public void testDefault_Object() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,696,"ssertEquals("""", StringUtils.defaultString((Object) """", BAR) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,697,"ssertEquals(FOO, StringUtils.defaultString((Object) FOO, BAR) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,739,"assertEquals(Boolean.TRUE.toString(), StringUtils.defaultString(Boolean.TRUE) );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,742,public void testDefault_ObjectString() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,702,ublic void testEscapeFunctions() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,703,"ssertEquals(""escape(empty-string) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,704,""", StringUtils.escape("""") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,705,"ssertEquals(""escape(String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,706,"OO, StringUtils.escape(FOO) );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,707,"ssertEquals(""escape(String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,708,"\\t"", StringUtils.escape(""\t"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,709,"ssertEquals(""escape(String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,710,"\\\\"", StringUtils.escape(""\\"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,711,"ssertEquals(""escape(String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,712,"\\\\\\b\\t\\r"", StringUtils.escape(""\\\b\t\r"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,713,"ssertEquals(""escape(String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,714,"\\u1234"", StringUtils.escape(""\u1234"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,715,"ssertEquals(""escape(String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,716,"\\u0234"", StringUtils.escape(""\u0234"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,717,"ssertEquals(""escape(String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,718,"\\u00FD"", StringUtils.escape(""\u00fd"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,721,ublic void testGetLevenshteinDistance() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,722,"ssertEquals(""getLevenshteinDistance(empty-string, empty-string) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,723,", StringUtils.getLevenshteinDistance("""", """") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,724,"ssertEquals(""getLevenshteinDistance(empty-string, String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,725,", StringUtils.getLevenshteinDistance("""", ""a"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,726,"ssertEquals(""getLevenshteinDistance(String, empty-string) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,727,", StringUtils.getLevenshteinDistance(""aaapppp"", """") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,728,"ssertEquals(""getLevenshteinDistance(String, String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,729,", StringUtils.getLevenshteinDistance(""frog"", ""fog"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,730,"ssertEquals(""getLevenshteinDistance(String, String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,731,", StringUtils.getLevenshteinDistance(""fly"", ""ant"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,732,"ssertEquals(""getLevenshteinDistance(String, String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,733,", StringUtils.getLevenshteinDistance(""elephant"", ""hippo"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,734,"ssertEquals(""getLevenshteinDistance(String, String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,735,", StringUtils.getLevenshteinDistance(""hippo"", ""elephant"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,736,"ssertEquals(""getLevenshteinDistance(String, String) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,737,", StringUtils.getLevenshteinDistance(""hello"", ""hallo"") );"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,740,ublic void testAbbreviate() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,748,public void testEscapeFunctions_String() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,749,"assertEquals("""", StringUtils.escape("""") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,750,"assertEquals(""abc"", StringUtils.escape(""abc"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,751,"assertEquals(""\\t"", StringUtils.escape(""\t"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,752,"assertEquals(""\\\\"", StringUtils.escape(""\\"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,753,"assertEquals(""\\\\\\b\\t\\r"", StringUtils.escape(""\\\b\t\r"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,754,"assertEquals(""\\u1234"", StringUtils.escape(""\u1234"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,755,"assertEquals(""\\u0234"", StringUtils.escape(""\u0234"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,756,"assertEquals(""\\u00FD"", StringUtils.escape(""\u00fd"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,760,public void testAbbreviate_StringInt() {
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,742,"ssertEquals(""abbreviate(String,int) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,743,"short"", StringUtils.abbreviate(""short"", 10));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,744,"ssertEquals(""abbreviate(String,int) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,745,"Now is ..."", StringUtils.abbreviate(""Now is the time for all good men to come to the aid of their party."", 10));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,762,"assertEquals("""", StringUtils.abbreviate("""", 10));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,763,"assertEquals(""short"", StringUtils.abbreviate(""short"", 10));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,764,"assertEquals(""Now is ..."", StringUtils.abbreviate(""Now is the time for all good men to come to the aid of their party."", 10));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,748,"ssertEquals(""abbreviate(String,int) failed (one past limit)"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,749,"raspberry p..."", StringUtils.abbreviate(raspberry, 14));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,750,"ssertEquals(""abbreviate(String,int) (at limit)"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,751,"raspberry peach"", StringUtils.abbreviate(""raspberry peach"", 15));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,752,"ssertEquals(""abbreviate(String,int) (one below limit)"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,753,"raspberry peach"", StringUtils.abbreviate(""raspberry peach"", 16));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,767,"assertEquals(""raspberry p..."", StringUtils.abbreviate(raspberry, 14));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,768,"assertEquals(""raspberry peach"", StringUtils.abbreviate(""raspberry peach"", 15));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,769,"assertEquals(""raspberry peach"", StringUtils.abbreviate(""raspberry peach"", 16));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,772,public void testAbbreviate_StringIntInt() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,773,"assertEquals(null, StringUtils.abbreviate(null, 10, 12));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,774,"assertEquals("""", StringUtils.abbreviate("""", 0, 10));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,775,"assertEquals("""", StringUtils.abbreviate("""", 2, 10));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,755,"ssertEquals(""abbreviate(String,int,int) failed"","
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,756,"raspberry peach"", StringUtils.abbreviate(raspberry, 11, 15));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,777,"String raspberry = ""raspberry peach"";"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,778,"assertEquals(""raspberry peach"", StringUtils.abbreviate(raspberry, 11, 15));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,782,"rivate void assertAbbreviateWithOffset(String expected, int offset, int maxWidth)"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,803,"private void assertAbbreviateWithOffset(String expected, int offset, int maxWidth) {"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,796,ublic void testDifference() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,817,public void testDifference_StringString() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,819,"assertEquals("""", StringUtils.difference("""", """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,820,"assertEquals(""abc"", StringUtils.difference("""", ""abc""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,821,"assertEquals("""", StringUtils.difference(""abc"", """"));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,801,"ssertEquals("""", StringUtils.difference(""foo"", ""foo""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,825,"assertEquals("""", StringUtils.difference(""abc"", ""abc""));"
False,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,805,ublic void testDifferenceAt() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,829,public void testDifferenceAt_StringString() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,832,"assertEquals(-1, StringUtils.differenceAt("""", """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,833,"assertEquals(0, StringUtils.differenceAt("""", ""abc""));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,834,"assertEquals(0, StringUtils.differenceAt(""abc"", """"));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,842,public void testGetLevenshteinDistance_StringString() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,843,"assertEquals(0, StringUtils.getLevenshteinDistance("""", """") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,844,"assertEquals(1, StringUtils.getLevenshteinDistance("""", ""a"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,845,"assertEquals(7, StringUtils.getLevenshteinDistance(""aaapppp"", """") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,846,"assertEquals(1, StringUtils.getLevenshteinDistance(""frog"", ""fog"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,847,"assertEquals(3, StringUtils.getLevenshteinDistance(""fly"", ""ant"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,848,"assertEquals(7, StringUtils.getLevenshteinDistance(""elephant"", ""hippo"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,849,"assertEquals(7, StringUtils.getLevenshteinDistance(""hippo"", ""elephant"") );"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,850,"assertEquals(1, StringUtils.getLevenshteinDistance(""hello"", ""hallo"") );"
