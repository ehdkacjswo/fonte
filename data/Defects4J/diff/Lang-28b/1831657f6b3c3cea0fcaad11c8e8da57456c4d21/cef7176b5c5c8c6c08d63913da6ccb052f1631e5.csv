is_addition,old_file_path,new_file_path,line_num,content
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,1,package org.apache.commons.lang;
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,3,"* Copyright 2002,2004 The Apache Software Foundation."
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,5,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,6,* you may not use this file except in compliance with the License.
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,7,* You may obtain a copy of the License at
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,14,* See the License for the specific language governing permissions and
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,15,* limitations under the License.
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,18,import java.text.SimpleDateFormat;
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,19,import java.util.Calendar;
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,20,import java.util.Date;
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,21,import junit.framework.AssertionFailedError;
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,22,import junit.framework.TestCase;
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,25,* This class was created to hold test cases for the parseCVS method extracted from DateUtilsTest in commons-lang.
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,26,* The code was originally submitted by Serge Knystautas sergek@lokitech.com. It was never
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,27,"* fully implemented, and has been moved to the sandbox for further development. Recent discussion"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,28,* from the commons-dev mailing list:
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,29,* http://marc.theaimsgroup.com/?l=jakarta-commons-dev&m=108904098032038&w=2
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,30,* Moving the code to the sandbox satisfies bug is a temporary solution to
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,31,* http://issues.apache.org/bugzilla/show_bug.cgi?id=22172 but this issue needs to be considered
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,32,* when the class/method is further developed.
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,34,public class DateFormatterTest extends TestCase {
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,37,"* Tests the parse method, which is supposed to handle various strings"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,38,* as flexibly as CVS supports.
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,40,public void testParseCVS() throws Exception {
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,41,try {
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,42,DateFormatter.parseCVS(null);
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,43,fail();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,44,} catch (IllegalArgumentException ex) {}
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,45,try {
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,46,"DateFormatter.parseCVS(""gobbledegook"");"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,47,fail();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,48,} catch (IllegalArgumentException ex) {}
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,49,try {
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,50,"DateFormatter.parseCVS(""ago"");"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,51,fail();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,52,} catch (IllegalArgumentException ex) {}
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,53,try {
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,54,"DateFormatter.parseCVS(""1 junk ago"");"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,55,fail();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,56,} catch (IllegalArgumentException ex) {}
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,57,try {
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,58,"DateFormatter.parseCVS(""1month ago"");"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,59,fail();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,60,} catch (IllegalArgumentException ex) {}
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,61,try {
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,62,"DateFormatter.parseCVS(""last month"");"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,63,fail();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,64,} catch (IllegalArgumentException ex) {}
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,67,"//This is difficult to test since the ""now"" used in the"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,68,//  parse function cannot be controlled.  We could possibly control
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,69,//  it by trying before and after and making sure the value we expect
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,70,//  is between the two values calculated.
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,71,//For now we're just using the custom assertEquals that takes a delta
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,73,Calendar now = null;
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,75,// M/dd/yy H:mm:ss z
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,76,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,77,"now.set(Calendar.MILLISECOND, 0);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,78,"assertEquals(""parseCVS format M/dd/yy H:mm:ss z"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,79,"now, DateFormatter.parseCVS(new SimpleDateFormat(""M/dd/yy H:mm:ss z"").format(now.getTime())), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,80,"// MMM d, yyyy h:mm a"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,81,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,82,"now.set(Calendar.MILLISECOND, 0);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,83,"now.set(Calendar.SECOND, 0);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,84,"assertEquals(""parseCVS format MMM d, yyyy h:mm a"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,85,"now, DateFormatter.parseCVS(new SimpleDateFormat(""MMM d, yyyy h:mm a"").format(now.getTime())), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,86,// h:mm z
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,88,// This format is difficult to test using the current time because the
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,89,"// parseCVS method applies the default date of January 1, 1970 to the"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,90,// parsed time. The most straightforward way to test the parse is to
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,91,"// pass in a known value, and test the output against this know value."
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,93,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,94,"now.setTime(new SimpleDateFormat(""h:mm z"").parse(""16:30 GMT""));"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,95,"assertEquals(""parseCVS format h:mm z 16:30 GMT"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,96,"now, DateFormatter.parseCVS(""16:30 GMT""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,97,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,98,"now.setTime(new SimpleDateFormat(""h:mm z"").parse(""16:30 EST""));"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,99,"assertEquals(""parseCVS format h:mm z 16:30 EST"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,100,"now, DateFormatter.parseCVS(""16:30 EST""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,101,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,102,"now.setTime(new SimpleDateFormat(""h:mm z"").parse(""16:30 GMT-05:00""));"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,103,"assertEquals(""parseCVS format h:mm z 16:30 GMT-05:00"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,104,"now, DateFormatter.parseCVS(""16:30 GMT-05:00""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,105,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,106,"now.setTime(new SimpleDateFormat(""h:mm z"").parse(""16:30 GMT+01:00""));"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,107,"assertEquals(""parseCVS format h:mm z 16:30 GMT+01:00"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,108,"now, DateFormatter.parseCVS(""16:30 GMT+01:00""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,110,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,111,"now.setTime(new SimpleDateFormat(""h:mm z"").parse(""06:30 GMT""));"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,112,"assertEquals(""parseCVS format h:mm z 06:30 GMT"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,113,"now, DateFormatter.parseCVS(""06:30 GMT""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,114,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,115,"now.setTime(new SimpleDateFormat(""h:mm z"").parse(""06:30 EST""));"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,116,"assertEquals(""parseCVS format h:mm z 06:30 EST"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,117,"now, DateFormatter.parseCVS(""06:30 EST""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,118,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,119,"now.setTime(new SimpleDateFormat(""h:mm z"").parse(""06:30 GMT-05:00""));"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,120,"assertEquals(""parseCVS format h:mm z 06:30 GMT-05:00"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,121,"now, DateFormatter.parseCVS(""06:30 GMT-05:00""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,122,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,123,"now.setTime(new SimpleDateFormat(""h:mm z"").parse(""06:30 GMT+01:00""));"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,124,"assertEquals(""parseCVS format h:mm z 06:30 GMT+01:00"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,125,"now, DateFormatter.parseCVS(""06:30 GMT+01:00""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,127,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,128,"now.add(Calendar.WEEK_OF_MONTH, -1);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,129,"assertEquals(""parseCVS a week ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,130,"now, DateFormatter.parseCVS(""a week ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,131,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,132,"now.add(Calendar.WEEK_OF_MONTH, -1);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,133,"assertEquals(""parseCVS an week ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,134,"now, DateFormatter.parseCVS(""an week ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,136,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,137,"now.add(Calendar.DAY_OF_MONTH, -14);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,138,"assertEquals(""parseCVS 1 fortnight ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,139,"now, DateFormatter.parseCVS(""1 fortnight ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,140,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,141,"now.add(Calendar.DAY_OF_MONTH, -14);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,142,"assertEquals(""parseCVS 1 fortnights ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,143,"now, DateFormatter.parseCVS(""1 fortnights ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,145,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,146,"now.add(Calendar.MINUTE, -1);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,147,"assertEquals(""parseCVS 1 minute ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,148,"now, DateFormatter.parseCVS(""1 minute ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,149,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,150,"now.add(Calendar.MINUTE, -8);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,151,"assertEquals(""parseCVS 8 minutes ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,152,"now, DateFormatter.parseCVS(""8 minutes ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,154,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,155,"now.add(Calendar.MILLISECOND, -1);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,156,"assertEquals(""parseCVS 1 millisecond ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,157,"now, DateFormatter.parseCVS(""1 millisecond ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,158,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,159,"now.add(Calendar.MILLISECOND, -100);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,160,"assertEquals(""parseCVS 1 milliseconds ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,161,"now, DateFormatter.parseCVS(""100 milliseconds ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,162,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,163,"now.add(Calendar.SECOND, -30);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,164,"assertEquals(""parseCVS 30 second ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,165,"now, DateFormatter.parseCVS(""30 second ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,166,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,167,"now.add(Calendar.SECOND, -30);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,168,"assertEquals(""parseCVS 30 seconds ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,169,"now, DateFormatter.parseCVS(""30 seconds ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,170,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,171,"now.add(Calendar.HOUR, -2);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,172,"assertEquals(""parseCVS 2 hour ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,173,"now, DateFormatter.parseCVS(""2 hour ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,174,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,175,"now.add(Calendar.HOUR, -2);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,176,"assertEquals(""parseCVS 2 hours ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,177,"now, DateFormatter.parseCVS(""2 hours ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,178,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,179,"now.add(Calendar.DAY_OF_MONTH, -2);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,180,"assertEquals(""parseCVS 2 day ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,181,"now, DateFormatter.parseCVS(""2 day ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,182,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,183,"now.add(Calendar.DAY_OF_MONTH, -2);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,184,"assertEquals(""parseCVS 2 days ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,185,"now, DateFormatter.parseCVS(""2 days ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,186,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,187,"now.add(Calendar.MONTH, -2);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,188,"assertEquals(""parseCVS 2 month ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,189,"now, DateFormatter.parseCVS(""2 month ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,190,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,191,"now.add(Calendar.MONTH, -2);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,192,"assertEquals(""parseCVS 2 months ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,193,"now, DateFormatter.parseCVS(""2 months ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,194,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,195,"now.add(Calendar.YEAR, -2);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,196,"assertEquals(""parseCVS 2 year ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,197,"now, DateFormatter.parseCVS(""2 year ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,198,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,199,"now.add(Calendar.YEAR, -2);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,200,"assertEquals(""parseCVS 2 years ago"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,201,"now, DateFormatter.parseCVS(""2 years ago""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,203,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,204,"now.add(Calendar.DATE, -1);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,205,"assertEquals(""parseCVS yesterday"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,206,"now, DateFormatter.parseCVS(""yesterday""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,208,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,209,"now.add(Calendar.DATE, 1);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,210,"assertEquals(""parseCVS tomorrow"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,211,"now, DateFormatter.parseCVS(""tomorrow""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,213,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,214,"//Sunday would be 1, Saturday would be 7, so we walk back up to 6 days."
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,215,if (now.get(Calendar.DAY_OF_WEEK) == 1) {
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,216,"//If Sunday already, we go back a full week"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,217,"now.add(Calendar.DATE, -7);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,218,} else {
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,219,"now.add(Calendar.DATE, 1 - now.get(Calendar.DAY_OF_WEEK));"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,221,"assertEquals(""parseCVS last Sunday"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,222,"now, DateFormatter.parseCVS(""last Sunday""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,224,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,225,"now.add(Calendar.DATE, -7);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,226,"assertEquals(""parseCVS last week"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,227,"now, DateFormatter.parseCVS(""last week""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,229,now = Calendar.getInstance();
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,230,"//January would be 0, December would be 11, so we walk back up to 11 months"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,231,if (now.get(Calendar.MONTH) == 0) {
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,232,"//If January already, we go back a full year"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,233,"now.add(Calendar.MONTH, -12);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,234,} else {
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,235,"now.add(Calendar.MONTH, 0 - now.get(Calendar.MONTH));"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,237,"assertEquals(""parseCVS last January"","
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,238,"now, DateFormatter.parseCVS(""last January""), 50);"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,242,* Used to check that Calendar objects are close enough
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,243,* delta is in milliseconds
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,245,"public static void assertEquals(String message, Calendar cal1, Calendar cal2, long delta) {"
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,246,if (Math.abs(cal1.getTime().getTime() - cal2.getTime().getTime()) > delta) {
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,247,throw new AssertionFailedError(
True,src/pending/DateFormatterTest.java,src/pending/DateFormatterTest.java,248,"message + "" expected "" + cal1.getTime() + "" but got "" + cal2.getTime());"
