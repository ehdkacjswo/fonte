is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3283, in which case it will have the same type as the element (unless that is also null)
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3284, in which case the returned type will be Object[].
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3283,* in which case it will have the same type as the element.
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3284,"* If both are null, an IllegalArgumentException is thrown"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3286,* @throws IllegalArgumentException if both arguments are null
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3288,lass<?> type = array != null ? array.getClass() : (element != null ? element.getClass() : Object.class);
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3289,/ TODO - this is NOT safe to ignore - see LANG-571
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3289,Class<?> type;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3290,if (array != null){
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3291,type = array.getClass();
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3292,} else if (element != null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3293,type = element.getClass();
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3294,} else {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3295,"throw new IllegalArgumentException(""Arguments cannot both be null"");"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3297,"@SuppressWarnings(""unchecked"") // type must be T"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3565,* @throws IllegalArgumentException if both array and element are null
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3565,/ TODO this is not type-safe - see LANG-571
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3566,inal T[] emptyArray = (T[]) new Object[] { null };
False,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3567,eturn emptyArray;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,3574,"throw new IllegalArgumentException(""Array and element cannot both be null"");"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,225,public void testLANG571(){
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,226,String[] stringArray=null;
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,227,String aString=null;
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,228,try {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,229,"@SuppressWarnings(""unused"")"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,230,"String[] sa = ArrayUtils.add(stringArray, aString);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,231,"fail(""Should have caused IllegalArgumentException"");"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,232,} catch (IllegalArgumentException iae){
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,233,//expected
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,235,try {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,236,"@SuppressWarnings(""unused"")"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,237,"String[] sa = ArrayUtils.add(stringArray, 0, aString);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,238,"fail(""Should have caused IllegalArgumentException"");"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,239,} catch (IllegalArgumentException iae){
True,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java,240,//expected
