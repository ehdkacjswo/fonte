is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2611,* <p>Splits a String by Character type as returned by
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2612,* <code>java.lang.Character.getType(char)</code>. Groups of contiguous
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2613,* characters of the same type are returned as complete tokens.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2614,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2615,* StringUtils.splitByCamelCase(null)         = null
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2616,"* StringUtils.splitByCamelCase("""")           = []"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2617,"* StringUtils.splitByCamelCase(""ab de fg"")   = [""ab"", "" "", ""de"", "" "", ""fg""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2618,"* StringUtils.splitByCamelCase(""ab   de fg"") = [""ab"", ""   "", ""de"", "" "", ""fg""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2619,"* StringUtils.splitByCamelCase(""ab:cd:ef"")   = [""ab"", "":"", ""cd"", "":"", ""ef""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2620,"* StringUtils.splitByCamelCase(""fooBar"")     = [""foo"", ""B"", ""ar""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2621,"* StringUtils.splitByCamelCase(""foo200Bar"")  = [""foo"", ""200"", ""B"", ""ar""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2622,"* StringUtils.splitByCamelCase(""ASFRules"")   = [""ASFR"", ""ules""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2623,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2624,"* @param str the String to split, may be <code>null</code>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2625,"* @return an array of parsed Strings, <code>null</code> if null String input"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2626,* @since 2.4
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2628,public static String[] splitByCharacterType(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2629,"return splitByCharacterType(str, false);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2633,* <p>Splits a String by Character type as returned by
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2634,* <code>java.lang.Character.getType(char)</code>. Groups of contiguous
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2635,"* characters of the same type are returned as complete tokens, with the"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2636,"* following exception: if <code>camelCase</code> is <code>true</code>,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2637,"* the character of type <code>Character.UPPERCASE_LETTER</code>, if any,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2638,* immediately preceding a token of type <code>Character.LOWERCASE_LETTER</code>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2639,"* will belong to the following token rather than to the preceding, if any,"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2640,* <code>Character.UPPERCASE_LETTER</code> token.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2641,* <pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2642,* StringUtils.splitByCamelCase(null)         = null
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2643,"* StringUtils.splitByCamelCase("""")           = []"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2644,"* StringUtils.splitByCamelCase(""ab de fg"")   = [""ab"", "" "", ""de"", "" "", ""fg""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2645,"* StringUtils.splitByCamelCase(""ab   de fg"") = [""ab"", ""   "", ""de"", "" "", ""fg""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2646,"* StringUtils.splitByCamelCase(""ab:cd:ef"")   = [""ab"", "":"", ""cd"", "":"", ""ef""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2647,"* StringUtils.splitByCamelCase(""fooBar"")     = [""foo"", ""Bar""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2648,"* StringUtils.splitByCamelCase(""foo200Bar"")  = [""foo"", ""200"", ""Bar""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2649,"* StringUtils.splitByCamelCase(""ASFRules"")   = [""ASF"", ""Rules""]"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2650,* </pre>
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2651,"* @param str the String to split, may be <code>null</code>"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2652,"* @param camelCase whether to use so-called ""camel-case"" for letter types"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2653,"* @return an array of parsed Strings, <code>null</code> if null String input"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2654,* @since 2.4
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2656,"public static String[] splitByCharacterType(String str, boolean camelCase) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2657,if (str == null) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2658,return null;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2660,if (str.length() == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2661,return ArrayUtils.EMPTY_STRING_ARRAY;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2663,char[] c = str.toCharArray();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2664,List list = new ArrayList();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2665,int tokenStart = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2666,int currentType = Character.getType(c[tokenStart]);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2667,for (int pos = tokenStart + 1; pos < c.length; pos++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2668,int type = Character.getType(c[pos]);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2669,if (type == currentType) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2670,continue;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2672,if (camelCase && type == Character.LOWERCASE_LETTER
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2673,&& currentType == Character.UPPERCASE_LETTER) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2674,int newTokenStart = pos - 1;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2675,if (newTokenStart != tokenStart) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2676,"list.add(new String(c, tokenStart, newTokenStart - tokenStart));"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2677,tokenStart = newTokenStart;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2679,} else {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2680,"list.add(new String(c, tokenStart, pos - tokenStart));"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2681,tokenStart = pos;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2683,currentType = type;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2685,"list.add(new String(c, tokenStart, c.length - tokenStart));"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2686,return (String[]) list.toArray(new String[list.size()]);
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,851,public void testSplitByCharacterType() {
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,852,assertNull(StringUtils.splitByCharacterType(null));
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,853,"assertEquals(0, StringUtils.splitByCharacterType("""").length);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,854,"assertNull(StringUtils.splitByCharacterType(null, true));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,855,"assertEquals(0, StringUtils.splitByCharacterType("""", true).length);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,857,final boolean camelCase = true;
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,859,"assertTrue(ArrayUtils.isEquals(new String[] { ""ab"", "" "", ""de"", "" "","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,860,"""fg"" }, StringUtils.splitByCharacterType(""ab de fg"")));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,862,"assertTrue(ArrayUtils.isEquals(new String[] { ""ab"", "" "", ""de"", "" "","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,863,"""fg"" }, StringUtils.splitByCharacterType(""ab de fg"", camelCase)));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,865,"assertTrue(ArrayUtils.isEquals(new String[] { ""ab"", ""   "", ""de"", "" "","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,866,"""fg"" }, StringUtils.splitByCharacterType(""ab   de fg"")));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,868,"assertTrue(ArrayUtils.isEquals(new String[] { ""ab"", ""   "", ""de"", "" "","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,869,"""fg"" }, StringUtils.splitByCharacterType(""ab   de fg"", camelCase)));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,871,"assertTrue(ArrayUtils.isEquals(new String[] { ""ab"", "":"", ""cd"", "":"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,872,"""ef"" }, StringUtils.splitByCharacterType(""ab:cd:ef"")));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,874,"assertTrue(ArrayUtils.isEquals(new String[] { ""ab"", "":"", ""cd"", "":"","
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,875,"""ef"" }, StringUtils.splitByCharacterType(""ab:cd:ef"", camelCase)));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,877,"assertTrue(ArrayUtils.isEquals(new String[] { ""foo"", ""B"", ""ar"" },"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,878,"StringUtils.splitByCharacterType(""fooBar"")));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,880,"assertTrue(ArrayUtils.isEquals(new String[] { ""foo"", ""Bar"" },"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,881,"StringUtils.splitByCharacterType(""fooBar"", camelCase)));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,883,"assertTrue(ArrayUtils.isEquals(new String[] { ""foo"", ""200"", ""B"", ""ar"" },"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,884,"StringUtils.splitByCharacterType(""foo200Bar"")));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,886,"assertTrue(ArrayUtils.isEquals(new String[] { ""foo"", ""200"", ""Bar"" },"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,887,"StringUtils.splitByCharacterType(""foo200Bar"", camelCase)));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,889,"assertTrue(ArrayUtils.isEquals(new String[] { ""ASFR"", ""ules"" },"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,890,"StringUtils.splitByCharacterType(""ASFRules"")));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,892,"assertTrue(ArrayUtils.isEquals(new String[] { ""ASF"", ""Rules"" },"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,893,"StringUtils.splitByCharacterType(""ASFRules"", camelCase)));"
