is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,17,package org.apache.commons.lang3;
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,19,import java.io.IOException;
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,20,import java.io.Serializable;
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,22,import org.apache.commons.lang3.builder.HashCodeBuilder;
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,25,* A basic immutable Object pair.
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,26,* @since Lang 3.0
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,27,* @author Matt Benson
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,29,"public final class Pair<L, R> implements Serializable {"
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,30,/** Serialization version */
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,31,private static final long serialVersionUID = 4954918890077093841L;
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,33,/** Left object */
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,34,public final L left;
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,36,/** Right object */
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,37,public final R right;
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,40,* Create a new Pair instance.
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,41,* @param left
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,42,* @param right
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,44,"public Pair(L left, R right) {"
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,45,this.left = left;
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,46,this.right = right;
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,50,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,52,public boolean equals(Object obj) {
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,53,if (obj == this) {
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,54,return true;
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,56,"if (obj instanceof Pair<?, ?> == false) {"
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,57,return false;
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,59,"Pair<?, ?> other = (Pair<?, ?>) obj;"
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,60,"return ObjectUtils.equals(left, other.left) && ObjectUtils.equals(right, other.right);"
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,64,* {@inheritDoc}
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,66,public int hashCode() {
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,67,return new HashCodeBuilder().append(left).append(right).toHashCode();
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,71,"* Returns a String representation of the Pair in the form: (L,R)"
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,73,public String toString() {
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,74,StringBuilder builder = new StringBuilder();
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,75,"builder.append(""("");"
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,76,builder.append(left);
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,77,"builder.append("","");"
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,78,builder.append(right);
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,79,"builder.append("")"");"
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,80,return builder.toString();
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,84,"* Static creation method for a Pair<L, R>."
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,85,* @param <L>
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,86,* @param <R>
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,87,* @param left
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,88,* @param right
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,89,"* @return Pair<L, R>(left, right)"
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,91,"public static <L, R> Pair<L, R> of(L left, R right) {"
True,src/main/java/org/apache/commons/lang3/Pair.java,src/main/java/org/apache/commons/lang3/Pair.java,92,"return new Pair<L, R>(left, right);"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,17,package org.apache.commons.lang3;
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,19,import static org.junit.Assert.*;
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,21,import java.io.ByteArrayInputStream;
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,22,import java.io.ByteArrayOutputStream;
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,23,import java.io.ObjectInputStream;
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,24,import java.io.ObjectOutputStream;
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,26,import org.junit.Test;
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,29,* Test the Pair class.
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,30,* @author Matt Benson
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,32,public class PairTest {
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,34,@Test
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,35,public void testBasic() throws Exception {
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,36,"Pair<Integer, String> pair = new Pair<Integer, String>(0, ""foo"");"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,37,"assertEquals(0, pair.left.intValue());"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,38,"assertEquals(""foo"", pair.right);"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,39,"Pair<Object, String> pair2 = new Pair<Object, String>(null, ""bar"");"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,40,assertNull(pair2.left);
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,41,"assertEquals(""bar"", pair2.right);"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,44,@Test
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,45,public void testPairOf() throws Exception {
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,46,"Pair<Integer, String> pair = Pair.of(0, ""foo"");"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,47,"assertEquals(0, pair.left.intValue());"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,48,"assertEquals(""foo"", pair.right);"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,49,"Pair<Object, String> pair2 = Pair.of(null, ""bar"");"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,50,assertNull(pair2.left);
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,51,"assertEquals(""bar"", pair2.right);"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,54,@Test
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,55,public void testEquals() throws Exception {
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,56,"assertEquals(Pair.of(null, ""foo""), Pair.of(null, ""foo""));"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,57,"assertFalse(Pair.of(""foo"", 0).equals(Pair.of(""foo"", null)));"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,60,@Test
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,61,public void testHashCode() throws Exception {
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,62,"assertEquals(Pair.of(null, ""foo"").hashCode(), Pair.of(null, ""foo"").hashCode());"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,65,@Test
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,66,"@SuppressWarnings(""unchecked"")"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,67,public void testSerialization() throws Exception {
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,68,"Pair<Integer, String> origPair = Pair.of(0, ""foo"");"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,69,ByteArrayOutputStream baos = new ByteArrayOutputStream();
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,70,ObjectOutputStream out = new ObjectOutputStream(baos);
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,71,out.writeObject(origPair);
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,72,"Pair<Integer, String> deserializedPair = (Pair<Integer, String>) new ObjectInputStream("
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,73,new ByteArrayInputStream(baos.toByteArray())).readObject();
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,74,"assertEquals(origPair, deserializedPair);"
True,src/test/java/org/apache/commons/lang3/PairTest.java,src/test/java/org/apache/commons/lang3/PairTest.java,75,"assertEquals(origPair.hashCode(), deserializedPair.hashCode());"
