is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,34," @version $Id: DateUtils.java,v 1.23 2004/07/12 00:04:32 stevencaswell Exp $"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,34,"* @version $Id: DateUtils.java,v 1.24 2004/08/27 06:45:25 bayard Exp $"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,59,// hmm. not very accurate. used by DurationFormatUtils
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,60,static final long MILLIS_PER_YEAR = 365 * 24 * 60 * 60 * 1000;
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,61,static final long MILLIS_PER_MONTH = 365 / 12 * 24 * 60 * 60 * 1000;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,18,import org.apache.commons.lang.ArrayUtils;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,19,import org.apache.commons.lang.StringUtils;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,20,import org.apache.commons.lang.mutable.MutableInt;
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,27," @version $Id: DurationFormatUtils.java,v 1.10 2004/08/02 02:16:21 bayard Exp $"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,31,"* @version $Id: DurationFormatUtils.java,v 1.11 2004/08/27 06:45:25 bayard Exp $"
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,29,lass DurationFormatUtils {
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,30,/ TODO: Make class public once methods can fully select which fields to output
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,33,public class DurationFormatUtils {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,36,* <p>DurationFormatUtils instances should NOT be constructed in standard programming.</p>
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,38,* <p>This constructor is public to permit tools that require a JavaBean instance
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,39,* to operate.</p>
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,41,public DurationFormatUtils() {
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,64, <i>hours</i>:<i>minutes</i>:<i>seconds</i>.<i>milliseconds</i>.</p>
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,76,* <i>H</i>:<i>m</i>:<i>s</i>.<i>S</i>.</p>
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,70,"nt hours, minutes, seconds, milliseconds;"
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,71,ours = (int) (millis / DateUtils.MILLIS_PER_HOUR);
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,72,illis = millis - (hours * DateUtils.MILLIS_PER_HOUR);
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,73,inutes = (int) (millis / DateUtils.MILLIS_PER_MINUTE);
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,74,illis = millis - (minutes * DateUtils.MILLIS_PER_MINUTE);
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,75,econds = (int) (millis / DateUtils.MILLIS_PER_SECOND);
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,76,illis = millis - (seconds * DateUtils.MILLIS_PER_SECOND);
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,77,illiseconds = (int) millis;
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,79,tringBuffer buf = new StringBuffer(32);
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,80,uf.append(hours);
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,81,uf.append(':');
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,82,uf.append((char) (minutes / 10 + '0'));
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,83,uf.append((char) (minutes % 10 + '0'));
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,84,uf.append(':');
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,85,uf.append((char) (seconds / 10 + '0'));
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,86,uf.append((char) (seconds % 10 + '0'));
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,87,uf.append('.');
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,88,f (milliseconds < 10) {
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,89,uf.append('0').append('0');
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,90, else if (milliseconds < 100) {
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,91,uf.append('0');
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,82,"return format(millis, ""H:mm:ss.SSS"");"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,85,"* <p>Get the time gap as a string, using the specified format.</p>"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,86,"* <table border=""1"">"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,87,*  <tr><th>character</th><th>duration element</th></tr>
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,88,*  <tr><td>y</td><td>years (aka 365 days)</td></tr>
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,89,*  <tr><td>M</td><td>months (aka year/12)</td></tr>
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,90,*  <tr><td>d</td><td>days</td></tr>
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,91,*  <tr><td>H</td><td>hours</td></tr>
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,92,*  <tr><td>m</td><td>minutes</td></tr>
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,93,*  <tr><td>s</td><td>seconds</td></tr>
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,94,*  <tr><td>S</td><td>milliseconds</td></tr>
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,95,* </table>
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,97,* @param millis  the duration to format
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,98,* @param format  the way iin which to format the duration
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,99,* @return the time as a String
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,101,"public static String format(long millis, String format) {"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,102,StringBuffer buffer = new StringBuffer();
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,103,Token[] tokens = lexx(format);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,104,int sz = tokens.length;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,106,int years        = 0;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,107,int months       = 0;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,108,int days         = 0;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,109,int hours        = 0;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,110,int minutes      = 0;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,111,int seconds      = 0;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,112,int milliseconds = 0;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,114,"if(Token.containsTokenWithValue(tokens, y) ) {"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,115,years = (int) (millis / DateUtils.MILLIS_PER_YEAR);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,116,millis = millis - (years * DateUtils.MILLIS_PER_YEAR);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,118,"if(Token.containsTokenWithValue(tokens, M) ) {"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,119,months = (int) (millis / DateUtils.MILLIS_PER_MONTH);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,120,millis = millis - (months * DateUtils.MILLIS_PER_MONTH);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,122,"if(Token.containsTokenWithValue(tokens, d) ) {"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,123,days = (int) (millis / DateUtils.MILLIS_PER_DAY);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,124,millis = millis - (days * DateUtils.MILLIS_PER_DAY);
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,93,uf.append(milliseconds);
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,94,eturn buf.toString();
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,126,"if(Token.containsTokenWithValue(tokens, H) ) {"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,127,hours = (int) (millis / DateUtils.MILLIS_PER_HOUR);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,128,millis = millis - (hours * DateUtils.MILLIS_PER_HOUR);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,130,"if(Token.containsTokenWithValue(tokens, m) ) {"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,131,minutes = (int) (millis / DateUtils.MILLIS_PER_MINUTE);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,132,millis = millis - (minutes * DateUtils.MILLIS_PER_MINUTE);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,134,"if(Token.containsTokenWithValue(tokens, s) ) {"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,135,seconds = (int) (millis / DateUtils.MILLIS_PER_SECOND);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,136,millis = millis - (seconds * DateUtils.MILLIS_PER_SECOND);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,138,"if(Token.containsTokenWithValue(tokens, S) ) {"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,139,milliseconds = (int) millis;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,143,for(int i=0; i<sz; i++) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,144,Token token = tokens[i];
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,145,Object value = token.getValue();
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,146,int count = token.getCount();
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,147,if(value instanceof StringBuffer) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,148,buffer.append(value.toString());
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,149,} else {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,150,if(value == y) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,151,"buffer.append( StringUtils.leftPad(""""+years, count, ""0"") );"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,152,} else
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,153,if(value == M) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,154,"buffer.append( StringUtils.leftPad(""""+months, count, ""0"") );"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,155,} else
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,156,if(value == d) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,157,"buffer.append( StringUtils.leftPad(""""+days, count, ""0"") );"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,158,} else
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,159,if(value == H) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,160,"buffer.append( StringUtils.leftPad(""""+hours, count, ""0"") );"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,161,} else
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,162,if(value == m) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,163,"buffer.append( StringUtils.leftPad(""""+minutes, count, ""0"") );"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,164,} else
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,165,if(value == s) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,166,"buffer.append( StringUtils.leftPad(""""+seconds, count, ""0"") );"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,167,} else
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,168,if(value == S) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,169,"buffer.append( StringUtils.leftPad(""""+milliseconds, count, ""0"") );"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,174,return buffer.toString();
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,109,ong[] values = new long[4];
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,110,alues[0] = millis / DateUtils.MILLIS_PER_DAY;
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,111,alues[1] = (millis / DateUtils.MILLIS_PER_HOUR) % 24;
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,112,alues[2] = (millis / DateUtils.MILLIS_PER_MINUTE) % 60;
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,113,alues[3] = (millis / DateUtils.MILLIS_PER_SECOND) % 60;
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,114,"tring[] fieldsOne = { "" day "", "" hour "", "" minute "", "" second"" };"
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,115,"tring[] fieldsPlural = { "" days "", "" hours "", "" minutes "", "" seconds"" };"
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,117,tringBuffer buf = new StringBuffer(64);
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,118,oolean valueOutput = false;
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,120,or (int i = 0; i < 4; i++) {
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,121,ong value = values[i];
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,122,f (value == 0) {
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,123,/ handle zero
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,124,f (valueOutput) {
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,125,f (suppressTrailingZeroElements == false) {
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,126,uf.append('0').append(fieldsPlural[i]);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,190,"// This method is generally replacable by the format method, but"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,191,// there are a series of tweaks and special cases that require
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,192,// trickery to replicate.
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,193,"String duration = format(millis, ""d' days 'H' hours 'm' minutes 's' seconds'"");"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,194,if(suppressLeadingZeroElements) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,195,// this is a temporary marker on the front. Like ^ in regexp.
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,196,"duration = "" "" + duration;"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,197,"String tmp = StringUtils.replaceOnce(duration, "" 0 days"", """");"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,198,if(tmp.length() != duration.length()) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,199,duration = tmp;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,200,"tmp = StringUtils.replaceOnce(duration, "" 0 hours"", """");"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,201,if(tmp.length() != duration.length()) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,202,duration = tmp;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,203,"tmp = StringUtils.replaceOnce(duration, "" 0 minutes"", """");"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,204,duration = tmp;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,205,if(tmp.length() != duration.length()) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,206,"duration = StringUtils.replaceOnce(tmp, "" 0 seconds"", """");"
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,128, else {
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,129,f (suppressLeadingZeroElements == false) {
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,130,uf.append('0').append(fieldsPlural[i]);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,210,if(duration.length() != 0) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,211,// strip the space off again
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,212,duration = duration.substring(1);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,215,if(suppressTrailingZeroElements) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,216,"String tmp = StringUtils.replaceOnce(duration, "" 0 seconds"", """");"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,217,if(tmp.length() != duration.length()) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,218,duration = tmp;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,219,"tmp = StringUtils.replaceOnce(duration, "" 0 minutes"", """");"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,220,if(tmp.length() != duration.length()) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,221,duration = tmp;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,222,"tmp = StringUtils.replaceOnce(duration, "" 0 hours"", """");"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,223,if(tmp.length() != duration.length()) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,224,"duration = StringUtils.replaceOnce(tmp, "" 0 days"", """");"
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,133, else if (value == 1) {
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,134,/ one
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,135,alueOutput = true;
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,136,uf.append('1').append(fieldsOne[i]);
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,137, else {
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,138,/ other
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,139,alueOutput = true;
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,140,uf.append(value).append(fieldsPlural[i]);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,229,// handle plurals
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,230,"duration = StringUtils.replaceOnce(duration, ""1 seconds"", ""1 second"");"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,231,"duration = StringUtils.replaceOnce(duration, ""1 minutes"", ""1 minute"");"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,232,"duration = StringUtils.replaceOnce(duration, ""1 hours"", ""1 hour"");"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,233,"duration = StringUtils.replaceOnce(duration, ""1 days"", ""1 day"");"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,234,return duration;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,237,"static final Object y = ""y"";"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,238,"static final Object M = ""M"";"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,239,"static final Object d = ""d"";"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,240,"static final Object H = ""H"";"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,241,"static final Object m = ""m"";"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,242,"static final Object s = ""s"";"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,243,"static final Object S = ""S"";"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,245,static Token[] lexx(String format) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,246,char[] array = format.toCharArray();
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,247,java.util.ArrayList list = new java.util.ArrayList(array.length);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,249,boolean inLiteral = false;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,250,StringBuffer buffer = null;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,251,Token previous = null;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,252,int sz = array.length;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,253,for(int i=0; i<sz; i++) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,254,char ch = array[i];
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,255,if(inLiteral && ch != '\'') {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,256,buffer.append(ch);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,257,continue;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,259,Object value = null;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,260,switch(ch) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,261,// TODO: Need to handle escaping of '
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,262,case '\'' :
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,263,if(inLiteral) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,264,buffer = null;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,265,inLiteral = false;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,266,} else {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,267,buffer = new StringBuffer();
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,268,list.add(new Token(buffer));
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,269,inLiteral = true;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,271,break;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,272,case 'y'  : value = y; break;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,273,case 'M'  : value = M; break;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,274,case 'd'  : value = d; break;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,275,case 'H'  : value = H; break;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,276,case 'm'  : value = m; break;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,277,case 's'  : value = s; break;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,278,case 'S'  : value = S; break;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,279,default   :
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,280,if(buffer == null) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,281,buffer = new StringBuffer();
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,282,list.add(new Token(buffer));
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,284,buffer.append(ch);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,287,if(value != null) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,288,if(previous != null && previous.getValue() == value) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,289,previous.increment();
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,290,} else {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,291,Token token = new Token(value);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,292,list.add(token);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,293,previous = token;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,295,buffer = null;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,298,return (Token[]) list.toArray( new Token[0] );
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,303,// Represents an element of the format-mini-language.
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,304,class Token {
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,144,eturn buf.toString().trim();
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,306,"// will only work for the tokens, not for stringbuffers/numbers"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,307,"static boolean containsTokenWithValue(Token[] tokens, Object value) {"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,308,int sz = tokens.length;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,309,for(int i=0; i<sz; i++) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,310,if(tokens[i].getValue() == value) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,311,return true;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,314,return false;
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,148, <p>DurationFormatUtils instances should NOT be constructed in standard programming.</p>
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,150, <p>This constructor is public to permit tools that require a JavaBean instance
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,151, to operate.</p>
False,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,153,ublic DurationFormatUtils() {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,317,private Object value;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,318,private int count;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,320,public Token(Object value) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,321,this.value = value;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,322,this.count = 1;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,325,"Token(Object value, int count) {"
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,326,this.value = value;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,327,this.count = count;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,330,public void increment() {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,331,count++;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,334,public int getCount() {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,335,return count;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,338,public Object getValue() {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,339,return value;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,342,public boolean equals(Object obj2) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,343,if(obj2 instanceof Token) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,344,Token tok2 = (Token) obj2;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,345,if(this.value.getClass() != tok2.value.getClass()) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,346,return false;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,348,if(this.count != tok2.count) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,349,return false;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,351,if(this.value instanceof StringBuffer) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,352,return this.value.toString().equals(tok2.value.toString());
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,353,} else
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,354,if(this.value instanceof Number) {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,355,return this.value.equals(tok2.value);
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,356,} else {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,357,return this.value == tok2.value;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,359,} else {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,360,return false;
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,364,public String toString() {
True,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,src/java/org/apache/commons/lang/time/DurationFormatUtils.java,365,"return StringUtils.repeat(this.value.toString(), this.count);"
False,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,59,"ssertEquals(false, Modifier.isPublic(DurationFormatUtils.class.getModifiers()));"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,59,"assertEquals(true, Modifier.isPublic(DurationFormatUtils.class.getModifiers()));"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,170,public void testLexx() {
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,171,// tests each constant
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,172,assertArrayEquals(
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,173,new Token[] {
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,174,"new Token( DurationFormatUtils.y, 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,175,"new Token( DurationFormatUtils.M, 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,176,"new Token( DurationFormatUtils.d, 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,177,"new Token( DurationFormatUtils.H, 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,178,"new Token( DurationFormatUtils.m, 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,179,"new Token( DurationFormatUtils.s, 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,180,"new Token( DurationFormatUtils.S, 1)"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,181,"}, DurationFormatUtils.lexx(""yMdHmsS"")"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,184,// tests the ISO8601-like
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,185,assertArrayEquals(
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,186,new Token[] {
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,187,"new Token( DurationFormatUtils.H, 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,188,"new Token( new StringBuffer("":""), 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,189,"new Token( DurationFormatUtils.m, 2),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,190,"new Token( new StringBuffer("":""), 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,191,"new Token( DurationFormatUtils.s, 2),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,192,"new Token( new StringBuffer("".""), 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,193,"new Token( DurationFormatUtils.S, 3)"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,194,"}, DurationFormatUtils.lexx(""H:mm:ss.SSS"")"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,197,// test the iso extended format
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,198,assertArrayEquals(
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,199,new Token[] {
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,200,"new Token( new StringBuffer(""P""), 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,201,"new Token( DurationFormatUtils.y, 4),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,202,"new Token( new StringBuffer(""Y""), 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,203,"new Token( DurationFormatUtils.M, 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,204,"new Token( new StringBuffer(""M""), 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,205,"new Token( DurationFormatUtils.d, 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,206,"new Token( new StringBuffer(""DT""), 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,207,"new Token( DurationFormatUtils.H, 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,208,"new Token( new StringBuffer(""H""), 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,209,"new Token( DurationFormatUtils.m, 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,210,"new Token( new StringBuffer(""M""), 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,211,"new Token( DurationFormatUtils.s, 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,212,"new Token( new StringBuffer("".""), 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,213,"new Token( DurationFormatUtils.S, 1),"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,214,"new Token( new StringBuffer(""S""), 1)"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,216,DurationFormatUtils.lexx(DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN)
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,219,"private void assertArrayEquals(Token[] obj1, Token[] obj2) {"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,220,"assertEquals( ""Arrays are unequal length. "", obj1.length, obj2.length );"
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,221,for(int i=0; i<obj1.length; i++) {
True,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java,222,"assertTrue( ""Index "" + i + "" not equal, "" + obj1[i] + "" vs "" + obj2, obj1[i].equals(obj2[i]));"
