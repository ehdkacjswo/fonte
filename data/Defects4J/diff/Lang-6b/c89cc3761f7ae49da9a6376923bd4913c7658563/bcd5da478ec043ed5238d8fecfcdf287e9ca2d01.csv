is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,1,ackage org.apache.commons.lang;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,6," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,8, Copyright (c) 2002 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,9, reserved.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,11," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,12," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,13, are met:
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,15, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,16,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,18, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,19,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,20,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,21,    distribution.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,23," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,24,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,25,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,26,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,27,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,28,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,30," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,31,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,32,    from this software without prior written permission. For written
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,33,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,35," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,36,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,37,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,39, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,40," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,41, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,42, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,43," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,44," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,45," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,46," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,47," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,48, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,49," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,50, SUCH DAMAGE.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,53, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,54, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,55," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,56, <http://www.apache.org/>.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,60, <code>HashCode</code> generation routines.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,61, <p>
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,62, This class enables a good hashcode to be built for any class. It follows
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,63," the rules laid out in the book Effective Java, by Joshua Bloch. Writing a"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,64, good hashCode is actually quite difficult. This class aims to simplify the
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,65, process.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,66, <p>
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,67, All relevant fields from the object should be included in the hashCode. Derived
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,68," fields may be excluded. In general, any field used in the equals method must be"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,69, used in the hashCode method.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,70, <p>
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,71, To use this class write code as follows:
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,72, <code>
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,73, public class Person {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,74,   String name;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,75,   int age;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,76,   boolean isSmoker;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,80,   public int hashCode() {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,81,"     // you pick a hard-coded, randomly chosen, non-zero, odd number"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,82,     // ideally different for each class
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,83,     return new HashCodeBuilder(17).
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,84,       append(name).
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,85,       append(age).
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,86,       append(smoker).
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,87,       toHashCode();
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,90, </code>
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,92," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,93," @version $Id: HashCodeBuilder.java,v 1.1 2002/08/15 22:37:29 scolebourne Exp $"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,95,ublic class HashCodeBuilder {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,98, Constant to use in building the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,100,rivate final int iConstant;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,102, Running total of the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,104,rivate int iTotal = 0;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,107, Constructor for HashCodeBuilder.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,108, This constructor uses two hard coded choices for the constants needed
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,109, to build a hashCode.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,111,ublic HashCodeBuilder() {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,112,uper();
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,113,Constant = 37;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,114,Total = 17;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,118, Constructor for HashCodeBuilder.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,119," Two randomly chosen, non-zero, odd numbers must be passed in. Ideally"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,120," these should be different for each class, however this is not vital."
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,121," Prime numbers are preferred, especially for the multiplier."
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,123, @param initialNonZeroOddNumber
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,124, @param multiplierNonZeroOddNumber
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,125, @throws IllegalArgumentException if the number is zero or even
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,127,"ublic HashCodeBuilder(int initialNonZeroOddNumber, int multiplierNonZeroOddNumber) {"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,128,uper();
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,129,f (initialNonZeroOddNumber == 0) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,130,"hrow new IllegalArgumentException(""HashCodeBuilder requires a non zero initial value"");"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,132,f (initialNonZeroOddNumber % 2 == 0) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,133,"hrow new IllegalArgumentException(""HashCodeBuilder requires an odd initial value"");"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,135,f (multiplierNonZeroOddNumber == 0) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,136,"hrow new IllegalArgumentException(""HashCodeBuilder requires a non zero multiplier"");"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,138,f (multiplierNonZeroOddNumber % 2 == 0) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,139,"hrow new IllegalArgumentException(""HashCodeBuilder requires an odd multiplier"");"
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,141,Constant = multiplierNonZeroOddNumber;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,142,Total = initialNonZeroOddNumber;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,146, Append a hashCode for an Object.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,148, @param object  the object to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,149, @return updated totalSoFar
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,151,ublic HashCodeBuilder append(Object object) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,152,f (object == null) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,153,Total = iTotal * iConstant;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,154, else {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,155,Total = iTotal * iConstant + object.hashCode();
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,157,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,161, Append a hashCode for a long.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,163, @param value  the long to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,164, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,166,ublic HashCodeBuilder append(long value) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,167,Total = iTotal * iConstant + ((int) (value ^ (value >> 32)));
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,168,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,172, Append a hashCode for an int.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,174, @param value  the int to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,175, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,177,ublic HashCodeBuilder append(int value) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,178,Total = iTotal * iConstant + value;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,179,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,183, Append a hashCode for a short.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,185, @param value  the short to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,186, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,188,ublic HashCodeBuilder append(short value) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,189,Total = iTotal * iConstant + (int) value;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,190,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,194, Append a hashCode for a char.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,196, @param value  the char to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,197, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,199,ublic HashCodeBuilder append(char value) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,200,Total = iTotal * iConstant + (int) value;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,201,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,205, Append a hashCode for a byte.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,207, @param value  the byte to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,208, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,210,ublic HashCodeBuilder append(byte value) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,211,Total = iTotal * iConstant + (int) value;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,212,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,216, Append a hashCode for a double.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,218, @param value  the double to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,219, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,221,ublic HashCodeBuilder append(double value) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,222,eturn append(Double.doubleToLongBits(value));
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,226, Append a hashCode for a float.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,228, @param value  the float to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,229, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,231,ublic HashCodeBuilder append(float value) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,232,Total = iTotal * iConstant + Float.floatToIntBits(value);
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,233,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,237, Append a hashCode for a long.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,239, @param value  the long to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,240, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,242,ublic HashCodeBuilder append(boolean value) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,243,Total = iTotal * iConstant + (value ? 0 : 1);
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,244,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,248, Append a hashCode for an Object array.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,250, @param array  the array to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,251, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,253,ublic HashCodeBuilder append(Object[] array) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,254,f (array == null) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,255,Total = iTotal * iConstant;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,256, else {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,257,or (int i = 0; i < array.length; i++) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,258,ppend(array[i]);
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,261,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,265, Append a hashCode for a long array.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,267, @param array  the array to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,268, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,270,ublic HashCodeBuilder append(long[] array) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,271,f (array == null) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,272,Total = iTotal * iConstant;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,273, else {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,274,or (int i = 0; i < array.length; i++) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,275,ppend(array[i]);
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,278,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,282, Append a hashCode for an int array.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,284, @param array  the array to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,285, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,287,ublic HashCodeBuilder append(int[] array) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,288,f (array == null) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,289,Total = iTotal * iConstant;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,290, else {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,291,or (int i = 0; i < array.length; i++) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,292,ppend(array[i]);
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,295,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,299, Append a hashCode for a short array.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,301, @param array  the array to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,302, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,304,ublic HashCodeBuilder append(short[] array) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,305,f (array == null) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,306,Total = iTotal * iConstant;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,307, else {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,308,or (int i = 0; i < array.length; i++) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,309,ppend(array[i]);
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,312,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,316, Append a hashCode for a char array.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,318, @param array  the array to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,319, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,321,ublic HashCodeBuilder append(char[] array) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,322,f (array == null) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,323,Total = iTotal * iConstant;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,324, else {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,325,or (int i = 0; i < array.length; i++) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,326,ppend(array[i]);
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,329,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,333, Append a hashCode for a byte array.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,335, @param array  the array to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,336, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,338,ublic HashCodeBuilder append(byte[] array) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,339,f (array == null) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,340,Total = iTotal * iConstant;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,341, else {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,342,or (int i = 0; i < array.length; i++) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,343,ppend(array[i]);
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,346,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,350, Append a hashCode for a double array.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,352, @param array  the array to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,353, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,355,ublic HashCodeBuilder append(double[] array) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,356,f (array == null) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,357,Total = iTotal * iConstant;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,358, else {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,359,or (int i = 0; i < array.length; i++) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,360,ppend(array[i]);
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,363,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,367, Append a hashCode for a float array.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,369, @param array  the array to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,370, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,372,ublic HashCodeBuilder append(float[] array) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,373,f (array == null) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,374,Total = iTotal * iConstant;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,375, else {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,376,or (int i = 0; i < array.length; i++) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,377,ppend(array[i]);
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,380,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,384, Append a hashCode for a boolean array.
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,386, @param array  the array to add to the hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,387, @return this
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,389,ublic HashCodeBuilder append(boolean[] array) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,390,f (array == null) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,391,Total = iTotal * iConstant;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,392, else {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,393,or (int i = 0; i < array.length; i++) {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,394,ppend(array[i]);
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,397,eturn this;
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,401, Return the computed hashCode
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,403, @return int hashCode based on the fields appended
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,405,ublic int toHashCode() {
False,src/java/org/apache/commons/lang/HashCodeBuilder.java,src/java/org/apache/commons/lang/HashCodeBuilder.java,406,eturn iTotal;
