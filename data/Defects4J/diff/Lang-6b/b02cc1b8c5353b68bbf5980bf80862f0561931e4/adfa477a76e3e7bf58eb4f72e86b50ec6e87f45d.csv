is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,24,import java.util.EnumSet;
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,119,* <p>Creates a long bit vector representation of the given subset of an Enum.</p>
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,121,* <p>This generates a value that is usable by {@link EnumUtils#processBitVector}.</p>
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,123,"* <p>Do not use this method if you have more than 64 values in your Enum, as this"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,124,* would create a value greater than a long can hold.</p>
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,126,"* @param enumClass the class of the enum we are working with, not null"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,127,* @param set       the set of enum values we want to convert
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,128,* @param <E>       the type of the enumeration
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,129,* @return a long whose binary value represents the given set of enum values.
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,131,"public static <E extends Enum<E>> long generateBitVector(Class<E> enumClass, EnumSet<E> set) {"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,132,if (enumClass == null) {
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,133,"throw new IllegalArgumentException(""EnumClass must be defined."");"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,135,final E[] constants = enumClass.getEnumConstants();
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,136,if (constants != null && constants.length > 64) {
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,137,"throw new IllegalArgumentException(""EnumClass is too big to be stored in a 64-bit value."");"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,139,long total = 0;
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,140,if (set != null) {
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,141,if (constants != null && constants.length > 0) {
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,142,for (E constant : constants) {
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,143,if (set.contains(constant)) {
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,144,"total += Math.pow(2, constant.ordinal());"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,149,return total;
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,153,* <p>Convert a long value created by {@link EnumUtils#generateBitVector} into the set of
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,154,* enum values that it represents.</p>
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,156,"* <p>If you store this value, beware any changes to the enum that would affect ordinal values.</p>"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,157,"* @param enumClass the class of the enum we are working with, not null"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,158,* @param value     the long value representation of a set of enum values
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,159,* @param <E>       the type of the enumeration
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,160,* @return a set of enum values
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,162,"public static <E extends Enum<E>> EnumSet<E> processBitVector(Class<E> enumClass, long value) {"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,163,if (enumClass == null) {
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,164,"throw new IllegalArgumentException(""EnumClass must be defined."");"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,166,final E[] constants = enumClass.getEnumConstants();
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,167,if (constants != null && constants.length > 64) {
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,168,"throw new IllegalArgumentException(""EnumClass is too big to be stored in a 64-bit value."");"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,170,final EnumSet results = EnumSet.noneOf(enumClass);
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,171,if (constants != null && constants.length > 0) {
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,172,for (E constant : constants) {
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,173,if ((value & (1 << constant.ordinal())) != 0) {
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,174,results.add(constant);
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,178,return results;
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,21,import java.util.EnumSet;
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,93,public void test_generateBitVector_nullClass() {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,94,try {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,95,"EnumUtils.generateBitVector(null, EnumSet.of(Traffic.RED));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,96,} catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,97,// ok
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,101,public void test_generateBitVector_longClass() {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,102,try {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,103,"EnumUtils.generateBitVector(TooMany.class, EnumSet.of(TooMany.A1));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,104,} catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,105,// ok
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,109,public void test_generateBitVector() {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,110,"assertEquals(0L, EnumUtils.generateBitVector(Traffic.class, null));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,111,"assertEquals(0L, EnumUtils.generateBitVector(Traffic.class, EnumSet.noneOf(Traffic.class)));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,112,"assertEquals(1L, EnumUtils.generateBitVector(Traffic.class, EnumSet.of(Traffic.RED)));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,113,"assertEquals(2L, EnumUtils.generateBitVector(Traffic.class, EnumSet.of(Traffic.AMBER)));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,114,"assertEquals(4L, EnumUtils.generateBitVector(Traffic.class, EnumSet.of(Traffic.GREEN)));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,115,"assertEquals(3L, EnumUtils.generateBitVector(Traffic.class, EnumSet.of(Traffic.RED, Traffic.AMBER)));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,116,"assertEquals(5L, EnumUtils.generateBitVector(Traffic.class, EnumSet.of(Traffic.RED, Traffic.GREEN)));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,117,"assertEquals(6L, EnumUtils.generateBitVector(Traffic.class, EnumSet.of(Traffic.AMBER, Traffic.GREEN)));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,118,"assertEquals(7L, EnumUtils.generateBitVector(Traffic.class, EnumSet.of(Traffic.RED, Traffic.AMBER, Traffic.GREEN)));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,121,public void test_processBitVector_nullClass() {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,122,final Class<Traffic> empty = null;
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,123,try {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,124,"EnumUtils.processBitVector(empty, 0L);"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,125,} catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,126,// ok
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,130,public void test_processBitVector_longClass() {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,131,try {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,132,"EnumUtils.processBitVector(TooMany.class, 0L);"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,133,} catch (IllegalArgumentException ex) {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,134,// ok
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,138,public void test_processBitVector() {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,139,"assertEquals(EnumSet.noneOf(Traffic.class), EnumUtils.processBitVector(Traffic.class, 0L));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,140,"assertEquals(EnumSet.of(Traffic.RED), EnumUtils.processBitVector(Traffic.class, 1L));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,141,"assertEquals(EnumSet.of(Traffic.AMBER), EnumUtils.processBitVector(Traffic.class, 2L));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,142,"assertEquals(EnumSet.of(Traffic.RED, Traffic.AMBER), EnumUtils.processBitVector(Traffic.class, 3L));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,143,"assertEquals(EnumSet.of(Traffic.GREEN), EnumUtils.processBitVector(Traffic.class, 4L));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,144,"assertEquals(EnumSet.of(Traffic.RED, Traffic.GREEN), EnumUtils.processBitVector(Traffic.class, 5L));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,145,"assertEquals(EnumSet.of(Traffic.AMBER, Traffic.GREEN), EnumUtils.processBitVector(Traffic.class, 6L));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,146,"assertEquals(EnumSet.of(Traffic.RED, Traffic.AMBER, Traffic.GREEN), EnumUtils.processBitVector(Traffic.class, 7L));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,154,enum TooMany{
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,155,"A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,156,"A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1;"
