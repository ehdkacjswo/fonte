is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4428,f (last == CharUtils.LF) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4429,f (ret.charAt(lastIdx - 1) == CharUtils.CR) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4430,"eturn ret.substring(0, lastIdx - 1);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4428,if (last == CharUtils.LF && ret.charAt(lastIdx - 1) == CharUtils.CR) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4429,"return ret.substring(0, lastIdx - 1);"
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1323,f (sz > start + 1) {
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1324,f (chars[start] == '0' && chars[start + 1] == 'x') {
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1325,nt i = start + 2;
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1326,f (i == sz) {
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1327,"eturn false; // str == ""0x"""
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1329,/ checking hex (it can't be anything else)
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1330,or (; i < chars.length; i++) {
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1331,f ((chars[i] < '0' || chars[i] > '9')
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1332,& (chars[i] < 'a' || chars[i] > 'f')
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1333,& (chars[i] < 'A' || chars[i] > 'F')) {
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1334,eturn false;
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1323,if (sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x') {
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1324,int i = start + 2;
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1325,if (i == sz) {
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1326,"return false; // str == ""0x"""
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1328,// checking hex (it can't be anything else)
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1329,for (; i < chars.length; i++) {
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1330,if ((chars[i] < '0' || chars[i] > '9')
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1331,&& (chars[i] < 'a' || chars[i] > 'f')
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1332,&& (chars[i] < 'A' || chars[i] > 'F')) {
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1333,return false;
False,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1337,eturn true;
True,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,src/main/java/org/apache/commons/lang3/math/NumberUtils.java,1336,return true;
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,520,f (method.getName().equals(methodName)) {
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,521,/ compare parameters
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,522,"f (ClassUtils.isAssignable(parameterTypes, method"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,523,"getParameterTypes(), true)) {"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,524,/ get accessible version of method
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,525,ethod accessibleMethod = getAccessibleMethod(method);
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,526,f (accessibleMethod != null) {
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,527,f (bestMatch == null
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,528,| MemberUtils.compareParameterTypes(
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,529,"ccessibleMethod.getParameterTypes(),"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,530,"estMatch.getParameterTypes(),"
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,531,arameterTypes) < 0) {
False,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,532,estMatch = accessibleMethod;
True,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,520,// compare name and parameters
True,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,521,"if (method.getName().equals(methodName) && ClassUtils.isAssignable(parameterTypes, method.getParameterTypes(), true)) {"
True,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,522,// get accessible version of method
True,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,523,Method accessibleMethod = getAccessibleMethod(method);
True,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,524,if (accessibleMethod != null && (bestMatch == null || MemberUtils.compareParameterTypes(
True,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,525,"accessibleMethod.getParameterTypes(),"
True,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,526,"bestMatch.getParameterTypes(),"
True,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,527,parameterTypes) < 0)) {
True,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,528,bestMatch = accessibleMethod;
False,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,776,f (quoteLen > 0) {
False,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,777,"f (isQuote(chars, pos, len, quoteStart, quoteLen)) {"
False,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,778,uoting = true;
False,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,779,os += quoteLen;
False,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,780,ontinue;
True,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,776,"if (quoteLen > 0 && isQuote(chars, pos, len, quoteStart, quoteLen)) {"
True,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,777,quoting = true;
True,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,778,pos += quoteLen;
True,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,779,continue;
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,37,f(input.charAt(index) == '\\') {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,38,f( (index + 1 < input.length()) && input.charAt(index + 1) == 'u') {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,39,/ consume optional additional 'u' chars
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,40,nt i=2;
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,41,hile( (index + i < input.length()) && input.charAt(index + i) == 'u') {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,42,++;
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,37,if (input.charAt(index) == '\\' && (index + 1 < input.length()) && input.charAt(index + 1) == 'u') {
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,38,// consume optional additional 'u' chars
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,39,int i = 2;
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,40,while ((index + i < input.length()) && input.charAt(index + i) == 'u') {
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,41,i++;
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,45,f( (index + i < input.length()) && (input.charAt(index + i) == '+') ) {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,46,++;
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,44,if ((index + i < input.length()) && (input.charAt(index + i) == '+')) {
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,45,i++;
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,49,f( (index + i + 4 <= input.length()) ) {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,50,/ Get 4 hex digits
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,51,"harSequence unicode = input.subSequence(index + i, index + i + 4);"
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,48,if ((index + i + 4 <= input.length())) {
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,49,// Get 4 hex digits
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,50,"CharSequence unicode = input.subSequence(index + i, index + i + 4);"
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,53,ry {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,54,"nt value = Integer.parseInt(unicode.toString(), 16);"
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,55,ut.write((char) value);
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,56, catch (NumberFormatException nfe) {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,57,"hrow new IllegalArgumentException(""Unable to parse unicode value: "" + unicode, nfe);"
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,59,eturn i + 4;
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,60, else {
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,61,"hrow new IllegalArgumentException(""Less than 4 hex digits in unicode value: '"" +"
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,62,"nput.subSequence(index, input.length()) +"
False,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,63,"' due to end of CharSequence"");"
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,52,try {
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,53,"int value = Integer.parseInt(unicode.toString(), 16);"
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,54,out.write((char) value);
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,55,} catch (NumberFormatException nfe) {
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,56,"throw new IllegalArgumentException(""Unable to parse unicode value: "" + unicode, nfe);"
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,58,return i + 4;
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,59,} else {
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,60,"throw new IllegalArgumentException(""Less than 4 hex digits in unicode value: '"" + input.subSequence(index, input.length())"
True,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java,61,"+ ""' due to end of CharSequence"");"
