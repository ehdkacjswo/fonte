is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,52,"hrow new IllegalArgumentException(""Class "" + eventSource.getClass().getName() + "" does not have a public add"" + listenerType.getSimpleName() + "" method which takes a parameter of type "" + listenerType.getName() + ""."");"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,52,"throw new IllegalArgumentException(""Class "" + eventSource.getClass().getName()"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,53,"+ "" does not have a public add"" + listenerType.getSimpleName()"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,54,"+ "" method which takes a parameter of type "" + listenerType.getName() + ""."");"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,54,"hrow new IllegalArgumentException(""Class "" + eventSource.getClass().getName() + "" does not have an accessible add"" + listenerType.getSimpleName () + "" method which takes a parameter of type "" + listenerType.getName() + ""."");"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,56,"throw new IllegalArgumentException(""Class "" + eventSource.getClass().getName()"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,57,"+ "" does not have an accessible add"" + listenerType.getSimpleName ()"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,58,"+ "" method which takes a parameter of type "" + listenerType.getName() + ""."");"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,71,"ublic static <L> void bindEventsToMethod(Object target, String methodName, Object eventSource, Class<L> listenerType, String... eventTypes) {"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,72,"inal L listener = listenerType.cast(Proxy.newProxyInstance(target.getClass().getClassLoader(), new Class[] { listenerType }, new EventBindingInvocationHandler(target, methodName, eventTypes)));"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,75,"public static <L> void bindEventsToMethod(Object target, String methodName, Object eventSource,"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,76,"Class<L> listenerType, String... eventTypes) {"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,77,"final L listener = listenerType.cast(Proxy.newProxyInstance(target.getClass().getClassLoader(),"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,78,"new Class[] { listenerType }, new EventBindingInvocationHandler(target, methodName, eventTypes)));"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,88,* Creates a new instance of {@code EventBindingInvocationHandler}.
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,90,* @param target the target object for method invocations
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,91,* @param methodName the name of the method to be invoked
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,92,* @param eventTypes the names of the supported event types
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,101,* Handles a method invocation on the proxy object.
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,103,* @param proxy the proxy instance
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,104,* @param method the method to be invoked
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,105,* @param parameters the parameters for the method invocation
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,106,* @return the result of the method call
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,107,* @throws Throwable if an error occurs
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,121,* Checks whether a method for the passed in parameters can be found.
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,123,* @param method the method to be invoked
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,124,* @return a flag whether the parameters could be matched
